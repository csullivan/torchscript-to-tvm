	.text
	.amdgcn_target "amdgcn-amd-amdhsa-hcc-gfx1032"
	.globl	tvmgen_default_fused_add_reshape_cast_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_add_reshape_cast_1_kernel0,@function
tvmgen_default_fused_add_reshape_cast_1_kernel0:
	v_lshlrev_b32_e32 v0, 1, v0
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	v_lshl_add_u32 v0, s6, 9, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[2:3], 2, v[0:1]
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v3, vcc_lo
	v_add_co_u32 v2, vcc_lo, s2, v2
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	global_load_dwordx2 v[4:5], v[4:5], off
	global_load_dwordx2 v[2:3], v[2:3], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v3, v5, v3
	v_add_f32_e32 v2, v4, v2
	v_cvt_f16_f32_e32 v3, v3
	v_cvt_f16_f32_e32 v2, v2
	v_pack_b32_f16 v2, v2, v3
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_add_reshape_cast_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	tvmgen_default_fused_add_reshape_cast_1_kernel0, .Lfunc_end0-tvmgen_default_fused_add_reshape_cast_1_kernel0

	.globl	tvmgen_default_fused_add_reshape_cast_kernel0
	.p2align	8
	.type	tvmgen_default_fused_add_reshape_cast_kernel0,@function
tvmgen_default_fused_add_reshape_cast_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s10, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s10, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB1_2
	v_lshrrev_b32_e32 v2, 7, v0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, 0x1b4e81b5, v2
	v_lshrrev_b32_e32 v6, 31, v5
	v_lshrrev_b32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_and_b32_e32 v6, 0xfe, v1
	v_mul_lo_u32 v5, 0x258, v5
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_or_b32 v5, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, s0, s4, v5
	v_add_co_ci_u32_e64 v8, s0, s5, v6, s0
	v_add_co_u32 v5, s0, s8, v5
	v_add_co_ci_u32_e64 v6, s0, s9, v6, s0
	global_load_dword v2, v[7:8], off
	global_load_dword v6, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v2, v2, v6
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_cvt_f16_f32_e32 v2, v2
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	global_store_short v[5:6], v2, off
BB1_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s10, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB1_4
	v_lshrrev_b32_e32 v6, 7, v0
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, 0x1b4e81b5, v6
	v_lshrrev_b32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_mul_lo_u32 v7, 0x258, v7
	v_sub_nc_u32_e32 v6, v6, v7
	v_perm_b32 v6, v6, v2, 0x6050400
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v9, vcc_lo, s5, v7, vcc_lo
	v_add_co_u32 v6, vcc_lo, s8, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s9, v7, vcc_lo
	global_load_dword v8, v[8:9], off
	global_load_dword v7, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v8, v8, v7
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_cvt_f16_f32_e32 v8, v8
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	global_store_short v[6:7], v8, off
BB1_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s10, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s10, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB1_6
	v_lshrrev_b32_e32 v4, 7, v0
	v_and_b32_e32 v1, 0xfe, v1
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x1b4e81b5, v4
	v_lshrrev_b32_e32 v7, 31, v6
	v_lshrrev_b32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v6, 0x258, v6
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_or_b32 v6, v4, 8, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, s0, s4, v6
	v_add_co_ci_u32_e64 v9, s0, s5, v7, s0
	v_add_co_u32 v6, s0, s8, v6
	v_add_co_ci_u32_e64 v7, s0, s9, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_dword v1, v[8:9], off
	global_load_dword v6, v[6:7], off
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v1, v1, v6
	v_cvt_f16_f32_e32 v1, v1
	global_store_short v[3:4], v1, off
BB1_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s10, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB1_8
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x1b4e81b5, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v3, 0x258, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_perm_b32 v2, v0, v2, 0x6050400
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, s5, v3, vcc_lo
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	global_load_dword v0, v[4:5], off
	global_load_dword v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v3, v0, v3
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_cvt_f16_f32_e32 v2, v3
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v2, off
BB1_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_add_reshape_cast_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end1:
	.size	tvmgen_default_fused_add_reshape_cast_kernel0, .Lfunc_end1-tvmgen_default_fused_add_reshape_cast_kernel0

	.globl	tvmgen_default_fused_cast_add_reshape_cast_kernel0
	.p2align	8
	.type	tvmgen_default_fused_cast_add_reshape_cast_kernel0,@function
tvmgen_default_fused_cast_add_reshape_cast_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s10, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s10, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB2_2
	v_lshrrev_b32_e32 v2, 7, v0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, 0x1b4e81b5, v2
	v_lshrrev_b32_e32 v6, 31, v5
	v_lshrrev_b32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_and_b32_e32 v6, 0xfe, v1
	v_mul_lo_u32 v5, 0x258, v5
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_or_b32 v5, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[7:8], 1, v[5:6]
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, s0, s8, v7
	v_add_co_ci_u32_e64 v8, s0, s9, v8, s0
	v_add_co_u32 v5, s0, s4, v5
	v_add_co_ci_u32_e64 v6, s0, s5, v6, s0
	global_load_ushort v2, v[7:8], off
	global_load_dword v6, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	s_waitcnt vmcnt(1)
	v_cvt_f32_f16_e32 v2, v2
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v2, v6, v2
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_cvt_f16_f32_e32 v2, v2
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	global_store_short v[5:6], v2, off
BB2_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s10, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB2_4
	v_lshrrev_b32_e32 v6, 7, v0
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, 0x1b4e81b5, v6
	v_lshrrev_b32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_mul_lo_u32 v7, 0x258, v7
	v_sub_nc_u32_e32 v6, v6, v7
	v_perm_b32 v6, v6, v2, 0x6050400
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[8:9], 1, v[6:7]
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	v_add_co_u32 v6, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo
	global_load_ushort v8, v[8:9], off
	global_load_dword v7, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	s_waitcnt vmcnt(1)
	v_cvt_f32_f16_e32 v8, v8
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v8, v7, v8
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_cvt_f16_f32_e32 v8, v8
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	global_store_short v[6:7], v8, off
BB2_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s10, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s10, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB2_6
	v_lshrrev_b32_e32 v4, 7, v0
	v_and_b32_e32 v1, 0xfe, v1
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x1b4e81b5, v4
	v_lshrrev_b32_e32 v7, 31, v6
	v_lshrrev_b32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v6, 0x258, v6
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_or_b32 v6, v4, 8, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[8:9], 1, v[6:7]
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, s0, s8, v8
	v_add_co_ci_u32_e64 v9, s0, s9, v9, s0
	v_add_co_u32 v6, s0, s4, v6
	v_add_co_ci_u32_e64 v7, s0, s5, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_ushort v1, v[8:9], off
	global_load_dword v6, v[6:7], off
	s_waitcnt vmcnt(1)
	v_cvt_f32_f16_e32 v1, v1
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v1, v6, v1
	v_cvt_f16_f32_e32 v1, v1
	global_store_short v[3:4], v1, off
BB2_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s10, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB2_8
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x1b4e81b5, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v3, 0x258, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_perm_b32 v2, v0, v2, 0x6050400
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[4:5], 1, v[2:3]
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, vcc_lo, s8, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo
	v_add_co_u32 v2, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo
	global_load_ushort v0, v[4:5], off
	global_load_dword v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	s_waitcnt vmcnt(1)
	v_cvt_f32_f16_e32 v0, v0
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v3, v3, v0
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_cvt_f16_f32_e32 v2, v3
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v2, off
BB2_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cast_add_reshape_cast_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end2:
	.size	tvmgen_default_fused_cast_add_reshape_cast_kernel0, .Lfunc_end2-tvmgen_default_fused_cast_add_reshape_cast_kernel0

	.globl	tvmgen_default_fused_cast_logical_not_kernel0
	.p2align	8
	.type	tvmgen_default_fused_cast_logical_not_kernel0,@function
tvmgen_default_fused_cast_logical_not_kernel0:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB3_2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[2:3], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_dword v2, v[2:3], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_cmp_nlg_f32_e32 vcc_lo, 0, v2
	v_cndmask_b32_e64 v2, 0, 1, vcc_lo
	global_store_byte v[0:1], v2, off
BB3_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cast_logical_not_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end3:
	.size	tvmgen_default_fused_cast_logical_not_kernel0, .Lfunc_end3-tvmgen_default_fused_cast_logical_not_kernel0

	.globl	tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0
	.p2align	8
	.type	tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0,@function
tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0:
	s_mulk_i32 s6, 0x1f4
	s_mov_b32 s0, 0x55555556
	v_lshl_add_u32 v0, v0, 1, s6
	s_load_dwordx2 s[6:7], s[4:5], 0x8
	s_movk_i32 s1, 0x320
	s_mov_b32 s2, 0x1d4c0
	s_mov_b32 s3, 0x3a980
	v_mul_hi_i32 v1, 0x1b4e81b5, v0
	v_or_b32_e32 v3, 1, v0
	v_mul_hi_i32 v4, v0, s0
	s_mov_b32 s8, 0x57e40
	s_mov_b32 s9, 0x75300
	s_load_dwordx2 s[4:5], s[4:5], 0x0
	v_mul_hi_i32 v5, v3, s0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 8, v1
	v_lshrrev_b32_e32 v6, 31, v4
	v_add_nc_u32_e32 v23, v1, v2
	v_lshrrev_b32_e32 v7, 31, v5
	v_add_nc_u32_e32 v4, v4, v6
	v_mul_i32_i24_e32 v1, 0x960, v23
	v_add_nc_u32_e32 v5, v5, v7
	v_mul_lo_u32 v4, v4, 3
	v_mad_i32_i24 v18, v23, s1, 0x27100
	v_mad_i32_i24 v21, v23, s1, 0x30d40
	v_sub_nc_u32_e32 v1, v0, v1
	v_mul_lo_u32 v5, v5, 3
	v_mad_i32_i24 v26, v23, s1, s8
	v_add_nc_u32_e32 v2, 1, v1
	v_mul_hi_i32 v8, v1, s0
	v_sub_nc_u32_e32 v4, v0, v4
	v_sub_nc_u32_e32 v3, v3, v5
	v_mul_hi_i32 v6, v2, s0
	s_mov_b32 s0, 0x927c0
	v_cmp_lt_i32_e32 vcc_lo, -1, v4
	v_lshrrev_b32_e32 v7, 31, v8
	v_lshrrev_b32_e32 v9, 31, v6
	v_add_nc_u32_e32 v7, v8, v7
	v_add_nc_u32_e32 v8, 3, v4
	v_add_nc_u32_e32 v5, v6, v9
	v_mul_lo_u32 v6, v7, 3
	v_cndmask_b32_e32 v4, v8, v4, vcc_lo
	v_add_nc_u32_e32 v9, 3, v3
	v_cmp_lt_i32_e32 vcc_lo, -1, v3
	v_mul_lo_u32 v10, v5, 3
	v_mad_i32_i24 v8, v23, s1, s2
	v_mul_lo_u32 v4, v4, s0
	v_sub_nc_u32_e32 v1, v1, v6
	v_cndmask_b32_e32 v3, v9, v3, vcc_lo
	v_mad_i32_i24 v6, v23, s1, 0x13880
	v_sub_nc_u32_e32 v2, v2, v10
	v_ashrrev_i32_e32 v1, 31, v1
	v_mul_lo_u32 v3, v3, s0
	v_ashrrev_i32_e32 v2, 31, v2
	v_add3_u32 v24, v1, v7, v4
	v_mad_i32_i24 v4, v23, s1, 0x9c40
	v_add3_u32 v25, v2, v5, v3
	v_mad_i32_i24 v1, v23, s1, v24
	v_add_nc_u32_e32 v3, v24, v4
	v_add_nc_u32_e32 v5, v24, v6
	v_add_nc_u32_e32 v7, v24, v8
	v_add_nc_u32_e32 v11, v25, v4
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_mad_i32_i24 v9, v23, s1, v25
	v_add_nc_u32_e32 v13, v25, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	v_ashrrev_i32_e32 v14, 31, v13
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s6, v1
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_add_co_ci_u32_e32 v2, vcc_lo, s7, v2, vcc_lo
	v_add_co_u32 v3, vcc_lo, s6, v3
	v_add_nc_u32_e32 v15, v25, v8
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo
	v_add_co_u32 v5, vcc_lo, s6, v5
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo
	v_add_co_u32 v9, vcc_lo, s6, v9
	v_lshlrev_b64 v[13:14], 2, v[13:14]
	v_ashrrev_i32_e32 v16, 31, v15
	v_add_co_ci_u32_e32 v10, vcc_lo, s7, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s6, v11
	v_lshlrev_b64 v[7:8], 2, v[7:8]
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo
	v_add_co_u32 v13, vcc_lo, s6, v13
	v_lshlrev_b64 v[15:16], 2, v[15:16]
	v_add_co_ci_u32_e32 v14, vcc_lo, s7, v14, vcc_lo
	v_add_nc_u32_e32 v19, v24, v18
	v_add_co_u32 v7, vcc_lo, s6, v7
	v_add_nc_u32_e32 v17, v25, v18
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo
	v_add_co_u32 v15, vcc_lo, s6, v15
	v_ashrrev_i32_e32 v20, 31, v19
	v_add_co_ci_u32_e32 v16, vcc_lo, s7, v16, vcc_lo
	s_clause 0x7
	global_load_dword v27, v[1:2], off
	global_load_dword v28, v[9:10], off
	global_load_dword v29, v[3:4], off
	global_load_dword v30, v[11:12], off
	global_load_dword v31, v[5:6], off
	global_load_dword v32, v[13:14], off
	global_load_dword v33, v[7:8], off
	global_load_dword v34, v[15:16], off
	v_add_nc_u32_e32 v7, v24, v21
	v_mad_i32_i24 v10, v23, s1, s3
	v_ashrrev_i32_e32 v18, 31, v17
	v_add_nc_u32_e32 v5, v25, v21
	v_lshlrev_b64 v[1:2], 2, v[19:20]
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_nc_u32_e32 v11, v24, v10
	v_mad_i32_i24 v14, v23, s1, 0x445c0
	v_lshlrev_b64 v[3:4], 2, v[17:18]
	v_ashrrev_i32_e32 v6, 31, v5
	v_add_nc_u32_e32 v9, v25, v10
	v_add_co_u32 v1, vcc_lo, s6, v1
	v_lshlrev_b64 v[7:8], 2, v[7:8]
	v_ashrrev_i32_e32 v12, 31, v11
	v_add_co_ci_u32_e32 v2, vcc_lo, s7, v2, vcc_lo
	v_add_nc_u32_e32 v13, v24, v14
	v_add_co_u32 v3, vcc_lo, s6, v3
	v_mad_i32_i24 v19, v23, s1, 0x4e200
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	v_ashrrev_i32_e32 v10, 31, v9
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo
	v_add_nc_u32_e32 v15, v25, v14
	v_add_co_u32 v7, vcc_lo, s6, v7
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	v_ashrrev_i32_e32 v14, 31, v13
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo
	v_add_nc_u32_e32 v17, v24, v19
	v_add_co_u32 v5, vcc_lo, s6, v5
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_ashrrev_i32_e32 v16, 31, v15
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo
	v_add_co_u32 v11, vcc_lo, s6, v11
	v_lshlrev_b64 v[13:14], 2, v[13:14]
	v_ashrrev_i32_e32 v18, 31, v17
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo
	v_add_co_u32 v9, vcc_lo, s6, v9
	v_lshlrev_b64 v[15:16], 2, v[15:16]
	v_add_co_ci_u32_e32 v10, vcc_lo, s7, v10, vcc_lo
	v_add_co_u32 v13, vcc_lo, s6, v13
	v_lshlrev_b64 v[17:18], 2, v[17:18]
	v_add_co_ci_u32_e32 v14, vcc_lo, s7, v14, vcc_lo
	v_add_nc_u32_e32 v19, v25, v19
	v_add_co_u32 v15, vcc_lo, s6, v15
	v_add_nc_u32_e32 v21, v24, v26
	v_add_co_ci_u32_e32 v16, vcc_lo, s7, v16, vcc_lo
	v_add_co_u32 v17, vcc_lo, s6, v17
	s_clause 0x7
	global_load_dword v35, v[1:2], off
	global_load_dword v36, v[3:4], off
	global_load_dword v37, v[7:8], off
	global_load_dword v38, v[5:6], off
	global_load_dword v39, v[11:12], off
	global_load_dword v40, v[9:10], off
	global_load_dword v41, v[13:14], off
	global_load_dword v42, v[15:16], off
	v_add_co_ci_u32_e32 v18, vcc_lo, s7, v18, vcc_lo
	v_mad_i32_i24 v8, v23, s1, 0x61a80
	v_ashrrev_i32_e32 v20, 31, v19
	v_add_nc_u32_e32 v3, v25, v26
	v_ashrrev_i32_e32 v22, 31, v21
	global_load_dword v43, v[17:18], off
	v_mad_i32_i24 v17, v23, s1, s9
	v_add_nc_u32_e32 v7, v24, v8
	v_lshlrev_b64 v[1:2], 2, v[19:20]
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[5:6], 2, v[21:22]
	v_add_nc_u32_e32 v13, v24, v17
	v_add_nc_u32_e32 v9, v25, v8
	v_ashrrev_i32_e32 v8, 31, v7
	v_mad_i32_i24 v12, v23, s1, 0x6b6c0
	v_add_co_u32 v1, vcc_lo, s6, v1
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_ashrrev_i32_e32 v14, 31, v13
	v_add_co_ci_u32_e32 v2, vcc_lo, s7, v2, vcc_lo
	v_add_co_u32 v5, vcc_lo, s6, v5
	v_add_nc_u32_e32 v11, v24, v12
	v_lshlrev_b64 v[7:8], 2, v[7:8]
	v_ashrrev_i32_e32 v10, 31, v9
	v_add_co_ci_u32_e32 v6, vcc_lo, s7, v6, vcc_lo
	v_add_co_u32 v3, vcc_lo, s6, v3
	v_add_nc_u32_e32 v15, v25, v12
	v_lshlrev_b64 v[13:14], 2, v[13:14]
	v_ashrrev_i32_e32 v12, 31, v11
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo
	v_add_co_u32 v7, vcc_lo, s6, v7
	v_add_nc_u32_e32 v17, v25, v17
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_ashrrev_i32_e32 v16, 31, v15
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo
	v_add_co_u32 v13, vcc_lo, s6, v13
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	v_add_co_ci_u32_e32 v14, vcc_lo, s7, v14, vcc_lo
	v_ashrrev_i32_e32 v18, 31, v17
	v_add_co_u32 v9, vcc_lo, s6, v9
	v_lshlrev_b64 v[15:16], 2, v[15:16]
	v_add_co_ci_u32_e32 v10, vcc_lo, s7, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s6, v11
	global_load_dword v44, v[13:14], off
	v_lshlrev_b64 v[13:14], 2, v[17:18]
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo
	v_add_co_u32 v15, vcc_lo, s6, v15
	v_mad_i32_i24 v17, v23, s1, 0x7ef40
	v_add_co_ci_u32_e32 v16, vcc_lo, s7, v16, vcc_lo
	v_add_nc_u32_e32 v18, 0x107ac0, v0
	v_add_co_u32 v13, vcc_lo, s6, v13
	v_add_nc_u32_e32 v20, 0x124f80, v0
	v_add_co_ci_u32_e32 v14, vcc_lo, s7, v14, vcc_lo
	s_clause 0x7
	global_load_dword v45, v[1:2], off
	global_load_dword v46, v[5:6], off
	global_load_dword v47, v[3:4], off
	global_load_dword v48, v[7:8], off
	global_load_dword v49, v[9:10], off
	global_load_dword v50, v[11:12], off
	global_load_dword v51, v[15:16], off
	global_load_dword v52, v[13:14], off
	v_add_nc_u32_e32 v1, v24, v17
	v_add_nc_u32_e32 v3, v25, v17
	v_mad_i32_i24 v6, v23, s1, 0x88b80
	v_add_nc_u32_e32 v10, s0, v0
	v_add_nc_u32_e32 v12, 0xafc80, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_add_nc_u32_e32 v5, v25, v6
	v_add_nc_u32_e32 v7, v24, v6
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_ashrrev_i32_e32 v6, 31, v5
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_nc_u32_e32 v14, 0xcd140, v0
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_u32 v1, vcc_lo, s6, v1
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	v_add_co_ci_u32_e32 v2, vcc_lo, s7, v2, vcc_lo
	v_add_co_u32 v3, vcc_lo, s6, v3
	v_add_nc_u32_e32 v16, 0xea600, v0
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v4, vcc_lo
	v_add_nc_u32_e32 v22, 0x142440, v0
	v_ashrrev_i32_e32 v15, 31, v14
	v_ashrrev_i32_e32 v19, 31, v18
	s_clause 0x1
	global_load_dword v53, v[1:2], off
	global_load_dword v54, v[3:4], off
	v_lshlrev_b64 v[1:2], 2, v[7:8]
	v_add_co_u32 v3, vcc_lo, s6, v5
	v_add_nc_u32_e32 v8, s9, v0
	v_add_co_ci_u32_e32 v4, vcc_lo, s7, v6, vcc_lo
	v_add_nc_u32_e32 v6, s8, v0
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_co_u32 v1, vcc_lo, s6, v1
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_co_ci_u32_e32 v2, vcc_lo, s7, v2, vcc_lo
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v21, 31, v20
	v_ashrrev_i32_e32 v23, 31, v22
	s_clause 0x1
	global_load_dword v55, v[3:4], off
	global_load_dword v56, v[1:2], off
	v_add_nc_u32_e32 v2, s2, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_nc_u32_e32 v4, s3, v0
	v_add_nc_u32_e32 v24, 0x15f900, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[25:26], 1, v[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[1:2], 1, v[2:3]
	v_add_co_u32 v25, vcc_lo, s4, v25
	v_lshlrev_b64 v[3:4], 1, v[4:5]
	v_add_co_ci_u32_e32 v26, vcc_lo, s5, v26, vcc_lo
	v_lshlrev_b64 v[5:6], 1, v[6:7]
	v_add_co_u32 v1, vcc_lo, s4, v1
	v_lshlrev_b64 v[7:8], 1, v[8:9]
	v_add_co_ci_u32_e32 v2, vcc_lo, s5, v2, vcc_lo
	v_add_co_u32 v3, vcc_lo, s4, v3
	v_lshlrev_b64 v[9:10], 1, v[10:11]
	v_add_co_ci_u32_e32 v4, vcc_lo, s5, v4, vcc_lo
	v_add_co_u32 v5, vcc_lo, s4, v5
	v_lshlrev_b64 v[11:12], 1, v[12:13]
	v_add_co_ci_u32_e32 v6, vcc_lo, s5, v6, vcc_lo
	v_add_co_u32 v7, vcc_lo, s4, v7
	v_lshlrev_b64 v[13:14], 1, v[14:15]
	v_add_co_ci_u32_e32 v8, vcc_lo, s5, v8, vcc_lo
	v_add_co_u32 v9, vcc_lo, s4, v9
	v_lshlrev_b64 v[15:16], 1, v[16:17]
	v_add_co_ci_u32_e32 v10, vcc_lo, s5, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s4, v11
	v_lshlrev_b64 v[17:18], 1, v[18:19]
	v_lshlrev_b64 v[19:20], 1, v[20:21]
	v_lshlrev_b64 v[21:22], 1, v[22:23]
	v_add_co_ci_u32_e32 v12, vcc_lo, s5, v12, vcc_lo
	v_add_co_u32 v13, vcc_lo, s4, v13
	v_add_co_ci_u32_e32 v14, vcc_lo, s5, v14, vcc_lo
	v_add_co_u32 v15, vcc_lo, s4, v15
	v_add_co_ci_u32_e32 v16, vcc_lo, s5, v16, vcc_lo
	v_add_co_u32 v17, vcc_lo, s4, v17
	v_add_co_ci_u32_e32 v18, vcc_lo, s5, v18, vcc_lo
	v_add_co_u32 v19, vcc_lo, s4, v19
	v_add_co_ci_u32_e32 v20, vcc_lo, s5, v20, vcc_lo
	s_waitcnt vmcnt(29)
	v_cvt_f16_f32_e32 v23, v27
	s_waitcnt vmcnt(28)
	v_cvt_f16_f32_e32 v28, v28
	s_waitcnt vmcnt(27)
	v_cvt_f16_f32_e32 v29, v29
	s_waitcnt vmcnt(26)
	v_cvt_f16_f32_e32 v30, v30
	s_waitcnt vmcnt(25)
	v_cvt_f16_f32_e32 v31, v31
	s_waitcnt vmcnt(24)
	v_cvt_f16_f32_e32 v32, v32
	s_waitcnt vmcnt(23)
	v_cvt_f16_f32_e32 v33, v33
	s_waitcnt vmcnt(22)
	v_cvt_f16_f32_e32 v34, v34
	v_pack_b32_f16 v23, v23, v28
	v_pack_b32_f16 v28, v29, v30
	v_pack_b32_f16 v29, v31, v32
	v_pack_b32_f16 v30, v33, v34
	s_waitcnt vmcnt(21)
	v_cvt_f16_f32_e32 v27, v35
	s_waitcnt vmcnt(20)
	v_cvt_f16_f32_e32 v36, v36
	s_waitcnt vmcnt(19)
	v_cvt_f16_f32_e32 v37, v37
	s_waitcnt vmcnt(18)
	v_cvt_f16_f32_e32 v38, v38
	s_waitcnt vmcnt(17)
	v_cvt_f16_f32_e32 v39, v39
	s_waitcnt vmcnt(16)
	v_cvt_f16_f32_e32 v40, v40
	s_waitcnt vmcnt(15)
	v_cvt_f16_f32_e32 v41, v41
	s_waitcnt vmcnt(14)
	v_cvt_f16_f32_e32 v42, v42
	v_pack_b32_f16 v27, v27, v36
	v_pack_b32_f16 v31, v37, v38
	v_pack_b32_f16 v32, v39, v40
	v_pack_b32_f16 v33, v41, v42
	s_waitcnt vmcnt(13)
	v_cvt_f16_f32_e32 v35, v43
	s_waitcnt vmcnt(12)
	v_cvt_f16_f32_e32 v43, v44
	s_waitcnt vmcnt(11)
	v_cvt_f16_f32_e32 v44, v45
	s_waitcnt vmcnt(10)
	v_cvt_f16_f32_e32 v46, v46
	s_waitcnt vmcnt(9)
	v_cvt_f16_f32_e32 v45, v47
	s_waitcnt vmcnt(8)
	v_cvt_f16_f32_e32 v48, v48
	s_waitcnt vmcnt(7)
	v_cvt_f16_f32_e32 v47, v49
	v_pack_b32_f16 v34, v35, v44
	s_waitcnt vmcnt(5)
	v_cvt_f16_f32_e32 v49, v51
	v_pack_b32_f16 v35, v46, v45
	global_store_dword v[25:26], v23, off
	global_store_dword v[1:2], v28, off
	global_store_dword v[3:4], v29, off
	global_store_dword v[5:6], v30, off
	global_store_dword v[7:8], v27, off
	global_store_dword v[9:10], v31, off
	global_store_dword v[11:12], v32, off
	global_store_dword v[13:14], v33, off
	global_store_dword v[15:16], v34, off
	global_store_dword v[17:18], v35, off
	v_add_nc_u32_e32 v3, 0x17cdc0, v0
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_nc_u32_e32 v7, 0x19a280, v0
	v_add_co_u32 v1, vcc_lo, s4, v21
	v_cvt_f16_f32_e32 v50, v50
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[5:6], 1, v[24:25]
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_co_ci_u32_e32 v2, vcc_lo, s5, v22, vcc_lo
	s_waitcnt vmcnt(4)
	v_cvt_f16_f32_e32 v51, v52
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_pack_b32_f16 v36, v48, v47
	v_add_co_u32 v5, vcc_lo, s4, v5
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_ci_u32_e32 v6, vcc_lo, s5, v6, vcc_lo
	v_pack_b32_f16 v37, v50, v49
	v_add_co_u32 v3, vcc_lo, s4, v3
	v_pack_b32_f16 v9, v43, v51
	v_add_co_ci_u32_e32 v4, vcc_lo, s5, v4, vcc_lo
	v_add_co_u32 v7, vcc_lo, s4, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s5, v8, vcc_lo
	s_waitcnt vmcnt(3)
	v_cvt_f16_f32_e32 v11, v53
	s_waitcnt vmcnt(2)
	v_cvt_f16_f32_e32 v10, v54
	v_pack_b32_f16 v0, v11, v10
	s_waitcnt vmcnt(1)
	v_cvt_f16_f32_e32 v10, v55
	s_waitcnt vmcnt(0)
	v_cvt_f16_f32_e32 v11, v56
	v_pack_b32_f16 v10, v11, v10
	global_store_dword v[19:20], v36, off
	global_store_dword v[1:2], v37, off
	global_store_dword v[5:6], v9, off
	global_store_dword v[3:4], v0, off
	global_store_dword v[7:8], v10, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 57
		.amdhsa_next_free_sgpr 10
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end4:
	.size	tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0, .Lfunc_end4-tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0

	.globl	tvmgen_default_fused_cumsum_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_cumsum_1_kernel0,@function
tvmgen_default_fused_cumsum_1_kernel0:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB5_2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_ashrrev_i32_e32 v1, 31, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	global_load_ubyte v2, v[2:3], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_cmp_ne_u16_e32 vcc_lo, 0, v2
	v_cndmask_b32_e64 v2, 0, 1.0, vcc_lo
	global_store_dword v[0:1], v2, off
BB5_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end5:
	.size	tvmgen_default_fused_cumsum_1_kernel0, .Lfunc_end5-tvmgen_default_fused_cumsum_1_kernel0

	.globl	tvmgen_default_fused_cumsum_1_kernel1
	.p2align	8
	.type	tvmgen_default_fused_cumsum_1_kernel1,@function
tvmgen_default_fused_cumsum_1_kernel1:
	v_cmp_gt_i32_e32 vcc_lo, 25, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB6_2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_mul_i32 s7, s7, 25
	v_add_nc_u32_e32 v0, s7, v0
	v_ashrrev_i32_e32 v1, 31, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	global_load_ubyte v2, v[2:3], off
	s_waitcnt vmcnt(0)
	v_and_b32_e32 v2, 1, v2
	v_cmp_eq_u32_e32 vcc_lo, 1, v2
	v_cndmask_b32_e64 v2, 0, 1.0, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v2, off
BB6_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_1_kernel1
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end6:
	.size	tvmgen_default_fused_cumsum_1_kernel1, .Lfunc_end6-tvmgen_default_fused_cumsum_1_kernel1

	.globl	tvmgen_default_fused_cumsum_1_kernel2
	.p2align	8
	.type	tvmgen_default_fused_cumsum_1_kernel2,@function
tvmgen_default_fused_cumsum_1_kernel2:
	s_load_dword s2, s[4:5], 0x8
	s_mov_b32 s0, s6
	s_ashr_i32 s1, s6, 31
	s_lshl_b64 s[0:1], s[0:1], 8
	v_add_co_u32 v0, s0, s0, v0
	v_add_co_ci_u32_e64 v1, s0, s1, 0, s0
	s_waitcnt lgkmcnt(0)
	s_lshl_b64 s[2:3], 2, s2
	v_mul_lo_u32 v3, s3, v0
	v_mul_lo_u32 v1, s2, v1
	v_mul_hi_u32 v4, s2, v0
	v_mul_lo_u32 v2, s2, v0
	s_ashr_i64 s[0:1], s[2:3], 1
	v_add3_u32 v3, v4, v1, v3
	v_add_co_u32 v0, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo
	v_cmp_gt_i64_e32 vcc_lo, 25, v[2:3]
	v_cmp_gt_i64_e64 s0, 25, v[0:1]
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB7_2
	v_add_co_u32 v2, vcc_lo, v2, s2
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_mad_i64_i32 v[0:1], s2, s7, 25, v[0:1]
	v_cmp_gt_i64_e32 vcc_lo, 25, v[2:3]
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_cndmask_b32_e32 v3, 0, v3, vcc_lo
	v_cndmask_b32_e32 v2, 25, v2, vcc_lo
	v_mad_i64_i32 v[2:3], s2, s7, 25, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	s_clause 0x1
	global_load_dword v0, v[0:1], off offset:-4
	global_load_dword v1, v[2:3], off offset:-4
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v0, v0, v1
	global_store_dword v[2:3], v0, off offset:-4
BB7_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_1_kernel2
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 12
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 5
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end7:
	.size	tvmgen_default_fused_cumsum_1_kernel2, .Lfunc_end7-tvmgen_default_fused_cumsum_1_kernel2

	.globl	tvmgen_default_fused_cumsum_1_kernel3
	.p2align	8
	.type	tvmgen_default_fused_cumsum_1_kernel3,@function
tvmgen_default_fused_cumsum_1_kernel3:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_mul_i32 s2, s6, 25
	v_mov_b32_e32 v0, 0
	s_ashr_i32 s3, s2, 31
	s_lshl_b64 s[2:3], s[2:3], 2
	s_waitcnt lgkmcnt(0)
	s_add_u32 s0, s0, s2
	s_addc_u32 s1, s1, s3
	global_store_dword v0, v0, s[0:1] offset:96
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_1_kernel3
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 8
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 1
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_vcc 0
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end8:
	.size	tvmgen_default_fused_cumsum_1_kernel3, .Lfunc_end8-tvmgen_default_fused_cumsum_1_kernel3

	.globl	tvmgen_default_fused_cumsum_1_kernel4
	.p2align	8
	.type	tvmgen_default_fused_cumsum_1_kernel4,@function
tvmgen_default_fused_cumsum_1_kernel4:
	s_load_dword s2, s[4:5], 0x8
	s_mov_b32 s0, s6
	s_ashr_i32 s1, s6, 31
	s_lshl_b64 s[0:1], s[0:1], 8
	v_add_co_u32 v0, s0, s0, v0
	v_add_co_ci_u32_e64 v1, s0, s1, 0, s0
	s_waitcnt lgkmcnt(0)
	s_not_b32 s2, s2
	s_add_i32 s2, s2, 5
	s_lshl_b64 s[2:3], 2, s2
	v_mul_lo_u32 v3, s3, v0
	v_mul_lo_u32 v1, s2, v1
	v_mul_hi_u32 v4, s2, v0
	v_mul_lo_u32 v2, s2, v0
	s_ashr_i64 s[0:1], s[2:3], 1
	v_add3_u32 v3, v4, v1, v3
	v_add_co_u32 v0, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo
	v_cmp_gt_i64_e32 vcc_lo, 25, v[2:3]
	v_cmp_gt_i64_e64 s0, 25, v[0:1]
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB9_2
	v_add_co_u32 v2, vcc_lo, v2, s2
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_mad_i64_i32 v[0:1], s2, s7, 25, v[0:1]
	v_cmp_gt_i64_e32 vcc_lo, 25, v[2:3]
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_cndmask_b32_e32 v3, 0, v3, vcc_lo
	v_cndmask_b32_e32 v2, 25, v2, vcc_lo
	v_mad_i64_i32 v[2:3], s2, s7, 25, v[2:3]
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_clause 0x1
	global_load_dword v4, v[2:3], off offset:-4
	global_load_dword v5, v[0:1], off offset:-4
	s_waitcnt vmcnt(1)
	global_store_dword v[0:1], v4, off offset:-4
	global_load_dword v0, v[2:3], off offset:-4
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v0, v5, v0
	global_store_dword v[2:3], v0, off offset:-4
BB9_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_1_kernel4
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 12
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end9:
	.size	tvmgen_default_fused_cumsum_1_kernel4, .Lfunc_end9-tvmgen_default_fused_cumsum_1_kernel4

	.globl	tvmgen_default_fused_cumsum_1_kernel5
	.p2align	8
	.type	tvmgen_default_fused_cumsum_1_kernel5,@function
tvmgen_default_fused_cumsum_1_kernel5:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB10_2
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	v_add_co_u32 v4, vcc_lo, s2, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v1, vcc_lo
	global_load_dword v2, v[2:3], off
	global_load_dword v3, v[4:5], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v2, v2, v3
	global_store_dword v[0:1], v2, off
BB10_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_1_kernel5
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end10:
	.size	tvmgen_default_fused_cumsum_1_kernel5, .Lfunc_end10-tvmgen_default_fused_cumsum_1_kernel5

	.globl	tvmgen_default_fused_cumsum_kernel0
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel0,@function
tvmgen_default_fused_cumsum_kernel0:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB11_2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_ashrrev_i32_e32 v1, 31, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	global_load_ubyte v2, v[2:3], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_cmp_ne_u16_e32 vcc_lo, 0, v2
	v_cndmask_b32_e64 v2, 0, 1.0, vcc_lo
	global_store_dword v[0:1], v2, off
BB11_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end11:
	.size	tvmgen_default_fused_cumsum_kernel0, .Lfunc_end11-tvmgen_default_fused_cumsum_kernel0

	.globl	tvmgen_default_fused_cumsum_kernel1
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel1,@function
tvmgen_default_fused_cumsum_kernel1:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB12_2
	v_mul_hi_i32 v1, 0x2aaaaaab, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 2, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_lo_u32 v2, v1, 24
	v_sub_nc_u32_e32 v2, v0, v2
	v_mul_lo_u32 v2, v2, 25
	v_add_nc_u32_e32 v1, v2, v1
	v_ashrrev_i32_e32 v2, 31, v1
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_ubyte v1, v[1:2], off
	v_ashrrev_i32_e32 v2, 31, v0
	s_waitcnt vmcnt(0)
	v_cmp_ne_u16_e32 vcc_lo, 0, v1
	v_cndmask_b32_e64 v3, 0, 1, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo
	global_store_byte v[0:1], v3, off
BB12_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel1
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end12:
	.size	tvmgen_default_fused_cumsum_kernel1, .Lfunc_end12-tvmgen_default_fused_cumsum_kernel1

	.globl	tvmgen_default_fused_cumsum_kernel2
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel2,@function
tvmgen_default_fused_cumsum_kernel2:
	v_cmp_gt_i32_e32 vcc_lo, 24, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB13_2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_mul_i32 s7, s7, 24
	v_add_nc_u32_e32 v0, s7, v0
	v_ashrrev_i32_e32 v1, 31, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	global_load_ubyte v2, v[2:3], off
	s_waitcnt vmcnt(0)
	v_and_b32_e32 v2, 1, v2
	v_cmp_eq_u32_e32 vcc_lo, 1, v2
	v_cndmask_b32_e64 v2, 0, 1.0, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v2, off
BB13_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel2
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end13:
	.size	tvmgen_default_fused_cumsum_kernel2, .Lfunc_end13-tvmgen_default_fused_cumsum_kernel2

	.globl	tvmgen_default_fused_cumsum_kernel3
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel3,@function
tvmgen_default_fused_cumsum_kernel3:
	s_load_dword s2, s[4:5], 0x8
	s_mov_b32 s0, s6
	s_ashr_i32 s1, s6, 31
	s_lshl_b64 s[0:1], s[0:1], 8
	v_add_co_u32 v0, s0, s0, v0
	v_add_co_ci_u32_e64 v1, s0, s1, 0, s0
	s_waitcnt lgkmcnt(0)
	s_lshl_b64 s[2:3], 2, s2
	v_mul_lo_u32 v3, s3, v0
	v_mul_lo_u32 v1, s2, v1
	v_mul_hi_u32 v4, s2, v0
	v_mul_lo_u32 v2, s2, v0
	s_ashr_i64 s[0:1], s[2:3], 1
	v_add3_u32 v3, v4, v1, v3
	v_add_co_u32 v0, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo
	v_cmp_gt_i64_e32 vcc_lo, 24, v[2:3]
	v_cmp_gt_i64_e64 s0, 24, v[0:1]
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB14_2
	v_add_co_u32 v2, vcc_lo, v2, s2
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_mad_i64_i32 v[0:1], s2, s7, 24, v[0:1]
	v_cmp_gt_i64_e32 vcc_lo, 24, v[2:3]
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_cndmask_b32_e32 v3, 0, v3, vcc_lo
	v_cndmask_b32_e32 v2, 24, v2, vcc_lo
	v_mad_i64_i32 v[2:3], s2, s7, 24, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	s_clause 0x1
	global_load_dword v0, v[0:1], off offset:-4
	global_load_dword v1, v[2:3], off offset:-4
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v0, v0, v1
	global_store_dword v[2:3], v0, off offset:-4
BB14_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel3
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 12
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 5
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end14:
	.size	tvmgen_default_fused_cumsum_kernel3, .Lfunc_end14-tvmgen_default_fused_cumsum_kernel3

	.globl	tvmgen_default_fused_cumsum_kernel4
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel4,@function
tvmgen_default_fused_cumsum_kernel4:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_mul_i32 s2, s6, 24
	v_mov_b32_e32 v0, 0
	s_ashr_i32 s3, s2, 31
	s_lshl_b64 s[2:3], s[2:3], 2
	s_waitcnt lgkmcnt(0)
	s_add_u32 s0, s0, s2
	s_addc_u32 s1, s1, s3
	global_store_dword v0, v0, s[0:1] offset:92
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel4
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 8
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 1
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_vcc 0
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end15:
	.size	tvmgen_default_fused_cumsum_kernel4, .Lfunc_end15-tvmgen_default_fused_cumsum_kernel4

	.globl	tvmgen_default_fused_cumsum_kernel5
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel5,@function
tvmgen_default_fused_cumsum_kernel5:
	s_load_dword s2, s[4:5], 0x8
	s_mov_b32 s0, s6
	s_ashr_i32 s1, s6, 31
	s_lshl_b64 s[0:1], s[0:1], 8
	v_add_co_u32 v0, s0, s0, v0
	v_add_co_ci_u32_e64 v1, s0, s1, 0, s0
	s_waitcnt lgkmcnt(0)
	s_not_b32 s2, s2
	s_add_i32 s2, s2, 5
	s_lshl_b64 s[2:3], 2, s2
	v_mul_lo_u32 v3, s3, v0
	v_mul_lo_u32 v1, s2, v1
	v_mul_hi_u32 v4, s2, v0
	v_mul_lo_u32 v2, s2, v0
	s_ashr_i64 s[0:1], s[2:3], 1
	v_add3_u32 v3, v4, v1, v3
	v_add_co_u32 v0, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo
	v_cmp_gt_i64_e32 vcc_lo, 24, v[2:3]
	v_cmp_gt_i64_e64 s0, 24, v[0:1]
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB16_2
	v_add_co_u32 v2, vcc_lo, v2, s2
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_mad_i64_i32 v[0:1], s2, s7, 24, v[0:1]
	v_cmp_gt_i64_e32 vcc_lo, 24, v[2:3]
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_cndmask_b32_e32 v3, 0, v3, vcc_lo
	v_cndmask_b32_e32 v2, 24, v2, vcc_lo
	v_mad_i64_i32 v[2:3], s2, s7, 24, v[2:3]
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_clause 0x1
	global_load_dword v4, v[2:3], off offset:-4
	global_load_dword v5, v[0:1], off offset:-4
	s_waitcnt vmcnt(1)
	global_store_dword v[0:1], v4, off offset:-4
	global_load_dword v0, v[2:3], off offset:-4
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v0, v5, v0
	global_store_dword v[2:3], v0, off offset:-4
BB16_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel5
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 12
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end16:
	.size	tvmgen_default_fused_cumsum_kernel5, .Lfunc_end16-tvmgen_default_fused_cumsum_kernel5

	.globl	tvmgen_default_fused_cumsum_kernel6
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel6,@function
tvmgen_default_fused_cumsum_kernel6:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB17_2
	v_mul_hi_i32 v1, 0x51eb851f, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 3, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_lo_u32 v2, v1, 25
	v_sub_nc_u32_e32 v2, v0, v2
	v_mul_lo_u32 v2, v2, 24
	v_add_nc_u32_e32 v1, v2, v1
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_dword v2, v[1:2], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_dword v[0:1], v2, off
BB17_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel6
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 3
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end17:
	.size	tvmgen_default_fused_cumsum_kernel6, .Lfunc_end17-tvmgen_default_fused_cumsum_kernel6

	.globl	tvmgen_default_fused_cumsum_kernel7
	.p2align	8
	.type	tvmgen_default_fused_cumsum_kernel7,@function
tvmgen_default_fused_cumsum_kernel7:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB18_2
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	v_add_co_u32 v4, vcc_lo, s2, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v1, vcc_lo
	global_load_dword v2, v[2:3], off
	global_load_dword v3, v[4:5], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v2, v2, v3
	global_store_dword v[0:1], v2, off
BB18_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_cumsum_kernel7
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end18:
	.size	tvmgen_default_fused_cumsum_kernel7, .Lfunc_end18-tvmgen_default_fused_cumsum_kernel7

	.globl	tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0
	.p2align	8
	.type	tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0,@function
tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0:
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s8, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s8, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB19_2
	v_lshrrev_b32_e32 v2, 7, v0
	s_mov_b32 s0, 0x51eb851f
	v_mul_hi_i32 v6, v4, s0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, v2, s0
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 11, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_lshrrev_b32_e32 v7, 31, v5
	v_lshrrev_b32_e32 v5, 3, v5
	v_mul_i32_i24_e32 v6, 0x1900, v6
	v_add_nc_u32_e32 v5, v5, v7
	v_and_or_b32 v6, 0xfe, v1, v6
	v_mul_lo_u32 v5, v5, 25
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_add_u32 v5, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s4, v5
	v_add_co_ci_u32_e64 v6, s0, s5, v6, s0
	global_load_ushort v2, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	s_waitcnt vmcnt(0)
	global_store_short v[5:6], v2, off
BB19_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s8, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB19_4
	v_lshrrev_b32_e32 v6, 7, v0
	s_mov_b32 s1, 0x51eb851f
	v_mul_hi_i32 v8, v5, s1
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, v6, s1
	v_lshrrev_b32_e32 v10, 31, v8
	v_ashrrev_i32_e32 v8, 11, v8
	v_add_nc_u32_e32 v8, v8, v10
	v_lshrrev_b32_e32 v9, 31, v7
	v_lshrrev_b32_e32 v7, 3, v7
	v_mul_i32_i24_e32 v8, 0x1900, v8
	v_add_nc_u32_e32 v7, v7, v9
	v_and_or_b32 v8, 0xff, v2, v8
	v_mul_lo_u32 v7, v7, 25
	v_sub_nc_u32_e32 v6, v6, v7
	v_lshl_add_u32 v6, v6, 8, v8
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo
	global_load_ushort v8, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_short v[6:7], v8, off
BB19_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s8, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s8, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB19_6
	v_lshrrev_b32_e32 v4, 7, v0
	s_mov_b32 s0, 0x51eb851f
	v_mul_hi_i32 v7, v3, s0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, v4, s0
	v_lshrrev_b32_e32 v9, 31, v7
	v_ashrrev_i32_e32 v7, 11, v7
	v_add_nc_u32_e32 v7, v7, v9
	v_lshrrev_b32_e32 v8, 31, v6
	v_lshrrev_b32_e32 v6, 3, v6
	v_mul_i32_i24_e32 v7, 0x1900, v7
	v_add_nc_u32_e32 v6, v6, v8
	v_and_or_b32 v1, 0xfe, v1, v7
	v_mul_lo_u32 v6, v6, 25
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_add_u32 v6, v4, 8, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s4, v6
	v_add_co_ci_u32_e64 v7, s0, s5, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_ushort v1, v[6:7], off
	s_waitcnt vmcnt(0)
	global_store_short v[3:4], v1, off
BB19_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s8, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB19_8
	v_lshrrev_b32_e32 v0, 7, v0
	s_mov_b32 s0, 0x51eb851f
	v_mul_hi_i32 v4, v1, s0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, v0, s0
	v_lshrrev_b32_e32 v6, 31, v4
	v_ashrrev_i32_e32 v4, 11, v4
	v_add_nc_u32_e32 v4, v4, v6
	v_lshrrev_b32_e32 v5, 31, v3
	v_lshrrev_b32_e32 v3, 3, v3
	v_mul_i32_i24_e32 v4, 0x1900, v4
	v_add_nc_u32_e32 v3, v3, v5
	v_and_or_b32 v2, 0xff, v2, v4
	v_mul_lo_u32 v3, v3, 25
	v_sub_nc_u32_e32 v0, v0, v3
	v_lshl_add_u32 v2, v0, 8, v2
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo
	global_load_ushort v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_short v[0:1], v3, off
BB19_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 11
		.amdhsa_next_free_sgpr 9
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end19:
	.size	tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0, .Lfunc_end19-tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0

	.globl	tvmgen_default_fused_mean_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_mean_1_kernel0,@function
tvmgen_default_fused_mean_1_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshl_add_u32 v1, s6, 8, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	s_clause 0x7
	global_load_dword v3, v[1:2], off
	global_load_dword v4, v[1:2], off offset:128
	global_load_dword v5, v[1:2], off offset:256
	global_load_dword v6, v[1:2], off offset:384
	global_load_dword v7, v[1:2], off offset:512
	global_load_dword v8, v[1:2], off offset:640
	global_load_dword v9, v[1:2], off offset:768
	global_load_dword v2, v[1:2], off offset:896
	s_waitcnt vmcnt(0)
	s_barrier 
	v_add_f32_e32 v1, 0, v3
	v_add_f32_e32 v1, v1, v4
	v_add_f32_e32 v1, v1, v5
	v_add_f32_e32 v1, v1, v6
	v_add_f32_e32 v1, v1, v7
	v_add_f32_e32 v1, v1, v8
	v_add_f32_e32 v3, v1, v9
	v_lshlrev_b32_e32 v1, 2, v0
	v_add_f32_e32 v2, v3, v2
	ds_write_b32 v1, v2
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB20_2
	ds_read_b32 v2, v1 offset:64
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:32
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:16
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:8
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:4
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
BB20_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_mov_b32_e32 v1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_cmp_gt_i32_e32 vcc_lo, 1, v0
	ds_read_b32 v2, v1
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v1, v2 offset:128
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB20_4
	v_lshlrev_b32_e32 v1, 2, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_add_nc_u32_e32 v0, s6, v0
	ds_read_b32 v2, v1 offset:128
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_mul_f32_e32 v2, 0x3b800000, v2
	global_store_dword v[0:1], v2, off
BB20_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_mean_1_kernel0
		.amdhsa_group_segment_fixed_size 132
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end20:
	.size	tvmgen_default_fused_mean_1_kernel0, .Lfunc_end20-tvmgen_default_fused_mean_1_kernel0

	.globl	tvmgen_default_fused_mean_kernel0
	.p2align	8
	.type	tvmgen_default_fused_mean_kernel0,@function
tvmgen_default_fused_mean_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshl_add_u32 v1, s6, 8, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	s_clause 0x7
	global_load_dword v3, v[1:2], off
	global_load_dword v4, v[1:2], off offset:128
	global_load_dword v5, v[1:2], off offset:256
	global_load_dword v6, v[1:2], off offset:384
	global_load_dword v7, v[1:2], off offset:512
	global_load_dword v8, v[1:2], off offset:640
	global_load_dword v9, v[1:2], off offset:768
	global_load_dword v2, v[1:2], off offset:896
	s_waitcnt vmcnt(0)
	s_barrier 
	v_add_f32_e32 v1, 0, v3
	v_add_f32_e32 v1, v1, v4
	v_add_f32_e32 v1, v1, v5
	v_add_f32_e32 v1, v1, v6
	v_add_f32_e32 v1, v1, v7
	v_add_f32_e32 v1, v1, v8
	v_add_f32_e32 v3, v1, v9
	v_lshlrev_b32_e32 v1, 2, v0
	v_add_f32_e32 v2, v3, v2
	ds_write_b32 v1, v2
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB21_2
	ds_read_b32 v2, v1 offset:64
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:32
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:16
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:8
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:4
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
BB21_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_mov_b32_e32 v1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_cmp_gt_i32_e32 vcc_lo, 1, v0
	ds_read_b32 v2, v1
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v1, v2 offset:128
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB21_4
	v_lshlrev_b32_e32 v1, 2, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_add_nc_u32_e32 v0, s6, v0
	ds_read_b32 v2, v1 offset:128
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_mul_f32_e32 v2, 0x3b800000, v2
	global_store_dword v[0:1], v2, off
BB21_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_mean_kernel0
		.amdhsa_group_segment_fixed_size 132
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end21:
	.size	tvmgen_default_fused_mean_kernel0, .Lfunc_end21-tvmgen_default_fused_mean_kernel0

	.globl	tvmgen_default_fused_nn_batch_matmul_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_batch_matmul_1_kernel0,@function
tvmgen_default_fused_nn_batch_matmul_1_kernel0:
	s_mov_b32 s7, 0x66666667
	v_add_nc_u32_e32 v3, 0x3c0, v0
	v_mul_hi_i32 v13, v0, s7
	s_mov_b32 s14, 0x10624dd3
	s_movk_i32 s16, 0x500
	s_movk_i32 s12, 0x258
	v_add_nc_u32_e32 v8, s16, v0
	v_mul_hi_u32 v3, v3, s14
	s_and_b32 s2, s6, 3
	s_ashr_i32 s3, s6, 2
	v_ashrrev_i32_e32 v1, 4, v13
	v_lshrrev_b32_e32 v14, 31, v13
	v_mul_hi_u32 v8, v8, s14
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_mul_i32 s4, s2, 0x3a98
	s_mul_i32 s5, s3, 0x1d4c0
	v_add_nc_u32_e32 v1, v1, v14
	s_mov_b32 s15, 0xea60
	v_add_nc_u32_e32 v18, 0x730, v0
	v_add_nc_u32_e32 v19, 0x780, v0
	v_lshrrev_b32_e32 v8, 6, v8
	v_add_nc_u32_e32 v4, 24, v1
	v_mul_lo_u32 v16, v1, 40
	v_ashrrev_i32_e32 v13, 1, v13
	v_mul_hi_u32 v18, v18, s14
	v_mul_hi_u32 v20, v19, s14
	v_mul_hi_i32 v9, 0x51eb851f, v4
	v_add_nc_u32_e32 v5, 0x410, v0
	v_add_nc_u32_e32 v21, v13, v14
	v_mad_u32_u24 v14, v0, 7, v19
	v_add_nc_u32_e32 v6, 0x460, v0
	v_add_nc_u32_e32 v7, 0x4b0, v0
	v_lshrrev_b32_e32 v13, 6, v18
	v_lshrrev_b32_e32 v18, 6, v20
	v_lshrrev_b32_e32 v15, 31, v9
	v_lshrrev_b32_e32 v9, 3, v9
	v_add_nc_u32_e32 v10, 0x550, v0
	v_add_nc_u32_e32 v11, 0x5a0, v0
	v_add_nc_u32_e32 v12, 0x5f0, v0
	v_mul_lo_u32 v19, v21, 5
	v_add_nc_u32_e32 v9, v9, v15
	v_lshrrev_b32_e32 v15, 6, v3
	v_sub_nc_u32_e32 v3, v0, v16
	v_mul_lo_u32 v16, v1, s12
	v_mul_hi_i32 v22, v14, s7
	v_mul_lo_u32 v9, v9, 25
	v_mul_i32_i24_e32 v15, s15, v15
	v_add3_u32 v17, s5, s4, v3
	v_mul_i32_i24_e32 v20, s15, v13
	v_mul_hi_u32 v5, v5, s14
	v_mul_hi_u32 v6, v6, s14
	v_mul_hi_u32 v7, v7, s14
	v_mul_hi_u32 v10, v10, s14
	v_sub_nc_u32_e32 v9, v4, v9
	v_add_nc_u32_e32 v4, v17, v16
	v_mul_i32_i24_e32 v16, s15, v8
	v_mul_hi_u32 v11, v11, s14
	v_mul_hi_u32 v12, v12, s14
	v_mul_i32_i24_e32 v9, s12, v9
	v_mul_i32_i24_e32 v18, s15, v18
	v_sub_nc_u32_e32 v19, v0, v19
	v_lshrrev_b32_e32 v5, 6, v5
	v_lshrrev_b32_e32 v6, 6, v6
	v_add3_u32 v8, v17, v15, v9
	v_add3_u32 v9, v4, v16, 0x1068
	v_add_nc_u32_e32 v16, 0x690, v0
	v_add_nc_u32_e32 v15, 0x640, v0
	v_add_nc_u32_e32 v17, 0x6e0, v0
	v_lshrrev_b32_e32 v7, 6, v7
	v_lshrrev_b32_e32 v10, 6, v10
	v_mul_hi_u32 v16, v16, s14
	v_mul_hi_u32 v15, v15, s14
	v_mul_hi_u32 v17, v17, s14
	v_lshrrev_b32_e32 v11, 6, v11
	v_lshrrev_b32_e32 v12, 6, v12
	v_lshlrev_b32_e32 v19, 3, v19
	v_and_b32_e32 v23, 7, v0
	v_lshrrev_b32_e32 v24, 3, v0
	v_lshrrev_b32_e32 v16, 6, v16
	v_lshrrev_b32_e32 v15, 6, v15
	v_lshrrev_b32_e32 v17, 6, v17
	v_mul_lo_u32 v25, v1, s16
	v_mul_i32_i24_e32 v5, s15, v5
	v_mul_i32_i24_e32 v16, s15, v16
	v_mul_i32_i24_e32 v15, s15, v15
	v_mul_i32_i24_e32 v17, s15, v17
	v_mul_i32_i24_e32 v6, s15, v6
	v_mul_i32_i24_e32 v7, s15, v7
	v_add3_u32 v14, v4, v16, 0x27d8
	v_add3_u32 v16, v4, v20, 0x3138
	v_lshrrev_b32_e32 v20, 9, v22
	v_add3_u32 v13, v4, v15, 0x2328
	v_add3_u32 v15, v4, v17, 0x2c88
	v_add3_u32 v17, v4, v18, 0x35e8
	v_mul_lo_u32 v18, v21, s12
	v_mul_lo_u32 v21, v21, 40
	v_mul_i32_i24_e32 v22, s16, v20
	v_mul_i32_i24_e32 v10, s15, v10
	v_mul_i32_i24_e32 v11, s15, v11
	v_mul_i32_i24_e32 v12, s15, v12
	s_movk_i32 s13, 0x1400
	s_mul_i32 s4, s3, 0x9600
	v_lshl_add_u32 v2, v0, 1, s13
	v_add3_u32 v21, v21, v19, v22
	v_mul_u32_u24_e32 v22, 0xa0, v23
	v_mul_u32_u24_e32 v23, 0xc8, v24
	v_add3_u32 v18, v19, s4, v18
	v_add3_u32 v5, v4, v5, s12
	v_add3_u32 v6, v4, v6, 0x708
	v_add_lshl_u32 v22, v22, v25, 1
	v_add3_u32 v7, v4, v7, 0xbb8
	v_add3_u32 v10, v4, v10, 0x1518
	v_add3_u32 v11, v4, v11, 0x19c8
	v_add3_u32 v12, v4, v12, 0x1e78
	v_lshlrev_b32_e32 v19, 4, v0
	v_mul_i32_i24_e32 v20, 0x4b00, v20
	v_lshl_add_u32 v21, v21, 1, s16
	v_lshl_add_u32 v23, v23, 1, s13
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v24, 0xffff
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v33, 0
	s_mov_b32 s4, 0
	s_movk_i32 s5, 0x4800
BB22_1:
	s_mul_i32 s6, s4, 40
	v_add_nc_u32_e32 v35, s6, v4
	v_add_nc_u32_e32 v37, s6, v8
	v_add_nc_u32_e32 v39, s6, v5
	v_add_nc_u32_e32 v49, s6, v6
	v_add_nc_u32_e32 v53, s6, v7
	v_ashrrev_i32_e32 v36, 31, v35
	v_ashrrev_i32_e32 v38, 31, v37
	v_ashrrev_i32_e32 v40, 31, v39
	v_ashrrev_i32_e32 v50, 31, v49
	v_ashrrev_i32_e32 v54, 31, v53
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_lshlrev_b64 v[39:40], 1, v[39:40]
	v_add_nc_u32_e32 v57, s6, v10
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_add_nc_u32_e32 v61, s6, v12
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v35, vcc_lo, s8, v35
	v_add_nc_u32_e32 v63, s6, v13
	v_add_co_ci_u32_e32 v36, vcc_lo, s9, v36, vcc_lo
	v_ashrrev_i32_e32 v58, 31, v57
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_co_u32 v41, vcc_lo, 0x800, v35
	v_add_nc_u32_e32 v65, s6, v14
	v_add_co_ci_u32_e32 v42, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v43, vcc_lo, 0x1000, v35
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	v_add_co_ci_u32_e32 v44, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v45, vcc_lo, 0x1800, v35
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_co_ci_u32_e32 v46, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v47, vcc_lo, 0x2000, v35
	v_add_nc_u32_e32 v67, s6, v15
	v_add_co_ci_u32_e32 v48, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v51, vcc_lo, 0x2800, v35
	v_lshlrev_b64 v[61:62], 1, v[61:62]
	v_add_co_ci_u32_e32 v52, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v55, vcc_lo, s8, v37
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_co_ci_u32_e32 v56, vcc_lo, s9, v38, vcc_lo
	v_lshlrev_b64 v[37:38], 1, v[49:50]
	v_add_nc_u32_e32 v49, s6, v9
	v_add_co_u32 v39, vcc_lo, s8, v39
	v_add_nc_u32_e32 v69, s6, v16
	v_add_co_ci_u32_e32 v40, vcc_lo, s9, v40, vcc_lo
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_u32 v59, vcc_lo, s8, v37
	v_ashrrev_i32_e32 v68, 31, v67
	v_add_co_ci_u32_e32 v60, vcc_lo, s9, v38, vcc_lo
	v_add_co_u32 v53, vcc_lo, s8, v53
	v_lshlrev_b64 v[37:38], 1, v[49:50]
	v_add_nc_u32_e32 v49, s6, v11
	v_add_co_ci_u32_e32 v54, vcc_lo, s9, v54, vcc_lo
	v_add_nc_u32_e32 v71, s6, v17
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_ashrrev_i32_e32 v70, 31, v69
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_u32 v37, vcc_lo, s8, v37
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_ci_u32_e32 v38, vcc_lo, s9, v38, vcc_lo
	v_add_co_u32 v57, vcc_lo, s8, v57
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_add_co_ci_u32_e32 v58, vcc_lo, s9, v58, vcc_lo
	v_ashrrev_i32_e32 v72, 31, v71
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_add_nc_u32_e32 v83, s6, v18
	s_mov_b32 s6, 0
	v_add_co_u32 v49, vcc_lo, s8, v49
	v_lshlrev_b64 v[71:72], 1, v[71:72]
	v_add_co_ci_u32_e32 v50, vcc_lo, s9, v50, vcc_lo
	v_add_co_u32 v61, vcc_lo, s8, v61
	v_ashrrev_i32_e32 v84, 31, v83
	v_add_co_ci_u32_e32 v62, vcc_lo, s9, v62, vcc_lo
	v_add_co_u32 v63, vcc_lo, s8, v63
	v_add_co_ci_u32_e32 v64, vcc_lo, s9, v64, vcc_lo
	v_add_co_u32 v65, vcc_lo, s8, v65
	v_add_co_ci_u32_e32 v66, vcc_lo, s9, v66, vcc_lo
	v_add_co_u32 v67, vcc_lo, s8, v67
	v_add_co_ci_u32_e32 v68, vcc_lo, s9, v68, vcc_lo
	v_add_co_u32 v69, vcc_lo, s8, v69
	v_add_co_ci_u32_e32 v70, vcc_lo, s9, v70, vcc_lo
	v_add_co_u32 v71, vcc_lo, s8, v71
	v_add_co_ci_u32_e32 v72, vcc_lo, s9, v72, vcc_lo
	v_add_co_u32 v73, vcc_lo, 0x3800, v35
	v_add_co_ci_u32_e32 v74, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v75, vcc_lo, 0x4000, v35
	v_add_co_ci_u32_e32 v76, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v77, vcc_lo, s5, v35
	s_clause 0x7
	global_load_ushort v87, v[35:36], off
	global_load_ushort v88, v[41:42], off offset:352
	global_load_ushort v89, v[43:44], off offset:704
	global_load_ushort v90, v[45:46], off offset:1056
	global_load_ushort v91, v[47:48], off offset:1408
	global_load_ushort v51, v[51:52], off offset:1760
	global_load_ushort v52, v[73:74], off offset:64
	global_load_ushort v73, v[75:76], off offset:416
	v_add_co_ci_u32_e32 v78, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v79, vcc_lo, 0x5000, v35
	v_add3_u32 v41, v83, v20, 0x2580
	v_add_co_ci_u32_e32 v80, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v81, vcc_lo, 0x5800, v35
	s_clause 0x8
	global_load_ushort v74, v[37:38], off
	global_load_ushort v57, v[57:58], off
	global_load_ushort v58, v[49:50], off
	global_load_ushort v61, v[61:62], off
	global_load_ushort v62, v[63:64], off
	global_load_ushort v63, v[65:66], off
	global_load_ushort v64, v[67:68], off
	global_load_ushort v65, v[69:70], off
	global_load_ushort v66, v[71:72], off
	v_add_co_ci_u32_e32 v82, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v85, vcc_lo, 0x6000, v35
	v_ashrrev_i32_e32 v42, 31, v41
	v_add_co_ci_u32_e32 v86, vcc_lo, 0, v36, vcc_lo
	v_lshlrev_b64 v[35:36], 1, v[83:84]
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_add_co_u32 v43, vcc_lo, s10, v35
	v_add_co_ci_u32_e32 v44, vcc_lo, s11, v36, vcc_lo
	v_add_co_u32 v45, vcc_lo, s5, v43
	v_add_co_ci_u32_e32 v46, vcc_lo, 0, v44, vcc_lo
	v_add_co_u32 v47, vcc_lo, s10, v41
	global_load_dwordx4 v[35:38], v[43:44], off
	v_add_co_ci_u32_e32 v48, vcc_lo, s11, v42, vcc_lo
	v_add_co_u32 v43, vcc_lo, 0x9000, v43
	v_add_co_ci_u32_e32 v44, vcc_lo, 0, v44, vcc_lo
	s_clause 0x7
	global_load_ushort v67, v[77:78], off offset:768
	global_load_ushort v68, v[79:80], off offset:1120
	global_load_ushort v69, v[81:82], off offset:1472
	global_load_ushort v70, v[85:86], off offset:1824
	global_load_ushort v55, v[55:56], off
	global_load_ushort v56, v[39:40], off
	global_load_ushort v59, v[59:60], off
	global_load_ushort v53, v[53:54], off
	s_clause 0x2
	global_load_dwordx4 v[39:42], v[45:46], off offset:768
	global_load_dwordx4 v[43:46], v[43:44], off offset:1536
	global_load_dwordx4 v[47:50], v[47:48], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v2, v87
	ds_write_b16 v2, v74 offset:2560
	ds_write_b16 v2, v57 offset:2720
	ds_write_b16 v2, v58 offset:2880
	ds_write_b16 v2, v61 offset:3040
	ds_write_b16 v2, v62 offset:3200
	ds_write_b16 v2, v63 offset:3360
	ds_write_b16 v2, v64 offset:3520
	ds_write_b16 v2, v65 offset:3680
	ds_write_b16 v2, v66 offset:3840
	ds_write_b128 v19, v[35:38]
	ds_write_b16 v2, v88 offset:160
	ds_write_b16 v2, v89 offset:320
	ds_write_b16 v2, v90 offset:480
	ds_write_b16 v2, v91 offset:640
	ds_write_b16 v2, v51 offset:800
	ds_write_b16 v2, v52 offset:960
	ds_write_b16 v2, v73 offset:1120
	ds_write_b16 v2, v67 offset:1280
	ds_write_b16 v2, v68 offset:1440
	ds_write_b16 v2, v69 offset:1600
	ds_write_b16 v2, v70 offset:1760
	ds_write_b16 v2, v55 offset:1920
	ds_write_b16 v2, v56 offset:2080
	ds_write_b16 v2, v59 offset:2240
	ds_write_b16 v2, v53 offset:2400
	ds_write_b128 v19, v[39:42] offset:1280
	ds_write_b128 v19, v[43:46] offset:2560
	ds_write_b128 v21, v[47:50]
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB22_2:
	v_add_nc_u32_e32 v47, s6, v22
	v_add_nc_u32_e32 v67, s6, v23
	s_add_i32 s6, s6, 16
	s_cmpk_lg_i32 s6, 0x50
	ds_read_b128 v[35:38], v47 offset:80
	ds_read_b128 v[39:42], v47
	ds_read_b128 v[43:46], v47 offset:160
	ds_read_b128 v[47:50], v47 offset:240
	ds_read_b128 v[51:54], v67
	ds_read_b128 v[55:58], v67 offset:80
	ds_read_b128 v[59:62], v67 offset:160
	ds_read_b128 v[63:66], v67 offset:240
	ds_read_b128 v[67:70], v67 offset:320
	s_waitcnt lgkmcnt(8)
	v_lshrrev_b32_e32 v71, 16, v35
	s_waitcnt lgkmcnt(7)
	v_and_b32_e32 v75, v24, v39
	s_waitcnt lgkmcnt(6)
	v_and_b32_e32 v79, v24, v43
	v_and_b32_sdwa v39, v24, v39 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v83, 16, v47
	v_and_b32_sdwa v43, v24, v43 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v35, v35, 16, v75
	v_lshl_or_b32 v47, v47, 16, v79
	v_and_b32_e32 v76, v24, v40
	v_and_b32_e32 v80, v24, v44
	v_lshl_or_b32 v39, v71, 16, v39
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v34, v51, v35, v34 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v32, v55, v35, v32 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v30, v59, v35, v30 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v28, v63, v35, v28 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v25, v67, v35, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v43, v83, 16, v43
	v_pk_fma_f16 v33, v51, v47, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v55, v47, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v59, v47, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v63, v47, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v67, v47, v26 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v72, 16, v36
	v_and_b32_sdwa v40, v24, v40 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v84, 16, v48
	v_and_b32_sdwa v44, v24, v44 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v36, v36, 16, v76
	v_pk_fma_f16 v34, v51, v39, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v55, v39, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v59, v39, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v63, v39, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v67, v39, v25 op_sel:[1,0,0]
	v_lshl_or_b32 v48, v48, 16, v80
	v_pk_fma_f16 v33, v51, v43, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v55, v43, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v59, v43, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v63, v43, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v67, v43, v26 op_sel:[1,0,0]
	v_and_b32_e32 v77, v24, v41
	v_and_b32_e32 v81, v24, v45
	v_lshl_or_b32 v40, v72, 16, v40
	v_pk_fma_f16 v34, v52, v36, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v56, v36, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v60, v36, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v64, v36, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v68, v36, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v44, v84, 16, v44
	v_pk_fma_f16 v33, v52, v48, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v56, v48, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v60, v48, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v64, v48, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v68, v48, v26 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v73, 16, v37
	v_and_b32_sdwa v41, v24, v41 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v85, 16, v49
	v_and_b32_sdwa v45, v24, v45 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v37, v37, 16, v77
	v_pk_fma_f16 v34, v52, v40, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v56, v40, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v60, v40, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v64, v40, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v68, v40, v25 op_sel:[1,0,0]
	v_lshl_or_b32 v49, v49, 16, v81
	v_pk_fma_f16 v33, v52, v44, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v56, v44, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v60, v44, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v64, v44, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v68, v44, v26 op_sel:[1,0,0]
	v_and_b32_e32 v78, v24, v42
	v_and_b32_e32 v82, v24, v46
	v_lshl_or_b32 v41, v73, 16, v41
	v_pk_fma_f16 v34, v53, v37, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v57, v37, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v61, v37, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v65, v37, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v69, v37, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v45, v85, 16, v45
	v_pk_fma_f16 v33, v53, v49, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v57, v49, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v61, v49, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v65, v49, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v69, v49, v26 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v74, 16, v38
	v_and_b32_sdwa v42, v24, v42 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v86, 16, v50
	v_and_b32_sdwa v46, v24, v46 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v38, v38, 16, v78
	v_pk_fma_f16 v34, v53, v41, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v57, v41, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v61, v41, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v65, v41, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v69, v41, v25 op_sel:[1,0,0]
	v_lshl_or_b32 v50, v50, 16, v82
	v_pk_fma_f16 v33, v53, v45, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v57, v45, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v61, v45, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v65, v45, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v69, v45, v26 op_sel:[1,0,0]
	v_lshl_or_b32 v42, v74, 16, v42
	v_pk_fma_f16 v34, v54, v38, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v58, v38, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v62, v38, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v66, v38, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v70, v38, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v46, v86, 16, v46
	v_pk_fma_f16 v33, v54, v50, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v58, v50, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v62, v50, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v66, v50, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v70, v50, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v54, v42, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v54, v46, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v58, v42, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v58, v46, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v62, v42, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v62, v46, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v66, v42, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v66, v46, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v70, v42, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v70, v46, v26 op_sel:[1,0,0]
	s_cbranch_scc1 BB22_2
	s_add_i32 s4, s4, 1
	s_cmp_eq_u32 s4, 15
	s_cbranch_scc0 BB22_1
	v_mul_lo_u32 v1, 0xc80, v1
	v_ashrrev_i32_e32 v2, 3, v3
	s_mulk_i32 s2, 0x320
	s_mulk_i32 s3, 0x1900
	v_lshlrev_b32_e32 v0, 2, v0
	v_mul_lo_u32 v2, 0xa0, v2
	v_add3_u32 v1, s2, s3, v1
	v_and_or_b32 v0, v0, 28, v1
	v_add_nc_u32_e32 v0, v0, v2
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v34, off
	global_store_dword v[0:1], v33, off offset:4
	global_store_dword v[0:1], v32, off offset:64
	global_store_dword v[0:1], v31, off offset:68
	global_store_dword v[0:1], v30, off offset:128
	global_store_dword v[0:1], v29, off offset:132
	global_store_dword v[0:1], v28, off offset:192
	global_store_dword v[0:1], v27, off offset:196
	global_store_dword v[0:1], v25, off offset:256
	global_store_dword v[0:1], v26, off offset:260
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_batch_matmul_1_kernel0
		.amdhsa_group_segment_fixed_size 9120
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 92
		.amdhsa_next_free_sgpr 17
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end22:
	.size	tvmgen_default_fused_nn_batch_matmul_1_kernel0, .Lfunc_end22-tvmgen_default_fused_nn_batch_matmul_1_kernel0

	.globl	tvmgen_default_fused_nn_batch_matmul_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_batch_matmul_2_kernel0,@function
tvmgen_default_fused_nn_batch_matmul_2_kernel0:
	s_mov_b32 s0, 0x66666667
	s_mov_b32 s12, 0x51eb851f
	v_mul_hi_i32 v1, v0, s0
	s_mul_hi_i32 s3, s6, s0
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_lshr_b32 s4, s3, 31
	s_ashr_i32 s3, s3, 3
	s_movk_i32 s7, 0x64
	s_add_i32 s5, s3, s4
	v_add_nc_u32_e32 v3, 0x230, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 3, v1
	s_mul_i32 s4, s5, 0x4e20
	s_movk_i32 s13, 0x2710
	v_add_nc_u32_e32 v5, 0xf0, v0
	v_mul_hi_u32 v7, v3, s12
	v_add_nc_u32_e32 v4, v1, v2
	v_add_nc_u32_e32 v2, 0x1e0, v0
	s_movk_i32 s14, 0x320
	s_and_b32 s3, s6, 3
	s_movk_i32 s2, 0x280
	v_mul_i32_i24_e32 v1, 20, v4
	v_mul_hi_u32 v2, v2, s12
	v_mad_i32_i24 v19, v4, s7, 0x190
	v_lshrrev_b32_e32 v21, 7, v7
	v_mul_i32_i24_e32 v7, s7, v4
	v_sub_nc_u32_e32 v18, v0, v1
	s_mul_i32 s15, s3, s14
	v_add_nc_u32_e32 v6, s2, v0
	v_add_nc_u32_e32 v23, 0x2d0, v0
	v_lshrrev_b32_e32 v2, 7, v2
	v_add_nc_u32_e32 v1, s4, v18
	s_mul_i32 s4, s5, 20
	s_mulk_i32 s5, 0x1900
	s_sub_i32 s4, s6, s4
	s_add_i32 s15, s15, s5
	v_mad_i32_i24 v8, v4, s7, v1
	s_ashr_i32 s4, s4, 2
	v_mad_i32_i24 v1, v2, s13, v1
	s_mul_i32 s16, s4, 0x7d0
	v_add3_u32 v7, v7, v18, s15
	v_add_nc_u32_e32 v9, s16, v8
	s_movk_i32 s6, 0xc80
	v_add3_u32 v3, v1, s16, v19
	v_add_nc_u32_e32 v18, s15, v18
	v_mad_i32_i24 v21, v21, s13, v8
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v4, 31, v3
	v_mul_hi_u32 v20, v6, s12
	v_add3_u32 v22, v21, s16, s14
	v_lshlrev_b64 v[1:2], 1, v[9:10]
	v_mul_hi_u32 v10, 0xcccccccd, v5
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_mul_hi_u32 v21, v23, s12
	v_ashrrev_i32_e32 v23, 31, v22
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_lshrrev_b32_e32 v20, 7, v20
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	v_lshrrev_b32_e32 v10, 7, v10
	v_lshlrev_b64 v[28:29], 1, v[22:23]
	v_add_co_u32 v5, vcc_lo, 0x800, v1
	v_mul_i32_i24_e32 v20, s13, v20
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v2, vcc_lo
	v_mul_i32_i24_e32 v10, s6, v10
	v_add_co_u32 v3, vcc_lo, s8, v3
	s_clause 0x3
	global_load_ushort v12, v[1:2], off
	global_load_ushort v13, v[1:2], off offset:800
	global_load_ushort v14, v[1:2], off offset:1600
	global_load_ushort v11, v[5:6], off offset:352
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	v_add_co_u32 v16, vcc_lo, 0x4800, v1
	v_add3_u32 v18, v18, v10, v19
	v_add_co_ci_u32_e32 v17, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v7, vcc_lo, s10, v7
	v_lshrrev_b32_e32 v10, 7, v21
	v_add_co_ci_u32_e32 v8, vcc_lo, s11, v8, vcc_lo
	v_ashrrev_i32_e32 v19, 31, v18
	v_add3_u32 v26, v9, v20, 0x4b0
	v_add_co_u32 v24, vcc_lo, 0x1800, v7
	v_mul_i32_i24_e32 v10, s13, v10
	v_add_co_ci_u32_e32 v25, vcc_lo, 0, v8, vcc_lo
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_clause 0x1
	global_load_ushort v20, v[7:8], off
	global_load_ushort v21, v[7:8], off offset:800
	global_load_ushort v15, v[3:4], off
	v_add3_u32 v9, v9, v10, 0x640
	v_ashrrev_i32_e32 v27, 31, v26
	v_lshrrev_b32_e32 v35, 3, v0
	v_add_co_u32 v18, vcc_lo, s10, v18
	v_and_b32_e32 v36, 7, v0
	v_add_co_ci_u32_e32 v19, vcc_lo, s11, v19, vcc_lo
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_add_co_u32 v31, vcc_lo, s8, v28
	s_clause 0x1
	global_load_ushort v22, v[24:25], off offset:256
	global_load_ushort v23, v[18:19], off
	v_add_co_ci_u32_e32 v32, vcc_lo, s9, v29, vcc_lo
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	v_mul_u32_u24_e32 v37, 40, v35
	v_add_co_u32 v33, vcc_lo, s8, v26
	v_mul_u32_u24_e32 v38, 20, v36
	v_add_co_ci_u32_e32 v34, vcc_lo, s9, v27, vcc_lo
	v_lshlrev_b32_e32 v95, 1, v0
	v_add_co_u32 v9, vcc_lo, s8, v9
	v_lshlrev_b32_e32 v37, 1, v37
	v_add_co_ci_u32_e32 v10, vcc_lo, s9, v10, vcc_lo
	s_clause 0xe
	global_load_ushort v26, v[5:6], off offset:1152
	global_load_ushort v27, v[16:17], off offset:1568
	global_load_ushort v28, v[31:32], off
	global_load_ushort v29, v[33:34], off
	global_load_ushort v30, v[9:10], off
	global_load_ushort v67, v[1:2], off offset:40
	global_load_ushort v68, v[1:2], off offset:840
	global_load_ushort v69, v[1:2], off offset:1640
	global_load_ushort v70, v[5:6], off offset:392
	global_load_ushort v71, v[5:6], off offset:1192
	global_load_ushort v72, v[16:17], off offset:1608
	global_load_ushort v73, v[3:4], off offset:40
	global_load_ushort v74, v[31:32], off offset:40
	global_load_ushort v75, v[33:34], off offset:40
	global_load_ushort v76, v[9:10], off offset:40
	s_clause 0x3
	global_load_ushort v77, v[7:8], off offset:40
	global_load_ushort v78, v[7:8], off offset:840
	global_load_ushort v79, v[24:25], off offset:296
	global_load_ushort v80, v[18:19], off offset:40
	s_clause 0x9
	global_load_ushort v81, v[1:2], off offset:80
	global_load_ushort v82, v[1:2], off offset:880
	global_load_ushort v83, v[1:2], off offset:1680
	global_load_ushort v84, v[5:6], off offset:432
	global_load_ushort v85, v[5:6], off offset:1232
	global_load_ushort v86, v[16:17], off offset:1648
	global_load_ushort v87, v[3:4], off offset:80
	global_load_ushort v88, v[31:32], off offset:80
	global_load_ushort v89, v[33:34], off offset:80
	global_load_ushort v90, v[9:10], off offset:80
	s_clause 0x3
	global_load_ushort v91, v[7:8], off offset:80
	global_load_ushort v92, v[7:8], off offset:880
	global_load_ushort v93, v[24:25], off offset:336
	global_load_ushort v94, v[18:19], off offset:80
	v_lshlrev_b32_e32 v38, 1, v38
	s_clause 0x4
	global_load_ushort v96, v[7:8], off offset:120
	global_load_ushort v97, v[7:8], off offset:160
	global_load_ushort v98, v[24:25], off offset:376
	global_load_ushort v99, v[24:25], off offset:416
	global_load_ushort v100, v[7:8], off offset:960
	s_clause 0xe
	global_load_ushort v101, v[1:2], off offset:120
	global_load_ushort v102, v[1:2], off offset:1720
	global_load_ushort v103, v[1:2], off offset:160
	global_load_ushort v104, v[16:17], off offset:1688
	global_load_ushort v105, v[16:17], off offset:1728
	global_load_ushort v106, v[31:32], off offset:120
	global_load_ushort v107, v[31:32], off offset:160
	global_load_ushort v108, v[33:34], off offset:120
	global_load_ushort v109, v[33:34], off offset:160
	global_load_ushort v110, v[1:2], off offset:1760
	global_load_ushort v111, v[1:2], off offset:960
	global_load_ushort v112, v[5:6], off offset:1272
	global_load_ushort v113, v[5:6], off offset:512
	global_load_ushort v114, v[5:6], off offset:1312
	global_load_ushort v115, v[3:4], off offset:160
	global_load_ushort v118, v[7:8], off offset:920
	global_load_ushort v119, v[5:6], off offset:472
	s_mul_i32 s4, s4, s2
	s_waitcnt vmcnt(59)
	ds_write_b16 v95, v20
	s_waitcnt vmcnt(58)
	ds_write_b16 v95, v21 offset:160
	s_waitcnt vmcnt(56)
	ds_write_b16 v95, v22 offset:320
	s_waitcnt vmcnt(55)
	ds_write_b16 v95, v23 offset:480
	ds_write_b16 v95, v12 offset:640
	ds_write_b16 v95, v13 offset:800
	ds_write_b16 v95, v14 offset:960
	ds_write_b16 v95, v15 offset:1600
	ds_write_b16 v95, v11 offset:1120
	s_waitcnt vmcnt(54)
	ds_write_b16 v95, v26 offset:1280
	s_waitcnt vmcnt(53)
	ds_write_b16 v95, v27 offset:1440
	s_waitcnt vmcnt(52)
	ds_write_b16 v95, v28 offset:1760
	s_waitcnt vmcnt(51)
	ds_write_b16 v95, v29 offset:1920
	s_waitcnt vmcnt(50)
	ds_write_b16 v95, v30 offset:2080
	s_waitcnt vmcnt(0) lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[11:14], v37 offset:640
	ds_read2_b64 v[20:23], v38 offset1:1
	ds_read2_b64 v[24:27], v37 offset0:85 offset1:86
	s_clause 0x1
	global_load_ushort v116, v[18:19], off offset:120
	global_load_ushort v117, v[18:19], off offset:160
	ds_read_b128 v[15:18], v37 offset:656
	ds_read2_b64 v[28:31], v38 offset0:2 offset1:3
	ds_read2_b64 v[39:42], v37 offset0:87 offset1:88
	s_clause 0x3
	global_load_ushort v120, v[3:4], off offset:120
	global_load_ushort v121, v[1:2], off offset:920
	global_load_ushort v122, v[9:10], off offset:120
	global_load_ushort v123, v[9:10], off offset:160
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v19, 16, v11
	s_waitcnt lgkmcnt(4)
	v_lshrrev_b32_e32 v32, 16, v20
	v_fma_f16 v0, v11, v20, 0
	s_waitcnt lgkmcnt(3)
	v_lshrrev_b32_e32 v8, 16, v24
	v_fma_f16 v7, v24, v20, 0
	v_lshrrev_b32_e32 v5, 16, v12
	v_lshrrev_b32_e32 v6, 16, v21
	v_fmac_f16_e32 v0, v19, v32
	v_lshrrev_b32_e32 v1, 16, v25
	v_fmac_f16_e32 v7, v8, v32
	v_lshrrev_b32_e32 v24, 16, v22
	v_fmac_f16_e32 v0, v12, v21
	v_lshrrev_b32_e32 v12, 16, v13
	v_fmac_f16_e32 v7, v25, v21
	v_fmac_f16_e32 v0, v5, v6
	ds_read_b128 v[2:5], v37 offset:1440
	ds_read_b128 v[8:11], v37 offset:1456
	v_fmac_f16_e32 v7, v1, v6
	v_lshrrev_b32_e32 v1, 16, v26
	v_fmac_f16_e32 v0, v13, v22
	v_lshrrev_b32_e32 v13, 16, v23
	v_fmac_f16_e32 v7, v26, v22
	ds_read2_b64 v[19:22], v38 offset0:40 offset1:41
	ds_read2_b64 v[43:46], v38 offset0:42 offset1:43
	ds_read2_b64 v[47:50], v37 offset0:185 offset1:186
	ds_read2_b64 v[51:54], v37 offset0:187 offset1:188
	ds_read2_b64 v[55:58], v38 offset0:4 offset1:44
	ds_read2_b64 v[59:62], v37 offset0:84 offset1:89
	ds_read2_b64 v[63:66], v37 offset0:184 offset1:189
	v_fmac_f16_e32 v0, v12, v24
	v_lshrrev_b32_e32 v12, 16, v14
	v_fmac_f16_e32 v7, v1, v24
	s_waitcnt vmcnt(0) lgkmcnt(0)
	s_barrier 
	ds_write_b16 v95, v67 offset:640
	ds_write_b16 v95, v68 offset:800
	ds_write_b16 v95, v69 offset:960
	ds_write_b16 v95, v70 offset:1120
	ds_write_b16 v95, v71 offset:1280
	ds_write_b16 v95, v72 offset:1440
	ds_write_b16 v95, v73 offset:1600
	ds_write_b16 v95, v74 offset:1760
	ds_write_b16 v95, v75 offset:1920
	ds_write_b16 v95, v76 offset:2080
	ds_write_b16 v95, v77
	ds_write_b16 v95, v78 offset:160
	v_fmac_f16_e32 v0, v14, v23
	ds_write_b16 v95, v79 offset:320
	v_fmac_f16_e32 v7, v27, v23
	v_lshrrev_b32_e32 v27, 16, v27
	ds_write_b16 v95, v80 offset:480
	v_lshrrev_b32_e32 v6, 16, v2
	v_fmac_f16_e32 v0, v12, v13
	v_lshrrev_b32_e32 v12, 16, v15
	v_fmac_f16_e32 v7, v27, v13
	v_lshrrev_b32_e32 v13, 16, v28
	v_lshrrev_b32_e32 v23, 16, v47
	v_lshrrev_b32_e32 v33, 16, v50
	v_fma_f16 v1, v2, v19, 0
	v_lshrrev_b32_e32 v14, 16, v19
	v_fma_f16 v2, v47, v19, 0
	v_lshrrev_b32_e32 v32, 16, v22
	v_fmac_f16_e32 v0, v15, v28
	v_lshrrev_b32_e32 v15, 16, v39
	v_fmac_f16_e32 v1, v6, v14
	v_fmac_f16_e32 v2, v23, v14
	v_lshrrev_b32_e32 v6, 16, v3
	v_lshrrev_b32_e32 v14, 16, v20
	v_fmac_f16_e32 v7, v39, v28
	v_fmac_f16_e32 v1, v3, v20
	v_lshrrev_b32_e32 v3, 16, v48
	v_fmac_f16_e32 v2, v48, v20
	v_fmac_f16_e32 v0, v12, v13
	v_fmac_f16_e32 v7, v15, v13
	v_fmac_f16_e32 v1, v6, v14
	v_lshrrev_b32_e32 v6, 16, v21
	v_fmac_f16_e32 v2, v3, v14
	v_lshrrev_b32_e32 v3, 16, v4
	v_lshrrev_b32_e32 v14, 16, v5
	v_fmac_f16_e32 v1, v4, v21
	v_lshrrev_b32_e32 v4, 16, v49
	v_fmac_f16_e32 v2, v49, v21
	v_lshrrev_b32_e32 v27, 16, v8
	v_lshrrev_b32_e32 v12, 16, v43
	v_fmac_f16_e32 v1, v3, v6
	v_lshrrev_b32_e32 v13, 16, v29
	v_fmac_f16_e32 v2, v4, v6
	v_fmac_f16_e32 v0, v16, v29
	v_fmac_f16_e32 v7, v40, v29
	v_fmac_f16_e32 v1, v5, v22
	v_lshrrev_b32_e32 v15, 16, v17
	v_fmac_f16_e32 v2, v50, v22
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[3:6], v37 offset:640
	ds_read2_b64 v[23:26], v37 offset0:83 offset1:84
	v_fmac_f16_e32 v1, v14, v32
	v_lshrrev_b32_e32 v14, 16, v16
	v_fmac_f16_e32 v2, v33, v32
	v_lshrrev_b32_e32 v16, 16, v18
	ds_read2_b64 v[19:22], v38 offset1:1
	ds_read2_b64 v[47:50], v38 offset0:3 offset1:4
	v_fmac_f16_e32 v1, v8, v43
	v_lshrrev_b32_e32 v8, 16, v51
	v_fmac_f16_e32 v2, v51, v43
	v_fmac_f16_e32 v0, v14, v13
	v_lshrrev_b32_e32 v14, 16, v44
	v_fmac_f16_e32 v1, v27, v12
	v_lshrrev_b32_e32 v51, 16, v31
	v_fmac_f16_e32 v2, v8, v12
	v_lshrrev_b32_e32 v8, 16, v40
	v_lshrrev_b32_e32 v12, 16, v9
	v_fmac_f16_e32 v1, v9, v44
	v_fmac_f16_e32 v0, v17, v30
	v_fmac_f16_e32 v2, v52, v44
	v_fmac_f16_e32 v7, v8, v13
	v_lshrrev_b32_e32 v8, 16, v52
	v_fmac_f16_e32 v1, v12, v14
	v_lshrrev_b32_e32 v9, 16, v30
	v_lshrrev_b32_e32 v12, 16, v10
	v_fmac_f16_e32 v7, v41, v30
	v_fmac_f16_e32 v2, v8, v14
	v_lshrrev_b32_e32 v8, 16, v41
	v_fmac_f16_e32 v0, v15, v9
	v_lshrrev_b32_e32 v17, 16, v45
	v_fmac_f16_e32 v1, v10, v45
	v_fmac_f16_e32 v2, v53, v45
	v_fmac_f16_e32 v7, v8, v9
	v_lshrrev_b32_e32 v8, 16, v53
	v_fmac_f16_e32 v0, v18, v31
	v_fmac_f16_e32 v1, v12, v17
	v_lshrrev_b32_e32 v52, 16, v42
	v_fmac_f16_e32 v7, v42, v31
	v_fmac_f16_e32 v2, v8, v17
	v_fmac_f16_e32 v0, v16, v51
	v_lshrrev_b32_e32 v18, 16, v11
	v_fmac_f16_e32 v1, v11, v46
	v_lshrrev_b32_e32 v17, 16, v46
	v_fmac_f16_e32 v2, v54, v46
	v_lshrrev_b32_e32 v53, 16, v54
	v_fmac_f16_e32 v7, v52, v51
	v_lshrrev_b32_e32 v16, 16, v55
	v_fmac_f16_e32 v1, v18, v17
	v_lshrrev_b32_e32 v51, 16, v59
	v_fmac_f16_e32 v2, v53, v17
	v_fmac_f16_e32 v0, v59, v55
	v_lshrrev_b32_e32 v18, 16, v61
	v_fmac_f16_e32 v7, v61, v55
	ds_read2_b64 v[12:15], v37 offset0:85 offset1:86
	ds_read_b128 v[27:30], v37 offset:704
	v_lshrrev_b32_e32 v17, 16, v57
	v_fmac_f16_e32 v0, v51, v16
	v_lshrrev_b32_e32 v52, 16, v63
	v_fmac_f16_e32 v1, v63, v57
	v_lshrrev_b32_e32 v51, 16, v65
	v_fmac_f16_e32 v2, v65, v57
	v_fmac_f16_e32 v7, v18, v16
	v_lshrrev_b32_e32 v16, 16, v56
	v_fmac_f16_e32 v1, v52, v17
	v_lshrrev_b32_e32 v63, 16, v60
	v_fmac_f16_e32 v2, v51, v17
	v_fmac_f16_e32 v0, v60, v56
	v_lshrrev_b32_e32 v17, 16, v62
	v_fmac_f16_e32 v7, v62, v56
	ds_read2_b64 v[8:11], v38 offset0:40 offset1:41
	ds_read2_b64 v[31:34], v38 offset0:43 offset1:44
	ds_read_b128 v[39:42], v37 offset:1440
	ds_read_b128 v[43:46], v37 offset:1504
	v_lshrrev_b32_e32 v18, 16, v58
	v_fmac_f16_e32 v1, v64, v58
	v_fmac_f16_e32 v2, v66, v58
	ds_read2_b64 v[51:54], v37 offset0:185 offset1:186
	ds_read2_b64 v[55:58], v37 offset0:183 offset1:184
	ds_read2_b64 v[59:62], v37 offset0:82 offset1:87
	ds_read2_b64 v[67:70], v38 offset0:2 offset1:42
	ds_read2_b64 v[71:74], v37 offset0:182 offset1:187
	v_fmac_f16_e32 v7, v17, v16
	v_fmac_f16_e32 v0, v63, v16
	v_lshrrev_b32_e32 v78, 16, v64
	v_lshrrev_b32_e32 v79, 16, v66
	s_waitcnt lgkmcnt(12)
	v_lshrrev_b32_e32 v75, 16, v19
	s_waitcnt lgkmcnt(10)
	v_lshrrev_b32_e32 v16, 16, v12
	v_fmac_f16_e32 v7, v12, v19
	v_fmac_f16_e32 v0, v3, v19
	v_lshrrev_b32_e32 v3, 16, v3
	v_fmac_f16_e32 v2, v79, v18
	v_fmac_f16_e32 v1, v78, v18
	v_fmac_f16_e32 v7, v16, v75
	v_lshrrev_b32_e32 v76, 16, v20
	v_fmac_f16_e32 v0, v3, v75
	v_lshrrev_b32_e32 v3, 16, v4
	s_waitcnt lgkmcnt(8)
	v_lshrrev_b32_e32 v17, 16, v8
	s_waitcnt lgkmcnt(6)
	v_fmac_f16_e32 v1, v39, v8
	s_waitcnt lgkmcnt(4)
	v_fmac_f16_e32 v2, v51, v8
	v_fmac_f16_e32 v0, v4, v20
	v_fmac_f16_e32 v7, v13, v20
	v_lshrrev_b32_e32 v8, 16, v13
	v_lshrrev_b32_e32 v12, 16, v39
	v_lshrrev_b32_e32 v16, 16, v51
	v_fmac_f16_e32 v0, v3, v76
	v_lshrrev_b32_e32 v3, 16, v5
	v_fmac_f16_e32 v7, v8, v76
	v_fmac_f16_e32 v1, v12, v17
	v_fmac_f16_e32 v2, v16, v17
	v_lshrrev_b32_e32 v77, 16, v21
	v_fmac_f16_e32 v0, v5, v21
	v_fmac_f16_e32 v7, v14, v21
	v_lshrrev_b32_e32 v12, 16, v14
	v_lshrrev_b32_e32 v13, 16, v40
	v_lshrrev_b32_e32 v16, 16, v9
	v_fmac_f16_e32 v0, v3, v77
	v_fmac_f16_e32 v1, v40, v9
	v_fmac_f16_e32 v7, v12, v77
	v_fmac_f16_e32 v2, v52, v9
	v_lshrrev_b32_e32 v8, 16, v52
	v_lshrrev_b32_e32 v80, 16, v6
	v_fmac_f16_e32 v1, v13, v16
	v_fmac_f16_e32 v0, v6, v22
	v_lshrrev_b32_e32 v9, 16, v22
	v_fmac_f16_e32 v2, v8, v16
	v_fmac_f16_e32 v7, v15, v22
	v_lshrrev_b32_e32 v21, 16, v15
	v_lshrrev_b32_e32 v20, 16, v41
	v_fmac_f16_e32 v0, v80, v9
	v_lshrrev_b32_e32 v8, 16, v10
	v_fmac_f16_e32 v1, v41, v10
	v_fmac_f16_e32 v7, v21, v9
	v_lshrrev_b32_e32 v39, 16, v53
	v_fmac_f16_e32 v2, v53, v10
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v51, 16, v59
	v_fmac_f16_e32 v1, v20, v8
	s_waitcnt lgkmcnt(1)
	v_fmac_f16_e32 v0, v59, v67
	v_lshrrev_b32_e32 v52, 16, v67
	v_fmac_f16_e32 v2, v39, v8
	v_fmac_f16_e32 v7, v61, v67
	v_lshrrev_b32_e32 v21, 16, v61
	v_lshrrev_b32_e32 v22, 16, v42
	v_fmac_f16_e32 v0, v51, v52
	v_lshrrev_b32_e32 v20, 16, v11
	v_fmac_f16_e32 v1, v42, v11
	v_fmac_f16_e32 v7, v21, v52
	v_fmac_f16_e32 v2, v54, v11
	v_lshrrev_b32_e32 v59, 16, v54
	v_fmac_f16_e32 v0, v60, v68
	v_fmac_f16_e32 v1, v22, v20
	v_lshrrev_b32_e32 v22, 16, v60
	v_lshrrev_b32_e32 v61, 16, v68
	v_fmac_f16_e32 v2, v59, v20
	v_fmac_f16_e32 v7, v62, v68
	v_lshrrev_b32_e32 v59, 16, v62
	v_lshrrev_b32_e32 v21, 16, v69
	v_fmac_f16_e32 v0, v22, v61
	s_waitcnt lgkmcnt(0)
	v_lshrrev_b32_e32 v20, 16, v71
	v_fmac_f16_e32 v1, v71, v69
	v_fmac_f16_e32 v7, v59, v61
	v_fmac_f16_e32 v2, v73, v69
	v_lshrrev_b32_e32 v60, 16, v73
	v_lshrrev_b32_e32 v71, 16, v23
	v_fmac_f16_e32 v1, v20, v21
	v_lshrrev_b32_e32 v73, 16, v47
	v_fmac_f16_e32 v0, v23, v47
	v_fmac_f16_e32 v7, v27, v47
	v_lshrrev_b32_e32 v79, 16, v27
	v_fmac_f16_e32 v2, v60, v21
	v_lshrrev_b32_e32 v67, 16, v70
	v_fmac_f16_e32 v0, v71, v73
	v_lshrrev_b32_e32 v68, 16, v72
	v_fmac_f16_e32 v1, v72, v70
	v_fmac_f16_e32 v7, v79, v73
	v_fmac_f16_e32 v2, v74, v70
	v_lshrrev_b32_e32 v69, 16, v74
	v_lshrrev_b32_e32 v27, 16, v24
	v_fmac_f16_e32 v1, v68, v67
	v_fmac_f16_e32 v0, v24, v48
	v_lshrrev_b32_e32 v47, 16, v48
	v_lshrrev_b32_e32 v68, 16, v28
	v_fmac_f16_e32 v7, v28, v48
	v_fmac_f16_e32 v2, v69, v67
	v_lshrrev_b32_e32 v24, 16, v55
	v_fmac_f16_e32 v0, v27, v47
	v_fmac_f16_e32 v1, v55, v31
	v_fmac_f16_e32 v7, v68, v47
	v_lshrrev_b32_e32 v28, 16, v31
	v_lshrrev_b32_e32 v70, 16, v25
	v_lshrrev_b32_e32 v71, 16, v49
	v_fmac_f16_e32 v0, v25, v49
	v_lshrrev_b32_e32 v27, 16, v29
	v_fmac_f16_e32 v7, v29, v49
	v_fmac_f16_e32 v1, v24, v28
	v_lshrrev_b32_e32 v29, 16, v43
	v_fmac_f16_e32 v2, v43, v31
	s_barrier 
	ds_write_b16 v95, v81 offset:640
	ds_write_b16 v95, v82 offset:800
	ds_write_b16 v95, v83 offset:960
	ds_write_b16 v95, v84 offset:1120
	ds_write_b16 v95, v85 offset:1280
	ds_write_b16 v95, v86 offset:1440
	ds_write_b16 v95, v87 offset:1600
	ds_write_b16 v95, v88 offset:1760
	ds_write_b16 v95, v89 offset:1920
	ds_write_b16 v95, v90 offset:2080
	ds_write_b16 v95, v91
	ds_write_b16 v95, v92 offset:160
	ds_write_b16 v95, v93 offset:320
	ds_write_b16 v95, v94 offset:480
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[3:6], v37 offset:640
	ds_read_b128 v[63:66], v37 offset:656
	ds_read2_b64 v[12:15], v38 offset1:1
	ds_read2_b64 v[16:19], v38 offset0:2 offset1:3
	v_fmac_f16_e32 v0, v70, v71
	v_fmac_f16_e32 v2, v29, v28
	v_lshrrev_b32_e32 v55, 16, v56
	v_fmac_f16_e32 v1, v56, v32
	v_lshrrev_b32_e32 v68, 16, v32
	ds_read2_b64 v[8:11], v37 offset0:85 offset1:86
	ds_read2_b64 v[39:42], v37 offset0:87 offset1:88
	v_fmac_f16_e32 v7, v27, v71
	v_fmac_f16_e32 v2, v44, v32
	v_lshrrev_b32_e32 v67, 16, v26
	v_fmac_f16_e32 v1, v55, v68
	v_lshrrev_b32_e32 v55, 16, v44
	v_lshrrev_b32_e32 v72, 16, v50
	v_fmac_f16_e32 v0, v26, v50
	v_fmac_f16_e32 v7, v30, v50
	v_lshrrev_b32_e32 v43, 16, v30
	v_fmac_f16_e32 v2, v55, v68
	v_lshrrev_b32_e32 v56, 16, v57
	v_fmac_f16_e32 v0, v67, v72
	v_lshrrev_b32_e32 v32, 16, v33
	v_fmac_f16_e32 v7, v43, v72
	v_fmac_f16_e32 v1, v57, v33
	v_fmac_f16_e32 v2, v45, v33
	v_lshrrev_b32_e32 v44, 16, v45
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v67, 16, v3
	s_waitcnt lgkmcnt(3)
	v_fmac_f16_e32 v0, v3, v12
	v_lshrrev_b32_e32 v71, 16, v12
	ds_read_b128 v[51:54], v37 offset:1440
	ds_read_b128 v[75:78], v37 offset:1456
	ds_read2_b64 v[20:23], v38 offset0:40 offset1:41
	ds_read2_b64 v[59:62], v38 offset0:42 offset1:43
	ds_read2_b64 v[24:27], v37 offset0:185 offset1:186
	ds_read2_b64 v[47:50], v37 offset0:187 offset1:188
	v_fmac_f16_e32 v2, v44, v32
	v_fmac_f16_e32 v1, v56, v32
	v_fmac_f16_e32 v0, v67, v71
	s_waitcnt lgkmcnt(7)
	v_fmac_f16_e32 v7, v8, v12
	v_lshrrev_b32_e32 v43, 16, v8
	v_lshrrev_b32_e32 v3, 16, v58
	v_fmac_f16_e32 v1, v58, v34
	v_lshrrev_b32_e32 v32, 16, v34
	v_fmac_f16_e32 v2, v46, v34
	v_fmac_f16_e32 v7, v43, v71
	v_lshrrev_b32_e32 v33, 16, v4
	v_fmac_f16_e32 v0, v4, v13
	v_lshrrev_b32_e32 v4, 16, v46
	v_lshrrev_b32_e32 v44, 16, v13
	v_fmac_f16_e32 v1, v3, v32
	v_fmac_f16_e32 v7, v9, v13
	v_lshrrev_b32_e32 v8, 16, v9
	v_fmac_f16_e32 v2, v4, v32
	v_fmac_f16_e32 v0, v33, v44
	v_lshrrev_b32_e32 v33, 16, v5
	v_lshrrev_b32_e32 v34, 16, v14
	v_fmac_f16_e32 v7, v8, v44
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v43, 16, v51
	v_fmac_f16_e32 v0, v5, v14
	s_waitcnt lgkmcnt(3)
	v_fmac_f16_e32 v1, v51, v20
	v_lshrrev_b32_e32 v45, 16, v20
	s_waitcnt lgkmcnt(1)
	v_fmac_f16_e32 v2, v24, v20
	v_lshrrev_b32_e32 v44, 16, v24
	v_fmac_f16_e32 v0, v33, v34
	v_lshrrev_b32_e32 v5, 16, v6
	v_fmac_f16_e32 v1, v43, v45
	v_lshrrev_b32_e32 v9, 16, v21
	v_fmac_f16_e32 v2, v44, v45
	v_fmac_f16_e32 v0, v6, v15
	v_lshrrev_b32_e32 v6, 16, v52
	v_fmac_f16_e32 v1, v52, v21
	v_lshrrev_b32_e32 v3, 16, v25
	v_fmac_f16_e32 v2, v25, v21
	v_fmac_f16_e32 v7, v10, v14
	v_lshrrev_b32_e32 v12, 16, v10
	v_fmac_f16_e32 v1, v6, v9
	v_lshrrev_b32_e32 v13, 16, v53
	v_fmac_f16_e32 v2, v3, v9
	v_lshrrev_b32_e32 v46, 16, v22
	v_fmac_f16_e32 v7, v12, v34
	v_fmac_f16_e32 v1, v53, v22
	v_lshrrev_b32_e32 v4, 16, v26
	v_fmac_f16_e32 v2, v26, v22
	v_lshrrev_b32_e32 v33, 16, v15
	v_fmac_f16_e32 v7, v11, v15
	v_fmac_f16_e32 v1, v13, v46
	v_lshrrev_b32_e32 v12, 16, v11
	v_fmac_f16_e32 v2, v4, v46
	v_fmac_f16_e32 v0, v5, v33
	v_lshrrev_b32_e32 v8, 16, v54
	v_lshrrev_b32_e32 v10, 16, v23
	v_fmac_f16_e32 v1, v54, v23
	v_fmac_f16_e32 v7, v12, v33
	v_fmac_f16_e32 v2, v27, v23
	v_lshrrev_b32_e32 v14, 16, v27
	v_lshrrev_b32_e32 v20, 16, v63
	v_fmac_f16_e32 v1, v8, v10
	v_lshrrev_b32_e32 v24, 16, v16
	v_fmac_f16_e32 v0, v63, v16
	v_fmac_f16_e32 v2, v14, v10
	v_lshrrev_b32_e32 v25, 16, v39
	v_fmac_f16_e32 v7, v39, v16
	v_lshrrev_b32_e32 v6, 16, v75
	v_fmac_f16_e32 v0, v20, v24
	v_lshrrev_b32_e32 v3, 16, v59
	v_fmac_f16_e32 v1, v75, v59
	v_fmac_f16_e32 v7, v25, v24
	s_waitcnt lgkmcnt(0)
	v_lshrrev_b32_e32 v9, 16, v47
	v_fmac_f16_e32 v2, v47, v59
	v_lshrrev_b32_e32 v32, 16, v64
	v_fmac_f16_e32 v1, v6, v3
	v_lshrrev_b32_e32 v11, 16, v17
	v_fmac_f16_e32 v0, v64, v17
	v_fmac_f16_e32 v2, v9, v3
	v_lshrrev_b32_e32 v43, 16, v40
	v_fmac_f16_e32 v7, v40, v17
	v_lshrrev_b32_e32 v22, 16, v76
	v_fmac_f16_e32 v0, v32, v11
	v_lshrrev_b32_e32 v26, 16, v60
	v_fmac_f16_e32 v1, v76, v60
	v_fmac_f16_e32 v7, v43, v11
	v_lshrrev_b32_e32 v13, 16, v48
	v_fmac_f16_e32 v2, v48, v60
	ds_read2_b64 v[28:31], v38 offset0:4 offset1:44
	v_fmac_f16_e32 v1, v22, v26
	ds_read2_b64 v[55:58], v37 offset0:84 offset1:89
	v_lshrrev_b32_e32 v15, 16, v65
	v_fmac_f16_e32 v2, v13, v26
	v_lshrrev_b32_e32 v34, 16, v18
	v_fmac_f16_e32 v0, v65, v18
	v_fmac_f16_e32 v7, v41, v18
	v_lshrrev_b32_e32 v4, 16, v41
	ds_read2_b64 v[67:70], v37 offset0:184 offset1:189
	v_lshrrev_b32_e32 v44, 16, v77
	v_fmac_f16_e32 v0, v15, v34
	v_lshrrev_b32_e32 v45, 16, v61
	v_fmac_f16_e32 v1, v77, v61
	v_fmac_f16_e32 v7, v4, v34
	v_lshrrev_b32_e32 v46, 16, v49
	v_fmac_f16_e32 v2, v49, v61
	v_lshrrev_b32_e32 v21, 16, v66
	v_fmac_f16_e32 v1, v44, v45
	v_lshrrev_b32_e32 v52, 16, v19
	v_fmac_f16_e32 v0, v66, v19
	v_fmac_f16_e32 v2, v46, v45
	v_fmac_f16_e32 v7, v42, v19
	v_lshrrev_b32_e32 v23, 16, v42
	v_lshrrev_b32_e32 v51, 16, v78
	v_fmac_f16_e32 v0, v21, v52
	v_lshrrev_b32_e32 v27, 16, v62
	v_fmac_f16_e32 v1, v78, v62
	v_fmac_f16_e32 v7, v23, v52
	v_lshrrev_b32_e32 v53, 16, v50
	v_fmac_f16_e32 v2, v50, v62
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_fmac_f16_e32 v1, v51, v27
	ds_write_b16 v95, v101 offset:640
	ds_write_b16 v95, v121 offset:800
	ds_write_b16 v95, v102 offset:960
	ds_write_b16 v95, v119 offset:1120
	ds_write_b16 v95, v112 offset:1280
	ds_write_b16 v95, v104 offset:1440
	ds_write_b16 v95, v120 offset:1600
	ds_write_b16 v95, v106 offset:1760
	ds_write_b16 v95, v108 offset:1920
	ds_write_b16 v95, v122 offset:2080
	ds_write_b16 v95, v96
	ds_write_b16 v95, v118 offset:160
	ds_write_b16 v95, v98 offset:320
	ds_write_b16 v95, v116 offset:480
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_fmac_f16_e32 v2, v53, v27
	v_lshrrev_b32_e32 v12, 16, v28
	v_lshrrev_b32_e32 v20, 16, v55
	v_fmac_f16_e32 v0, v55, v28
	v_lshrrev_b32_e32 v13, 16, v57
	v_fmac_f16_e32 v7, v57, v28
	ds_read2_b64 v[3:6], v37 offset0:80 offset1:85
	ds_read2_b64 v[8:11], v38 offset1:40
	v_fmac_f16_e32 v0, v20, v12
	v_lshrrev_b32_e32 v14, 16, v30
	v_fmac_f16_e32 v7, v13, v12
	v_lshrrev_b32_e32 v15, 16, v67
	v_fmac_f16_e32 v1, v67, v30
	v_fmac_f16_e32 v2, v69, v30
	v_lshrrev_b32_e32 v22, 16, v69
	v_lshrrev_b32_e32 v16, 16, v29
	v_lshrrev_b32_e32 v18, 16, v56
	v_fmac_f16_e32 v1, v15, v14
	v_fmac_f16_e32 v0, v56, v29
	v_fmac_f16_e32 v2, v22, v14
	ds_read2_b64 v[12:15], v37 offset0:180 offset1:185
	v_fmac_f16_e32 v7, v58, v29
	v_lshrrev_b32_e32 v19, 16, v58
	v_fmac_f16_e32 v0, v18, v16
	v_lshrrev_b32_e32 v17, 16, v31
	v_lshrrev_b32_e32 v21, 16, v68
	v_fmac_f16_e32 v1, v68, v31
	v_fmac_f16_e32 v7, v19, v16
	v_fmac_f16_e32 v2, v70, v31
	v_lshrrev_b32_e32 v20, 16, v70
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v28, 16, v3
	s_waitcnt lgkmcnt(1)
	v_fmac_f16_e32 v0, v3, v8
	v_lshrrev_b32_e32 v30, 16, v8
	v_fmac_f16_e32 v7, v5, v8
	v_lshrrev_b32_e32 v3, 16, v5
	v_fmac_f16_e32 v1, v21, v17
	v_fmac_f16_e32 v2, v20, v17
	v_fmac_f16_e32 v0, v28, v30
	ds_read_b128 v[16:19], v37 offset:688
	v_fmac_f16_e32 v7, v3, v30
	v_lshrrev_b32_e32 v29, 16, v4
	v_lshrrev_b32_e32 v31, 16, v9
	v_fmac_f16_e32 v0, v4, v9
	ds_read2_b64 v[20:23], v37 offset0:81 offset1:82
	ds_read2_b64 v[24:27], v38 offset0:1 offset1:2
	v_fmac_f16_e32 v7, v6, v9
	v_lshrrev_b32_e32 v8, 16, v6
	v_lshrrev_b32_e32 v5, 16, v10
	s_waitcnt lgkmcnt(3)
	v_lshrrev_b32_e32 v32, 16, v12
	v_fmac_f16_e32 v1, v12, v10
	v_fmac_f16_e32 v2, v14, v10
	v_lshrrev_b32_e32 v3, 16, v14
	v_fmac_f16_e32 v7, v8, v31
	v_fmac_f16_e32 v0, v29, v31
	v_fmac_f16_e32 v1, v32, v5
	ds_read2_b64 v[28:31], v38 offset0:3 offset1:4
	v_fmac_f16_e32 v2, v3, v5
	ds_read2_b64 v[3:6], v37 offset0:83 offset1:84
	ds_read_b128 v[39:42], v37 offset:704
	ds_read2_b64 v[43:46], v37 offset0:181 offset1:182
	ds_read2_b64 v[47:50], v38 offset0:41 offset1:42
	ds_read_b128 v[51:54], v37 offset:1488
	v_lshrrev_b32_e32 v12, 16, v11
	v_lshrrev_b32_e32 v14, 16, v13
	v_fmac_f16_e32 v1, v13, v11
	s_waitcnt lgkmcnt(7)
	v_lshrrev_b32_e32 v8, 16, v20
	s_waitcnt lgkmcnt(6)
	v_fmac_f16_e32 v0, v20, v24
	v_lshrrev_b32_e32 v9, 16, v24
	v_fmac_f16_e32 v7, v16, v24
	v_lshrrev_b32_e32 v10, 16, v16
	v_fmac_f16_e32 v1, v14, v12
	v_lshrrev_b32_e32 v16, 16, v15
	v_fmac_f16_e32 v2, v15, v11
	v_fmac_f16_e32 v0, v8, v9
	v_fmac_f16_e32 v7, v10, v9
	v_lshrrev_b32_e32 v8, 16, v21
	v_lshrrev_b32_e32 v20, 16, v25
	v_fmac_f16_e32 v2, v16, v12
	v_fmac_f16_e32 v0, v21, v25
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v24, 16, v43
	s_waitcnt lgkmcnt(1)
	v_fmac_f16_e32 v1, v43, v47
	v_lshrrev_b32_e32 v16, 16, v47
	v_fmac_f16_e32 v7, v17, v25
	v_lshrrev_b32_e32 v21, 16, v17
	s_waitcnt lgkmcnt(0)
	v_fmac_f16_e32 v2, v51, v47
	v_lshrrev_b32_e32 v25, 16, v51
	v_fmac_f16_e32 v1, v24, v16
	v_fmac_f16_e32 v0, v8, v20
	v_fmac_f16_e32 v7, v21, v20
	v_lshrrev_b32_e32 v20, 16, v44
	v_fmac_f16_e32 v2, v25, v16
	v_lshrrev_b32_e32 v21, 16, v48
	v_fmac_f16_e32 v1, v44, v48
	v_lshrrev_b32_e32 v17, 16, v22
	v_fmac_f16_e32 v0, v22, v26
	v_lshrrev_b32_e32 v32, 16, v26
	v_lshrrev_b32_e32 v16, 16, v18
	v_fmac_f16_e32 v7, v18, v26
	v_fmac_f16_e32 v1, v20, v21
	v_fmac_f16_e32 v2, v52, v48
	v_lshrrev_b32_e32 v22, 16, v52
	v_fmac_f16_e32 v0, v17, v32
	v_fmac_f16_e32 v7, v16, v32
	ds_read2_b64 v[8:11], v37 offset0:183 offset1:184
	ds_read2_b64 v[12:15], v38 offset0:43 offset1:44
	v_fmac_f16_e32 v2, v22, v21
	v_lshrrev_b32_e32 v16, 16, v45
	v_lshrrev_b32_e32 v18, 16, v49
	v_fmac_f16_e32 v1, v45, v49
	ds_read_b128 v[55:58], v37 offset:1504
	v_lshrrev_b32_e32 v17, 16, v23
	v_fmac_f16_e32 v2, v53, v49
	v_lshrrev_b32_e32 v20, 16, v53
	v_fmac_f16_e32 v1, v16, v18
	v_lshrrev_b32_e32 v21, 16, v27
	v_fmac_f16_e32 v0, v23, v27
	v_fmac_f16_e32 v7, v19, v27
	v_fmac_f16_e32 v2, v20, v18
	v_lshrrev_b32_e32 v16, 16, v19
	v_lshrrev_b32_e32 v18, 16, v46
	v_fmac_f16_e32 v0, v17, v21
	v_fmac_f16_e32 v1, v46, v50
	v_lshrrev_b32_e32 v19, 16, v50
	v_fmac_f16_e32 v7, v16, v21
	v_fmac_f16_e32 v2, v54, v50
	v_lshrrev_b32_e32 v20, 16, v54
	v_lshrrev_b32_e32 v16, 16, v3
	v_fmac_f16_e32 v1, v18, v19
	v_fmac_f16_e32 v0, v3, v28
	v_lshrrev_b32_e32 v18, 16, v28
	v_fmac_f16_e32 v2, v20, v19
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v3, 16, v8
	s_waitcnt lgkmcnt(1)
	v_fmac_f16_e32 v1, v8, v12
	v_fmac_f16_e32 v7, v39, v28
	v_fmac_f16_e32 v0, v16, v18
	v_lshrrev_b32_e32 v16, 16, v12
	v_lshrrev_b32_e32 v21, 16, v39
	s_waitcnt lgkmcnt(0)
	v_fmac_f16_e32 v2, v55, v12
	v_lshrrev_b32_e32 v8, 16, v55
	v_lshrrev_b32_e32 v17, 16, v4
	v_fmac_f16_e32 v1, v3, v16
	v_fmac_f16_e32 v7, v21, v18
	v_fmac_f16_e32 v0, v4, v29
	v_fmac_f16_e32 v2, v8, v16
	v_lshrrev_b32_e32 v19, 16, v29
	v_lshrrev_b32_e32 v20, 16, v9
	v_fmac_f16_e32 v1, v9, v13
	v_lshrrev_b32_e32 v12, 16, v13
	v_fmac_f16_e32 v2, v56, v13
	v_fmac_f16_e32 v0, v17, v19
	v_lshrrev_b32_e32 v8, 16, v56
	v_lshrrev_b32_e32 v4, 16, v40
	v_fmac_f16_e32 v7, v40, v29
	v_fmac_f16_e32 v1, v20, v12
	v_lshrrev_b32_e32 v24, 16, v5
	v_fmac_f16_e32 v2, v8, v12
	v_lshrrev_b32_e32 v33, 16, v30
	v_fmac_f16_e32 v7, v4, v19
	v_fmac_f16_e32 v0, v5, v30
	v_lshrrev_b32_e32 v25, 16, v10
	v_lshrrev_b32_e32 v3, 16, v14
	v_fmac_f16_e32 v1, v10, v14
	s_barrier 
	v_fmac_f16_e32 v0, v24, v33
	ds_write_b16 v95, v103 offset:640
	ds_write_b16 v95, v111 offset:800
	ds_write_b16 v95, v110 offset:960
	ds_write_b16 v95, v113 offset:1120
	ds_write_b16 v95, v114 offset:1280
	ds_write_b16 v95, v105 offset:1440
	ds_write_b16 v95, v115 offset:1600
	ds_write_b16 v95, v107 offset:1760
	ds_write_b16 v95, v109 offset:1920
	ds_write_b16 v95, v123 offset:2080
	ds_write_b16 v95, v97
	ds_write_b16 v95, v100 offset:160
	ds_write_b16 v95, v99 offset:320
	ds_write_b16 v95, v117 offset:480
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_fmac_f16_e32 v1, v25, v3
	v_lshrrev_b32_e32 v4, 16, v41
	v_fmac_f16_e32 v7, v41, v30
	v_lshrrev_b32_e32 v9, 16, v57
	v_fmac_f16_e32 v2, v57, v14
	ds_read_b128 v[16:19], v37 offset:640
	ds_read2_b64 v[20:23], v38 offset1:1
	ds_read2_b64 v[43:46], v37 offset0:85 offset1:86
	v_fmac_f16_e32 v7, v4, v33
	v_fmac_f16_e32 v2, v9, v3
	v_lshrrev_b32_e32 v32, 16, v6
	v_fmac_f16_e32 v0, v6, v31
	v_lshrrev_b32_e32 v28, 16, v11
	v_fmac_f16_e32 v1, v11, v15
	ds_read_b128 v[24:27], v37 offset:1440
	ds_read2_b64 v[3:6], v38 offset0:40 offset1:41
	ds_read2_b64 v[8:11], v37 offset0:185 offset1:186
	v_lshrrev_b32_e32 v34, 16, v31
	v_lshrrev_b32_e32 v13, 16, v42
	v_fmac_f16_e32 v7, v42, v31
	v_lshrrev_b32_e32 v39, 16, v15
	v_lshrrev_b32_e32 v12, 16, v58
	v_fmac_f16_e32 v2, v58, v15
	v_fmac_f16_e32 v0, v32, v34
	v_fmac_f16_e32 v7, v13, v34
	v_fmac_f16_e32 v1, v28, v39
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v32, 16, v16
	v_fmac_f16_e32 v2, v12, v39
	s_waitcnt lgkmcnt(4)
	v_fmac_f16_e32 v0, v16, v20
	v_lshrrev_b32_e32 v33, 16, v20
	s_waitcnt lgkmcnt(3)
	v_fmac_f16_e32 v7, v43, v20
	v_lshrrev_b32_e32 v34, 16, v43
	ds_read_b128 v[12:15], v37 offset:656
	ds_read2_b64 v[28:31], v38 offset0:2 offset1:3
	v_fmac_f16_e32 v0, v32, v33
	s_waitcnt lgkmcnt(4)
	v_lshrrev_b32_e32 v16, 16, v24
	v_fmac_f16_e32 v7, v34, v33
	s_waitcnt lgkmcnt(3)
	v_fmac_f16_e32 v1, v24, v3
	v_lshrrev_b32_e32 v20, 16, v3
	s_waitcnt lgkmcnt(2)
	v_fmac_f16_e32 v2, v8, v3
	v_lshrrev_b32_e32 v24, 16, v8
	v_lshrrev_b32_e32 v3, 16, v17
	v_fmac_f16_e32 v0, v17, v21
	v_fmac_f16_e32 v1, v16, v20
	v_lshrrev_b32_e32 v8, 16, v21
	v_fmac_f16_e32 v2, v24, v20
	v_lshrrev_b32_e32 v16, 16, v44
	v_fmac_f16_e32 v7, v44, v21
	v_lshrrev_b32_e32 v17, 16, v25
	v_fmac_f16_e32 v0, v3, v8
	v_lshrrev_b32_e32 v3, 16, v4
	v_fmac_f16_e32 v1, v25, v4
	v_fmac_f16_e32 v7, v16, v8
	v_fmac_f16_e32 v2, v9, v4
	v_lshrrev_b32_e32 v8, 16, v9
	v_lshrrev_b32_e32 v4, 16, v18
	v_fmac_f16_e32 v1, v17, v3
	v_fmac_f16_e32 v0, v18, v22
	v_lshrrev_b32_e32 v9, 16, v22
	v_fmac_f16_e32 v2, v8, v3
	ds_read_b128 v[39:42], v37 offset:1456
	ds_read2_b64 v[51:54], v38 offset0:42 offset1:43
	v_fmac_f16_e32 v7, v45, v22
	v_fmac_f16_e32 v0, v4, v9
	v_lshrrev_b32_e32 v3, 16, v45
	ds_read2_b64 v[55:58], v37 offset0:187 offset1:188
	v_lshrrev_b32_e32 v8, 16, v26
	v_fmac_f16_e32 v1, v26, v5
	v_lshrrev_b32_e32 v4, 16, v5
	v_fmac_f16_e32 v2, v10, v5
	v_lshrrev_b32_e32 v16, 16, v10
	v_fmac_f16_e32 v7, v3, v9
	ds_read2_b64 v[47:50], v37 offset0:87 offset1:88
	v_fmac_f16_e32 v1, v8, v4
	v_lshrrev_b32_e32 v3, 16, v19
	v_fmac_f16_e32 v2, v16, v4
	v_fmac_f16_e32 v0, v19, v23
	v_lshrrev_b32_e32 v5, 16, v23
	v_fmac_f16_e32 v7, v46, v23
	v_lshrrev_b32_e32 v9, 16, v46
	v_lshrrev_b32_e32 v4, 16, v27
	v_fmac_f16_e32 v1, v27, v6
	v_fmac_f16_e32 v0, v3, v5
	v_lshrrev_b32_e32 v8, 16, v6
	v_fmac_f16_e32 v2, v11, v6
	v_lshrrev_b32_e32 v10, 16, v11
	v_fmac_f16_e32 v7, v9, v5
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v3, 16, v12
	v_fmac_f16_e32 v1, v4, v8
	s_waitcnt lgkmcnt(4)
	v_fmac_f16_e32 v0, v12, v28
	v_fmac_f16_e32 v2, v10, v8
	v_lshrrev_b32_e32 v5, 16, v28
	s_waitcnt lgkmcnt(3)
	v_lshrrev_b32_e32 v8, 16, v39
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v10, 16, v51
	v_fmac_f16_e32 v1, v39, v51
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v26, 16, v55
	v_fmac_f16_e32 v0, v3, v5
	v_fmac_f16_e32 v2, v55, v51
	v_lshrrev_b32_e32 v4, 16, v13
	v_fmac_f16_e32 v1, v8, v10
	v_lshrrev_b32_e32 v6, 16, v29
	v_fmac_f16_e32 v0, v13, v29
	v_fmac_f16_e32 v2, v26, v10
	s_waitcnt lgkmcnt(0)
	v_lshrrev_b32_e32 v23, 16, v47
	v_fmac_f16_e32 v7, v47, v28
	v_lshrrev_b32_e32 v9, 16, v40
	v_fmac_f16_e32 v0, v4, v6
	v_lshrrev_b32_e32 v11, 16, v52
	v_fmac_f16_e32 v1, v40, v52
	v_fmac_f16_e32 v7, v23, v5
	v_lshrrev_b32_e32 v3, 16, v56
	v_fmac_f16_e32 v2, v56, v52
	v_lshrrev_b32_e32 v16, 16, v14
	v_fmac_f16_e32 v1, v9, v11
	v_lshrrev_b32_e32 v18, 16, v30
	v_fmac_f16_e32 v0, v14, v30
	v_fmac_f16_e32 v2, v3, v11
	v_lshrrev_b32_e32 v24, 16, v48
	v_fmac_f16_e32 v7, v48, v29
	v_lshrrev_b32_e32 v12, 16, v41
	v_fmac_f16_e32 v0, v16, v18
	v_lshrrev_b32_e32 v21, 16, v53
	v_fmac_f16_e32 v1, v41, v53
	v_fmac_f16_e32 v7, v24, v6
	v_lshrrev_b32_e32 v13, 16, v57
	v_fmac_f16_e32 v2, v57, v53
	ds_read2_b64 v[8:11], v37 offset0:84 offset1:89
	v_fmac_f16_e32 v1, v12, v21
	v_lshrrev_b32_e32 v17, 16, v15
	v_lshrrev_b32_e32 v25, 16, v49
	v_fmac_f16_e32 v2, v13, v21
	v_fmac_f16_e32 v7, v49, v30
	v_fmac_f16_e32 v0, v15, v31
	ds_read2_b64 v[12:15], v37 offset0:184 offset1:189
	ds_read2_b64 v[3:6], v38 offset0:4 offset1:44
	v_lshrrev_b32_e32 v20, 16, v42
	v_fmac_f16_e32 v7, v25, v18
	v_lshrrev_b32_e32 v22, 16, v54
	v_fmac_f16_e32 v1, v42, v54
	v_lshrrev_b32_e32 v16, 16, v58
	v_fmac_f16_e32 v2, v58, v54
	v_lshrrev_b32_e32 v19, 16, v31
	v_lshrrev_b32_e32 v27, 16, v50
	v_fmac_f16_e32 v1, v20, v22
	v_fmac_f16_e32 v7, v50, v31
	v_fmac_f16_e32 v2, v16, v22
	v_or_b32_e32 v22, s5, v36
	v_fmac_f16_e32 v0, v17, v19
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v20, 16, v8
	v_fmac_f16_e32 v7, v27, v19
	v_lshrrev_b32_e32 v21, 16, v9
	v_lshl_add_u32 v22, v35, 6, v22
	v_lshrrev_b32_e32 v23, 16, v11
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v24, 16, v15
	s_waitcnt lgkmcnt(0)
	v_fmac_f16_e32 v0, v8, v3
	v_lshrrev_b32_e32 v16, 16, v3
	v_fmac_f16_e32 v7, v10, v3
	v_lshrrev_b32_e32 v18, 16, v5
	v_lshrrev_b32_e32 v3, 16, v12
	v_fmac_f16_e32 v1, v12, v5
	v_fmac_f16_e32 v2, v14, v5
	v_lshl_or_b32 v5, s3, 3, v22
	v_lshrrev_b32_e32 v8, 16, v10
	v_lshrrev_b32_e32 v12, 16, v14
	v_fmac_f16_e32 v1, v3, v18
	v_fmac_f16_e32 v0, v20, v16
	v_add_nc_u32_e32 v3, s4, v5
	v_fmac_f16_e32 v7, v8, v16
	v_fmac_f16_e32 v2, v12, v18
	v_lshrrev_b32_e32 v17, 16, v4
	v_fmac_f16_e32 v0, v9, v4
	v_add_nc_u32_e32 v5, s6, v3
	v_fmac_f16_e32 v7, v11, v4
	v_ashrrev_i32_e32 v4, 31, v3
	v_add_nc_u32_e32 v8, 0xca0, v3
	v_lshrrev_b32_e32 v19, 16, v6
	v_fmac_f16_e32 v2, v15, v6
	v_fmac_f16_e32 v1, v13, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshrrev_b32_e32 v10, 16, v13
	v_fmac_f16_e32 v0, v21, v17
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_fmac_f16_e32 v7, v23, v17
	v_add_co_u32 v3, vcc_lo, s0, v3
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo
	v_fmac_f16_e32 v1, v10, v19
	v_add_co_u32 v5, vcc_lo, s0, v5
	v_fmac_f16_e32 v2, v24, v19
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo
	v_add_co_u32 v8, vcc_lo, s0, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s1, v9, vcc_lo
	global_store_short v[3:4], v0, off
	global_store_short v[3:4], v7, off offset:64
	global_store_short v[5:6], v1, off
	global_store_short v[8:9], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_batch_matmul_2_kernel0
		.amdhsa_group_segment_fixed_size 2240
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 124
		.amdhsa_next_free_sgpr 17
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end23:
	.size	tvmgen_default_fused_nn_batch_matmul_2_kernel0, .Lfunc_end23-tvmgen_default_fused_nn_batch_matmul_2_kernel0

	.globl	tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0,@function
tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0:
	v_lshrrev_b32_e32 v1, 3, v0
	s_mov_b32 s12, 0xcccccccd
	v_add_nc_u32_e32 v5, 0x60, v0
	v_add_nc_u32_e32 v6, 0xc0, v0
	v_add_nc_u32_e32 v7, 0x120, v0
	v_add_nc_u32_e32 v2, 12, v1
	v_add_nc_u32_e32 v4, 16, v1
	v_mul_hi_u32 v5, v5, s12
	v_mul_hi_u32 v6, v6, s12
	v_add_nc_u32_e32 v9, 0x180, v0
	v_mul_hi_u32 v3, v2, s12
	v_mul_hi_u32 v8, v4, s12
	v_add_nc_u32_e32 v10, 0x240, v0
	v_mul_hi_u32 v7, v7, s12
	v_lshlrev_b32_e32 v18, 5, v1
	v_lshrrev_b32_e32 v5, 7, v5
	s_movk_i32 s13, 0xc80
	s_movk_i32 s14, 0x300
	v_lshrrev_b32_e32 v3, 4, v3
	v_lshrrev_b32_e32 v8, 4, v8
	v_mul_i32_i24_e32 v19, s13, v5
	v_lshrrev_b32_e32 v5, 7, v7
	s_mul_hi_i32 s1, s6, 0x51eb851f
	v_mul_u32_u24_e32 v3, 20, v3
	v_mul_u32_u24_e32 v1, 20, v8
	s_lshr_b32 s7, s1, 31
	v_mul_i32_i24_e32 v24, s13, v5
	s_ashr_i32 s1, s1, 3
	v_sub_nc_u32_e32 v2, v2, v3
	v_lshrrev_b32_e32 v3, 7, v6
	v_mul_hi_u32 v6, v10, s12
	v_sub_nc_u32_e32 v1, v4, v1
	s_add_i32 s1, s1, s7
	v_lshlrev_b32_e32 v20, 5, v2
	v_mul_hi_u32 v2, v9, s12
	v_mul_i32_i24_e32 v22, s13, v3
	v_lshlrev_b32_e32 v23, 5, v1
	v_add_nc_u32_e32 v3, s14, v0
	v_lshrrev_b32_e32 v5, 7, v6
	v_mul_hi_i32 v6, 0x2aaaaaab, v0
	v_add_nc_u32_e32 v9, 0x480, v0
	s_movk_i32 s7, 0x4800
	v_lshrrev_b32_e32 v1, 7, v2
	v_add_nc_u32_e32 v2, 0x2a0, v0
	v_mul_hi_u32 v3, v3, s12
	v_mul_i32_i24_e32 v30, s13, v5
	v_add_nc_u32_e32 v5, 0x420, v0
	v_mul_i32_i24_e32 v29, s13, v1
	v_mul_hi_u32 v2, v2, s12
	v_add_nc_u32_e32 v1, 0x360, v0
	v_ashrrev_i32_e32 v7, 2, v6
	v_lshrrev_b32_e32 v8, 31, v6
	v_lshrrev_b32_e32 v3, 7, v3
	s_mul_i32 s14, s6, s14
	v_mul_hi_u32 v1, v1, s12
	v_mul_hi_u32 v5, v5, s12
	v_lshrrev_b32_e32 v2, 7, v2
	v_add_nc_u32_e32 v7, v7, v8
	v_mul_i32_i24_e32 v33, s13, v3
	v_mul_hi_u32 v3, v9, s12
	v_add_nc_u32_e32 v9, 0x4e0, v0
	v_mul_i32_i24_e32 v31, s13, v2
	v_mul_lo_u32 v2, v7, s7
	v_lshrrev_b32_e32 v7, 7, v1
	v_lshlrev_b32_e32 v1, 5, v0
	v_ashrrev_i32_e32 v6, 1, v6
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshrrev_b32_e32 v5, 7, v5
	v_lshlrev_b32_e32 v40, 4, v0
	s_movk_i32 s0, 0xc00
	v_add3_u32 v1, v2, s14, v1
	v_lshrrev_b32_e32 v2, 7, v3
	v_mul_hi_u32 v3, v9, s12
	s_mul_i32 s12, s1, 0x4b00
	v_add_nc_u32_e32 v28, v6, v8
	v_subrev_nc_u32_e32 v1, s12, v1
	v_mul_i32_i24_e32 v37, s13, v2
	v_mul_i32_i24_e32 v36, s13, v5
	v_lshl_add_u32 v15, v0, 1, s0
	v_mul_lo_u32 v5, 0x140, v28
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshrrev_b32_e32 v3, 7, v3
	v_mul_i32_i24_e32 v35, s13, v7
	v_lshlrev_b32_e32 v39, 5, v4
	v_and_b32_e32 v13, 7, v0
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_mul_i32_i24_e32 v41, s13, v3
	v_add_nc_u32_e32 v42, s0, v5
	v_add_nc_u32_e32 v21, 0x80, v18
	v_add_nc_u32_e32 v27, 0x100, v18
	v_cmp_gt_i32_e32 vcc_lo, 32, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v44, s0, s10, v1
	v_add_nc_u32_e32 v43, v40, v40
	v_add_co_ci_u32_e64 v45, s0, s11, v2, s0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v38, 0
	s_mul_i32 s12, s1, 25
	s_mul_i32 s10, s1, 0x280
	s_sub_i32 s6, s6, s12
	s_mov_b32 s11, 0
	s_branch BB24_2
BB24_1:
	s_or_b32 exec_lo, exec_lo, s12
	v_add_co_u32 v50, s0, 0x25800, v44
	v_mov_b32_e32 v102, 0xffff
	v_add_co_ci_u32_e64 v51, s0, 0, v45, s0
	s_add_i32 s11, s11, 8
	s_cmp_eq_u32 s11, 32
	s_clause 0x1
	global_load_dwordx4 v[46:49], v[44:45], off
	global_load_dwordx4 v[50:53], v[50:51], off
	v_add_co_u32 v44, s0, v44, 16
	v_add_co_ci_u32_e64 v45, s0, 0, v45, s0
	s_waitcnt vmcnt(1)
	ds_write_b128 v40, v[46:49]
	s_waitcnt vmcnt(0)
	ds_write_b128 v40, v[50:53] offset:1536
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[46:49], v43 offset:16
	ds_read_b128 v[50:53], v43
	ds_read2_b64 v[54:57], v42 offset1:1
	ds_read2_b64 v[58:61], v42 offset0:2 offset1:3
	ds_read2_b64 v[62:65], v42 offset0:10 offset1:11
	ds_read2_b64 v[66:69], v42 offset0:8 offset1:9
	ds_read2_b64 v[70:73], v42 offset0:20 offset1:21
	ds_read2_b64 v[74:77], v42 offset0:22 offset1:23
	ds_read2_b64 v[78:81], v42 offset0:30 offset1:31
	ds_read2_b64 v[82:85], v42 offset0:28 offset1:29
	ds_read2_b64 v[86:89], v42 offset0:12 offset1:13
	ds_read2_b64 v[90:93], v42 offset0:14 offset1:15
	ds_read2_b64 v[94:97], v42 offset0:32 offset1:33
	ds_read2_b64 v[98:101], v42 offset0:34 offset1:35
	s_waitcnt lgkmcnt(13)
	v_and_b32_e32 v103, v102, v46
	s_waitcnt lgkmcnt(12)
	v_lshrrev_b32_e32 v104, 16, v50
	v_and_b32_sdwa v46, v102, v46 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v105, v102, v47
	v_lshrrev_b32_e32 v106, 16, v51
	v_lshl_or_b32 v110, v50, 16, v103
	v_and_b32_sdwa v47, v102, v47 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v111, v104, 16, v46
	v_lshl_or_b32 v112, v51, 16, v105
	v_and_b32_e32 v107, v102, v48
	s_waitcnt lgkmcnt(11)
	v_pk_fma_f16 v38, v54, v110, v38 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v34, v62, v110, v34 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v32, v70, v110, v32 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v26, v78, v110, v26 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v113, v106, 16, v47
	v_pk_fma_f16 v38, v54, v111, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v62, v111, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v70, v111, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v78, v111, v26 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v50, 16, v52
	v_pk_fma_f16 v38, v55, v112, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v63, v112, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v71, v112, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v79, v112, v26 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v48, v102, v48 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v114, v52, 16, v107
	v_pk_fma_f16 v38, v55, v113, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v63, v113, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v71, v113, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v79, v113, v26 op_sel:[1,0,0]
	v_and_b32_e32 v103, v102, v49
	v_lshl_or_b32 v115, v50, 16, v48
	v_pk_fma_f16 v38, v56, v114, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v64, v114, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v72, v114, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v80, v114, v26 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v46, v102, v49 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v49, 16, v53
	v_lshl_or_b32 v116, v53, 16, v103
	v_pk_fma_f16 v38, v56, v115, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v64, v115, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v72, v115, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v80, v115, v26 op_sel:[1,0,0]
	v_lshl_or_b32 v117, v49, 16, v46
	v_pk_fma_f16 v38, v57, v116, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v65, v116, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v73, v116, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v81, v116, v26 op_sel_hi:[0,1,1]
	ds_read2_b64 v[46:49], v42 offset0:4 offset1:5
	ds_read2_b64 v[50:53], v42 offset0:6 offset1:7
	v_pk_fma_f16 v38, v57, v117, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v65, v117, v34 op_sel:[1,0,0]
	ds_read2_b64 v[54:57], v42 offset0:24 offset1:25
	ds_read2_b64 v[62:65], v42 offset0:16 offset1:17
	v_pk_fma_f16 v32, v73, v117, v32 op_sel:[1,0,0]
	ds_read2_b64 v[70:73], v42 offset0:26 offset1:27
	v_pk_fma_f16 v26, v81, v117, v26 op_sel:[1,0,0]
	ds_read2_b64 v[78:81], v42 offset0:18 offset1:19
	ds_read2_b64 v[102:105], v42 offset0:36 offset1:37
	ds_read2_b64 v[106:109], v42 offset0:38 offset1:39
	v_pk_fma_f16 v25, v58, v110, v25 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(11)
	v_pk_fma_f16 v17, v86, v110, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v74, v110, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v14, v94, v110, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v90, v110, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v9, v98, v110, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v66, v110, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v82, v110, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v58, v111, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v86, v111, v17 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v12, v46, v110, v12 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v8, v50, v110, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v74, v111, v16 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v10, v54, v110, v10 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v7, v62, v110, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v94, v111, v14 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v6, v70, v110, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v46, v111, v12 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v5, v102, v110, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v78, v110, v3 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v1, v106, v110, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v90, v111, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v54, v111, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v98, v111, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v50, v111, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v62, v111, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v70, v111, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v102, v111, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v66, v111, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v78, v111, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v82, v111, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v106, v111, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v59, v112, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v87, v112, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v75, v112, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v95, v112, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v47, v112, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v91, v112, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v55, v112, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v99, v112, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v51, v112, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v63, v112, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v71, v112, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v103, v112, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v67, v112, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v79, v112, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v83, v112, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v107, v112, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v59, v113, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v87, v113, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v75, v113, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v95, v113, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v47, v113, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v91, v113, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v55, v113, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v99, v113, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v51, v113, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v63, v113, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v71, v113, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v103, v113, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v67, v113, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v79, v113, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v83, v113, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v107, v113, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v60, v114, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v88, v114, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v76, v114, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v96, v114, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v48, v114, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v92, v114, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v56, v114, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v100, v114, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v52, v114, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v64, v114, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v72, v114, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v104, v114, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v68, v114, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v80, v114, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v84, v114, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v108, v114, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v60, v115, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v88, v115, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v76, v115, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v96, v115, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v48, v115, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v92, v115, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v56, v115, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v100, v115, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v52, v115, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v64, v115, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v72, v115, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v104, v115, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v68, v115, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v80, v115, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v84, v115, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v108, v115, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v61, v116, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v89, v116, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v77, v116, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v97, v116, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v49, v116, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v93, v116, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v57, v116, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v101, v116, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v53, v116, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v65, v116, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v73, v116, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v105, v116, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v69, v116, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v81, v116, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v85, v116, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v109, v116, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v61, v117, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v89, v117, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v77, v117, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v97, v117, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v49, v117, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v93, v117, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v57, v117, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v101, v117, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v53, v117, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v65, v117, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v73, v117, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v105, v117, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v69, v117, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v81, v117, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v85, v117, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v109, v117, v1 op_sel:[1,0,0]
	s_cbranch_scc1 BB24_4
BB24_2:
	s_add_i32 s0, s10, s11
	v_or_b32_e32 v46, s0, v13
	v_add_nc_u32_e32 v47, v46, v18
	v_add3_u32 v49, v46, v19, v20
	v_add3_u32 v51, v46, v22, v21
	v_add3_u32 v53, v46, v24, v23
	v_add3_u32 v55, v46, v29, v27
	v_ashrrev_i32_e32 v48, 31, v47
	v_ashrrev_i32_e32 v50, 31, v49
	v_ashrrev_i32_e32 v52, 31, v51
	v_ashrrev_i32_e32 v54, 31, v53
	v_ashrrev_i32_e32 v56, 31, v55
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_add3_u32 v57, v46, v30, v20
	v_add_co_u32 v47, s0, s8, v47
	v_add3_u32 v59, v46, v33, v23
	v_add_co_ci_u32_e64 v48, s0, s9, v48, s0
	v_add_co_u32 v49, s0, s8, v49
	v_ashrrev_i32_e32 v58, 31, v57
	v_add_co_ci_u32_e64 v50, s0, s9, v50, s0
	v_add_co_u32 v51, s0, s8, v51
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_co_ci_u32_e64 v52, s0, s9, v52, s0
	v_add_co_u32 v53, s0, s8, v53
	v_add3_u32 v61, v46, v37, v21
	v_add_co_ci_u32_e64 v54, s0, s9, v54, s0
	v_add_co_u32 v55, s0, s8, v55
	v_add_co_ci_u32_e64 v56, s0, s9, v56, s0
	s_clause 0x4
	global_load_ushort v63, v[47:48], off
	global_load_ushort v64, v[49:50], off
	global_load_ushort v65, v[51:52], off
	global_load_ushort v66, v[53:54], off
	global_load_ushort v67, v[55:56], off
	v_add3_u32 v53, v46, v35, v27
	v_lshlrev_b64 v[49:50], 1, v[57:58]
	v_add3_u32 v51, v46, v31, v21
	v_add_co_u32 v55, s0, s7, v47
	v_lshlrev_b64 v[57:58], 1, v[59:60]
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e64 v56, s0, 0, v48, s0
	v_add_co_u32 v49, s0, s8, v49
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_co_ci_u32_e64 v50, s0, s9, v50, s0
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_add3_u32 v59, v46, v36, v20
	v_add_co_u32 v57, s0, s8, v57
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_add_co_ci_u32_e64 v58, s0, s9, v58, s0
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_co_u32 v53, s0, s8, v53
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_co_ci_u32_e64 v54, s0, s9, v54, s0
	v_add_co_u32 v51, s0, s8, v51
	v_add_co_ci_u32_e64 v52, s0, s9, v52, s0
	s_clause 0x1
	global_load_ushort v68, v[57:58], off
	global_load_ushort v69, v[53:54], off
	v_lshlrev_b64 v[53:54], 1, v[59:60]
	v_add_co_u32 v47, s0, 0x9000, v47
	v_lshlrev_b64 v[57:58], 1, v[61:62]
	v_add_co_ci_u32_e64 v48, s0, 0, v48, s0
	v_add_co_u32 v53, s0, s8, v53
	v_add_co_ci_u32_e64 v54, s0, s9, v54, s0
	v_add_co_u32 v57, s0, s8, v57
	v_add_co_ci_u32_e64 v58, s0, s9, v58, s0
	s_clause 0x5
	global_load_ushort v55, v[55:56], off offset:768
	global_load_ushort v49, v[49:50], off
	global_load_ushort v50, v[51:52], off
	global_load_ushort v47, v[47:48], off offset:1536
	global_load_ushort v48, v[53:54], off
	global_load_ushort v51, v[57:58], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v15, v63
	ds_write_b16 v15, v64 offset:192
	ds_write_b16 v15, v65 offset:384
	ds_write_b16 v15, v66 offset:576
	ds_write_b16 v15, v67 offset:768
	ds_write_b16 v15, v68 offset:1536
	ds_write_b16 v15, v69 offset:1728
	ds_write_b16 v15, v55 offset:960
	ds_write_b16 v15, v49 offset:1152
	ds_write_b16 v15, v50 offset:1344
	ds_write_b16 v15, v47 offset:1920
	ds_write_b16 v15, v48 offset:2112
	ds_write_b16 v15, v51 offset:2304
	s_and_saveexec_b32 s12, vcc_lo
	s_cbranch_execz BB24_1
	v_add3_u32 v46, v46, v41, v39
	v_ashrrev_i32_e32 v47, 31, v46
	v_lshlrev_b64 v[46:47], 1, v[46:47]
	v_add_co_u32 v46, s0, s8, v46
	v_add_co_ci_u32_e64 v47, s0, s9, v47, s0
	global_load_ushort v46, v[46:47], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v15, v46 offset:2496
	s_branch BB24_1
BB24_4:
	v_mul_lo_u32 v13, v28, 12
	s_movk_i32 s0, 0x258
	s_mul_i32 s6, s6, 24
	s_mulk_i32 s1, 0x2ee0
	v_cvt_f32_f16_sdwa v81, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v87, v1
	v_cvt_f32_f16_sdwa v48, v38 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_sdwa v49, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_sub_nc_u32_e32 v0, v0, v13
	v_mul_lo_u32 v13, v28, s0
	v_cvt_f32_f16_sdwa v50, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_sdwa v51, v26 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v52, v38
	v_lshl_add_u32 v0, v0, 1, s6
	v_cvt_f32_f16_e32 v53, v34
	v_cvt_f32_f16_e32 v82, v32
	v_cvt_f32_f16_e32 v83, v26
	v_cvt_f32_f16_sdwa v56, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_add_nc_u32_e32 v18, v0, v13
	v_mul_lo_u32 v13, 0xea60, v28
	v_cvt_f32_f16_sdwa v57, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v60, v16
	v_cvt_f32_f16_e32 v61, v14
	v_ashrrev_i32_e32 v19, 31, v18
	v_cvt_f32_f16_sdwa v62, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_sdwa v64, v10 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v66, v12
	v_add3_u32 v0, v0, s1, v13
	v_lshlrev_b64 v[18:19], 2, v[18:19]
	v_cvt_f32_f16_e32 v68, v10
	v_cvt_f32_f16_sdwa v70, v8 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v74, v8
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_nc_u32_e32 v12, 0x19c8, v0
	v_add_co_u32 v18, vcc_lo, s4, v18
	v_add_nc_u32_e32 v14, 0x2580, v0
	v_add_co_ci_u32_e32 v19, vcc_lo, s5, v19, vcc_lo
	v_add_nc_u32_e32 v20, 0x1068, v0
	v_add_nc_u32_e32 v22, 0x1c20, v0
	v_add_nc_u32_e32 v26, 0x708, v0
	v_add_nc_u32_e32 v28, 0x12c0, v0
	global_load_dwordx2 v[18:19], v[18:19], off
	v_add_nc_u32_e32 v30, 0x1e78, v0
	v_add_nc_u32_e32 v32, 0x2a30, v0
	v_add_nc_u32_e32 v34, 0x960, v0
	v_add_nc_u32_e32 v36, 0x1518, v0
	v_add_nc_u32_e32 v38, 0x20d0, v0
	v_add_nc_u32_e32 v40, 0x2c88, v0
	v_cvt_f32_f16_sdwa v72, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v76, v6
	v_cvt_f32_f16_sdwa v78, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v84, v4
	v_cvt_f32_f16_sdwa v80, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v86, v2
	v_add_nc_u32_e32 v2, 0xbb9, v0
	v_add_nc_u32_e32 v4, 0x1771, v0
	v_add_nc_u32_e32 v6, 0x2329, v0
	v_add_nc_u32_e32 v8, s0, v0
	v_add_nc_u32_e32 v10, 0xe10, v0
	v_add_nc_u32_e32 v16, 0x4b0, v0
	v_add_nc_u32_e32 v24, 0x27d8, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_cvt_f32_f16_sdwa v79, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v85, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_cvt_f32_f16_sdwa v73, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v77, v5
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_ashrrev_i32_e32 v5, 31, v4
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	v_cvt_f32_f16_sdwa v71, v7 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_add_co_u32 v42, vcc_lo, 0x2800, v0
	v_cvt_f32_f16_e32 v75, v7
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v44, vcc_lo, 0x5800, v0
	v_ashrrev_i32_e32 v7, 31, v6
	v_add_co_ci_u32_e32 v45, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v46, vcc_lo, 0x8800, v0
	v_lshlrev_b64 v[4:5], 2, v[4:5]
	v_cvt_f32_f16_sdwa v65, v9 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v69, v9
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_co_ci_u32_e32 v47, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v2, vcc_lo, s2, v2
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	v_cvt_f32_f16_sdwa v63, v11 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v67, v11
	v_ashrrev_i32_e32 v11, 31, v10
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s2, v8
	v_lshlrev_b64 v[12:13], 2, v[12:13]
	v_cvt_f32_f16_sdwa v55, v17 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v59, v17
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s2, v10
	v_lshlrev_b64 v[14:15], 2, v[14:15]
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v11, vcc_lo, s3, v11, vcc_lo
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_lshlrev_b64 v[16:17], 2, v[16:17]
	v_ashrrev_i32_e32 v23, 31, v22
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_lshlrev_b64 v[20:21], 2, v[20:21]
	v_cvt_f32_f16_sdwa v54, v25 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v58, v25
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_lshlrev_b64 v[22:23], 2, v[22:23]
	v_ashrrev_i32_e32 v27, 31, v26
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_lshlrev_b64 v[24:25], 2, v[24:25]
	v_ashrrev_i32_e32 v29, 31, v28
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_add_co_u32 v22, vcc_lo, s2, v22
	v_lshlrev_b64 v[26:27], 2, v[26:27]
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_co_ci_u32_e32 v23, vcc_lo, s3, v23, vcc_lo
	v_add_co_u32 v24, vcc_lo, s2, v24
	v_lshlrev_b64 v[28:29], 2, v[28:29]
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v25, vcc_lo
	v_add_co_u32 v26, vcc_lo, s2, v26
	v_lshlrev_b64 v[30:31], 2, v[30:31]
	v_ashrrev_i32_e32 v35, 31, v34
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v27, vcc_lo
	v_add_co_u32 v28, vcc_lo, s2, v28
	v_lshlrev_b64 v[32:33], 2, v[32:33]
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	v_add_co_u32 v30, vcc_lo, s2, v30
	v_lshlrev_b64 v[34:35], 2, v[34:35]
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_ci_u32_e32 v31, vcc_lo, s3, v31, vcc_lo
	v_add_co_u32 v32, vcc_lo, s2, v32
	v_lshlrev_b64 v[36:37], 2, v[36:37]
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_co_ci_u32_e32 v33, vcc_lo, s3, v33, vcc_lo
	v_add_co_u32 v34, vcc_lo, s2, v34
	v_lshlrev_b64 v[38:39], 2, v[38:39]
	v_add_co_ci_u32_e32 v35, vcc_lo, s3, v35, vcc_lo
	v_add_co_u32 v36, vcc_lo, s2, v36
	v_lshlrev_b64 v[40:41], 2, v[40:41]
	v_add_co_ci_u32_e32 v37, vcc_lo, s3, v37, vcc_lo
	v_add_co_u32 v38, vcc_lo, s2, v38
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v39, vcc_lo
	v_add_co_u32 v40, vcc_lo, s2, v40
	v_add_co_ci_u32_e32 v41, vcc_lo, s3, v41, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v88, v18, v49
	v_add_f32_e32 v89, v18, v50
	v_add_f32_e32 v49, v19, v52
	v_add_f32_e32 v48, v18, v48
	v_add_f32_e32 v90, v18, v51
	v_add_f32_e32 v91, v19, v53
	v_add_f32_e32 v50, v18, v54
	v_add_f32_e32 v52, v18, v55
	v_add_f32_e32 v51, v19, v58
	v_add_f32_e32 v54, v18, v56
	v_add_f32_e32 v53, v19, v59
	v_add_f32_e32 v56, v18, v57
	v_add_f32_e32 v55, v19, v60
	v_add_f32_e32 v57, v19, v61
	v_add_f32_e32 v58, v18, v62
	v_add_f32_e32 v60, v18, v63
	v_add_f32_e32 v59, v19, v66
	v_add_f32_e32 v62, v18, v64
	v_add_f32_e32 v61, v19, v67
	v_add_f32_e32 v64, v18, v65
	v_add_f32_e32 v63, v19, v68
	v_add_f32_e32 v65, v19, v69
	v_add_f32_e32 v66, v18, v70
	v_add_f32_e32 v68, v18, v71
	v_add_f32_e32 v67, v19, v74
	v_add_f32_e32 v70, v18, v72
	v_add_f32_e32 v69, v19, v75
	v_add_f32_e32 v72, v18, v73
	v_add_f32_e32 v71, v19, v76
	v_add_f32_e32 v73, v19, v77
	v_add_f32_e32 v74, v18, v78
	v_add_f32_e32 v76, v18, v79
	v_add_f32_e32 v78, v18, v80
	v_add_f32_e32 v80, v18, v81
	v_add_f32_e32 v75, v19, v84
	v_add_f32_e32 v77, v19, v85
	v_add_f32_e32 v79, v19, v86
	v_add_f32_e32 v81, v19, v87
	v_add_f32_e32 v18, v19, v82
	v_add_f32_e32 v19, v19, v83
	global_store_dword v[42:43], v88, off offset:1760
	global_store_dword v[44:45], v89, off offset:1472
	global_store_dwordx2 v[0:1], v[48:49], off
	global_store_dword v[46:47], v90, off offset:1184
	global_store_dword v[2:3], v91, off
	global_store_dword v[4:5], v18, off
	global_store_dword v[6:7], v19, off
	global_store_dwordx2 v[8:9], v[50:51], off
	global_store_dwordx2 v[10:11], v[52:53], off
	global_store_dwordx2 v[12:13], v[54:55], off
	global_store_dwordx2 v[14:15], v[56:57], off
	global_store_dwordx2 v[16:17], v[58:59], off
	global_store_dwordx2 v[20:21], v[60:61], off
	global_store_dwordx2 v[22:23], v[62:63], off
	global_store_dwordx2 v[24:25], v[64:65], off
	global_store_dwordx2 v[26:27], v[66:67], off
	global_store_dwordx2 v[28:29], v[68:69], off
	global_store_dwordx2 v[30:31], v[70:71], off
	global_store_dwordx2 v[32:33], v[72:73], off
	global_store_dwordx2 v[34:35], v[74:75], off
	global_store_dwordx2 v[36:37], v[76:77], off
	global_store_dwordx2 v[38:39], v[78:79], off
	global_store_dwordx2 v[40:41], v[80:81], off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0
		.amdhsa_group_segment_fixed_size 5632
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 118
		.amdhsa_next_free_sgpr 15
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end24:
	.size	tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0, .Lfunc_end24-tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0

	.globl	tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0,@function
tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0:
	v_mul_hi_i32 v1, 0x88888889, v0
	s_mul_hi_i32 s2, s6, 0x51eb851f
	v_lshlrev_b32_e32 v3, 5, v0
	s_lshr_b32 s7, s2, 31
	s_ashr_i32 s2, s2, 5
	s_movk_i32 s12, 0x780
	s_movk_i32 s0, 0x4b00
	s_add_i32 s7, s2, s7
	v_add_nc_u32_e32 v1, v1, v0
	s_mul_hi_i32 s1, s6, 0x66666667
	s_mul_i32 s3, s6, s12
	s_mul_i32 s2, s7, s0
	s_lshr_b32 s8, s1, 31
	s_ashr_i32 s1, s1, 2
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 4, v1
	v_add3_u32 v4, s2, s3, v3
	s_add_i32 s1, s1, s8
	s_clause 0x1
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_mul_i32 s0, s1, s0
	v_add_nc_u32_e32 v1, v1, v2
	v_subrev_nc_u32_e32 v2, s0, v4
	s_mul_i32 s0, s1, s12
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_add_nc_u32_e32 v11, s0, v3
	v_mul_lo_u32 v4, v1, 30
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b32_e32 v7, 4, v0
	s_movk_i32 s13, 0x3c0
	v_ashrrev_i32_e32 v12, 31, v11
	v_cmp_gt_i32_e32 vcc_lo, 60, v0
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_nc_u32_e32 v8, s13, v7
	v_sub_nc_u32_e32 v5, v0, v4
	v_lshlrev_b64 v[14:15], 1, v[11:12]
	v_lshl_add_u32 v9, v1, 4, s13
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v6, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v11, s0, s10, v2
	v_lshlrev_b32_e32 v10, 4, v5
	v_add_co_ci_u32_e64 v12, s0, s11, v3, s0
	v_add_co_u32 v14, s0, s8, v14
	v_mov_b32_e32 v4, 0
	v_add_co_ci_u32_e64 v15, s0, s9, v15, s0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v0, 0
	s_mul_i32 s12, s1, 10
	s_mov_b64 s[8:9], 0
	s_sub_i32 s6, s6, s12
	s_branch BB25_2
BB25_1:
	s_or_b32 exec_lo, exec_lo, s10
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[16:19], v10 offset:480
	ds_read_b128 v[20:23], v10
	ds_read_b128 v[24:27], v9
	ds_read_b128 v[28:31], v9 offset:160
	ds_read_b128 v[32:35], v9 offset:320
	ds_read_b128 v[36:39], v9 offset:480
	ds_read_b128 v[40:43], v9 offset:640
	ds_read_b128 v[44:47], v9 offset:800
	v_mov_b32_e32 v48, 0xffff
	s_add_u32 s8, s8, 16
	s_addc_u32 s9, s9, 0
	s_cmp_eq_u32 s8, 64
	s_waitcnt lgkmcnt(7)
	v_lshrrev_b32_e32 v49, 16, v16
	s_waitcnt lgkmcnt(6)
	v_and_b32_e32 v53, v48, v20
	v_and_b32_sdwa v20, v48, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v54, v48, v21
	v_lshrrev_b32_e32 v50, 16, v17
	v_and_b32_sdwa v21, v48, v21 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v16, v16, 16, v53
	v_lshl_or_b32 v20, v49, 16, v20
	v_lshl_or_b32 v17, v17, 16, v54
	v_and_b32_e32 v55, v48, v22
	v_lshl_or_b32 v21, v50, 16, v21
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v13, v24, v16, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v6, v28, v16, v6 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v4, v32, v16, v4 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v3, v36, v16, v3 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v2, v40, v16, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v0, v44, v16, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v24, v20, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v28, v20, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v32, v20, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v36, v20, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v40, v20, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v44, v20, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v25, v17, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v29, v17, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v33, v17, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v37, v17, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v41, v17, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v45, v17, v0 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v51, 16, v18
	v_and_b32_sdwa v22, v48, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v18, v18, 16, v55
	v_pk_fma_f16 v13, v25, v21, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v29, v21, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v33, v21, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v37, v21, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v41, v21, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v45, v21, v0 op_sel:[1,0,0]
	v_and_b32_e32 v17, v48, v23
	v_pk_fma_f16 v13, v26, v18, v13 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v16, v51, 16, v22
	v_pk_fma_f16 v6, v30, v18, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v34, v18, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v38, v18, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v42, v18, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v46, v18, v0 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v52, 16, v19
	v_pk_fma_f16 v13, v26, v16, v13 op_sel:[1,0,0]
	v_lshl_or_b32 v17, v19, 16, v17
	v_pk_fma_f16 v6, v30, v16, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v34, v16, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v38, v16, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v42, v16, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v46, v16, v0 op_sel:[1,0,0]
	v_and_b32_sdwa v18, v48, v23 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v13, v27, v17, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v31, v17, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v35, v17, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v39, v17, v3 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v16, v52, 16, v18
	v_pk_fma_f16 v2, v43, v17, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v47, v17, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v27, v16, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v31, v16, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v35, v16, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v39, v16, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v43, v16, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v47, v16, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB25_4
BB25_2:
	s_barrier 
	s_and_saveexec_b32 s10, vcc_lo
	s_cbranch_execz BB25_1
	v_add_co_u32 v16, s0, v14, s8
	v_add_co_ci_u32_e64 v17, s0, s9, v15, s0
	v_add_co_u32 v20, s0, v11, s8
	v_add_co_ci_u32_e64 v21, s0, s9, v12, s0
	global_load_dwordx4 v[16:19], v[16:17], off
	global_load_dwordx4 v[20:23], v[20:21], off
	s_waitcnt vmcnt(1)
	ds_write_b128 v8, v[16:19]
	s_waitcnt vmcnt(0)
	ds_write_b128 v7, v[20:23]
	s_branch BB25_1
BB25_4:
	s_mul_i32 s6, s6, 60
	s_movk_i32 s0, 0x258
	v_add_nc_u32_e32 v5, s6, v5
	s_mul_i32 s7, s7, s0
	v_mul_lo_u32 v1, v1, s0
	s_mul_i32 s1, s1, 0x8ca0
	v_cvt_f32_f16_e32 v19, v4
	v_add_nc_u32_e32 v7, s7, v5
	v_cvt_f32_f16_sdwa v20, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v23, v2
	v_cvt_f32_f16_sdwa v24, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v21, v3
	v_ashrrev_i32_e32 v8, 31, v7
	v_cvt_f32_f16_sdwa v22, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v16, v13
	v_cvt_f32_f16_sdwa v13, v13 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v17, v6
	v_lshlrev_b64 v[7:8], 2, v[7:8]
	v_cvt_f32_f16_sdwa v18, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v25, v0
	v_cvt_f32_f16_sdwa v0, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_add_co_u32 v7, vcc_lo, s4, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s5, v8, vcc_lo
	s_clause 0x1
	global_load_dword v14, v[7:8], off
	global_load_dword v15, v[7:8], off offset:120
	v_add3_u32 v7, v5, v1, s1
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[4:5], 2, v[7:8]
	v_add_co_u32 v1, vcc_lo, s2, v4
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v5, vcc_lo
	v_add_co_u32 v3, vcc_lo, 0x5800, v1
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v5, vcc_lo, 0xb800, v1
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v7, vcc_lo, 0x11800, v1
	v_add_co_ci_u32_e32 v8, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v9, vcc_lo, 0x17000, v1
	v_add_co_ci_u32_e32 v10, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v11, vcc_lo, 0x1d000, v1
	v_add_co_ci_u32_e32 v12, vcc_lo, 0, v2, vcc_lo
	s_waitcnt vmcnt(1)
	v_add_f32_e32 v16, v14, v16
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v13, v15, v13
	v_add_f32_e32 v17, v14, v17
	v_add_f32_e32 v18, v15, v18
	v_add_f32_e32 v19, v14, v19
	v_add_f32_e32 v20, v15, v20
	v_add_f32_e32 v21, v14, v21
	v_add_f32_e32 v23, v14, v23
	v_add_f32_e32 v22, v15, v22
	v_add_f32_e32 v24, v15, v24
	v_add_f32_e32 v14, v14, v25
	v_add_f32_e32 v0, v15, v0
	global_store_dword v[1:2], v16, off
	global_store_dword v[1:2], v13, off offset:120
	global_store_dword v[3:4], v17, off offset:1472
	global_store_dword v[3:4], v18, off offset:1592
	global_store_dword v[5:6], v19, off offset:896
	global_store_dword v[5:6], v20, off offset:1016
	global_store_dword v[7:8], v21, off offset:320
	global_store_dword v[7:8], v22, off offset:440
	global_store_dword v[9:10], v23, off offset:1792
	global_store_dword v[9:10], v24, off offset:1912
	global_store_dword v[11:12], v14, off offset:1216
	global_store_dword v[11:12], v0, off offset:1336
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0
		.amdhsa_group_segment_fixed_size 1920
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 56
		.amdhsa_next_free_sgpr 14
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end25:
	.size	tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0, .Lfunc_end25-tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0

	.globl	tvmgen_default_fused_nn_batch_matmul_cast_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_batch_matmul_cast_kernel0,@function
tvmgen_default_fused_nn_batch_matmul_cast_kernel0:
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	v_cmp_lt_i32_e32 vcc_lo, 39, v0
	v_cmp_gt_i32_e64 s0, 40, v0
	s_mul_hi_i32 s10, s6, 0x66666667
	s_mul_hi_i32 s7, s6, 0x51eb851f
	s_and_saveexec_b32 s11, s0
	s_cbranch_execz BB26_2
	v_lshlrev_b32_e32 v1, 4, v0
	s_lshr_b32 s1, s10, 31
	s_ashr_i32 s12, s10, 2
	v_lshlrev_b32_e32 v10, 3, v0
	s_add_i32 s1, s12, s1
	v_and_b32_e32 v1, 0x3fe0, v1
	s_mul_i32 s13, s1, 0x280
	v_lshlrev_b32_e32 v9, 2, v0
	s_mul_i32 s1, s1, 10
	s_lshr_b32 s12, s7, 31
	v_add_nc_u32_e32 v7, s13, v1
	s_ashr_i32 s14, s7, 4
	v_and_b32_e32 v3, 0x1fe0, v10
	s_sub_i32 s1, s6, s1
	s_add_i32 s12, s14, s12
	v_or_b32_e32 v2, 2, v9
	s_mulk_i32 s1, 0x140
	s_mulk_i32 s12, 0xc80
	v_and_or_b32 v1, v9, 4, v7
	v_add3_u32 v11, s12, s1, v3
	v_lshlrev_b32_e32 v8, 1, v0
	v_and_or_b32 v3, v2, 6, v7
	v_ashrrev_i32_e32 v2, 31, v1
	v_and_or_b32 v5, v8, 6, v11
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, s1, s2, v1
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_add_co_ci_u32_e64 v2, s1, s3, v2, s1
	v_add_co_u32 v3, s1, s2, v3
	v_add_co_ci_u32_e64 v4, s1, s3, v4, s1
	v_add_co_u32 v5, s1, s8, v5
	v_add_co_ci_u32_e64 v6, s1, s9, v6, s1
	s_clause 0x1
	global_load_ushort v1, v[1:2], off
	global_load_ushort v2, v[3:4], off
	global_load_ushort v12, v[5:6], off
	v_or_b32_e32 v3, 1, v9
	v_or_b32_e32 v4, 3, v9
	v_or_b32_e32 v6, 1, v8
	v_and_or_b32 v3, v3, 5, v7
	v_and_or_b32 v5, v4, 7, v7
	v_and_or_b32 v7, v6, 7, v11
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v6, 31, v5
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v3, s1, s2, v3
	v_add_co_ci_u32_e64 v4, s1, s3, v4, s1
	v_add_co_u32 v5, s1, s2, v5
	v_add_co_ci_u32_e64 v6, s1, s3, v6, s1
	v_add_co_u32 v7, s1, s8, v7
	v_add_co_ci_u32_e64 v8, s1, s9, v8, s1
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v1, v[3:4], off
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v2, v[5:6], off
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v12, v[7:8], off
	s_waitcnt vmcnt(1)
	ds_write_b64 v10, v[1:2] offset:160
	s_waitcnt vmcnt(0)
	ds_write_b32 v9, v12
BB26_2:
	s_or_b32 exec_lo, exec_lo, s11
	s_mov_b32 s1, 0x66666667
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_mul_hi_i32 v1, v0, s1
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 2, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_lo_u32 v2, v1, 10
	v_lshlrev_b32_e32 v3, 6, v1
	v_sub_nc_u32_e32 v2, v0, v2
	v_lshlrev_b32_e32 v4, 4, v2
	ds_read_b128 v[5:8], v3 offset:160
	ds_read_b128 v[9:12], v3 offset:176
	ds_read_b128 v[21:24], v3 offset:192
	ds_read_b128 v[17:20], v3 offset:208
	ds_read_b128 v[13:16], v4
	v_add_nc_u32_e32 v3, 0xa0, v3
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s11, s0
	s_cbranch_execz BB26_4
	v_lshlrev_b32_e32 v25, 4, v0
	s_mul_hi_i32 s1, s6, s1
	v_lshlrev_b32_e32 v34, 3, v0
	s_lshr_b32 s12, s1, 31
	s_ashr_i32 s1, s1, 2
	v_and_b32_e32 v25, 0x3fe0, v25
	s_add_i32 s1, s1, s12
	v_lshlrev_b32_e32 v33, 2, v0
	s_mul_i32 s12, s1, 0x280
	s_mul_i32 s1, s1, 10
	v_add_nc_u32_e32 v31, s12, v25
	s_lshr_b32 s13, s7, 31
	s_ashr_i32 s12, s7, 4
	v_and_b32_e32 v27, 0x1fe0, v34
	s_sub_i32 s1, s6, s1
	s_add_i32 s12, s12, s13
	v_or_b32_e32 v26, 2, v33
	s_mulk_i32 s1, 0x140
	s_mulk_i32 s12, 0xc80
	v_and_or_b32 v25, v33, 4, v31
	v_add3_u32 v35, s12, s1, v27
	v_lshlrev_b32_e32 v32, 1, v0
	v_and_or_b32 v27, v26, 6, v31
	v_ashrrev_i32_e32 v26, 31, v25
	v_and_or_b32 v29, v32, 6, v35
	v_ashrrev_i32_e32 v28, 31, v27
	v_lshlrev_b64 v[25:26], 1, v[25:26]
	v_ashrrev_i32_e32 v30, 31, v29
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_add_co_u32 v25, s1, s2, v25
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_ci_u32_e64 v26, s1, s3, v26, s1
	v_add_co_u32 v27, s1, s2, v27
	v_add_co_ci_u32_e64 v28, s1, s3, v28, s1
	v_add_co_u32 v29, s1, s8, v29
	v_add_co_ci_u32_e64 v30, s1, s9, v30, s1
	s_clause 0x1
	global_load_ushort v25, v[25:26], off offset:16
	global_load_ushort v26, v[27:28], off offset:16
	global_load_ushort v36, v[29:30], off offset:16
	v_or_b32_e32 v27, 1, v33
	v_or_b32_e32 v28, 3, v33
	v_and_or_b32 v27, v27, 5, v31
	v_and_or_b32 v29, v28, 7, v31
	v_or_b32_e32 v31, 1, v32
	v_ashrrev_i32_e32 v28, 31, v27
	v_ashrrev_i32_e32 v30, 31, v29
	v_and_or_b32 v31, v31, 7, v35
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_co_u32 v27, s1, s2, v27
	v_lshlrev_b64 v[31:32], 1, v[31:32]
	v_add_co_ci_u32_e64 v28, s1, s3, v28, s1
	v_add_co_u32 v29, s1, s2, v29
	v_add_co_ci_u32_e64 v30, s1, s3, v30, s1
	v_add_co_u32 v31, s1, s8, v31
	v_add_co_ci_u32_e64 v32, s1, s9, v32, s1
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v25, v[27:28], off offset:16
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v26, v[29:30], off offset:16
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v36, v[31:32], off offset:16
	s_waitcnt vmcnt(1)
	ds_write_b64 v34, v[25:26] offset:160
	s_waitcnt vmcnt(0)
	ds_write_b32 v33, v36
BB26_4:
	s_or_b32 exec_lo, exec_lo, s11
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[25:28], v3
	ds_read_b128 v[29:32], v3 offset:16
	ds_read_b128 v[41:44], v3 offset:32
	ds_read_b128 v[37:40], v3 offset:48
	ds_read_b128 v[33:36], v4
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB26_6
	v_lshlrev_b32_e32 v45, 4, v0
	s_lshr_b32 s0, s10, 31
	s_ashr_i32 s11, s10, 2
	v_lshlrev_b32_e32 v54, 3, v0
	s_add_i32 s0, s11, s0
	v_and_b32_e32 v45, 0x3fe0, v45
	s_mul_i32 s12, s0, 0x280
	v_lshlrev_b32_e32 v53, 2, v0
	s_mul_i32 s0, s0, 10
	s_lshr_b32 s11, s7, 31
	v_add_nc_u32_e32 v51, s12, v45
	s_ashr_i32 s13, s7, 4
	v_and_b32_e32 v47, 0x1fe0, v54
	s_sub_i32 s0, s6, s0
	s_add_i32 s11, s13, s11
	v_or_b32_e32 v46, 2, v53
	s_mulk_i32 s0, 0x140
	s_mulk_i32 s11, 0xc80
	v_and_or_b32 v45, v53, 4, v51
	v_add3_u32 v55, s11, s0, v47
	v_lshlrev_b32_e32 v52, 1, v0
	v_and_or_b32 v47, v46, 6, v51
	v_ashrrev_i32_e32 v46, 31, v45
	v_and_or_b32 v49, v52, 6, v55
	v_ashrrev_i32_e32 v48, 31, v47
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_ashrrev_i32_e32 v50, 31, v49
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_co_u32 v45, s0, s2, v45
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_add_co_ci_u32_e64 v46, s0, s3, v46, s0
	v_add_co_u32 v47, s0, s2, v47
	v_add_co_ci_u32_e64 v48, s0, s3, v48, s0
	v_add_co_u32 v49, s0, s8, v49
	v_add_co_ci_u32_e64 v50, s0, s9, v50, s0
	s_clause 0x1
	global_load_ushort v45, v[45:46], off offset:32
	global_load_ushort v46, v[47:48], off offset:32
	global_load_ushort v56, v[49:50], off offset:32
	v_or_b32_e32 v47, 1, v53
	v_or_b32_e32 v48, 3, v53
	v_or_b32_e32 v50, 1, v52
	v_and_or_b32 v47, v47, 5, v51
	v_and_or_b32 v49, v48, 7, v51
	v_and_or_b32 v51, v50, 7, v55
	v_ashrrev_i32_e32 v48, 31, v47
	v_ashrrev_i32_e32 v50, 31, v49
	v_ashrrev_i32_e32 v52, 31, v51
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_add_co_u32 v47, s0, s2, v47
	v_add_co_ci_u32_e64 v48, s0, s3, v48, s0
	v_add_co_u32 v49, s0, s2, v49
	v_add_co_ci_u32_e64 v50, s0, s3, v50, s0
	v_add_co_u32 v51, s0, s8, v51
	v_add_co_ci_u32_e64 v52, s0, s9, v52, s0
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v45, v[47:48], off offset:32
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v46, v[49:50], off offset:32
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v56, v[51:52], off offset:32
	s_waitcnt vmcnt(1)
	ds_write_b64 v54, v[45:46] offset:160
	s_waitcnt vmcnt(0)
	ds_write_b32 v53, v56
BB26_6:
	s_or_b32 exec_lo, exec_lo, s1
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[45:48], v3
	ds_read_b128 v[49:52], v3 offset:16
	ds_read_b128 v[53:56], v3 offset:32
	ds_read_b128 v[61:64], v3 offset:48
	ds_read_b128 v[57:60], v4
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s4, vcc_lo
	s_xor_b32 s4, exec_lo, s4
	s_lshr_b32 s5, s10, 31
	s_ashr_i32 s11, s10, 2
	s_add_i32 s11, s11, s5
	s_mul_i32 s5, s11, 10
	s_sub_i32 s5, s6, s5
	s_or_saveexec_b32 s4, s4
	v_mov_b32_e32 v65, s11
	v_mov_b32_e32 v66, s5
	s_xor_b32 exec_lo, exec_lo, s4
	s_cbranch_execz BB26_10
	v_lshlrev_b32_e32 v65, 4, v0
	s_lshr_b32 s5, s10, 31
	s_ashr_i32 s10, s10, 2
	v_lshlrev_b32_e32 v74, 3, v0
	s_add_i32 s5, s10, s5
	v_and_b32_e32 v65, 0x3fe0, v65
	v_lshlrev_b32_e32 v73, 2, v0
	s_mul_i32 s11, s5, 0x280
	s_lshr_b32 s10, s7, 31
	s_ashr_i32 s7, s7, 4
	v_add_nc_u32_e32 v75, s11, v65
	s_mul_i32 s11, s5, 10
	v_and_b32_e32 v67, 0x1fe0, v74
	s_add_i32 s7, s7, s10
	s_sub_i32 s6, s6, s11
	v_or_b32_e32 v66, 2, v73
	s_mul_i32 s10, s6, 0x140
	s_mulk_i32 s7, 0xc80
	v_and_or_b32 v65, v73, 4, v75
	v_add3_u32 v76, s7, s10, v67
	v_lshlrev_b32_e32 v0, 1, v0
	v_and_or_b32 v67, v66, 6, v75
	v_ashrrev_i32_e32 v66, 31, v65
	v_and_or_b32 v69, v0, 6, v76
	v_ashrrev_i32_e32 v68, 31, v67
	v_or_b32_e32 v0, 1, v0
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_ashrrev_i32_e32 v70, 31, v69
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v65, vcc_lo, s2, v65
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_add_co_ci_u32_e32 v66, vcc_lo, s3, v66, vcc_lo
	v_add_co_u32 v67, vcc_lo, s2, v67
	v_add_co_ci_u32_e32 v68, vcc_lo, s3, v68, vcc_lo
	v_add_co_u32 v69, vcc_lo, s8, v69
	v_add_co_ci_u32_e32 v70, vcc_lo, s9, v70, vcc_lo
	s_clause 0x1
	global_load_ushort v71, v[65:66], off offset:48
	global_load_ushort v72, v[67:68], off offset:48
	global_load_ushort v77, v[69:70], off offset:48
	v_or_b32_e32 v65, 1, v73
	v_or_b32_e32 v66, 3, v73
	v_and_or_b32 v69, v0, 7, v76
	v_and_or_b32 v65, v65, 5, v75
	v_and_or_b32 v67, v66, 7, v75
	v_ashrrev_i32_e32 v70, 31, v69
	v_ashrrev_i32_e32 v66, 31, v65
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v65, vcc_lo, s2, v65
	v_add_co_ci_u32_e32 v66, vcc_lo, s3, v66, vcc_lo
	v_add_co_u32 v67, vcc_lo, s2, v67
	v_add_co_ci_u32_e32 v68, vcc_lo, s3, v68, vcc_lo
	v_add_co_u32 v69, vcc_lo, s8, v69
	v_add_co_ci_u32_e32 v70, vcc_lo, s9, v70, vcc_lo
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v71, v[65:66], off offset:48
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v72, v[67:68], off offset:48
	s_waitcnt vmcnt(2)
	global_load_short_d16_hi v77, v[69:70], off offset:48
	v_mov_b32_e32 v65, s5
	v_mov_b32_e32 v66, s6
	s_waitcnt vmcnt(1)
	ds_write_b64 v74, v[71:72] offset:160
	s_waitcnt vmcnt(0)
	ds_write_b32 v73, v77
BB26_10:
	s_or_b32 exec_lo, exec_lo, s4
	v_lshrrev_b32_e32 v0, 16, v13
	v_lshrrev_b32_e32 v67, 16, v21
	v_fma_f16 v68, v21, v13, 0
	v_lshrrev_b32_e32 v21, 16, v17
	v_fma_f16 v69, v17, v13, 0
	v_lshrrev_b32_e32 v17, 16, v14
	v_fma_f16 v70, v5, v13, 0
	v_fmac_f16_e32 v68, v67, v0
	v_fma_f16 v67, v9, v13, 0
	v_fmac_f16_e32 v69, v21, v0
	v_lshrrev_b32_e32 v21, 16, v22
	v_lshrrev_b32_e32 v13, 16, v24
	v_fmac_f16_e32 v68, v22, v14
	v_lshrrev_b32_e32 v22, 16, v18
	v_fmac_f16_e32 v69, v18, v14
	v_lshrrev_b32_e32 v18, 16, v15
	v_lshrrev_b32_e32 v71, 16, v33
	v_fmac_f16_e32 v68, v21, v17
	v_lshrrev_b32_e32 v21, 16, v23
	v_fmac_f16_e32 v69, v22, v17
	v_lshrrev_b32_e32 v22, 16, v9
	v_lshrrev_b32_e32 v9, 16, v5
	v_fmac_f16_e32 v68, v23, v15
	v_lshrrev_b32_e32 v23, 16, v19
	v_fmac_f16_e32 v69, v19, v15
	v_fmac_f16_e32 v67, v22, v0
	v_fmac_f16_e32 v70, v9, v0
	v_lshrrev_b32_e32 v5, 16, v10
	v_lshrrev_b32_e32 v19, 16, v6
	v_fmac_f16_e32 v68, v21, v18
	v_fmac_f16_e32 v67, v10, v14
	v_fmac_f16_e32 v70, v6, v14
	v_fmac_f16_e32 v69, v23, v18
	v_lshrrev_b32_e32 v21, 16, v11
	v_fmac_f16_e32 v68, v24, v16
	v_fmac_f16_e32 v67, v5, v17
	v_fmac_f16_e32 v70, v19, v17
	v_lshrrev_b32_e32 v24, 16, v7
	v_lshrrev_b32_e32 v23, 16, v16
	v_fmac_f16_e32 v69, v20, v16
	v_fmac_f16_e32 v67, v11, v15
	v_fmac_f16_e32 v70, v7, v15
	v_lshrrev_b32_e32 v20, 16, v20
	v_lshrrev_b32_e32 v10, 16, v8
	v_lshrrev_b32_e32 v14, 16, v12
	v_fmac_f16_e32 v67, v21, v18
	v_fmac_f16_e32 v70, v24, v18
	v_fmac_f16_e32 v69, v20, v23
	v_fmac_f16_e32 v68, v13, v23
	v_lshrrev_b32_e32 v7, 16, v37
	v_fmac_f16_e32 v67, v12, v16
	v_fmac_f16_e32 v70, v8, v16
	v_fmac_f16_e32 v69, v37, v33
	v_lshrrev_b32_e32 v13, 16, v41
	v_fmac_f16_e32 v68, v41, v33
	v_fmac_f16_e32 v67, v14, v23
	v_fmac_f16_e32 v70, v10, v23
	v_fmac_f16_e32 v69, v7, v71
	v_lshrrev_b32_e32 v10, 16, v29
	v_lshrrev_b32_e32 v12, 16, v25
	v_fmac_f16_e32 v67, v29, v33
	v_fmac_f16_e32 v70, v25, v33
	v_fmac_f16_e32 v68, v13, v71
	v_lshrrev_b32_e32 v72, 16, v34
	v_lshrrev_b32_e32 v7, 16, v38
	v_fmac_f16_e32 v67, v10, v71
	v_fmac_f16_e32 v70, v12, v71
	v_fmac_f16_e32 v69, v38, v34
	v_lshrrev_b32_e32 v22, 16, v42
	v_fmac_f16_e32 v68, v42, v34
	v_lshrrev_b32_e32 v10, 16, v30
	v_fmac_f16_e32 v67, v30, v34
	v_fmac_f16_e32 v69, v7, v72
	v_lshrrev_b32_e32 v12, 16, v26
	v_fmac_f16_e32 v70, v26, v34
	v_fmac_f16_e32 v68, v22, v72
	v_fmac_f16_e32 v67, v10, v72
	v_lshrrev_b32_e32 v0, 16, v35
	v_lshrrev_b32_e32 v7, 16, v39
	v_fmac_f16_e32 v70, v12, v72
	v_fmac_f16_e32 v69, v39, v35
	v_lshrrev_b32_e32 v9, 16, v43
	v_fmac_f16_e32 v68, v43, v35
	v_lshrrev_b32_e32 v12, 16, v31
	v_fmac_f16_e32 v67, v31, v35
	v_fmac_f16_e32 v69, v7, v0
	v_lshrrev_b32_e32 v17, 16, v27
	v_fmac_f16_e32 v70, v27, v35
	v_fmac_f16_e32 v68, v9, v0
	v_fmac_f16_e32 v67, v12, v0
	v_fmac_f16_e32 v69, v40, v36
	v_lshrrev_b32_e32 v16, 16, v40
	v_fmac_f16_e32 v70, v17, v0
	v_lshrrev_b32_e32 v18, 16, v36
	v_lshrrev_b32_e32 v6, 16, v44
	v_fmac_f16_e32 v68, v44, v36
	v_fmac_f16_e32 v67, v32, v36
	v_lshrrev_b32_e32 v19, 16, v32
	v_fmac_f16_e32 v69, v16, v18
	v_lshrrev_b32_e32 v16, 16, v28
	v_fmac_f16_e32 v70, v28, v36
	v_fmac_f16_e32 v68, v6, v18
	v_fmac_f16_e32 v67, v19, v18
	v_lshrrev_b32_e32 v5, 16, v45
	v_lshrrev_b32_e32 v9, 16, v57
	v_fmac_f16_e32 v70, v16, v18
	v_lshrrev_b32_e32 v7, 16, v49
	v_fmac_f16_e32 v67, v49, v57
	v_lshrrev_b32_e32 v12, 16, v53
	v_fmac_f16_e32 v68, v53, v57
	v_fmac_f16_e32 v70, v45, v57
	v_lshrrev_b32_e32 v20, 16, v61
	v_fmac_f16_e32 v69, v61, v57
	v_fmac_f16_e32 v67, v7, v9
	v_fmac_f16_e32 v68, v12, v9
	v_fmac_f16_e32 v70, v5, v9
	v_lshrrev_b32_e32 v11, 16, v46
	v_fmac_f16_e32 v69, v20, v9
	v_lshrrev_b32_e32 v8, 16, v58
	v_lshrrev_b32_e32 v10, 16, v50
	v_fmac_f16_e32 v67, v50, v58
	v_fmac_f16_e32 v70, v46, v58
	v_lshrrev_b32_e32 v0, 16, v54
	v_fmac_f16_e32 v68, v54, v58
	v_lshrrev_b32_e32 v6, 16, v62
	v_fmac_f16_e32 v69, v62, v58
	v_fmac_f16_e32 v67, v10, v8
	v_fmac_f16_e32 v70, v11, v8
	v_fmac_f16_e32 v68, v0, v8
	v_lshrrev_b32_e32 v13, 16, v47
	v_fmac_f16_e32 v69, v6, v8
	v_lshrrev_b32_e32 v15, 16, v59
	v_fmac_f16_e32 v70, v47, v59
	v_lshrrev_b32_e32 v14, 16, v51
	v_fmac_f16_e32 v67, v51, v59
	v_lshrrev_b32_e32 v17, 16, v55
	v_fmac_f16_e32 v68, v55, v59
	v_lshrrev_b32_e32 v16, 16, v63
	v_fmac_f16_e32 v69, v63, v59
	v_fmac_f16_e32 v67, v14, v15
	v_fmac_f16_e32 v70, v13, v15
	v_fmac_f16_e32 v68, v17, v15
	v_lshrrev_b32_e32 v21, 16, v48
	v_fmac_f16_e32 v69, v16, v15
	v_lshrrev_b32_e32 v22, 16, v60
	v_fmac_f16_e32 v70, v48, v60
	v_lshrrev_b32_e32 v23, 16, v52
	v_fmac_f16_e32 v67, v52, v60
	v_lshrrev_b32_e32 v24, 16, v56
	v_fmac_f16_e32 v68, v56, v60
	v_lshrrev_b32_e32 v25, 16, v64
	v_fmac_f16_e32 v69, v64, v60
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[9:12], v4
	ds_read_b128 v[5:8], v3
	ds_read_b128 v[13:16], v3 offset:16
	ds_read_b128 v[17:20], v3 offset:32
	v_fmac_f16_e32 v68, v24, v22
	v_fmac_f16_e32 v67, v23, v22
	v_fmac_f16_e32 v70, v21, v22
	v_fmac_f16_e32 v69, v25, v22
	ds_read_b128 v[21:24], v3 offset:48
	s_waitcnt lgkmcnt(4)
	v_lshrrev_b32_e32 v26, 16, v9
	s_waitcnt lgkmcnt(3)
	v_lshrrev_b32_e32 v0, 16, v5
	v_fmac_f16_e32 v70, v5, v9
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v5, 16, v13
	v_fmac_f16_e32 v67, v13, v9
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v13, 16, v17
	v_fmac_f16_e32 v68, v17, v9
	v_fmac_f16_e32 v70, v0, v26
	s_waitcnt lgkmcnt(0)
	v_fmac_f16_e32 v69, v21, v9
	v_lshrrev_b32_e32 v17, 16, v21
	v_fmac_f16_e32 v67, v5, v26
	v_fmac_f16_e32 v68, v13, v26
	v_mul_lo_u32 v0, 0x190, v1
	v_lshrrev_b32_e32 v3, 16, v6
	v_fmac_f16_e32 v69, v17, v26
	v_lshrrev_b32_e32 v27, 16, v10
	v_fmac_f16_e32 v70, v6, v10
	v_lshrrev_b32_e32 v30, 16, v14
	v_fmac_f16_e32 v67, v14, v10
	v_lshrrev_b32_e32 v33, 16, v18
	v_fmac_f16_e32 v68, v18, v10
	v_lshrrev_b32_e32 v36, 16, v22
	v_fmac_f16_e32 v69, v22, v10
	v_fmac_f16_e32 v70, v3, v27
	v_mul_lo_u32 v1, v66, 10
	v_mul_lo_u32 v3, 0x7d0, v65
	v_fmac_f16_e32 v67, v30, v27
	v_fmac_f16_e32 v68, v33, v27
	v_add_nc_u32_e32 v0, v0, v2
	v_fmac_f16_e32 v69, v36, v27
	v_lshrrev_b32_e32 v4, 16, v7
	v_lshrrev_b32_e32 v28, 16, v11
	v_fmac_f16_e32 v70, v7, v11
	v_lshrrev_b32_e32 v31, 16, v15
	v_fmac_f16_e32 v67, v15, v11
	v_add3_u32 v0, v0, v3, v1
	v_lshrrev_b32_e32 v34, 16, v19
	v_fmac_f16_e32 v68, v19, v11
	v_lshrrev_b32_e32 v9, 16, v23
	v_fmac_f16_e32 v69, v23, v11
	v_fmac_f16_e32 v70, v4, v28
	v_fmac_f16_e32 v67, v31, v28
	v_ashrrev_i32_e32 v1, 31, v0
	v_fmac_f16_e32 v68, v34, v28
	v_fmac_f16_e32 v69, v9, v28
	v_lshrrev_b32_e32 v25, 16, v8
	v_lshrrev_b32_e32 v29, 16, v12
	v_fmac_f16_e32 v70, v8, v12
	v_lshrrev_b32_e32 v32, 16, v16
	v_fmac_f16_e32 v67, v16, v12
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_lshrrev_b32_e32 v35, 16, v20
	v_fmac_f16_e32 v68, v20, v12
	v_lshrrev_b32_e32 v5, 16, v24
	v_fmac_f16_e32 v69, v24, v12
	v_fmac_f16_e32 v70, v25, v29
	v_fmac_f16_e32 v67, v32, v29
	v_fmac_f16_e32 v68, v35, v29
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_fmac_f16_e32 v69, v5, v29
	v_cvt_f32_f16_e32 v2, v70
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_cvt_f32_f16_e32 v3, v67
	v_cvt_f32_f16_e32 v4, v68
	v_cvt_f32_f16_e32 v5, v69
	global_store_dword v[0:1], v2, off
	global_store_dword v[0:1], v3, off offset:400
	global_store_dword v[0:1], v4, off offset:800
	global_store_dword v[0:1], v5, off offset:1200
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_batch_matmul_cast_kernel0
		.amdhsa_group_segment_fixed_size 480
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 78
		.amdhsa_next_free_sgpr 15
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end26:
	.size	tvmgen_default_fused_nn_batch_matmul_cast_kernel0, .Lfunc_end26-tvmgen_default_fused_nn_batch_matmul_cast_kernel0

	.globl	tvmgen_default_fused_nn_batch_matmul_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_batch_matmul_kernel0,@function
tvmgen_default_fused_nn_batch_matmul_kernel0:
	s_mov_b32 s0, 0x66666667
	v_add_nc_u32_e32 v3, 64, v0
	v_mul_hi_i32 v2, v0, s0
	s_mov_b32 s7, 0xcccccccd
	v_add_nc_u32_e32 v1, 32, v0
	v_add_nc_u32_e32 v7, 0x80, v0
	v_mul_hi_u32 v3, v3, s7
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_movk_i32 s4, 0x258
	v_mul_hi_u32 v4, v1, s7
	v_ashrrev_i32_e32 v5, 3, v2
	v_lshrrev_b32_e32 v6, 31, v2
	v_mul_hi_u32 v10, v7, s7
	v_add_nc_u32_e32 v8, 0xc0, v0
	v_lshrrev_b32_e32 v3, 4, v3
	v_ashrrev_i32_e32 v2, 1, v2
	v_add_nc_u32_e32 v12, v5, v6
	v_add_nc_u32_e32 v5, 0x60, v0
	v_lshrrev_b32_e32 v4, 4, v4
	v_mul_i32_i24_e32 v14, s4, v3
	v_add_nc_u32_e32 v3, 0xe0, v0
	v_mul_hi_u32 v8, v8, s7
	v_mul_hi_u32 v5, v5, s7
	v_mul_i32_i24_e32 v13, s4, v4
	v_lshlrev_b32_e32 v19, 2, v0
	v_mul_hi_u32 v3, v3, s7
	v_add_nc_u32_e32 v21, v2, v6
	v_mad_u32_u24 v2, v0, 3, v7
	s_mul_hi_i32 s5, s6, 0x51eb851f
	v_lshrrev_b32_e32 v8, 4, v8
	v_lshrrev_b32_e32 v4, 4, v5
	v_lshrrev_b32_e32 v5, 4, v10
	v_add_nc_u32_e32 v10, 8, v0
	v_lshrrev_b32_e32 v20, 4, v3
	v_mul_i32_i24_e32 v18, s4, v8
	v_mul_i32_i24_e32 v16, s4, v4
	v_add_nc_u32_e32 v8, 0x200, v19
	v_mad_u32_u24 v4, v0, 3, v10
	v_mul_i32_i24_e32 v17, s4, v5
	v_add_nc_u32_e32 v5, 0x100, v19
	v_mul_hi_i32 v6, v2, s0
	v_add_nc_u32_e32 v7, 0x180, v19
	v_mul_hi_i32 v3, v4, s0
	v_mul_hi_u32 v8, v8, s7
	v_mul_hi_u32 v5, v5, s7
	s_lshr_b32 s12, s5, 31
	v_mul_hi_u32 v7, v7, s7
	s_ashr_i32 s5, s5, 4
	v_lshrrev_b32_e32 v23, 3, v6
	v_add_nc_u32_e32 v6, 4, v19
	v_lshrrev_b32_e32 v3, 3, v3
	v_lshrrev_b32_e32 v8, 4, v8
	v_lshrrev_b32_e32 v5, 4, v5
	s_add_i32 s5, s5, s12
	v_mul_hi_u32 v6, v6, s7
	v_mul_u32_u24_e32 v3, 20, v3
	v_lshrrev_b32_e32 v7, 4, v7
	v_mul_i32_i24_e32 v5, s4, v5
	v_mul_i32_i24_e32 v8, s4, v8
	s_mulk_i32 s5, 0x4b00
	v_sub_nc_u32_e32 v22, v4, v3
	v_add_nc_u32_e32 v4, 16, v19
	v_add_nc_u32_e32 v3, 12, v19
	v_mul_i32_i24_e32 v7, s4, v7
	v_lshrrev_b32_e32 v6, 4, v6
	v_add3_u32 v8, v8, s5, v19
	v_mul_hi_u32 v4, v4, s7
	v_mul_hi_u32 v24, v3, s7
	v_add3_u32 v5, v5, s5, v19
	v_and_b32_e32 v26, 15, v0
	v_mul_hi_u32 v10, v10, s7
	v_add_nc_u32_e32 v11, 4, v0
	v_add3_u32 v7, v7, s5, v19
	v_mul_u32_u24_e32 v6, 20, v6
	v_lshrrev_b32_e32 v4, 4, v4
	v_lshrrev_b32_e32 v24, 4, v24
	v_add_nc_u32_e32 v15, 16, v0
	v_lshrrev_b32_e32 v3, 4, v0
	s_movk_i32 s0, 0x244
	v_mul_u32_u24_e32 v27, 20, v4
	v_mul_u32_u24_e32 v24, 20, v24
	v_add_nc_u32_e32 v9, 12, v0
	v_mul_u32_u24_e32 v26, 40, v26
	v_sub_nc_u32_e32 v7, v7, v6
	v_mul_lo_u32 v21, v21, s0
	v_sub_nc_u32_e32 v8, v8, v24
	v_sub_nc_u32_e32 v24, v5, v27
	v_mul_hi_u32 v15, v15, s7
	v_lshlrev_b32_e32 v5, 1, v26
	v_mul_u32_u24_e32 v25, 0x78, v3
	v_add_nc_u32_e32 v6, 12, v8
	v_add_nc_u32_e32 v8, 16, v24
	v_mul_hi_u32 v24, v11, s7
	v_lshrrev_b32_e32 v10, 4, v10
	v_mul_hi_u32 v26, v9, s7
	s_movk_i32 s1, 0x500
	v_mad_i32_i24 v20, v20, s4, v0
	v_lshl_add_u32 v4, v25, 1, s1
	v_mul_u32_u24_e32 v25, 20, v10
	v_add3_u32 v10, s5, v21, v19
	v_lshrrev_b32_e32 v19, 4, v24
	v_lshl_add_u32 v1, v0, 1, s1
	s_mul_i32 s1, s6, 0x1c20
	v_lshrrev_b32_e32 v15, 4, v15
	v_add3_u32 v11, v20, s1, 4
	v_lshrrev_b32_e32 v20, 4, v26
	v_add3_u32 v14, v14, v0, s1
	v_mul_u32_u24_e32 v19, 20, v19
	v_add3_u32 v17, v17, v0, s1
	v_add3_u32 v16, v16, v0, s1
	v_mul_u32_u24_e32 v15, 20, v15
	v_add3_u32 v18, v18, v0, s1
	v_mul_u32_u24_e32 v20, 20, v20
	v_add3_u32 v13, v13, v0, s1
	v_sub_nc_u32_e32 v14, v14, v19
	v_mul_lo_u32 v19, v12, s0
	v_mul_u32_u24_e32 v23, s4, v23
	v_sub_nc_u32_e32 v17, v17, v25
	v_sub_nc_u32_e32 v15, v16, v15
	v_sub_nc_u32_e32 v16, v18, v20
	v_sub_nc_u32_e32 v18, v13, v20
	v_add3_u32 v9, v22, s5, v23
	v_add_nc_u32_e32 v12, 8, v17
	v_add_nc_u32_e32 v13, 16, v15
	v_add_nc_u32_e32 v15, 12, v16
	v_add_nc_u32_e32 v16, 12, v18
	v_add3_u32 v17, v0, s1, v19
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	v_lshlrev_b32_e32 v2, 3, v0
	v_add_nc_u32_e32 v7, 4, v7
	v_add_nc_u32_e32 v14, 4, v14
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v18, 0
	s_mov_b32 s5, 0
	s_branch BB27_2
BB27_1:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v24, s5, v10
	v_add_nc_u32_e32 v26, s5, v9
	v_add_nc_u32_e32 v28, s5, v8
	v_add_nc_u32_e32 v30, s5, v7
	v_add_nc_u32_e32 v32, s5, v6
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v27, 31, v26
	v_ashrrev_i32_e32 v29, 31, v28
	v_ashrrev_i32_e32 v31, 31, v30
	v_ashrrev_i32_e32 v33, 31, v32
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_lshlrev_b64 v[32:33], 1, v[32:33]
	v_lshrrev_b32_e32 v53, 16, v18
	v_add_co_u32 v24, s0, s10, v24
	v_add_co_u32 v26, s1, s10, v26
	v_add_co_ci_u32_e64 v25, s0, s11, v25, s0
	v_add_co_ci_u32_e64 v27, s0, s11, v27, s1
	v_add_co_u32 v28, s0, s10, v28
	v_mov_b32_e32 v52, 0xffff
	v_add_co_ci_u32_e64 v29, s0, s11, v29, s0
	v_add_co_u32 v30, s0, s10, v30
	s_add_i32 s5, s5, 20
	v_add_co_ci_u32_e64 v31, s0, s11, v31, s0
	v_add_co_u32 v32, s0, s10, v32
	s_cmp_eq_u32 s5, s4
	v_add_co_ci_u32_e64 v33, s0, s11, v33, s0
	s_clause 0x4
	global_load_dwordx2 v[24:25], v[24:25], off
	global_load_dwordx2 v[26:27], v[26:27], off
	global_load_dwordx2 v[28:29], v[28:29], off
	global_load_dwordx2 v[30:31], v[30:31], off
	global_load_dwordx2 v[32:33], v[32:33], off
	s_waitcnt vmcnt(3)
	ds_write2_b64 v2, v[24:25], v[26:27] offset1:32
	s_waitcnt vmcnt(1)
	ds_write2_b64 v2, v[28:29], v[30:31] offset0:64 offset1:96
	s_waitcnt vmcnt(0)
	ds_write_b64 v2, v[32:33] offset:1024
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[24:27], v5
	ds_read_b128 v[28:31], v5 offset:32
	ds_read2_b64 v[32:35], v4 offset0:5 offset1:6
	ds_read_b128 v[36:39], v5 offset:48
	ds_read_b128 v[40:43], v5 offset:64
	ds_read_b128 v[44:47], v4
	ds_read_b128 v[48:51], v5 offset:16
	s_waitcnt lgkmcnt(6)
	v_lshrrev_b32_e32 v54, 16, v24
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v58, 16, v30
	s_waitcnt lgkmcnt(4)
	v_lshrrev_b32_e32 v61, 16, v32
	v_fmac_f16_e32 v18, v32, v24
	v_fmac_f16_e32 v53, v32, v30
	v_and_b32_e32 v60, v52, v24
	v_lshrrev_b32_e32 v55, 16, v25
	v_lshrrev_b32_e32 v59, 16, v31
	v_fmac_f16_e32 v18, v61, v54
	v_fmac_f16_e32 v53, v61, v58
	v_lshrrev_b32_e32 v24, 16, v33
	s_waitcnt lgkmcnt(0)
	v_and_b32_e32 v65, v52, v51
	v_lshrrev_b32_e32 v56, 16, v26
	v_fmac_f16_e32 v18, v33, v25
	v_fmac_f16_e32 v53, v33, v31
	v_and_b32_e32 v33, v52, v50
	v_lshrrev_b32_e32 v32, 16, v34
	v_lshrrev_b32_e32 v62, 16, v36
	v_fmac_f16_e32 v18, v24, v55
	v_fmac_f16_e32 v53, v24, v59
	v_and_b32_e32 v66, v52, v28
	v_and_b32_e32 v24, v52, v29
	v_lshrrev_b32_e32 v61, 16, v40
	v_fmac_f16_e32 v18, v34, v26
	v_fmac_f16_e32 v53, v34, v36
	v_lshl_or_b32 v67, v40, 16, v33
	v_lshrrev_b32_e32 v63, 16, v41
	v_lshl_or_b32 v65, v41, 16, v65
	v_fmac_f16_e32 v18, v32, v56
	v_fmac_f16_e32 v53, v32, v62
	v_and_b32_e32 v40, v52, v54
	v_and_b32_e32 v41, v52, v55
	v_lshrrev_b32_e32 v57, 16, v27
	v_lshrrev_b32_e32 v64, 16, v42
	v_lshl_or_b32 v66, v42, 16, v66
	v_lshl_or_b32 v55, v58, 16, v40
	v_lshl_or_b32 v68, v43, 16, v24
	v_lshrrev_b32_e32 v69, 16, v43
	v_lshl_or_b32 v58, v59, 16, v41
	v_and_b32_e32 v70, v52, v25
	v_and_b32_e32 v71, v52, v26
	v_and_b32_e32 v72, v52, v27
	v_fmac_f16_e32 v18, v35, v27
	v_lshrrev_b32_e32 v73, 16, v35
	v_fmac_f16_e32 v53, v35, v37
	ds_read_b128 v[24:27], v4 offset:80
	ds_read2_b64 v[32:35], v4 offset0:15 offset1:16
	ds_read_b128 v[40:43], v4 offset:160
	v_lshl_or_b32 v30, v30, 16, v60
	v_fmac_f16_e32 v18, v73, v57
	v_and_b32_sdwa v28, v52, v28 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v29, v52, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v54, v44, v30, v23 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v28, v64, 16, v28
	v_lshl_or_b32 v29, v69, 16, v29
	v_pk_fma_f16 v44, v44, v55, v54 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v54, 16, v38
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v59, v24, v30, v22 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v60, v32, v30, v21 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v74, v40, v30, v20 op_sel_hi:[0,1,1]
	ds_read2_b64 v[20:23], v4 offset0:25 offset1:26
	v_pk_fma_f16 v24, v24, v55, v59 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v32, v55, v60 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v40, v55, v74 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v19, v20, v30, v19 op_sel_hi:[0,1,1]
	v_and_b32_e32 v30, v52, v56
	v_pk_fma_f16 v19, v20, v55, v19 op_sel:[1,0,0]
	v_lshl_or_b32 v20, v31, 16, v70
	v_lshl_or_b32 v30, v62, 16, v30
	v_and_b32_sdwa v62, v52, v48 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v55, v52, v48
	v_and_b32_sdwa v70, v52, v49 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v19, v21, v20, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v25, v20, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v45, v20, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v33, v20, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v41, v20, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v21, v58, v19 op_sel:[1,0,0]
	v_lshl_or_b32 v21, v36, 16, v71
	v_pk_fma_f16 v20, v45, v58, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v25, v58, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v33, v58, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v41, v58, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v22, v21, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v46, v21, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v26, v21, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v34, v21, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v42, v21, v31 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v21, v37, 16, v72
	v_pk_fma_f16 v19, v22, v30, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v46, v30, v20 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v44, 16, v37
	v_pk_fma_f16 v24, v26, v30, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v34, v30, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v23, v21, v19 op_sel_hi:[0,1,1]
	v_and_b32_e32 v19, v52, v57
	v_pk_fma_f16 v26, v42, v30, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v47, v21, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v27, v21, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v35, v21, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v41, v44, 16, v19
	v_pk_fma_f16 v34, v43, v21, v26 op_sel_hi:[0,1,1]
	v_fmac_f16_e32 v53, v73, v44
	v_and_b32_sdwa v71, v52, v50 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v57, v52, v49
	v_pk_fma_f16 v56, v47, v41, v20 op_sel:[1,0,0]
	ds_read2_b64 v[19:22], v4 offset0:2 offset1:7
	v_pk_fma_f16 v58, v27, v41, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v59, v35, v41, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v60, v43, v41, v34 op_sel:[1,0,0]
	ds_read2_b64 v[24:27], v4 offset0:12 offset1:17
	ds_read_b128 v[30:33], v4 offset:176
	ds_read2_b64 v[34:37], v4 offset0:27 offset1:28
	v_pk_fma_f16 v23, v23, v41, v40 op_sel:[1,0,0]
	v_lshl_or_b32 v72, v38, 16, v55
	v_and_b32_sdwa v52, v52, v51 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v62, v54, 16, v62
	v_lshrrev_b32_e32 v54, 16, v39
	v_lshl_or_b32 v39, v39, 16, v57
	ds_read2_b64 v[40:43], v4 offset0:3 offset1:4
	ds_read_b128 v[44:47], v4 offset:64
	v_lshl_or_b32 v63, v63, 16, v52
	v_lshl_or_b32 v61, v61, 16, v71
	s_waitcnt lgkmcnt(5)
	v_fmac_f16_e32 v18, v21, v48
	v_fmac_f16_e32 v53, v21, v38
	v_pk_fma_f16 v56, v19, v72, v56 op_sel_hi:[0,1,1]
	ds_read2_b64 v[48:51], v4 offset0:13 offset1:14
	v_lshl_or_b32 v38, v54, 16, v70
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v57, v26, v72, v59 op_sel_hi:[0,1,1]
	v_pack_b32_f16 v18, v18, v53
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v23, v34, v72, v23 op_sel_hi:[0,1,1]
	ds_read_b128 v[52:55], v4 offset:144
	v_pk_fma_f16 v19, v19, v62, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v21, v62, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v24, v72, v58 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v30, v72, v60 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v34, v62, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v20, v39, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v22, v39, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v24, v62, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v26, v62, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v30, v62, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v35, v39, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v22, v38, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v25, v39, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v27, v39, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v31, v39, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v20, v38, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v35, v38, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v25, v38, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v27, v38, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v31, v38, v24 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v18, v44, v67, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v40, v67, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v20, v48, v67, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v21, v52, v67, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v32, v67, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v36, v67, v23 op_sel_hi:[0,1,1]
	ds_read2_b64 v[56:59], v4 offset0:24 offset1:29
	v_pk_fma_f16 v18, v44, v61, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v40, v61, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v48, v61, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v52, v61, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v32, v61, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v36, v61, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v45, v65, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v41, v65, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v49, v65, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v53, v65, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v33, v65, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v37, v65, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v45, v63, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v41, v63, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v49, v63, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v53, v63, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v33, v63, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v37, v63, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v46, v66, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v42, v66, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v50, v66, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v54, v66, v21 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v22, v56, v66, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v58, v66, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v46, v28, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v42, v28, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v50, v28, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v54, v28, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v56, v28, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v58, v28, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v47, v68, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v43, v68, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v55, v68, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v51, v68, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v57, v68, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v59, v68, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v43, v29, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v47, v29, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v51, v29, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v55, v29, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v57, v29, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v59, v29, v25 op_sel:[1,0,0]
	s_cbranch_scc1 BB27_4
BB27_2:
	v_add_nc_u32_e32 v24, s5, v17
	v_add_nc_u32_e32 v26, s5, v16
	v_add_nc_u32_e32 v28, s5, v14
	v_add_nc_u32_e32 v30, s5, v13
	v_add_nc_u32_e32 v32, s5, v12
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v27, 31, v26
	v_ashrrev_i32_e32 v29, 31, v28
	v_ashrrev_i32_e32 v31, 31, v30
	v_ashrrev_i32_e32 v33, 31, v32
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_add_nc_u32_e32 v34, s5, v15
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_lshlrev_b64 v[32:33], 1, v[32:33]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v24, s0, s8, v24
	v_add_co_ci_u32_e64 v25, s0, s9, v25, s0
	v_add_co_u32 v26, s0, s8, v26
	v_ashrrev_i32_e32 v35, 31, v34
	v_add_co_ci_u32_e64 v27, s0, s9, v27, s0
	v_add_co_u32 v28, s0, s8, v28
	v_add_co_ci_u32_e64 v29, s0, s9, v29, s0
	v_add_co_u32 v30, s0, s8, v30
	v_lshlrev_b64 v[34:35], 1, v[34:35]
	v_add_co_ci_u32_e64 v31, s0, s9, v31, s0
	v_add_co_u32 v32, s0, s8, v32
	v_add_co_ci_u32_e64 v33, s0, s9, v33, s0
	v_add_co_u32 v36, s0, 0x2000, v24
	v_add_co_ci_u32_e64 v37, s0, 0, v25, s0
	v_add_co_u32 v34, s0, s8, v34
	v_add_co_ci_u32_e64 v35, s0, s9, v35, s0
	s_clause 0x6
	global_load_ushort v24, v[24:25], off
	global_load_ushort v25, v[26:27], off
	global_load_ushort v26, v[28:29], off
	global_load_ushort v27, v[30:31], off
	global_load_ushort v28, v[32:33], off
	global_load_ushort v29, v[36:37], off offset:1408
	global_load_ushort v30, v[34:35], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v1, v24
	ds_write_b16 v1, v25 offset:64
	ds_write_b16 v1, v26 offset:128
	ds_write_b16 v1, v27 offset:192
	ds_write_b16 v1, v28 offset:256
	ds_write_b16 v1, v29 offset:320
	ds_write_b16 v1, v30 offset:384
	s_and_saveexec_b32 s1, vcc_lo
	s_cbranch_execz BB27_1
	v_add_nc_u32_e32 v24, s5, v11
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_add_co_u32 v24, s0, s8, v24
	v_add_co_ci_u32_e64 v25, s0, s9, v25, s0
	global_load_ushort v24, v[24:25], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v1, v24 offset:448
	s_branch BB27_1
BB27_4:
	s_mulk_i32 s6, 0x180
	v_lshlrev_b32_e32 v0, 1, v0
	v_mad_u32_u24 v1, 0xc0, v3, s6
	v_and_or_b32 v0, v0, 30, v1
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_dword v[0:1], v23, off
	global_store_short v[0:1], v18, off offset:64
	global_store_short_d16_hi v[0:1], v18, off offset:66
	global_store_dword v[0:1], v22, off offset:128
	global_store_dword v[0:1], v21, off offset:192
	global_store_dword v[0:1], v20, off offset:256
	global_store_dword v[0:1], v19, off offset:320
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_batch_matmul_kernel0
		.amdhsa_group_segment_fixed_size 1760
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 75
		.amdhsa_next_free_sgpr 13
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end27:
	.size	tvmgen_default_fused_nn_batch_matmul_kernel0, .Lfunc_end27-tvmgen_default_fused_nn_batch_matmul_kernel0

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0:
	s_mul_hi_i32 s0, s6, 0xae4c415d
	s_add_i32 s0, s0, s6
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s2, s0, 6
	s_ashr_i32 s0, s0, 5
	s_add_i32 s2, s2, s1
	s_add_i32 s0, s0, s1
	s_mul_i32 s3, s2, 0x5e
	s_mul_i32 s0, s0, 47
	s_sub_i32 s3, s6, s3
	s_bfe_i32 s1, s3, 0x80000
	s_sub_i32 s3, s6, s0
	v_mul_lo_u16 v1, s1, 11
	s_mul_i32 s1, s2, 47
	s_add_i32 s8, s1, s3
	v_lshrrev_b16 v2, 15, v1
	v_ashrrev_i16 v1, 9, v1
	s_mul_hi_i32 s0, s8, 0x51eb851f
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s0, s0, 4
	v_add_nc_u16 v1, v1, v2
	v_mov_b32_e32 v2, 6
	s_add_i32 s9, s0, s1
	s_clause 0x1
	s_load_dwordx2 s[6:7], s[4:5], 0x0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_mul_i32 s4, s9, 50
	v_lshlrev_b32_sdwa v2, v2, sext(v1) dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_0
	s_sub_i32 s4, s8, s4
	s_lshl_b32 s8, s9, 1
	s_lshl_b32 s5, s4, 8
	s_lshl_b32 s4, s4, 1
	v_add_nc_u32_e32 v1, s5, v2
	s_mul_i32 s5, s9, 0x6400
	s_add_i32 s9, s8, -1
	v_add_nc_u32_e32 v1, s5, v1
	s_add_i32 s5, s4, -1
	s_cmpk_gt_u32 s9, 0x5d
	v_add3_u32 v8, v0, v1, 0xffffcd80
	s_cbranch_scc1 BB28_20
	v_ashrrev_i32_e32 v9, 31, v8
	v_mov_b32_e32 v1, 0
	s_cmpk_gt_u32 s5, 0x63
	v_lshlrev_b64 v[3:4], 1, v[8:9]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s6, v3
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v4, vcc_lo
	v_mov_b32_e32 v4, 0
	s_cbranch_scc0 BB28_24
	v_cmp_gt_u32_e64 s9, 0x64, s4
	s_and_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccnz BB28_25
BB28_3:
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v5, 0
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB28_26
BB28_4:
	s_add_i32 s9, s4, 2
	s_cmpk_gt_u32 s9, 0x63
	s_cbranch_scc0 BB28_27
BB28_5:
	v_cmp_gt_u32_e64 s9, 0x5e, s8
	s_and_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB28_21
BB28_6:
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v6, 0
	s_movk_i32 s11, 0x63
	s_cmp_gt_u32 s5, s11
	s_cbranch_scc0 BB28_28
	v_cmp_gt_u32_e64 s10, 0x64, s4
	s_cmp_gt_u32 s4, s11
	s_cbranch_scc0 BB28_29
BB28_8:
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v10, 0
	s_andn2_b32 vcc_lo, exec_lo, s10
	s_cbranch_vccz BB28_30
BB28_9:
	s_add_i32 s10, s4, 2
	s_cmpk_gt_u32 s10, 0x63
	s_cbranch_scc0 BB28_31
BB28_10:
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccnz BB28_22
BB28_11:
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	s_movk_i32 s10, 0x63
	s_cmp_gt_u32 s5, s10
	s_cbranch_scc0 BB28_32
	v_cmp_gt_u32_e64 s9, 0x64, s4
	s_cmp_gt_u32 s4, s10
	s_cbranch_scc0 BB28_33
BB28_13:
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB28_34
BB28_14:
	s_add_i32 s9, s4, 2
	s_cmpk_gt_u32 s9, 0x63
	s_cbranch_scc0 BB28_35
BB28_15:
	s_add_i32 s8, s8, 2
	s_cmpk_gt_u32 s8, 0x5d
	s_cbranch_scc1 BB28_23
BB28_16:
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	s_movk_i32 s8, 0x63
	s_cmp_gt_u32 s5, s8
	s_cbranch_scc0 BB28_36
	v_cmp_gt_u32_e64 s5, 0x64, s4
	s_cmp_gt_u32 s4, s8
	s_cbranch_scc0 BB28_37
BB28_18:
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	s_andn2_b32 vcc_lo, exec_lo, s5
	s_cbranch_vccz BB28_38
BB28_19:
	s_add_i32 s4, s4, 2
	s_cmpk_gt_u32 s4, 0x63
	s_cbranch_scc0 BB28_39
	s_branch BB28_40
BB28_20:
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v4, 0
	v_cmp_gt_u32_e64 s9, 0x5e, s8
	s_and_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccnz BB28_6
BB28_21:
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v6, 0
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB28_11
BB28_22:
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	s_add_i32 s8, s8, 2
	s_cmpk_gt_u32 s8, 0x5d
	s_cbranch_scc0 BB28_16
BB28_23:
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	s_branch BB28_40
BB28_24:
	global_load_ushort v4, v[6:7], off
	v_cmp_gt_u32_e64 s9, 0x64, s4
	s_and_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB28_3
BB28_25:
	global_load_ushort v1, v[6:7], off offset:256
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v5, 0
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccnz BB28_4
BB28_26:
	global_load_ushort v5, v[6:7], off offset:512
	s_add_i32 s9, s4, 2
	s_cmpk_gt_u32 s9, 0x63
	s_cbranch_scc1 BB28_5
BB28_27:
	global_load_ushort v3, v[6:7], off offset:768
	v_cmp_gt_u32_e64 s9, 0x5e, s8
	s_and_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccnz BB28_6
	s_branch BB28_21
BB28_28:
	v_add_nc_u32_e32 v6, 0x3200, v8
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s6, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo
	global_load_ushort v6, v[6:7], off
	v_cmp_gt_u32_e64 s10, 0x64, s4
	s_cmp_gt_u32 s4, s11
	s_cbranch_scc1 BB28_8
BB28_29:
	v_add_nc_u32_e32 v9, 0x3280, v8
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s6, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s7, v10, vcc_lo
	global_load_ushort v9, v[9:10], off
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v10, 0
	s_andn2_b32 vcc_lo, exec_lo, s10
	s_cbranch_vccnz BB28_9
BB28_30:
	v_add_nc_u32_e32 v10, 0x3300, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v10, vcc_lo, s6, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo
	global_load_ushort v10, v[10:11], off
	s_add_i32 s10, s4, 2
	s_cmpk_gt_u32 s10, 0x63
	s_cbranch_scc1 BB28_10
BB28_31:
	v_add_nc_u32_e32 v11, 0x3380, v8
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v11, vcc_lo, s6, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s7, v12, vcc_lo
	global_load_ushort v7, v[11:12], off
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB28_11
	s_branch BB28_22
BB28_32:
	v_add_nc_u32_e32 v12, 0x6400, v8
	v_ashrrev_i32_e32 v13, 31, v12
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s6, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s7, v13, vcc_lo
	global_load_ushort v12, v[12:13], off
	v_cmp_gt_u32_e64 s9, 0x64, s4
	s_cmp_gt_u32 s4, s10
	s_cbranch_scc1 BB28_13
BB28_33:
	v_add_nc_u32_e32 v13, 0x6480, v8
	v_ashrrev_i32_e32 v14, 31, v13
	v_lshlrev_b64 v[13:14], 1, v[13:14]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s6, v13
	v_add_co_ci_u32_e32 v14, vcc_lo, s7, v14, vcc_lo
	global_load_ushort v11, v[13:14], off
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccnz BB28_14
BB28_34:
	v_add_nc_u32_e32 v14, 0x6500, v8
	v_ashrrev_i32_e32 v15, 31, v14
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v14, vcc_lo, s6, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s7, v15, vcc_lo
	global_load_ushort v14, v[14:15], off
	s_add_i32 s9, s4, 2
	s_cmpk_gt_u32 s9, 0x63
	s_cbranch_scc1 BB28_15
BB28_35:
	v_add_nc_u32_e32 v15, 0x6580, v8
	v_ashrrev_i32_e32 v16, 31, v15
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v15, vcc_lo, s6, v15
	v_add_co_ci_u32_e32 v16, vcc_lo, s7, v16, vcc_lo
	global_load_ushort v13, v[15:16], off
	s_add_i32 s8, s8, 2
	s_cmpk_gt_u32 s8, 0x5d
	s_cbranch_scc0 BB28_16
	s_branch BB28_23
BB28_36:
	v_add_nc_u32_e32 v16, 0x9600, v8
	v_ashrrev_i32_e32 v17, 31, v16
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v16, vcc_lo, s6, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s7, v17, vcc_lo
	global_load_ushort v16, v[16:17], off
	v_cmp_gt_u32_e64 s5, 0x64, s4
	s_cmp_gt_u32 s4, s8
	s_cbranch_scc1 BB28_18
BB28_37:
	v_add_nc_u32_e32 v17, 0x9680, v8
	v_ashrrev_i32_e32 v18, 31, v17
	v_lshlrev_b64 v[17:18], 1, v[17:18]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v17, vcc_lo, s6, v17
	v_add_co_ci_u32_e32 v18, vcc_lo, s7, v18, vcc_lo
	global_load_ushort v15, v[17:18], off
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	s_andn2_b32 vcc_lo, exec_lo, s5
	s_cbranch_vccnz BB28_19
BB28_38:
	v_add_nc_u32_e32 v18, 0x9700, v8
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v18, vcc_lo, s6, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s7, v19, vcc_lo
	global_load_ushort v18, v[18:19], off
	s_add_i32 s4, s4, 2
	s_cmpk_gt_u32 s4, 0x63
	s_cbranch_scc1 BB28_40
BB28_39:
	v_add_nc_u32_e32 v19, 0x9780, v8
	v_ashrrev_i32_e32 v20, 31, v19
	v_lshlrev_b64 v[19:20], 1, v[19:20]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v19, vcc_lo, s6, v19
	v_add_co_ci_u32_e32 v20, vcc_lo, s7, v20, vcc_lo
	global_load_ushort v17, v[19:20], off
BB28_40:
	s_mulk_i32 s2, 0x1780
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v8, 0, v1
	v_add_nc_u32_e32 v2, s2, v2
	s_lshl_b32 s2, s3, 7
	v_add_f16_e32 v4, 0, v4
	v_sub_f16_e32 v20, 0, v6
	v_sub_f16_e32 v24, 0, v9
	v_add3_u32 v0, v2, s2, v0
	v_sub_f16_e32 v2, 0, v1
	v_sub_f16_e32 v4, v4, v5
	v_add_f16_e32 v6, 0, v6
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_f16_e32 v19, v5, v2
	v_add_f16_e32 v5, v5, v8
	v_add_f16_e32 v8, v2, v3
	v_sub_f16_e32 v4, v4, v12
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_f16_e32 v2, v19, v11
	v_sub_f16_e32 v5, v5, v11
	v_add_f16_e32 v8, v8, v11
	v_add_f16_e32 v4, v4, v14
	v_sub_f16_e32 v6, v6, v10
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_sub_f16_e32 v19, v2, v14
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_sub_f16_e32 v21, v5, v14
	v_sub_f16_e32 v8, v8, v13
	v_add_co_u32 v2, vcc_lo, 0x92800, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	global_store_short v[0:1], v4, off
	global_store_short v[2:3], v19, off offset:1536
	v_add_f16_e32 v19, v20, v10
	v_add_co_u32 v2, vcc_lo, 0x125800, v0
	v_add_f16_e32 v20, 0, v9
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v4, vcc_lo, 0x1b8800, v0
	v_add_f16_e32 v22, v12, v19
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v23, v20, v10
	v_sub_f16_e32 v27, v20, v7
	global_store_short v[2:3], v21, off offset:1024
	global_store_short v[4:5], v8, off offset:512
	v_sub_f16_e32 v21, v22, v14
	v_sub_f16_e32 v22, v24, v10
	v_sub_f16_e32 v4, v23, v11
	v_add_co_u32 v2, vcc_lo, 0x24b800, v0
	v_sub_f16_e32 v28, v27, v11
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v8, v11, v22
	v_add_f16_e32 v25, v14, v4
	v_add_co_u32 v4, vcc_lo, 0x2de000, v0
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v26, v14, v8
	v_add_co_u32 v8, vcc_lo, 0x371000, v0
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v21, off
	global_store_short v[4:5], v25, off offset:1536
	global_store_short v[8:9], v26, off offset:1024
	v_add_f16_e32 v5, v10, v24
	v_add_f16_e32 v4, v12, v6
	v_add_f16_e32 v8, v10, v20
	v_add_co_u32 v2, vcc_lo, 0x404000, v0
	v_add_f16_e32 v21, v13, v28
	v_sub_f16_e32 v6, v5, v11
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v12, v4, v14
	v_add_co_u32 v4, vcc_lo, 0x497000, v0
	v_add_f16_e32 v20, v24, v7
	v_add_f16_e32 v10, v14, v6
	v_add_f16_e32 v6, v11, v8
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0x529800, v0
	v_sub_f16_e32 v11, v20, v11
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v14, v14, v6
	v_add_co_u32 v6, vcc_lo, 0x5bc800, v0
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v21, off offset:512
	global_store_short v[4:5], v12, off
	global_store_short v[8:9], v10, off offset:1536
	global_store_short v[6:7], v14, off offset:1024
	v_add_f16_e32 v4, v19, v16
	v_add_co_u32 v2, vcc_lo, 0x64f800, v0
	v_sub_f16_e32 v6, v23, v15
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v10, v13, v11
	v_sub_f16_e32 v11, v4, v18
	v_add_co_u32 v4, vcc_lo, 0x6e2800, v0
	v_add_f16_e32 v8, v22, v15
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v12, v18, v6
	v_add_co_u32 v6, vcc_lo, 0x775000, v0
	v_sub_f16_e32 v14, v27, v15
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v13, v18, v8
	v_add_co_u32 v8, vcc_lo, 0x808000, v0
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v0, vcc_lo, 0x89b000, v0
	v_add_f16_e32 v14, v14, v17
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v10, off offset:512
	global_store_short v[4:5], v11, off
	global_store_short v[6:7], v12, off offset:1536
	global_store_short v[8:9], v13, off offset:1024
	global_store_short v[0:1], v14, off offset:512
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 29
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end28:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0, .Lfunc_end28-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1:
	s_mul_hi_i32 s0, s6, 0xae4c415d
	s_lshl_b32 s2, s6, 13
	s_add_i32 s0, s0, s6
	s_clause 0x1
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_lshr_b32 s1, s0, 31
	s_lshr_b32 s0, s0, 6
	v_lshrrev_b32_e32 v6, 4, v0
	s_add_i32 s0, s0, s1
	s_and_b32 s1, s2, 0x2000
	s_lshl_b32 s0, s0, 14
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_or_b32 s0, s0, s1
	v_and_b32_e32 v3, 7, v0
	v_lshl_add_u32 v1, v0, 7, s0
	v_lshlrev_b32_e32 v7, 4, v0
	v_mul_u32_u24_e32 v5, 0x50, v6
	v_lshlrev_b32_e32 v4, 5, v0
	s_ashr_i32 s1, s6, 1
	v_ashrrev_i32_e32 v2, 31, v1
	v_and_or_b32 v3, 0x3f80, v7, v3
	s_movk_i32 s0, 0x400
	s_mulk_i32 s1, 0x1900
	v_lshl_add_u32 v13, v5, 1, s0
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_lshl_add_u32 v10, v0, 1, s0
	v_and_b32_e32 v12, 0x1e0, v4
	v_add_nc_u32_e32 v18, s1, v3
	v_cmp_gt_i32_e32 vcc_lo, 64, v0
	v_mov_b32_e32 v3, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v14, s0, s10, v1
	v_mov_b32_e32 v1, 0
	v_add_co_ci_u32_e64 v15, s0, s11, v2, s0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v20, 0
	s_mov_b32 s4, 0
	s_branch BB29_2
BB29_1:
	s_or_b32 exec_lo, exec_lo, s0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[29:32], v12 offset:16
	ds_read_b128 v[33:36], v12
	ds_read_b128 v[37:40], v12 offset:528
	ds_read_b128 v[41:44], v12 offset:512
	ds_read_b128 v[45:48], v13
	ds_read_b128 v[49:52], v13 offset:16
	v_mov_b32_e32 v53, 0xffff
	v_add_co_u32 v14, s0, v14, 16
	s_add_i32 s4, s4, 8
	v_add_co_ci_u32_e64 v15, s0, 0, v15, s0
	s_cmpk_eq_i32 s4, 0x80
	s_waitcnt lgkmcnt(5)
	v_lshrrev_b32_e32 v54, 16, v29
	s_waitcnt lgkmcnt(4)
	v_and_b32_e32 v58, v53, v33
	v_and_b32_sdwa v33, v53, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(2)
	v_and_b32_e32 v60, v53, v41
	v_lshrrev_b32_e32 v59, 16, v37
	v_and_b32_sdwa v41, v53, v41 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v58, v29, 16, v58
	v_and_b32_e32 v61, v53, v34
	v_lshl_or_b32 v60, v37, 16, v60
	v_and_b32_e32 v65, v53, v42
	v_lshl_or_b32 v59, v59, 16, v41
	v_lshl_or_b32 v54, v54, 16, v33
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v11, v45, v58, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v45, v60, v16 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v55, 16, v30
	v_lshl_or_b32 v61, v30, 16, v61
	v_lshrrev_b32_e32 v64, 16, v38
	v_pk_fma_f16 v11, v45, v54, v11 op_sel:[1,0,0]
	v_lshl_or_b32 v65, v38, 16, v65
	v_pk_fma_f16 v16, v45, v59, v16 op_sel:[1,0,0]
	v_and_b32_sdwa v34, v53, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v42, v53, v42 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v62, v53, v35
	v_and_b32_e32 v29, v53, v43
	v_pk_fma_f16 v11, v46, v61, v11 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v45, v55, 16, v34
	v_lshl_or_b32 v55, v64, 16, v42
	v_pk_fma_f16 v16, v46, v65, v16 op_sel_hi:[0,1,1]
	v_and_b32_e32 v30, v53, v44
	v_lshrrev_b32_e32 v56, 16, v31
	v_lshl_or_b32 v62, v31, 16, v62
	v_pk_fma_f16 v11, v46, v45, v11 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v37, 16, v39
	v_lshl_or_b32 v64, v39, 16, v29
	v_pk_fma_f16 v16, v46, v55, v16 op_sel:[1,0,0]
	v_and_b32_sdwa v39, v53, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v41, v53, v43 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v63, v53, v36
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v19, v49, v58, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v49, v60, v20 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v46, v56, 16, v39
	v_pk_fma_f16 v11, v47, v62, v11 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v56, v37, 16, v41
	v_pk_fma_f16 v16, v47, v64, v16 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v37, v53, v44 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v57, 16, v32
	v_lshl_or_b32 v66, v40, 16, v30
	v_lshrrev_b32_e32 v38, 16, v40
	v_and_b32_sdwa v40, v53, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	ds_read_b128 v[33:36], v13 offset:48
	v_pk_fma_f16 v16, v47, v56, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v49, v54, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v49, v59, v20 op_sel:[1,0,0]
	v_lshl_or_b32 v63, v32, 16, v63
	v_pk_fma_f16 v11, v47, v46, v11 op_sel:[1,0,0]
	ds_read_b128 v[29:32], v13 offset:32
	v_lshl_or_b32 v47, v57, 16, v40
	v_lshl_or_b32 v49, v38, 16, v37
	ds_read_b128 v[37:40], v13 offset:64
	ds_read_b128 v[41:44], v13 offset:80
	v_pk_fma_f16 v11, v48, v63, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v48, v66, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v50, v61, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v50, v65, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v48, v47, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v48, v49, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v50, v45, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v50, v55, v20 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v26, v33, v58, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v33, v60, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v51, v62, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v51, v64, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v33, v54, v26 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v24, v29, v58, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v29, v60, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v33, v59, v25 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v22, v37, v58, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v37, v60, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v29, v54, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v29, v59, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v34, v61, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v34, v65, v25 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v27, v41, v58, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v37, v54, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v37, v59, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v30, v61, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v30, v65, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v34, v45, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v41, v60, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v34, v55, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v41, v54, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v38, v61, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v38, v65, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v30, v45, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v30, v55, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v35, v62, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v38, v45, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v38, v55, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v35, v64, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v41, v59, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v42, v61, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v31, v62, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v31, v64, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v35, v46, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v35, v56, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v39, v62, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v39, v64, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v42, v65, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v42, v45, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v31, v46, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v31, v56, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v36, v63, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v42, v55, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v36, v66, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v39, v46, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v39, v56, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v43, v62, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v32, v63, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v32, v66, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v40, v63, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v40, v66, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v36, v47, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v36, v49, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v43, v46, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v43, v64, v35 op_sel_hi:[0,1,1]
	ds_read2_b64 v[27:30], v13 offset0:12 offset1:13
	v_pk_fma_f16 v24, v32, v47, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v32, v49, v21 op_sel:[1,0,0]
	ds_read2_b64 v[31:34], v13 offset0:14 offset1:15
	v_pk_fma_f16 v43, v43, v56, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v44, v63, v36 op_sel_hi:[0,1,1]
	ds_read2_b64 v[35:38], v13 offset0:16 offset1:17
	v_pk_fma_f16 v22, v40, v47, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v40, v49, v23 op_sel:[1,0,0]
	ds_read2_b64 v[39:42], v13 offset0:18 offset1:19
	v_pk_fma_f16 v19, v51, v46, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v51, v56, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v52, v63, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v52, v66, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v17, v27, v58, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v27, v60, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v52, v47, v19 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v8, v31, v58, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v31, v60, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v27, v54, v17 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v4, v35, v58, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v35, v60, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v27, v59, v9 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v2, v39, v58, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v39, v60, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v31, v54, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v31, v59, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v35, v54, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v35, v59, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v39, v54, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v39, v59, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v28, v61, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v28, v65, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v32, v61, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v32, v65, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v36, v61, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v36, v65, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v40, v61, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v40, v65, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v28, v45, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v28, v55, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v32, v45, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v32, v55, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v36, v45, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v36, v55, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v40, v45, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v40, v55, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v29, v62, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v29, v64, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v33, v62, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v33, v64, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v37, v62, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v37, v64, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v41, v62, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v41, v64, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v29, v46, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v29, v56, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v33, v46, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v33, v56, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v37, v46, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v37, v56, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v41, v46, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v41, v56, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v30, v63, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v30, v66, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v34, v63, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v34, v66, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v38, v63, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v38, v66, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v42, v63, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v42, v66, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v44, v66, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v52, v49, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v44, v47, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v30, v47, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v30, v49, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v44, v49, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v34, v47, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v34, v49, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v38, v47, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v38, v49, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v42, v47, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v42, v49, v1 op_sel:[1,0,0]
	s_cbranch_scc1 BB29_4
BB29_2:
	v_add_nc_u32_e32 v29, s4, v18
	v_ashrrev_i32_e32 v30, 31, v29
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_u32 v29, s0, s8, v29
	v_add_co_ci_u32_e64 v30, s0, s9, v30, s0
	v_add_co_u32 v31, s0, 0x800, v29
	v_add_co_ci_u32_e64 v32, s0, 0, v30, s0
	v_add_co_u32 v33, s0, 0x1000, v29
	v_add_co_ci_u32_e64 v34, s0, 0, v30, s0
	v_add_co_u32 v35, s0, 0x1800, v29
	v_add_co_ci_u32_e64 v36, s0, 0, v30, s0
	v_add_co_u32 v37, s0, 0x2800, v29
	v_add_co_ci_u32_e64 v38, s0, 0, v30, s0
	s_clause 0x4
	global_load_ushort v29, v[29:30], off
	global_load_ushort v30, v[31:32], off offset:512
	global_load_ushort v31, v[33:34], off offset:1024
	global_load_ushort v32, v[35:36], off offset:1536
	global_load_ushort v33, v[37:38], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v10, v29
	ds_write_b16 v10, v30 offset:160
	ds_write_b16 v10, v31 offset:320
	ds_write_b16 v10, v32 offset:480
	ds_write_b16 v10, v33 offset:640
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB29_1
	global_load_dwordx4 v[29:32], v[14:15], off
	s_waitcnt vmcnt(0)
	ds_write_b128 v7, v[29:32]
	s_branch BB29_1
BB29_4:
	v_lshlrev_b32_e32 v0, 1, v0
	v_mad_u32_u24 v6, 0x500, v6, s1
	s_lshl_b32 s0, s6, 6
	s_and_b32 s0, s0, 64
	v_and_b32_e32 v0, 30, v0
	v_or3_b32 v6, v6, s0, v0
	v_ashrrev_i32_e32 v7, 31, v6
	v_add_nc_u32_e32 v14, 0x400, v6
	v_add_nc_u32_e32 v29, 0x420, v6
	v_lshlrev_b64 v[12:13], 1, v[6:7]
	v_add_nc_u32_e32 v7, 0x480, v6
	v_ashrrev_i32_e32 v15, 31, v14
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_nc_u32_e32 v6, 0x4a0, v6
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	global_store_short v[12:13], v16, off offset:64
	global_store_dword v[12:13], v11, off
	global_store_short_d16_hi v[12:13], v16, off offset:66
	global_store_short v[12:13], v19, off offset:256
	global_store_short v[12:13], v20, off offset:320
	global_store_short_d16_hi v[12:13], v19, off offset:258
	global_store_short_d16_hi v[12:13], v20, off offset:322
	global_store_dword v[12:13], v24, off offset:512
	global_store_dword v[12:13], v21, off offset:576
	global_store_dword v[12:13], v26, off offset:768
	global_store_dword v[12:13], v25, off offset:832
	global_store_dword v[12:13], v22, off offset:1024
	global_store_dword v[12:13], v23, off offset:1088
	global_store_dword v[12:13], v27, off offset:1280
	global_store_dword v[12:13], v28, off offset:1344
	global_store_dword v[12:13], v17, off offset:1536
	global_store_dword v[12:13], v8, off offset:1792
	v_ashrrev_i32_e32 v8, 31, v7
	global_store_dword v[12:13], v9, off offset:1600
	v_lshlrev_b64 v[9:10], 1, v[14:15]
	v_lshlrev_b64 v[14:15], 1, v[29:30]
	v_lshlrev_b64 v[16:17], 1, v[7:8]
	v_ashrrev_i32_e32 v7, 31, v6
	v_add_co_u32 v9, vcc_lo, s2, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v10, vcc_lo
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	global_store_dword v[12:13], v5, off offset:1856
	global_store_dword v[9:10], v4, off
	global_store_dword v[14:15], v3, off
	global_store_dword v[16:17], v2, off
	global_store_dword v[6:7], v1, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1
		.amdhsa_group_segment_fixed_size 1824
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 67
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end29:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1, .Lfunc_end29-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2:
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshl_add_u32 v0, s6, 5, v0
	s_mov_b32 s2, 0x92800
	s_mov_b32 s3, 0x125800
	s_mov_b32 s6, 0x1b8800
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_u32 v4, vcc_lo, s2, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, s3, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0x24b800, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v10, vcc_lo, 0x2de000, v2
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v3, vcc_lo
	s_clause 0x4
	global_load_ushort v14, v[2:3], off
	global_load_ushort v15, v[4:5], off offset:1536
	global_load_ushort v16, v[6:7], off offset:1024
	global_load_ushort v17, v[8:9], off
	global_load_ushort v18, v[10:11], off offset:1536
	v_add_co_u32 v4, vcc_lo, 0x371000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x497000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0x529800, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v10, vcc_lo, s6, v2
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v12, vcc_lo, 0x404000, v2
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v3, vcc_lo
	s_clause 0x4
	global_load_ushort v19, v[4:5], off offset:1024
	global_load_ushort v20, v[6:7], off
	global_load_ushort v8, v[8:9], off offset:1536
	global_load_ushort v9, v[10:11], off offset:512
	global_load_ushort v10, v[12:13], off offset:512
	v_add_co_u32 v4, vcc_lo, 0x5bc800, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x64f800, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	s_clause 0x1
	global_load_ushort v11, v[4:5], off offset:1024
	global_load_ushort v12, v[6:7], off offset:512
	v_add_co_u32 v4, vcc_lo, 0x6e2800, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x775000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	s_clause 0x1
	global_load_ushort v13, v[4:5], off
	global_load_ushort v6, v[6:7], off offset:1536
	v_add_co_u32 v4, vcc_lo, 0x808000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v2, vcc_lo, 0x89b000, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v3, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	global_load_ushort v21, v[4:5], off offset:1024
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_load_ushort v22, v[2:3], off offset:512
	s_waitcnt vmcnt(15)
	v_add_f16_e32 v2, 0, v14
	s_waitcnt vmcnt(14)
	v_sub_f16_e32 v3, 0, v15
	s_waitcnt vmcnt(12)
	v_sub_f16_e32 v4, 0, v17
	s_waitcnt vmcnt(11)
	v_add_f16_e32 v5, 0, v18
	v_add_f16_e32 v2, v2, v15
	v_add_f16_e32 v3, v3, v16
	v_sub_f16_e32 v4, v4, v18
	v_add_f16_e32 v2, v2, v16
	v_add_f16_e32 v2, v2, v17
	s_waitcnt vmcnt(10)
	v_sub_f16_e32 v5, v5, v19
	v_sub_f16_e32 v4, v4, v19
	s_waitcnt vmcnt(7)
	v_add_f16_e32 v3, v3, v9
	v_add_f16_e32 v2, v2, v18
	s_waitcnt vmcnt(6)
	v_sub_f16_e32 v5, v5, v10
	v_add_f16_e32 v4, v4, v20
	v_sub_f16_e32 v3, v3, v18
	v_add_f16_e32 v7, v2, v19
	v_sub_f16_e32 v5, v5, v8
	v_add_f16_e32 v4, v4, v8
	v_add_co_u32 v2, vcc_lo, s2, v0
	v_add_f16_e32 v3, v19, v3
	v_add_f16_e32 v7, v7, v20
	s_waitcnt vmcnt(5)
	v_add_f16_e32 v5, v11, v5
	v_add_f16_e32 v4, v4, v11
	v_add_f16_e32 v9, v10, v3
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	s_waitcnt vmcnt(4)
	v_add_f16_e32 v5, v12, v5
	v_sub_f16_e32 v9, v9, v8
	s_waitcnt vmcnt(3)
	v_add_f16_e32 v10, v4, v13
	s_waitcnt vmcnt(2)
	v_sub_f16_e32 v13, v5, v6
	v_add_f16_e32 v8, v7, v8
	v_add_co_u32 v4, vcc_lo, s3, v0
	v_add_f16_e32 v9, v11, v9
	v_add_f16_e32 v10, v10, v6
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v8, v8, v11
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v13, v13, v21
	v_add_co_u32 v6, vcc_lo, s6, v0
	v_add_f16_e32 v9, v12, v9
	v_add_f16_e32 v10, v10, v21
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v11, v13, v22
	global_store_short v[0:1], v8, off
	global_store_short v[2:3], v9, off offset:1536
	global_store_short v[4:5], v10, off offset:1024
	global_store_short v[6:7], v11, off offset:512
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 23
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end30:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2, .Lfunc_end30-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3:
	v_lshl_add_u32 v0, s6, 6, v0
	v_mov_b32_e32 v5, 0x147b
	v_mov_b32_e32 v6, 0x92e00
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_mul_hi_i32 v1, 0x51eb851f, v0
	v_bfe_u32 v7, v0, 7, 1
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v3, 13, v1
	v_ashrrev_i32_e32 v1, 12, v1
	v_add_nc_u32_e32 v3, v3, v2
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_i32_i24_e32 v4, 0x6400, v3
	v_mul_i32_i24_e32 v1, 0x3200, v1
	v_mul_i32_i24_e32 v3, 0x1900, v3
	v_sub_nc_u32_e32 v2, v0, v4
	v_sub_nc_u32_e32 v1, v0, v1
	v_and_b32_e32 v4, 0x7f, v0
	v_mul_i32_i24_sdwa v2, sext(v2), v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
	v_ashrrev_i32_e32 v1, 1, v1
	v_or_b32_e32 v3, v3, v4
	v_lshrrev_b32_e32 v5, 31, v2
	v_ashrrev_i32_e32 v2, 26, v2
	v_mad_u32_u24 v3, 0x49700, v7, v3
	v_and_b32_e32 v1, 0xffffff80, v1
	v_add_nc_u16 v2, v2, v5
	v_mul_i32_i24_sdwa v2, sext(v2), v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
	v_add3_u32 v1, v3, v1, v2
	v_lshlrev_b32_e32 v3, 1, v4
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_ushort v3, v3, s[2:3]
	global_load_ushort v2, v[1:2], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v3, v2
	v_max_f16_e32 v2, 0, v2
	global_store_short v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 8
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end31:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3, .Lfunc_end31-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0:
	v_lshl_add_u32 v0, s6, 6, v0
	s_load_dwordx2 s[6:7], s[4:5], 0x0
	v_mul_hi_i32 v1, 0x51eb851f, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 11, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_i32_i24_e32 v2, 0x1900, v1
	v_mul_i32_i24_e32 v3, 0x6400, v1
	v_lshlrev_b32_e32 v10, 1, v1
	v_sub_nc_u32_e32 v2, v0, v2
	v_and_or_b32 v3, 0xff, v0, v3
	v_add_nc_u32_e32 v6, -1, v10
	v_ashrrev_i32_e32 v2, 8, v2
	v_cmp_gt_u32_e64 s2, 47, v6
	v_lshlrev_b32_e32 v4, 9, v2
	v_add3_u32 v4, v3, v4, 0xffffcd00
	v_lshlrev_b32_e32 v3, 1, v2
	v_ashrrev_i32_e32 v5, 31, v4
	v_add_nc_u32_e32 v7, -1, v3
	v_lshlrev_b64 v[1:2], 1, v[4:5]
	v_cmp_gt_u32_e64 s1, 50, v7
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, vcc_lo, s6, v1
	v_mov_b32_e32 v1, 0
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v2, vcc_lo
	s_and_b32 s3, s2, s1
	s_and_saveexec_b32 s0, s3
	s_cbranch_execz BB32_2
	global_load_ushort v1, v[7:8], off
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v1, 0, v1
BB32_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_cmp_gt_u32_e64 s0, 50, v3
	v_mov_b32_e32 v2, 0
	s_and_b32 s3, s2, s0
	s_and_saveexec_b32 s8, s3
	s_cbranch_execz BB32_4
	global_load_ushort v2, v[7:8], off offset:512
BB32_4:
	s_or_b32 exec_lo, exec_lo, s8
	v_mov_b32_e32 v5, 0
	s_and_saveexec_b32 s8, s3
	s_cbranch_execz BB32_6
	global_load_ushort v5, v[7:8], off offset:1024
BB32_6:
	s_or_b32 exec_lo, exec_lo, s8
	v_add_nc_u32_e32 v3, 2, v3
	v_mov_b32_e32 v6, 0
	v_cmp_gt_u32_e32 vcc_lo, 50, v3
	s_and_b32 s3, s2, vcc_lo
	s_and_saveexec_b32 s2, s3
	s_cbranch_execz BB32_8
	global_load_ushort v6, v[7:8], off offset:1536
BB32_8:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_u32_e64 s2, 47, v10
	v_mov_b32_e32 v3, 0
	s_and_b32 s3, s2, s1
	s_and_saveexec_b32 s8, s3
	s_cbranch_execz BB32_10
	v_add_nc_u32_e32 v7, 0x3200, v4
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v7, s3, s6, v7
	v_add_co_ci_u32_e64 v8, s3, s7, v8, s3
	global_load_ushort v3, v[7:8], off
BB32_10:
	s_or_b32 exec_lo, exec_lo, s8
	v_mov_b32_e32 v8, 0
	s_and_b32 s8, s2, s0
	s_and_saveexec_b32 s9, s8
	s_cbranch_execz BB32_12
	v_add_nc_u32_e32 v7, 0x3300, v4
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v7, s3, s6, v7
	v_add_co_ci_u32_e64 v8, s3, s7, v8, s3
	global_load_ushort v8, v[7:8], off
BB32_12:
	s_or_b32 exec_lo, exec_lo, s9
	v_mov_b32_e32 v7, 0
	s_and_saveexec_b32 s9, s8
	s_cbranch_execz BB32_14
	v_add_nc_u32_e32 v11, 0x3400, v4
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	v_add_co_u32 v11, s3, s6, v11
	v_add_co_ci_u32_e64 v12, s3, s7, v12, s3
	global_load_ushort v7, v[11:12], off
BB32_14:
	s_or_b32 exec_lo, exec_lo, s9
	v_mov_b32_e32 v9, 0
	s_and_b32 s2, s2, vcc_lo
	s_and_saveexec_b32 s3, s2
	s_cbranch_execz BB32_16
	v_add_nc_u32_e32 v11, 0x3500, v4
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	v_add_co_u32 v11, s2, s6, v11
	v_add_co_ci_u32_e64 v12, s2, s7, v12, s2
	global_load_ushort v9, v[11:12], off
BB32_16:
	s_or_b32 exec_lo, exec_lo, s3
	v_or_b32_e32 v11, 1, v10
	v_cmp_gt_u32_e64 s2, 47, v11
	v_mov_b32_e32 v11, 0
	s_and_b32 s3, s2, s1
	s_and_saveexec_b32 s8, s3
	s_cbranch_execz BB32_18
	v_add_nc_u32_e32 v11, 0x6400, v4
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	v_add_co_u32 v11, s3, s6, v11
	v_add_co_ci_u32_e64 v12, s3, s7, v12, s3
	global_load_ushort v11, v[11:12], off
BB32_18:
	s_or_b32 exec_lo, exec_lo, s8
	v_mov_b32_e32 v12, 0
	s_and_b32 s8, s2, s0
	s_and_saveexec_b32 s9, s8
	s_cbranch_execz BB32_20
	v_add_nc_u32_e32 v12, 0x6500, v4
	v_ashrrev_i32_e32 v13, 31, v12
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_add_co_u32 v12, s3, s6, v12
	v_add_co_ci_u32_e64 v13, s3, s7, v13, s3
	global_load_ushort v12, v[12:13], off
BB32_20:
	s_or_b32 exec_lo, exec_lo, s9
	v_mov_b32_e32 v13, 0
	s_and_saveexec_b32 s9, s8
	s_cbranch_execz BB32_22
	v_add_nc_u32_e32 v13, 0x6600, v4
	v_ashrrev_i32_e32 v14, 31, v13
	v_lshlrev_b64 v[13:14], 1, v[13:14]
	v_add_co_u32 v13, s3, s6, v13
	v_add_co_ci_u32_e64 v14, s3, s7, v14, s3
	global_load_ushort v13, v[13:14], off
BB32_22:
	s_or_b32 exec_lo, exec_lo, s9
	v_mov_b32_e32 v14, 0
	s_and_b32 s2, s2, vcc_lo
	s_and_saveexec_b32 s3, s2
	s_cbranch_execz BB32_24
	v_add_nc_u32_e32 v14, 0x6700, v4
	v_ashrrev_i32_e32 v15, 31, v14
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_u32 v14, s2, s6, v14
	v_add_co_ci_u32_e64 v15, s2, s7, v15, s2
	global_load_ushort v14, v[14:15], off
BB32_24:
	s_or_b32 exec_lo, exec_lo, s3
	v_add_nc_u32_e32 v10, 2, v10
	v_cmp_gt_u32_e64 s2, 47, v10
	v_mov_b32_e32 v10, 0
	s_and_b32 s1, s2, s1
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB32_26
	v_add_nc_u32_e32 v15, 0x9600, v4
	v_ashrrev_i32_e32 v16, 31, v15
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_add_co_u32 v15, s1, s6, v15
	v_add_co_ci_u32_e64 v16, s1, s7, v16, s1
	global_load_ushort v10, v[15:16], off
BB32_26:
	s_or_b32 exec_lo, exec_lo, s3
	v_mov_b32_e32 v15, 0
	s_and_b32 s1, s2, s0
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB32_28
	v_add_nc_u32_e32 v15, 0x9700, v4
	v_ashrrev_i32_e32 v16, 31, v15
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_add_co_u32 v15, s0, s6, v15
	v_add_co_ci_u32_e64 v16, s0, s7, v16, s0
	global_load_ushort v15, v[15:16], off
BB32_28:
	s_or_b32 exec_lo, exec_lo, s3
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	v_mov_b32_e32 v16, 0
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB32_30
	v_add_nc_u32_e32 v16, 0x9800, v4
	v_ashrrev_i32_e32 v17, 31, v16
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_add_co_u32 v16, s0, s6, v16
	v_add_co_ci_u32_e64 v17, s0, s7, v17, s0
	global_load_ushort v16, v[16:17], off
BB32_30:
	s_or_b32 exec_lo, exec_lo, s3
	v_mov_b32_e32 v17, 0
	s_and_b32 s1, s2, vcc_lo
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB32_32
	v_add_nc_u32_e32 v17, 0x9900, v4
	v_ashrrev_i32_e32 v18, 31, v17
	v_lshlrev_b64 v[17:18], 1, v[17:18]
	v_add_co_u32 v17, vcc_lo, s6, v17
	v_add_co_ci_u32_e32 v18, vcc_lo, s7, v18, vcc_lo
	global_load_ushort v17, v[17:18], off
BB32_32:
	s_or_b32 exec_lo, exec_lo, s0
	s_waitcnt vmcnt(0)
	v_sub_f16_e32 v4, v1, v5
	v_ashrrev_i32_e32 v1, 31, v0
	v_sub_f16_e32 v18, 0, v2
	v_add_f16_e32 v2, 0, v2
	v_add_f16_e32 v21, 0, v8
	v_sub_f16_e32 v4, v4, v11
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_f16_e32 v19, v5, v18
	v_add_f16_e32 v6, v18, v6
	v_add_f16_e32 v2, v5, v2
	v_add_f16_e32 v20, v4, v13
	v_sub_f16_e32 v18, 0, v3
	v_add_f16_e32 v4, v19, v12
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s4, v0
	v_sub_f16_e32 v2, v2, v12
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo
	v_add_f16_e32 v6, v6, v12
	v_sub_f16_e32 v19, v4, v13
	v_add_co_u32 v4, vcc_lo, 0x4b000, v0
	v_sub_f16_e32 v2, v2, v13
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v23, v21, v7
	v_sub_f16_e32 v8, 0, v8
	v_sub_f16_e32 v6, v6, v14
	global_store_short v[0:1], v20, off
	global_store_short v[4:5], v19, off
	v_add_f16_e32 v20, v18, v7
	v_add_co_u32 v4, vcc_lo, 0x96000, v0
	v_add_f16_e32 v27, 0, v3
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v18, vcc_lo, 0xe1000, v0
	v_add_f16_e32 v22, v11, v20
	v_add_co_ci_u32_e32 v19, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v27, v27, v7
	v_sub_f16_e32 v26, v21, v9
	global_store_short v[4:5], v2, off
	global_store_short v[18:19], v6, off
	v_sub_f16_e32 v6, v22, v13
	v_sub_f16_e32 v2, v23, v12
	v_sub_f16_e32 v22, v8, v7
	v_add_co_u32 v4, vcc_lo, 0x12c000, v0
	v_sub_f16_e32 v28, v26, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v24, v13, v2
	v_add_f16_e32 v2, v12, v22
	v_add_co_u32 v18, vcc_lo, 0x177000, v0
	v_add_co_ci_u32_e32 v19, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v25, v13, v2
	v_add_co_u32 v2, vcc_lo, 0x1c2000, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	global_store_short v[4:5], v6, off
	global_store_short v[18:19], v24, off
	global_store_short v[2:3], v25, off
	v_add_f16_e32 v5, v7, v8
	v_add_f16_e32 v4, v11, v27
	v_add_f16_e32 v7, v7, v21
	v_add_co_u32 v2, vcc_lo, 0x20d000, v0
	v_add_f16_e32 v18, v14, v28
	v_sub_f16_e32 v6, v5, v12
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v11, v4, v13
	v_add_co_u32 v4, vcc_lo, 0x258000, v0
	v_add_f16_e32 v21, v12, v7
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v19, v13, v6
	v_add_co_u32 v6, vcc_lo, 0x2a3000, v0
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v13, v13, v21
	v_add_f16_e32 v21, v8, v9
	v_add_co_u32 v8, vcc_lo, 0x2ee000, v0
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v18, off
	global_store_short v[4:5], v11, off
	global_store_short v[6:7], v19, off
	global_store_short v[8:9], v13, off
	v_add_f16_e32 v4, v20, v10
	v_add_co_u32 v2, vcc_lo, 0x339000, v0
	v_sub_f16_e32 v12, v21, v12
	v_sub_f16_e32 v6, v23, v15
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v10, v4, v16
	v_add_co_u32 v4, vcc_lo, 0x384000, v0
	v_add_f16_e32 v8, v22, v15
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v11, v14, v12
	v_add_f16_e32 v12, v16, v6
	v_add_co_u32 v6, vcc_lo, 0x3cf000, v0
	v_sub_f16_e32 v14, v26, v15
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v13, v16, v8
	v_add_co_u32 v8, vcc_lo, 0x41a000, v0
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v0, vcc_lo, 0x465000, v0
	v_add_f16_e32 v14, v14, v17
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v11, off
	global_store_short v[4:5], v10, off
	global_store_short v[6:7], v12, off
	global_store_short v[8:9], v13, off
	global_store_short v[0:1], v14, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 29
		.amdhsa_next_free_sgpr 10
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end32:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0, .Lfunc_end32-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1:
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_mul_hi_i32 s0, s6, 0x66666667
	v_lshlrev_b32_e32 v1, 4, v0
	v_lshlrev_b32_e32 v2, 6, v0
	s_lshr_b32 s4, s0, 31
	s_ashr_i32 s0, s0, 3
	s_mul_i32 s1, s6, 0x1e00
	s_add_i32 s0, s0, s4
	v_and_b32_e32 v1, 0x3f00, v1
	v_and_or_b32 v3, v0, 15, s1
	v_perm_b32 v2, s0, v2, 0x504010c
	v_lshlrev_b32_e32 v4, 2, v0
	s_movk_i32 s4, 0x2000
	v_cmp_gt_i32_e64 s0, 0x60, v0
	v_add_nc_u32_e32 v31, v3, v1
	v_lshl_or_b32 v32, v0, 1, s4
	v_and_or_b32 v33, v4, 12, v2
	v_lshlrev_b32_e32 v34, 3, v0
	v_lshlrev_b32_e32 v35, 5, v0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v30, 0
	s_mov_b32 s5, 0
BB33_1:
	s_lshl_b32 s6, s5, 4
	v_add_nc_u32_e32 v36, s6, v31
	v_ashrrev_i32_e32 v37, 31, v36
	v_lshlrev_b64 v[36:37], 1, v[36:37]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v36, vcc_lo, s8, v36
	v_add_co_ci_u32_e32 v37, vcc_lo, s9, v37, vcc_lo
	v_add_co_u32 v38, vcc_lo, 0x1000, v36
	v_add_co_ci_u32_e32 v39, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v40, vcc_lo, s4, v36
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v37, vcc_lo
	s_clause 0x2
	global_load_ushort v42, v[36:37], off
	global_load_ushort v38, v[38:39], off
	global_load_ushort v39, v[40:41], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v32, v42
	ds_write_b16 v32, v38 offset:256
	ds_write_b16 v32, v39 offset:512
	s_and_saveexec_b32 s7, s0
	s_cbranch_execz BB33_3
	v_add_co_u32 v36, vcc_lo, 0x3000, v36
	v_add_co_ci_u32_e32 v37, vcc_lo, 0, v37, vcc_lo
	global_load_ushort v36, v[36:37], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v32, v36 offset:768
BB33_3:
	s_or_b32 exec_lo, exec_lo, s7
	v_add_nc_u32_e32 v36, s6, v33
	s_mov_b32 s7, 0
	s_mov_b32 s6, -1
	v_ashrrev_i32_e32 v37, 31, v36
	v_lshlrev_b64 v[36:37], 1, v[36:37]
	v_add_co_u32 v36, vcc_lo, s10, v36
	v_add_co_ci_u32_e32 v37, vcc_lo, s11, v37, vcc_lo
	v_add_co_u32 v38, vcc_lo, 0x4000, v36
	v_add_co_ci_u32_e32 v39, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v40, vcc_lo, 0x8000, v36
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v42, vcc_lo, 0xc000, v36
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v44, vcc_lo, 0x10000, v36
	v_add_co_ci_u32_e32 v45, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v46, vcc_lo, 0x14000, v36
	v_add_co_ci_u32_e32 v47, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v48, vcc_lo, 0x18000, v36
	v_add_co_ci_u32_e32 v49, vcc_lo, 0, v37, vcc_lo
	v_add_co_u32 v50, vcc_lo, 0x1c000, v36
	v_add_co_ci_u32_e32 v51, vcc_lo, 0, v37, vcc_lo
	s_clause 0x7
	global_load_dwordx2 v[36:37], v[36:37], off
	global_load_dwordx2 v[38:39], v[38:39], off
	global_load_dwordx2 v[40:41], v[40:41], off
	global_load_dwordx2 v[42:43], v[42:43], off
	global_load_dwordx2 v[44:45], v[44:45], off
	global_load_dwordx2 v[46:47], v[46:47], off
	global_load_dwordx2 v[48:49], v[48:49], off
	global_load_dwordx2 v[50:51], v[50:51], off
	s_waitcnt vmcnt(6)
	ds_write2st64_b64 v34, v[36:37], v[38:39] offset1:2
	s_waitcnt vmcnt(4)
	ds_write2st64_b64 v34, v[40:41], v[42:43] offset0:4 offset1:6
	s_waitcnt vmcnt(2)
	ds_write2st64_b64 v34, v[44:45], v[46:47] offset0:8 offset1:10
	s_waitcnt vmcnt(0)
	ds_write2st64_b64 v34, v[48:49], v[50:51] offset0:12 offset1:14
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB33_4:
	v_or_b32_e32 v36, s7, v35
	s_lshl_b32 s7, s7, 1
	v_mov_b32_e32 v72, 0xffff
	v_mov_b32_e32 v76, s7
	s_and_b32 vcc_lo, exec_lo, s6
	v_lshlrev_b32_e32 v68, 1, v36
	s_mov_b32 s7, 8
	s_mov_b32 s6, 0
	ds_read_b128 v[36:39], v76 offset:8192
	ds_read_b128 v[40:43], v76 offset:8224
	ds_read_b128 v[44:47], v76 offset:8256
	ds_read_b128 v[48:51], v76 offset:8288
	ds_read_b128 v[52:55], v76 offset:8320
	ds_read_b128 v[56:59], v76 offset:8352
	ds_read_b128 v[60:63], v76 offset:8384
	ds_read_b128 v[64:67], v68
	ds_read_b128 v[68:71], v68 offset:32
	s_waitcnt lgkmcnt(1)
	v_and_b32_e32 v73, v72, v64
	v_and_b32_sdwa v74, v72, v64 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(0)
	v_lshrrev_b32_e32 v78, 16, v68
	v_and_b32_e32 v64, v72, v65
	v_and_b32_sdwa v75, v72, v65 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v82, v68, 16, v73
	v_lshrrev_b32_e32 v79, 16, v69
	v_lshl_or_b32 v86, v78, 16, v74
	v_lshl_or_b32 v83, v69, 16, v64
	v_and_b32_e32 v65, v72, v66
	v_pk_fma_f16 v30, v36, v82, v30 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v87, v79, 16, v75
	v_and_b32_sdwa v77, v72, v66 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v80, 16, v70
	v_lshl_or_b32 v84, v70, 16, v65
	v_pk_fma_f16 v30, v36, v86, v30 op_sel:[1,0,0]
	v_and_b32_e32 v66, v72, v67
	v_and_b32_sdwa v72, v72, v67 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v80, v80, 16, v77
	v_lshrrev_b32_e32 v81, 16, v71
	v_pk_fma_f16 v30, v37, v83, v30 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v85, v71, 16, v66
	ds_read_b128 v[64:67], v76 offset:8416
	ds_read_b128 v[68:71], v76 offset:8448
	v_lshl_or_b32 v81, v81, 16, v72
	v_pk_fma_f16 v30, v37, v87, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v40, v82, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v44, v82, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v48, v82, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v52, v82, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v38, v84, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v56, v82, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v60, v82, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v40, v86, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v44, v86, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v38, v80, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v48, v86, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v52, v86, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v56, v86, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v60, v86, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v39, v85, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v41, v83, v29 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v23, v64, v82, v23 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v22, v68, v82, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v45, v83, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v39, v81, v30 op_sel:[1,0,0]
	ds_read_b128 v[36:39], v76 offset:8480
	v_pk_fma_f16 v23, v64, v86, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v68, v86, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v49, v83, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v53, v83, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v57, v83, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v61, v83, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v65, v83, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v69, v83, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v41, v87, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v45, v87, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v49, v87, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v53, v87, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v57, v87, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v61, v87, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v65, v87, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v69, v87, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v42, v84, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v46, v84, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v50, v84, v27 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v21, v36, v82, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v54, v84, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v58, v84, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v62, v84, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v66, v84, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v36, v86, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v70, v84, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v42, v80, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v46, v80, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v50, v80, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v37, v83, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v54, v80, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v58, v80, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v62, v80, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v66, v80, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v37, v87, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v70, v80, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v43, v85, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v47, v85, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v51, v85, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v38, v84, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v55, v85, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v59, v85, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v63, v85, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v67, v85, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v38, v80, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v71, v85, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v43, v81, v29 op_sel:[1,0,0]
	ds_read_b128 v[40:43], v76 offset:8512
	v_pk_fma_f16 v28, v47, v81, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v39, v85, v21 op_sel_hi:[0,1,1]
	ds_read_b128 v[44:47], v76 offset:8544
	v_pk_fma_f16 v27, v51, v81, v27 op_sel:[1,0,0]
	ds_read_b128 v[48:51], v76 offset:8576
	v_pk_fma_f16 v26, v55, v81, v26 op_sel:[1,0,0]
	ds_read_b128 v[52:55], v76 offset:8608
	v_pk_fma_f16 v25, v59, v81, v25 op_sel:[1,0,0]
	ds_read_b128 v[56:59], v76 offset:8640
	v_pk_fma_f16 v24, v63, v81, v24 op_sel:[1,0,0]
	ds_read_b128 v[60:63], v76 offset:8672
	v_pk_fma_f16 v23, v67, v81, v23 op_sel:[1,0,0]
	ds_read_b128 v[64:67], v76 offset:8704
	v_pk_fma_f16 v22, v71, v81, v22 op_sel:[1,0,0]
	ds_read_b128 v[68:71], v76 offset:8736
	v_pk_fma_f16 v21, v39, v81, v21 op_sel:[1,0,0]
	ds_read_b128 v[36:39], v76 offset:8768
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v20, v40, v82, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v19, v44, v82, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v18, v48, v82, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v40, v86, v20 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v17, v52, v82, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v44, v86, v19 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v16, v56, v82, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v48, v86, v18 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v14, v60, v82, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v52, v86, v17 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v13, v64, v82, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v56, v86, v16 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v12, v68, v82, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v60, v86, v14 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v8, v36, v82, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v64, v86, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v41, v83, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v68, v86, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v45, v83, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v36, v86, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v49, v83, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v53, v83, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v57, v83, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v61, v83, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v65, v83, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v69, v83, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v37, v83, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v41, v87, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v45, v87, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v49, v87, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v53, v87, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v57, v87, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v61, v87, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v65, v87, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v69, v87, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v37, v87, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v42, v84, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v46, v84, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v50, v84, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v54, v84, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v58, v84, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v62, v84, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v66, v84, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v70, v84, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v38, v84, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v42, v80, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v46, v80, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v50, v80, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v54, v80, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v58, v80, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v62, v80, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v66, v80, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v70, v80, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v38, v80, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v43, v85, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v47, v85, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v51, v85, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v55, v85, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v59, v85, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v63, v85, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v67, v85, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v71, v85, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v39, v85, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v43, v81, v20 op_sel:[1,0,0]
	ds_read_b128 v[40:43], v76 offset:8800
	v_pk_fma_f16 v19, v47, v81, v19 op_sel:[1,0,0]
	ds_read_b128 v[44:47], v76 offset:8832
	v_pk_fma_f16 v18, v51, v81, v18 op_sel:[1,0,0]
	ds_read_b128 v[48:51], v76 offset:8864
	v_pk_fma_f16 v17, v55, v81, v17 op_sel:[1,0,0]
	ds_read_b128 v[52:55], v76 offset:8896
	v_pk_fma_f16 v16, v59, v81, v16 op_sel:[1,0,0]
	ds_read_b128 v[56:59], v76 offset:8928
	v_pk_fma_f16 v14, v63, v81, v14 op_sel:[1,0,0]
	ds_read_b128 v[60:63], v76 offset:8960
	v_pk_fma_f16 v13, v67, v81, v13 op_sel:[1,0,0]
	ds_read_b128 v[64:67], v76 offset:8992
	v_pk_fma_f16 v12, v71, v81, v12 op_sel:[1,0,0]
	ds_read_b128 v[68:71], v76 offset:9024
	v_pk_fma_f16 v8, v39, v81, v8 op_sel:[1,0,0]
	ds_read_b128 v[36:39], v76 offset:9056
	ds_read_b128 v[72:75], v76 offset:9088
	ds_read_b128 v[76:79], v76 offset:9120
	s_waitcnt lgkmcnt(10)
	v_pk_fma_f16 v15, v40, v82, v15 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v11, v44, v82, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v10, v48, v82, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v40, v86, v15 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v9, v52, v82, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v44, v86, v11 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v7, v56, v82, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v48, v86, v10 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v6, v60, v82, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v52, v86, v9 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v5, v64, v82, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v56, v86, v7 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v4, v68, v82, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v60, v86, v6 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v3, v36, v82, v3 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v2, v72, v82, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v1, v76, v82, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v64, v86, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v68, v86, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v36, v86, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v72, v86, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v76, v86, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v41, v83, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v45, v83, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v49, v83, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v53, v83, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v57, v83, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v61, v83, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v65, v83, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v69, v83, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v37, v83, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v73, v83, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v77, v83, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v41, v87, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v45, v87, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v49, v87, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v53, v87, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v57, v87, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v61, v87, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v65, v87, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v69, v87, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v37, v87, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v73, v87, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v77, v87, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v42, v84, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v46, v84, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v50, v84, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v54, v84, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v58, v84, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v62, v84, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v66, v84, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v70, v84, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v38, v84, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v74, v84, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v78, v84, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v42, v80, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v46, v80, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v50, v80, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v54, v80, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v58, v80, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v62, v80, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v66, v80, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v70, v80, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v38, v80, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v74, v80, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v78, v80, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v43, v85, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v47, v85, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v51, v85, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v55, v85, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v59, v85, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v63, v85, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v67, v85, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v71, v85, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v39, v85, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v75, v85, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v79, v85, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v43, v81, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v47, v81, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v51, v81, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v55, v81, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v59, v81, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v63, v81, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v67, v81, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v71, v81, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v39, v81, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v75, v81, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v79, v81, v1 op_sel:[1,0,0]
	s_cbranch_vccnz BB33_4
	s_add_i32 s5, s5, 1
	s_cmp_eq_u32 s5, 16
	s_cbranch_scc0 BB33_1
	v_lshl_add_u32 v31, v0, 1, s1
	v_add_nc_u32_e32 v33, 0x400, v31
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_nc_u32_e32 v35, 0x500, v31
	v_add_nc_u32_e32 v37, 0x600, v31
	v_add_nc_u32_e32 v39, 0x700, v31
	v_ashrrev_i32_e32 v34, 31, v33
	v_lshlrev_b64 v[41:42], 1, v[31:32]
	v_ashrrev_i32_e32 v36, 31, v35
	v_ashrrev_i32_e32 v38, 31, v37
	v_ashrrev_i32_e32 v40, 31, v39
	v_lshlrev_b64 v[32:33], 1, v[33:34]
	v_add_co_u32 v41, vcc_lo, s2, v41
	v_lshlrev_b64 v[34:35], 1, v[35:36]
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v42, vcc_lo
	v_lshlrev_b64 v[36:37], 1, v[37:38]
	v_add_co_u32 v32, vcc_lo, s2, v32
	v_add_co_ci_u32_e32 v33, vcc_lo, s3, v33, vcc_lo
	global_store_dword v[41:42], v30, off
	global_store_dword v[41:42], v29, off offset:512
	global_store_dword v[41:42], v28, off offset:1024
	global_store_dword v[41:42], v27, off offset:1536
	global_store_dword v[32:33], v26, off
	v_add_co_u32 v26, vcc_lo, s2, v34
	v_add_nc_u32_e32 v32, 0x800, v31
	v_lshlrev_b64 v[28:29], 1, v[39:40]
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v35, vcc_lo
	v_add_co_u32 v34, vcc_lo, s2, v36
	v_add_nc_u32_e32 v36, 0x900, v31
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v35, vcc_lo, s3, v37, vcc_lo
	v_add_co_u32 v28, vcc_lo, s2, v28
	global_store_dword v[26:27], v25, off
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	v_add_nc_u32_e32 v27, 0xa00, v31
	v_lshlrev_b64 v[25:26], 1, v[32:33]
	v_add_nc_u32_e32 v32, 0xc00, v31
	global_store_dword v[34:35], v24, off
	global_store_dword v[28:29], v23, off
	v_lshlrev_b64 v[23:24], 1, v[36:37]
	v_ashrrev_i32_e32 v28, 31, v27
	v_add_nc_u32_e32 v29, 0xb00, v31
	v_add_co_u32 v25, vcc_lo, s2, v25
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v26, vcc_lo, s3, v26, vcc_lo
	v_add_co_u32 v23, vcc_lo, s2, v23
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v24, vcc_lo
	v_ashrrev_i32_e32 v30, 31, v29
	global_store_dword v[25:26], v22, off
	global_store_dword v[23:24], v21, off
	v_add_co_u32 v23, vcc_lo, s2, v27
	v_add_nc_u32_e32 v27, 0xd00, v31
	v_lshlrev_b64 v[21:22], 1, v[29:30]
	v_lshlrev_b64 v[25:26], 1, v[32:33]
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v28, vcc_lo
	v_add_nc_u32_e32 v29, 0xe00, v31
	v_ashrrev_i32_e32 v28, 31, v27
	v_add_co_u32 v21, vcc_lo, s2, v21
	global_store_dword v[23:24], v20, off
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v22, vcc_lo
	v_add_co_u32 v25, vcc_lo, s2, v25
	v_lshlrev_b64 v[23:24], 1, v[27:28]
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_co_ci_u32_e32 v26, vcc_lo, s3, v26, vcc_lo
	v_add_nc_u32_e32 v20, 0xf00, v31
	global_store_dword v[21:22], v19, off
	global_store_dword v[25:26], v18, off
	v_add_co_u32 v22, vcc_lo, s2, v23
	v_lshlrev_b64 v[18:19], 1, v[29:30]
	v_add_co_ci_u32_e32 v23, vcc_lo, s3, v24, vcc_lo
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_nc_u32_e32 v24, 0x1000, v31
	v_add_nc_u32_e32 v26, 0x1100, v31
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_ashrrev_i32_e32 v27, 31, v26
	global_store_dword v[22:23], v17, off
	global_store_dword v[18:19], v16, off
	v_lshlrev_b64 v[16:17], 1, v[24:25]
	v_add_co_u32 v18, vcc_lo, s2, v20
	v_add_nc_u32_e32 v22, 0x1200, v31
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v21, vcc_lo
	v_lshlrev_b64 v[20:21], 1, v[26:27]
	v_add_nc_u32_e32 v24, 0x1300, v31
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_ashrrev_i32_e32 v23, 31, v22
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	global_store_dword v[18:19], v14, off
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_lshlrev_b64 v[18:19], 1, v[22:23]
	v_add_nc_u32_e32 v14, 0x1600, v31
	global_store_dword v[16:17], v13, off
	global_store_dword v[20:21], v12, off
	v_lshlrev_b64 v[12:13], 1, v[24:25]
	v_add_nc_u32_e32 v16, 0x1400, v31
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_add_nc_u32_e32 v20, 0x1500, v31
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	global_store_dword v[18:19], v8, off
	global_store_dword v[12:13], v15, off
	v_ashrrev_i32_e32 v15, 31, v14
	v_lshlrev_b64 v[12:13], 1, v[20:21]
	v_add_nc_u32_e32 v18, 0x1700, v31
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_add_nc_u32_e32 v20, 0x1800, v31
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_u32 v14, vcc_lo, s2, v14
	global_store_dword v[16:17], v11, off
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_lshlrev_b64 v[16:17], 1, v[18:19]
	global_store_dword v[12:13], v10, off
	global_store_dword v[14:15], v9, off
	v_lshlrev_b64 v[8:9], 1, v[20:21]
	v_add_nc_u32_e32 v10, 0x1900, v31
	v_add_co_u32 v12, vcc_lo, s2, v16
	v_add_nc_u32_e32 v14, 0x1a00, v31
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v17, vcc_lo
	v_add_nc_u32_e32 v16, 0x1b00, v31
	v_add_co_u32 v8, vcc_lo, s2, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v9, vcc_lo
	v_ashrrev_i32_e32 v15, 31, v14
	v_ashrrev_i32_e32 v17, 31, v16
	global_store_dword v[12:13], v7, off
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	global_store_dword v[8:9], v6, off
	v_add_nc_u32_e32 v8, 0x1c00, v31
	v_lshlrev_b64 v[6:7], 1, v[14:15]
	v_add_nc_u32_e32 v14, 0x1d00, v31
	v_lshlrev_b64 v[12:13], 1, v[16:17]
	v_add_co_u32 v10, vcc_lo, s2, v10
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_co_ci_u32_e32 v11, vcc_lo, s3, v11, vcc_lo
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	v_add_co_u32 v8, vcc_lo, s2, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v9, vcc_lo
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	global_store_dword v[10:11], v5, off
	global_store_dword v[6:7], v4, off
	global_store_dword v[12:13], v3, off
	global_store_dword v[8:9], v2, off
	global_store_dword v[14:15], v1, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1
		.amdhsa_group_segment_fixed_size 9152
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 88
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end33:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1, .Lfunc_end33-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2:
	s_lshl_b32 s2, s6, 3
	s_lshl_b32 s3, s6, 8
	s_lshl_b32 s6, s6, 5
	s_and_b32 s3, s3, 0x300
	s_and_b32 s6, s6, 0xfffffc00
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_or_b32 s3, s6, s3
	s_and_b32 s2, s2, 0xe0
	s_mov_b32 s6, 0xe1000
	s_or_b32 s2, s3, s2
	s_mov_b32 s3, 0x96000
	v_add_nc_u32_e32 v0, s2, v0
	s_mov_b32 s2, 0x4b000
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_u32 v4, vcc_lo, s2, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, s3, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0x12c000, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v10, vcc_lo, 0x177000, v2
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v3, vcc_lo
	s_clause 0x4
	global_load_ushort v14, v[2:3], off
	global_load_ushort v15, v[4:5], off
	global_load_ushort v16, v[6:7], off
	global_load_ushort v17, v[8:9], off
	global_load_ushort v18, v[10:11], off
	v_add_co_u32 v4, vcc_lo, 0x1c2000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x258000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0x2a3000, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v10, vcc_lo, s6, v2
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v12, vcc_lo, 0x20d000, v2
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v3, vcc_lo
	s_clause 0x4
	global_load_ushort v19, v[4:5], off
	global_load_ushort v20, v[6:7], off
	global_load_ushort v8, v[8:9], off
	global_load_ushort v9, v[10:11], off
	global_load_ushort v10, v[12:13], off
	v_add_co_u32 v4, vcc_lo, 0x2ee000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x339000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	s_clause 0x1
	global_load_ushort v11, v[4:5], off
	global_load_ushort v12, v[6:7], off
	v_add_co_u32 v4, vcc_lo, 0x384000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x3cf000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	s_clause 0x1
	global_load_ushort v13, v[4:5], off
	global_load_ushort v6, v[6:7], off
	v_add_co_u32 v4, vcc_lo, 0x41a000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v2, vcc_lo, 0x465000, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v3, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	global_load_ushort v21, v[4:5], off
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_load_ushort v22, v[2:3], off
	s_waitcnt vmcnt(15)
	v_add_f16_e32 v2, 0, v14
	s_waitcnt vmcnt(14)
	v_sub_f16_e32 v3, 0, v15
	s_waitcnt vmcnt(12)
	v_sub_f16_e32 v4, 0, v17
	s_waitcnt vmcnt(11)
	v_add_f16_e32 v5, 0, v18
	v_add_f16_e32 v2, v2, v15
	v_add_f16_e32 v3, v3, v16
	v_sub_f16_e32 v4, v4, v18
	v_add_f16_e32 v2, v2, v16
	v_add_f16_e32 v2, v2, v17
	s_waitcnt vmcnt(10)
	v_sub_f16_e32 v5, v5, v19
	v_sub_f16_e32 v4, v4, v19
	s_waitcnt vmcnt(7)
	v_add_f16_e32 v3, v3, v9
	v_add_f16_e32 v2, v2, v18
	s_waitcnt vmcnt(6)
	v_sub_f16_e32 v5, v5, v10
	v_add_f16_e32 v4, v4, v20
	v_sub_f16_e32 v3, v3, v18
	v_add_f16_e32 v7, v2, v19
	v_sub_f16_e32 v5, v5, v8
	v_add_f16_e32 v4, v4, v8
	v_add_co_u32 v2, vcc_lo, s2, v0
	v_add_f16_e32 v3, v19, v3
	v_add_f16_e32 v7, v7, v20
	s_waitcnt vmcnt(5)
	v_add_f16_e32 v5, v11, v5
	v_add_f16_e32 v4, v4, v11
	v_add_f16_e32 v9, v10, v3
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	s_waitcnt vmcnt(4)
	v_add_f16_e32 v5, v12, v5
	v_sub_f16_e32 v9, v9, v8
	s_waitcnt vmcnt(3)
	v_add_f16_e32 v10, v4, v13
	s_waitcnt vmcnt(2)
	v_sub_f16_e32 v13, v5, v6
	v_add_f16_e32 v8, v7, v8
	v_add_co_u32 v4, vcc_lo, s3, v0
	v_add_f16_e32 v9, v11, v9
	v_add_f16_e32 v10, v10, v6
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v8, v8, v11
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v13, v13, v21
	v_add_co_u32 v6, vcc_lo, s6, v0
	v_add_f16_e32 v9, v12, v9
	v_add_f16_e32 v10, v10, v21
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v11, v13, v22
	global_store_short v[0:1], v8, off
	global_store_short v[2:3], v9, off
	global_store_short v[4:5], v10, off
	global_store_short v[6:7], v11, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 23
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end34:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2, .Lfunc_end34-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3:
	v_lshl_add_u32 v0, s6, 6, v0
	v_mov_b32_e32 v5, 0x147b
	v_mov_b32_e32 v6, 0x4b000
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_mul_hi_i32 v1, 0x51eb851f, v0
	v_bfe_u32 v7, v0, 8, 1
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v3, 13, v1
	v_ashrrev_i32_e32 v1, 12, v1
	v_add_nc_u32_e32 v3, v3, v2
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_i32_i24_e32 v4, 0x6400, v3
	v_mul_i32_i24_e32 v1, 0x3200, v1
	v_mul_i32_i24_e32 v3, 0x1900, v3
	v_sub_nc_u32_e32 v2, v0, v4
	v_sub_nc_u32_e32 v1, v0, v1
	v_and_b32_e32 v4, 0xff, v0
	v_mul_i32_i24_sdwa v2, sext(v2), v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
	v_ashrrev_i32_e32 v1, 1, v1
	v_or_b32_e32 v3, v3, v4
	v_lshrrev_b32_e32 v5, 31, v2
	v_ashrrev_i32_e32 v2, 26, v2
	v_mad_u32_u24 v3, 0x25800, v7, v3
	v_and_b32_e32 v1, 0xffffff00, v1
	v_add_nc_u16 v2, v2, v5
	v_mul_i32_i24_sdwa v2, sext(v2), v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_0 src1_sel:DWORD
	v_add3_u32 v1, v3, v1, v2
	v_lshlrev_b32_e32 v3, 1, v4
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_ushort v3, v3, s[2:3]
	global_load_ushort v2, v[1:2], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v3, v2
	v_max_f16_e32 v2, 0, v2
	global_store_short v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 8
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end35:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3, .Lfunc_end35-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0:
	s_mul_hi_i32 s0, s6, 0x30c30c31
	s_clause 0x1
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s0, s0, 3
	s_add_i32 s0, s0, s1
	s_mul_i32 s1, s0, 42
	s_lshl_b32 s7, s0, 5
	s_sub_i32 s2, s6, s1
	s_bfe_i32 s1, s2, 0x80000
	v_mul_lo_u16 v1, 0xff93, s1
	s_mul_hi_i32 s1, s6, 0x92492493
	s_add_i32 s1, s1, s6
	v_lshrrev_b16 v1, 8, v1
	s_lshr_b32 s3, s1, 31
	s_ashr_i32 s1, s1, 2
	s_add_i32 s1, s1, s3
	v_add_nc_u16 v1, v1, s2
	s_mul_i32 s1, s1, 7
	s_sub_i32 s0, s6, s1
	v_lshrrev_b16 v2, 7, v1
	v_bfe_i32 v1, v1, 0, 8
	s_lshl_b32 s1, s0, 11
	v_and_b32_e32 v2, 1, v2
	v_ashrrev_i16 v1, 2, v1
	v_add_nc_u16 v1, v1, v2
	v_bfe_i32 v1, v1, 0, 16
	v_mul_lo_u32 v2, 0xc800, v1
	v_lshlrev_b32_e32 v23, 2, v1
	v_add_nc_u32_e32 v2, s7, v2
	v_add_nc_u32_e32 v1, s1, v2
	v_add_nc_u32_e32 v2, -1, v23
	s_lshl_b32 s1, s0, 2
	s_add_i32 s3, s1, -1
	v_add3_u32 v37, v0, v1, 0xffffcc00
	v_cmp_lt_u32_e32 vcc_lo, 23, v2
	s_and_b32 vcc_lo, exec_lo, vcc_lo
	s_cbranch_vccnz BB36_68
	v_ashrrev_i32_e32 v38, 31, v37
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v36, 0
	s_cmp_gt_u32 s3, 24
	v_lshlrev_b64 v[1:2], 1, v[37:38]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	s_cbranch_scc1 BB36_3
	global_load_ushort v36, v[1:2], off
BB36_3:
	s_cmp_lt_u32 s1, 25
	s_cbranch_scc0 BB36_5
	global_load_ushort v35, v[1:2], off offset:1024
BB36_5:
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v32, 0
	s_or_b32 s0, s1, 1
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_7
	v_add_nc_u32_e32 v1, 0x400, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v32, v[1:2], off
BB36_7:
	s_or_b32 s0, s1, 2
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_9
	v_add_nc_u32_e32 v1, 0x600, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v31, v[1:2], off
BB36_9:
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v34, 0
	s_or_b32 s0, s1, 3
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc0 BB36_75
	s_add_i32 s0, s1, 4
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc0 BB36_76
BB36_11:
	v_cmp_gt_u32_e64 s0, 24, v23
	s_and_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_69
BB36_12:
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	s_cmp_gt_u32 s3, 24
	s_cbranch_scc1 BB36_14
	v_add_nc_u32_e32 v1, 0x3200, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v16, v[1:2], off
BB36_14:
	s_cmp_gt_u32 s1, 24
	s_cbranch_scc1 BB36_16
	v_add_nc_u32_e32 v1, 0x3400, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v15, v[1:2], off
BB36_16:
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v5, 0
	s_or_b32 s6, s1, 1
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_18
	v_add_nc_u32_e32 v1, 0x3600, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v5, v[1:2], off
BB36_18:
	s_or_b32 s6, s1, 2
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_20
	v_add_nc_u32_e32 v1, 0x3800, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v17, v[1:2], off
BB36_20:
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	s_or_b32 s6, s1, 3
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc0 BB36_77
	s_add_i32 s6, s1, 4
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc0 BB36_78
BB36_22:
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccnz BB36_70
BB36_23:
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v12, 0
	s_cmp_gt_u32 s3, 24
	s_cbranch_scc1 BB36_25
	v_add_nc_u32_e32 v2, 0x6400, v37
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	global_load_ushort v12, v[2:3], off
BB36_25:
	s_cmp_gt_u32 s1, 24
	s_cbranch_scc1 BB36_27
	v_add_nc_u32_e32 v1, 0x6600, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v1, v[1:2], off
BB36_27:
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v2, 0
	s_or_b32 s6, s1, 1
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_29
	v_add_nc_u32_e32 v2, 0x6800, v37
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	global_load_ushort v2, v[2:3], off
BB36_29:
	s_or_b32 s6, s1, 2
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_31
	v_add_nc_u32_e32 v3, 0x6a00, v37
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v13, v[3:4], off
BB36_31:
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	s_or_b32 s6, s1, 3
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc0 BB36_79
	s_add_i32 s6, s1, 4
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc0 BB36_80
BB36_33:
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccnz BB36_71
BB36_34:
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v21, 0
	s_cmp_gt_u32 s3, 24
	s_cbranch_scc1 BB36_36
	v_add_nc_u32_e32 v9, 0x9600, v37
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s8, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s9, v10, vcc_lo
	global_load_ushort v21, v[9:10], off
BB36_36:
	s_cmp_gt_u32 s1, 24
	s_cbranch_scc1 BB36_38
	v_add_nc_u32_e32 v8, 0x9800, v37
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_load_ushort v8, v[8:9], off
BB36_38:
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v9, 0
	s_or_b32 s6, s1, 1
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_40
	v_add_nc_u32_e32 v9, 0x9a00, v37
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s8, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s9, v10, vcc_lo
	global_load_ushort v9, v[9:10], off
BB36_40:
	s_or_b32 s6, s1, 2
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_42
	v_add_nc_u32_e32 v10, 0x9c00, v37
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v10, vcc_lo, s8, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s9, v11, vcc_lo
	global_load_ushort v22, v[10:11], off
BB36_42:
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	s_or_b32 s6, s1, 3
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc0 BB36_81
	s_add_i32 s6, s1, 4
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc0 BB36_82
BB36_44:
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccnz BB36_72
BB36_45:
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v26, 0
	s_cmp_gt_u32 s3, 24
	s_cbranch_scc1 BB36_47
	v_add_nc_u32_e32 v18, 0xc800, v37
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	global_load_ushort v26, v[18:19], off
BB36_47:
	s_cmp_gt_u32 s1, 24
	s_cbranch_scc1 BB36_49
	v_add_nc_u32_e32 v18, 0xca00, v37
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	global_load_ushort v14, v[18:19], off
BB36_49:
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v18, 0
	s_or_b32 s0, s1, 1
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_51
	v_add_nc_u32_e32 v18, 0xcc00, v37
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	global_load_ushort v18, v[18:19], off
BB36_51:
	s_or_b32 s0, s1, 2
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_53
	v_add_nc_u32_e32 v19, 0xce00, v37
	v_ashrrev_i32_e32 v20, 31, v19
	v_lshlrev_b64 v[19:20], 1, v[19:20]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v19, vcc_lo, s8, v19
	v_add_co_ci_u32_e32 v20, vcc_lo, s9, v20, vcc_lo
	global_load_ushort v29, v[19:20], off
BB36_53:
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	s_or_b32 s0, s1, 3
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc0 BB36_83
	s_add_i32 s0, s1, 4
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc0 BB36_84
BB36_55:
	v_add_nc_u32_e32 v23, 4, v23
	v_cmp_lt_u32_e32 vcc_lo, 23, v23
	s_and_b32 vcc_lo, exec_lo, vcc_lo
	s_cbranch_vccnz BB36_73
BB36_56:
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v30, 0
	s_cmp_gt_u32 s3, 24
	s_cbranch_scc1 BB36_58
	v_add_nc_u32_e32 v24, 0xfa00, v37
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v24, vcc_lo, s8, v24
	v_add_co_ci_u32_e32 v25, vcc_lo, s9, v25, vcc_lo
	global_load_ushort v30, v[24:25], off
BB36_58:
	s_cmp_gt_u32 s1, 24
	s_cbranch_scc1 BB36_60
	v_add_nc_u32_e32 v23, 0xfc00, v37
	v_ashrrev_i32_e32 v24, 31, v23
	v_lshlrev_b64 v[23:24], 1, v[23:24]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v23, vcc_lo, s8, v23
	v_add_co_ci_u32_e32 v24, vcc_lo, s9, v24, vcc_lo
	global_load_ushort v23, v[23:24], off
BB36_60:
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v25, 0
	s_or_b32 s0, s1, 1
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_62
	v_add_nc_u32_e32 v27, 0xfe00, v37
	v_ashrrev_i32_e32 v28, 31, v27
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v27, vcc_lo, s8, v27
	v_add_co_ci_u32_e32 v28, vcc_lo, s9, v28, vcc_lo
	global_load_ushort v25, v[27:28], off
BB36_62:
	s_or_b32 s0, s1, 2
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_64
	v_add_nc_u32_e32 v27, 0x10000, v37
	v_ashrrev_i32_e32 v28, 31, v27
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v27, vcc_lo, s8, v27
	v_add_co_ci_u32_e32 v28, vcc_lo, s9, v28, vcc_lo
	global_load_ushort v24, v[27:28], off
BB36_64:
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v28, 0
	s_or_b32 s0, s1, 3
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_66
	v_add_nc_u32_e32 v38, 0x10200, v37
	v_ashrrev_i32_e32 v39, 31, v38
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v38, vcc_lo, s8, v38
	v_add_co_ci_u32_e32 v39, vcc_lo, s9, v39, vcc_lo
	global_load_ushort v28, v[38:39], off
BB36_66:
	s_add_i32 s1, s1, 4
	s_cmp_gt_u32 s1, 24
	s_cbranch_scc1 BB36_74
	v_add_nc_u32_e32 v37, 0x10400, v37
	v_ashrrev_i32_e32 v38, 31, v37
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v37, vcc_lo, s8, v37
	v_add_co_ci_u32_e32 v38, vcc_lo, s9, v38, vcc_lo
	global_load_ushort v27, v[37:38], off
	s_branch BB36_74
BB36_68:
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v36, 0
	v_cmp_gt_u32_e64 s0, 24, v23
	s_and_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccnz BB36_12
BB36_69:
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_23
BB36_70:
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v12, 0
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_34
BB36_71:
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v21, 0
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_45
BB36_72:
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v26, 0
	v_add_nc_u32_e32 v23, 4, v23
	v_cmp_lt_u32_e32 vcc_lo, 23, v23
	s_and_b32 vcc_lo, exec_lo, vcc_lo
	s_cbranch_vccz BB36_56
BB36_73:
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v30, 0
BB36_74:
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v36, 0, v36
	s_mov_b32 s1, 0xbe00
	s_movk_i32 s0, 0x3e00
	v_add_f16_e32 v37, 0, v35
	v_mul_f16_e32 v45, s1, v15
	v_fmac_f16_e32 v36, s1, v35
	s_lshl_b32 s6, s2, 9
	s_mov_b32 s2, 0xc100
	v_mov_b32_e32 v46, v37
	v_sub_f16_e32 v41, 0, v35
	v_fmac_f16_e32 v36, -2.0, v32
	v_fma_f16 v42, v35, -2.0, 0
	v_mul_f16_e32 v47, s1, v17
	v_fmac_f16_e32 v46, s2, v32
	v_fmac_f16_e32 v41, 0.5, v32
	v_fmac_f16_e32 v36, s0, v31
	s_movk_i32 s3, 0x4100
	v_mul_f16_e32 v38, -2.0, v1
	v_fmac_f16_e32 v46, 0.5, v31
	v_fmac_f16_e32 v41, s3, v31
	v_add_f16_e32 v43, v36, v34
	v_fma_f16 v36, v35, 0.5, 0
	v_add3_u32 v35, s6, s7, v0
	v_mul_f16_e32 v0, s1, v5
	v_add_f16_e32 v46, v46, v34
	v_fmac_f16_e32 v43, s1, v16
	v_sub_f16_e32 v42, v42, v32
	v_add_f16_e32 v41, v41, v34
	v_mul_f16_e32 v39, -2.0, v2
	v_fmac_f16_e32 v46, s1, v15
	v_fmac_f16_e32 v43, s1, v45
	v_sub_f16_e32 v52, v36, v32
	v_fmac_f16_e32 v37, s1, v32
	v_ashrrev_i32_e32 v36, 31, v35
	v_fmac_f16_e32 v46, s2, v0
	v_fmac_f16_e32 v43, -2.0, v0
	v_fmac_f16_e32 v42, 2.0, v31
	v_fmac_f16_e32 v41, s0, v15
	v_mul_f16_e32 v40, -2.0, v13
	v_fmac_f16_e32 v46, 0.5, v47
	v_fmac_f16_e32 v43, s0, v47
	v_fmac_f16_e32 v37, -2.0, v31
	v_fmac_f16_e32 v52, -0.5, v31
	v_lshlrev_b64 v[31:32], 1, v[35:36]
	v_fmac_f16_e32 v46, s1, v7
	v_fmac_f16_e32 v43, s1, v7
	v_add_f16_e32 v35, v42, v34
	v_fmac_f16_e32 v41, 0.5, v0
	v_mul_f16_e32 v48, s0, v8
	v_fmac_f16_e32 v46, -2.0, v1
	v_fmac_f16_e32 v43, -2.0, v12
	v_fmac_f16_e32 v35, -2.0, v45
	v_fmac_f16_e32 v41, s3, v47
	v_mul_f16_e32 v49, s0, v9
	v_fmac_f16_e32 v46, s2, v39
	v_fmac_f16_e32 v43, s1, v38
	v_fmac_f16_e32 v35, s0, v5
	v_fmac_f16_e32 v41, s1, v7
	v_mul_f16_e32 v50, s0, v22
	v_fmac_f16_e32 v46, 0.5, v40
	v_fmac_f16_e32 v43, -2.0, v39
	v_fmac_f16_e32 v35, 2.0, v47
	v_fmac_f16_e32 v41, 2.0, v1
	v_fmac_f16_e32 v37, s0, v34
	v_fmac_f16_e32 v46, -2.0, v3
	v_fmac_f16_e32 v43, s0, v40
	v_fmac_f16_e32 v35, s1, v7
	v_fmac_f16_e32 v41, 0.5, v39
	v_add_f16_e32 v42, v37, v33
	v_fmac_f16_e32 v46, s0, v8
	v_fmac_f16_e32 v43, -2.0, v3
	v_fmac_f16_e32 v35, -2.0, v38
	v_fmac_f16_e32 v41, s3, v40
	v_fmac_f16_e32 v42, s1, v15
	v_fmac_f16_e32 v46, s2, v49
	v_fmac_f16_e32 v43, s0, v21
	v_fmac_f16_e32 v35, 2.0, v2
	v_fmac_f16_e32 v41, -2.0, v3
	v_add_f16_e32 v44, 0, v16
	v_fmac_f16_e32 v46, 0.5, v50
	v_fmac_f16_e32 v43, s1, v48
	v_fmac_f16_e32 v35, 2.0, v40
	v_fmac_f16_e32 v41, s1, v8
	v_add_f16_e32 v36, v52, v34
	v_fmac_f16_e32 v46, s0, v11
	v_fmac_f16_e32 v43, -2.0, v49
	v_fmac_f16_e32 v35, -2.0, v3
	v_fmac_f16_e32 v41, 0.5, v49
	v_fmac_f16_e32 v42, s1, v0
	v_fmac_f16_e32 v36, 0.5, v45
	v_fmac_f16_e32 v43, s0, v50
	v_fmac_f16_e32 v35, -2.0, v48
	v_fmac_f16_e32 v44, s1, v15
	v_fmac_f16_e32 v41, s3, v50
	v_mul_f16_e32 v51, s1, v7
	v_fmac_f16_e32 v43, s0, v11
	v_fmac_f16_e32 v42, -2.0, v47
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v31, vcc_lo, s4, v31
	v_fmac_f16_e32 v35, s1, v9
	v_fmac_f16_e32 v44, -2.0, v5
	v_add_f16_e32 v37, v43, v26
	v_add_f16_e32 v43, v46, v14
	v_add_co_ci_u32_e32 v32, vcc_lo, s5, v32, vcc_lo
	v_fmac_f16_e32 v36, s0, v5
	v_fmac_f16_e32 v41, s0, v11
	v_fmac_f16_e32 v37, s1, v14
	v_fmac_f16_e32 v43, s2, v18
	v_fmac_f16_e32 v42, s0, v51
	v_add_co_u32 v33, vcc_lo, 0xa800, v31
	v_fmac_f16_e32 v35, 2.0, v50
	v_fmac_f16_e32 v37, -2.0, v18
	v_fmac_f16_e32 v43, 0.5, v29
	v_fmac_f16_e32 v36, -0.5, v47
	v_sub_f16_e32 v0, v41, v14
	v_fmac_f16_e32 v44, s0, v17
	v_fmac_f16_e32 v37, s0, v29
	v_add_f16_e32 v41, v43, v20
	v_add_co_ci_u32_e32 v34, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v42, s1, v6
	v_fmac_f16_e32 v35, s0, v11
	v_add_f16_e32 v37, v37, v20
	v_fmac_f16_e32 v36, s1, v7
	v_fmac_f16_e32 v0, 0.5, v18
	v_fmac_f16_e32 v42, -2.0, v1
	global_store_short v[33:34], v41, off
	global_store_short v[31:32], v37, off
	v_add_f16_e32 v37, v44, v7
	v_fmac_f16_e32 v35, -2.0, v14
	v_fmac_f16_e32 v36, 0.5, v38
	v_fmac_f16_e32 v42, s1, v39
	v_fmac_f16_e32 v0, s3, v29
	v_mov_b32_e32 v38, v37
	v_sub_f16_e32 v35, v35, v18
	v_mul_f16_e32 v43, s2, v1
	v_add_co_u32 v33, vcc_lo, 0x15000, v31
	v_fmac_f16_e32 v36, 2.0, v2
	v_fmac_f16_e32 v38, s2, v12
	v_fmac_f16_e32 v42, -2.0, v40
	v_mul_f16_e32 v39, -2.0, v3
	v_add_f16_e32 v0, v0, v20
	v_add_co_ci_u32_e32 v34, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v35, 2.0, v29
	v_add_f16_e32 v46, 0, v15
	v_fmac_f16_e32 v38, s1, v43
	v_mul_f16_e32 v44, s2, v2
	v_fmac_f16_e32 v36, -0.5, v40
	v_fmac_f16_e32 v42, s0, v39
	global_store_short v[33:34], v0, off
	v_add_f16_e32 v0, v35, v20
	v_mov_b32_e32 v35, v46
	v_fmac_f16_e32 v38, -2.0, v44
	v_mul_f16_e32 v45, s2, v13
	v_fmac_f16_e32 v36, -2.0, v3
	v_fmac_f16_e32 v42, -2.0, v4
	v_fmac_f16_e32 v35, s2, v5
	v_add_co_u32 v33, vcc_lo, 0x1f800, v31
	v_fmac_f16_e32 v38, s0, v45
	v_fmac_f16_e32 v36, 0.5, v48
	v_fmac_f16_e32 v42, s0, v8
	v_add_co_ci_u32_e32 v34, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v35, 0.5, v17
	v_fmac_f16_e32 v38, s2, v3
	v_fmac_f16_e32 v36, s1, v9
	v_fmac_f16_e32 v42, s1, v49
	global_store_short v[33:34], v0, off
	v_add_f16_e32 v0, v35, v7
	v_fmac_f16_e32 v38, 0.5, v21
	v_mul_f16_e32 v47, 0.5, v8
	v_fmac_f16_e32 v36, -0.5, v50
	v_fmac_f16_e32 v42, -2.0, v50
	v_mul_f16_e32 v33, s0, v11
	v_sub_f16_e32 v50, 0, v15
	v_mov_b32_e32 v49, v0
	v_fmac_f16_e32 v38, s1, v47
	v_mul_f16_e32 v48, 0.5, v9
	v_fmac_f16_e32 v42, s0, v33
	v_mov_b32_e32 v33, v50
	v_fmac_f16_e32 v36, s0, v11
	v_fmac_f16_e32 v49, s2, v1
	v_fmac_f16_e32 v38, -2.0, v48
	v_mul_f16_e32 v51, 0.5, v22
	v_fmac_f16_e32 v33, 0.5, v5
	v_fmac_f16_e32 v36, 0.5, v14
	v_fmac_f16_e32 v49, s2, v44
	v_fmac_f16_e32 v42, s0, v10
	v_fmac_f16_e32 v38, s0, v51
	v_fmac_f16_e32 v33, s3, v17
	v_sub_f16_e32 v34, v36, v18
	v_fmac_f16_e32 v49, 0.5, v45
	v_add_f16_e32 v36, v14, v42
	v_fmac_f16_e32 v38, 0.5, v11
	v_add_f16_e32 v33, v33, v7
	v_fmac_f16_e32 v34, -0.5, v29
	v_fmac_f16_e32 v49, s2, v3
	v_fmac_f16_e32 v36, s1, v18
	v_add_f16_e32 v38, v38, v26
	v_mov_b32_e32 v42, v33
	v_add_f16_e32 v39, v34, v20
	v_add_co_u32 v34, vcc_lo, 0x2a000, v31
	v_fmac_f16_e32 v49, 0.5, v8
	v_fmac_f16_e32 v38, s1, v14
	v_add_co_ci_u32_e32 v35, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v36, -2.0, v29
	v_fmac_f16_e32 v42, s3, v1
	v_fmac_f16_e32 v49, s2, v48
	v_fmac_f16_e32 v38, -2.0, v18
	global_store_short v[34:35], v39, off
	v_fma_f16 v39, v15, -2.0, 0
	v_fmac_f16_e32 v42, 0.5, v44
	v_fmac_f16_e32 v36, s0, v20
	v_fmac_f16_e32 v49, 0.5, v51
	v_fmac_f16_e32 v38, s0, v29
	v_sub_f16_e32 v34, v39, v5
	v_add_co_u32 v35, vcc_lo, 0x34800, v31
	v_fmac_f16_e32 v42, s3, v45
	v_add_f16_e32 v52, v19, v36
	v_add_co_ci_u32_e32 v36, vcc_lo, 0, v32, vcc_lo
	v_add_co_u32 v40, vcc_lo, 0x3f000, v31
	v_fmac_f16_e32 v49, 0.5, v11
	v_fmac_f16_e32 v34, 2.0, v17
	v_add_f16_e32 v38, v38, v20
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v42, s2, v3
	v_add_f16_e32 v49, v49, v14
	v_add_f16_e32 v34, v34, v7
	global_store_short v[35:36], v52, off
	global_store_short v[40:41], v38, off
	v_mov_b32_e32 v36, v46
	v_fmac_f16_e32 v42, -0.5, v8
	v_fmac_f16_e32 v49, s2, v18
	v_fma_f16 v38, v15, 0.5, 0
	v_mov_b32_e32 v52, v34
	v_fmac_f16_e32 v36, s1, v5
	v_fmac_f16_e32 v42, 0.5, v48
	v_fmac_f16_e32 v49, 0.5, v29
	v_sub_f16_e32 v35, v38, v5
	v_fmac_f16_e32 v52, -2.0, v43
	v_fmac_f16_e32 v36, -2.0, v17
	v_fmac_f16_e32 v42, s3, v51
	v_add_co_u32 v40, vcc_lo, 0x49800, v31
	v_fmac_f16_e32 v35, -0.5, v17
	v_add_f16_e32 v49, v49, v20
	v_fmac_f16_e32 v36, s0, v7
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v52, s3, v2
	v_fmac_f16_e32 v42, 0.5, v11
	v_add_f16_e32 v35, v35, v7
	v_add_f16_e32 v36, v36, v6
	global_store_short v[40:41], v49, off
	v_sub_f16_e32 v41, 0, v16
	v_fmac_f16_e32 v52, 2.0, v45
	v_sub_f16_e32 v40, v42, v14
	v_mov_b32_e32 v42, v36
	v_mov_b32_e32 v49, v35
	v_fmac_f16_e32 v41, s0, v15
	v_fmac_f16_e32 v52, s2, v3
	v_fmac_f16_e32 v40, 0.5, v18
	v_fmac_f16_e32 v42, s2, v1
	v_fmac_f16_e32 v49, 0.5, v43
	v_fmac_f16_e32 v41, 2.0, v5
	v_fmac_f16_e32 v52, -2.0, v47
	v_fmac_f16_e32 v40, s3, v29
	v_fmac_f16_e32 v42, s1, v44
	v_fmac_f16_e32 v49, s3, v2
	v_fmac_f16_e32 v41, s1, v17
	v_fmac_f16_e32 v52, -0.5, v9
	v_add_f16_e32 v43, v40, v20
	v_add_co_u32 v40, vcc_lo, 0x54000, v31
	v_fmac_f16_e32 v49, -0.5, v45
	v_fmac_f16_e32 v42, -2.0, v45
	v_sub_f16_e32 v45, v41, v7
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v52, 2.0, v51
	v_mul_f16_e32 v44, s2, v3
	v_fmac_f16_e32 v49, s2, v3
	v_fmac_f16_e32 v45, 0.5, v12
	global_store_short v[40:41], v43, off
	v_mov_b32_e32 v43, v50
	v_fmac_f16_e32 v42, s0, v44
	v_fmac_f16_e32 v52, 0.5, v11
	v_mul_f16_e32 v44, 0.5, v1
	v_fmac_f16_e32 v49, 0.5, v47
	v_fmac_f16_e32 v43, s3, v5
	v_mul_f16_e32 v47, 0.5, v2
	v_fmac_f16_e32 v52, -2.0, v14
	v_fmac_f16_e32 v45, s1, v44
	v_fmac_f16_e32 v42, s2, v4
	v_fmac_f16_e32 v43, -0.5, v17
	v_fmac_f16_e32 v49, -0.5, v9
	v_sub_f16_e32 v40, v52, v18
	v_fmac_f16_e32 v45, -2.0, v47
	v_mul_f16_e32 v52, 0.5, v13
	v_sub_f16_e32 v43, v43, v7
	v_fmac_f16_e32 v42, 0.5, v8
	v_fmac_f16_e32 v49, -0.5, v51
	v_fmac_f16_e32 v40, 2.0, v29
	v_fmac_f16_e32 v45, s0, v52
	v_fmac_f16_e32 v43, 0.5, v1
	v_fmac_f16_e32 v42, s1, v48
	v_fmac_f16_e32 v46, -0.5, v5
	v_fmac_f16_e32 v49, 0.5, v11
	v_fmac_f16_e32 v45, 0.5, v3
	v_fmac_f16_e32 v43, s2, v47
	v_fmac_f16_e32 v42, -2.0, v51
	v_mul_f16_e32 v48, 0.5, v11
	v_mul_f16_e32 v51, s3, v8
	v_fmac_f16_e32 v45, s3, v21
	v_add_f16_e32 v53, v40, v20
	v_add_co_u32 v40, vcc_lo, 0x5e800, v31
	v_fmac_f16_e32 v43, 0.5, v52
	v_fmac_f16_e32 v46, s2, v17
	v_fmac_f16_e32 v42, s0, v48
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v49, 0.5, v14
	v_fmac_f16_e32 v45, s1, v51
	v_mul_f16_e32 v48, s3, v9
	v_fmac_f16_e32 v43, 0.5, v3
	v_sub_f16_e32 v46, v46, v7
	global_store_short v[40:41], v53, off
	v_sub_f16_e32 v40, v49, v18
	v_fmac_f16_e32 v45, -2.0, v48
	v_mul_f16_e32 v49, s3, v22
	v_fmac_f16_e32 v42, 0.5, v10
	v_fmac_f16_e32 v43, s3, v8
	v_fmac_f16_e32 v46, -0.5, v1
	v_fmac_f16_e32 v40, -0.5, v29
	v_fmac_f16_e32 v45, s0, v49
	v_add_f16_e32 v42, v14, v42
	v_fmac_f16_e32 v43, s2, v48
	v_fmac_f16_e32 v46, 0.5, v47
	v_add_f16_e32 v53, v40, v20
	v_add_co_u32 v40, vcc_lo, 0x69000, v31
	v_fmac_f16_e32 v45, s3, v11
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v42, s1, v18
	v_fmac_f16_e32 v43, 0.5, v49
	v_fmac_f16_e32 v46, s3, v52
	v_add_f16_e32 v45, v45, v26
	global_store_short v[40:41], v53, off
	v_fma_f16 v53, v15, 2.0, 0
	v_fmac_f16_e32 v42, -2.0, v29
	v_fmac_f16_e32 v43, s3, v11
	v_fmac_f16_e32 v46, 0.5, v3
	v_fmac_f16_e32 v45, s1, v14
	v_add_f16_e32 v54, v53, v5
	v_fmac_f16_e32 v42, s0, v20
	v_add_f16_e32 v43, v43, v14
	v_fmac_f16_e32 v46, s2, v8
	v_fmac_f16_e32 v45, -2.0, v18
	v_add_co_u32 v40, vcc_lo, 0x73800, v31
	v_fmac_f16_e32 v54, -2.0, v17
	v_add_f16_e32 v42, v19, v42
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v43, s2, v18
	v_fmac_f16_e32 v46, 0.5, v48
	v_fmac_f16_e32 v45, s0, v29
	v_fmac_f16_e32 v50, s0, v5
	v_sub_f16_e32 v54, v54, v7
	global_store_short v[40:41], v42, off
	v_add_co_u32 v40, vcc_lo, 0x7e000, v31
	v_fmac_f16_e32 v46, s3, v49
	v_fmac_f16_e32 v43, 0.5, v29
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v50, 2.0, v17
	v_add_f16_e32 v45, v45, v20
	v_fmac_f16_e32 v54, -2.0, v44
	v_add_co_u32 v42, vcc_lo, 0x88800, v31
	v_add_f16_e32 v55, v43, v20
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v46, s3, v11
	global_store_short v[40:41], v45, off
	v_fma_f16 v45, v15, -0.5, 0
	v_fmac_f16_e32 v50, s1, v7
	v_fmac_f16_e32 v54, -0.5, v2
	global_store_short v[42:43], v55, off
	v_sub_f16_e32 v40, v46, v14
	v_fma_f16 v42, v16, -2.0, 0
	v_mul_f16_e32 v46, -2.0, v15
	v_sub_f16_e32 v43, v50, v6
	v_add_f16_e32 v41, v45, v5
	v_fmac_f16_e32 v54, 2.0, v52
	v_mul_f16_e32 v50, -2.0, v5
	v_fmac_f16_e32 v42, s1, v46
	v_fmac_f16_e32 v43, 0.5, v1
	v_fmac_f16_e32 v41, 0.5, v17
	v_fmac_f16_e32 v54, 0.5, v3
	v_mul_f16_e32 v55, -2.0, v17
	v_fmac_f16_e32 v42, -2.0, v50
	v_fmac_f16_e32 v43, s1, v47
	v_sub_f16_e32 v56, v41, v7
	v_fmac_f16_e32 v54, -2.0, v51
	v_fmac_f16_e32 v40, 0.5, v18
	v_fmac_f16_e32 v42, s0, v55
	v_fmac_f16_e32 v43, -2.0, v52
	v_fmac_f16_e32 v56, 0.5, v44
	v_mul_f16_e32 v44, 0.5, v3
	v_fmac_f16_e32 v54, s2, v9
	v_fmac_f16_e32 v42, -2.0, v7
	v_fmac_f16_e32 v40, s3, v29
	v_fmac_f16_e32 v56, -0.5, v2
	v_fmac_f16_e32 v43, s0, v44
	v_mov_b32_e32 v44, v39
	v_fmac_f16_e32 v54, 2.0, v49
	v_sub_f16_e32 v42, v42, v12
	v_add_f16_e32 v47, v40, v20
	v_add_co_u32 v40, vcc_lo, 0x93000, v31
	v_fmac_f16_e32 v44, s2, v50
	v_fmac_f16_e32 v54, s3, v11
	v_fmac_f16_e32 v42, s0, v1
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v56, -0.5, v52
	v_fmac_f16_e32 v44, 0.5, v55
	v_fmac_f16_e32 v54, -2.0, v14
	v_fmac_f16_e32 v42, 2.0, v2
	v_fmac_f16_e32 v43, 0.5, v4
	global_store_short v[40:41], v47, off
	v_fmac_f16_e32 v44, -2.0, v7
	v_sub_f16_e32 v40, v54, v18
	v_fmac_f16_e32 v42, s1, v13
	v_fmac_f16_e32 v56, 0.5, v3
	v_fmac_f16_e32 v43, s3, v8
	v_sub_f16_e32 v44, v44, v1
	v_fmac_f16_e32 v40, 2.0, v29
	v_sub_f16_e32 v42, v42, v3
	v_fmac_f16_e32 v53, 0.5, v50
	v_fmac_f16_e32 v56, 0.5, v51
	v_fmac_f16_e32 v44, s3, v2
	v_fmac_f16_e32 v43, s1, v48
	v_add_f16_e32 v47, v40, v20
	v_add_co_u32 v40, vcc_lo, 0x9d800, v31
	v_fmac_f16_e32 v53, s3, v55
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v42, 2.0, v21
	v_add_f16_e32 v51, v8, v8
	v_fmac_f16_e32 v44, -0.5, v13
	v_fmac_f16_e32 v56, s2, v9
	v_fmac_f16_e32 v43, -2.0, v49
	v_mul_f16_e32 v48, s3, v11
	global_store_short v[40:41], v47, off
	v_fmac_f16_e32 v42, s1, v51
	v_add_f16_e32 v47, v9, v9
	v_fmac_f16_e32 v53, -2.0, v7
	v_sub_f16_e32 v44, v44, v3
	v_fmac_f16_e32 v56, -0.5, v49
	v_fmac_f16_e32 v43, s0, v48
	v_fmac_f16_e32 v42, -2.0, v47
	v_add_f16_e32 v49, v53, v1
	v_add_f16_e32 v48, v22, v22
	v_fmac_f16_e32 v44, 2.0, v8
	v_fmac_f16_e32 v56, s3, v11
	v_fmac_f16_e32 v43, s3, v10
	v_fmac_f16_e32 v49, -0.5, v2
	v_fmac_f16_e32 v42, s0, v48
	v_fmac_f16_e32 v44, s2, v47
	v_fmac_f16_e32 v56, 0.5, v14
	v_add_f16_e32 v43, v14, v43
	v_fmac_f16_e32 v49, s2, v13
	v_fmac_f16_e32 v42, 2.0, v11
	v_fmac_f16_e32 v44, 0.5, v48
	v_sub_f16_e32 v40, v56, v18
	v_fmac_f16_e32 v43, s1, v18
	v_sub_f16_e32 v49, v49, v3
	v_add_f16_e32 v52, v42, v26
	v_fmac_f16_e32 v44, 2.0, v11
	v_fmac_f16_e32 v40, -0.5, v29
	v_fmac_f16_e32 v43, -2.0, v29
	v_fmac_f16_e32 v49, -2.0, v8
	v_fmac_f16_e32 v52, s1, v14
	v_add_f16_e32 v44, v44, v14
	v_add_f16_e32 v53, v40, v20
	v_add_co_u32 v40, vcc_lo, 0xa8000, v31
	v_fmac_f16_e32 v43, s0, v20
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v52, -2.0, v18
	v_fmac_f16_e32 v49, 0.5, v47
	v_add_co_u32 v42, vcc_lo, 0xb2800, v31
	v_fmac_f16_e32 v44, s2, v18
	v_add_f16_e32 v54, v19, v43
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v52, s0, v29
	v_fmac_f16_e32 v49, s3, v48
	v_fmac_f16_e32 v44, 0.5, v29
	global_store_short v[40:41], v53, off
	global_store_short v[42:43], v54, off
	v_add_co_u32 v40, vcc_lo, 0xbd000, v31
	v_add_f16_e32 v52, v52, v20
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v32, vcc_lo
	v_add_co_u32 v42, vcc_lo, 0xc7800, v31
	v_fmac_f16_e32 v49, 2.0, v11
	v_add_f16_e32 v44, v44, v20
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v39, s1, v50
	v_fma_f16 v53, v46, -2.0, 0
	v_mul_f16_e32 v17, 0.5, v17
	global_store_short v[40:41], v52, off
	global_store_short v[42:43], v44, off
	v_sub_f16_e32 v40, v49, v14
	v_mul_f16_e32 v49, 0.5, v15
	v_fma_f16 v42, v16, 0.5, 0
	v_fmac_f16_e32 v39, -2.0, v55
	v_mul_f16_e32 v41, -2.0, v7
	v_fma_f16 v43, v46, 0.5, 0
	v_fmac_f16_e32 v53, 2.0, v5
	v_mul_f16_e32 v46, 0.5, v5
	v_fmac_f16_e32 v42, s1, v49
	v_fmac_f16_e32 v40, 0.5, v18
	v_fmac_f16_e32 v39, s0, v41
	v_fmac_f16_e32 v53, 2.0, v55
	v_fmac_f16_e32 v43, 2.0, v5
	v_fmac_f16_e32 v42, -2.0, v46
	v_fmac_f16_e32 v40, s3, v29
	v_fmac_f16_e32 v39, -2.0, v6
	v_fmac_f16_e32 v53, -2.0, v7
	v_add_co_u32 v15, vcc_lo, 0xd2000, v31
	v_fmac_f16_e32 v42, s0, v17
	v_add_f16_e32 v40, v40, v20
	v_add_co_ci_u32_e32 v16, vcc_lo, 0, v32, vcc_lo
	v_sub_f16_e32 v39, v39, v1
	v_fmac_f16_e32 v43, -0.5, v55
	v_fmac_f16_e32 v53, 2.0, v1
	v_fmac_f16_e32 v42, 0.5, v7
	global_store_short v[15:16], v40, off
	v_mov_b32_e32 v40, v38
	v_fmac_f16_e32 v39, s0, v2
	v_add_f16_e32 v41, v53, v2
	v_sub_f16_e32 v15, v42, v12
	v_fmac_f16_e32 v43, -2.0, v7
	v_fmac_f16_e32 v40, s2, v46
	v_fmac_f16_e32 v39, 2.0, v13
	v_fmac_f16_e32 v41, -2.0, v13
	v_fmac_f16_e32 v15, s0, v1
	v_fmac_f16_e32 v43, -0.5, v1
	v_fmac_f16_e32 v40, 0.5, v17
	v_fmac_f16_e32 v39, s1, v3
	v_sub_f16_e32 v16, v41, v3
	v_fmac_f16_e32 v15, 2.0, v2
	v_add_f16_e32 v41, v43, v2
	v_fmac_f16_e32 v40, 0.5, v7
	v_sub_f16_e32 v39, v39, v4
	v_fmac_f16_e32 v16, -2.0, v51
	v_fmac_f16_e32 v15, s1, v13
	v_fmac_f16_e32 v41, 0.5, v13
	v_sub_f16_e32 v40, v40, v1
	v_fmac_f16_e32 v39, 2.0, v8
	v_fmac_f16_e32 v16, -2.0, v9
	v_sub_f16_e32 v15, v15, v3
	v_sub_f16_e32 v41, v41, v3
	v_fmac_f16_e32 v40, s3, v2
	v_fmac_f16_e32 v39, s1, v47
	v_mul_f16_e32 v47, -0.5, v8
	v_fmac_f16_e32 v15, -0.5, v21
	v_fmac_f16_e32 v41, 0.5, v51
	v_fmac_f16_e32 v40, -0.5, v13
	v_fmac_f16_e32 v39, -2.0, v48
	v_add_f16_e32 v42, v11, v11
	v_fmac_f16_e32 v15, s1, v47
	v_fmac_f16_e32 v41, -2.0, v9
	v_mul_f16_e32 v50, -0.5, v9
	v_fmac_f16_e32 v16, 2.0, v48
	v_sub_f16_e32 v40, v40, v3
	v_fmac_f16_e32 v39, s0, v42
	v_fmac_f16_e32 v41, -0.5, v48
	v_mul_f16_e32 v48, -0.5, v22
	v_fmac_f16_e32 v15, -2.0, v50
	v_fmac_f16_e32 v16, 2.0, v11
	v_fmac_f16_e32 v40, -0.5, v8
	v_fmac_f16_e32 v39, 2.0, v10
	v_fmac_f16_e32 v41, 2.0, v11
	v_fmac_f16_e32 v15, s0, v48
	v_fmac_f16_e32 v16, -2.0, v14
	v_fmac_f16_e32 v40, s2, v50
	v_add_f16_e32 v39, v14, v39
	v_fmac_f16_e32 v41, 0.5, v14
	v_fmac_f16_e32 v15, -0.5, v11
	v_sub_f16_e32 v16, v16, v18
	v_fmac_f16_e32 v40, 0.5, v48
	v_fmac_f16_e32 v39, s1, v18
	v_sub_f16_e32 v41, v41, v18
	v_add_f16_e32 v43, v15, v26
	v_fmac_f16_e32 v16, 2.0, v29
	v_fmac_f16_e32 v40, -0.5, v11
	v_fmac_f16_e32 v39, -2.0, v29
	v_add_co_u32 v15, vcc_lo, 0xdc800, v31
	v_fmac_f16_e32 v43, s1, v14
	v_add_f16_e32 v42, v16, v20
	v_add_co_ci_u32_e32 v16, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v44, v40, v14
	v_fmac_f16_e32 v39, s0, v20
	v_fmac_f16_e32 v43, -2.0, v18
	v_fmac_f16_e32 v41, -0.5, v29
	global_store_short v[15:16], v42, off
	v_add_co_u32 v15, vcc_lo, 0xe7000, v31
	v_fmac_f16_e32 v44, s2, v18
	v_add_co_ci_u32_e32 v16, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v52, v19, v39
	v_add_co_u32 v39, vcc_lo, 0xf1800, v31
	v_fmac_f16_e32 v43, s0, v29
	v_add_co_ci_u32_e32 v40, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v51, v41, v20
	v_add_co_u32 v41, vcc_lo, 0xfc000, v31
	v_fmac_f16_e32 v44, 0.5, v29
	v_add_co_ci_u32_e32 v42, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v53, v43, v20
	v_add_co_u32 v43, vcc_lo, 0x106800, v31
	v_fmac_f16_e32 v38, s1, v46
	v_add_f16_e32 v54, v44, v20
	v_add_co_ci_u32_e32 v44, vcc_lo, 0, v32, vcc_lo
	global_store_short v[15:16], v51, off
	v_fmac_f16_e32 v37, s1, v12
	global_store_short v[39:40], v52, off
	global_store_short v[41:42], v53, off
	global_store_short v[43:44], v54, off
	v_mul_f16_e32 v39, s1, v1
	v_fma_f16 v15, v49, -2.0, 0
	v_fma_f16 v12, v49, 0.5, 0
	v_fmac_f16_e32 v38, -2.0, v17
	v_mul_f16_e32 v16, 0.5, v7
	v_fmac_f16_e32 v37, s1, v39
	v_mul_f16_e32 v40, s1, v2
	v_fmac_f16_e32 v45, 0.5, v46
	v_fmac_f16_e32 v15, -0.5, v5
	v_fmac_f16_e32 v12, -0.5, v5
	v_fmac_f16_e32 v38, s0, v16
	v_fmac_f16_e32 v37, -2.0, v40
	v_mul_f16_e32 v42, s1, v13
	v_fmac_f16_e32 v45, s3, v17
	v_fmac_f16_e32 v15, 2.0, v17
	v_fmac_f16_e32 v12, -0.5, v17
	v_fmac_f16_e32 v36, s1, v1
	v_fmac_f16_e32 v38, 0.5, v6
	v_fmac_f16_e32 v37, s0, v42
	v_fmac_f16_e32 v15, 0.5, v7
	v_fmac_f16_e32 v12, 0.5, v7
	v_fmac_f16_e32 v36, s1, v40
	v_fmac_f16_e32 v45, 0.5, v7
	v_sub_f16_e32 v5, v38, v1
	v_fmac_f16_e32 v0, s1, v1
	v_fmac_f16_e32 v37, s1, v3
	v_fmac_f16_e32 v12, -0.5, v1
	v_add_f16_e32 v41, v45, v1
	v_fmac_f16_e32 v33, s0, v1
	v_fmac_f16_e32 v15, 2.0, v1
	v_fmac_f16_e32 v36, -2.0, v42
	v_mul_f16_e32 v1, s1, v3
	v_fmac_f16_e32 v5, s0, v2
	v_fmac_f16_e32 v0, s2, v40
	v_fmac_f16_e32 v34, -2.0, v39
	v_fmac_f16_e32 v37, -2.0, v21
	v_mul_f16_e32 v17, -2.0, v8
	v_fmac_f16_e32 v36, s0, v1
	v_fmac_f16_e32 v41, -0.5, v2
	v_fmac_f16_e32 v33, 0.5, v40
	v_fmac_f16_e32 v5, 2.0, v13
	v_fmac_f16_e32 v35, 0.5, v39
	v_fmac_f16_e32 v0, 0.5, v42
	v_fmac_f16_e32 v34, s0, v2
	v_fmac_f16_e32 v37, s1, v17
	v_mul_f16_e32 v21, -2.0, v9
	v_add_f16_e32 v12, v12, v2
	v_fmac_f16_e32 v36, s1, v4
	v_add_f16_e32 v7, v15, v2
	v_fmac_f16_e32 v33, s3, v42
	v_fmac_f16_e32 v41, s2, v13
	v_fmac_f16_e32 v5, s1, v3
	v_fmac_f16_e32 v35, s0, v2
	v_fmac_f16_e32 v0, s1, v3
	v_fmac_f16_e32 v34, 2.0, v42
	v_fmac_f16_e32 v37, -2.0, v21
	v_mul_f16_e32 v22, -2.0, v22
	v_fmac_f16_e32 v12, 0.5, v13
	v_fmac_f16_e32 v36, -2.0, v8
	v_sub_f16_e32 v6, v41, v3
	v_fmac_f16_e32 v7, -2.0, v13
	v_fmac_f16_e32 v33, s1, v3
	v_sub_f16_e32 v5, v5, v4
	v_fmac_f16_e32 v35, -0.5, v42
	v_fmac_f16_e32 v0, -2.0, v8
	v_fmac_f16_e32 v37, s0, v22
	v_fmac_f16_e32 v34, s1, v3
	v_sub_f16_e32 v12, v12, v3
	v_fmac_f16_e32 v36, s1, v21
	v_fmac_f16_e32 v6, 0.5, v8
	v_sub_f16_e32 v7, v7, v3
	v_fmac_f16_e32 v33, 2.0, v8
	v_fmac_f16_e32 v5, -0.5, v8
	v_fmac_f16_e32 v35, s1, v3
	v_fmac_f16_e32 v0, s2, v21
	v_fmac_f16_e32 v37, -2.0, v11
	v_fmac_f16_e32 v34, -2.0, v17
	v_fmac_f16_e32 v12, 0.5, v47
	v_fmac_f16_e32 v36, -2.0, v22
	v_mul_f16_e32 v1, -2.0, v11
	v_fmac_f16_e32 v6, 0.5, v50
	v_fmac_f16_e32 v7, -2.0, v47
	v_fmac_f16_e32 v33, 0.5, v21
	v_fmac_f16_e32 v5, s1, v50
	v_fmac_f16_e32 v35, 0.5, v17
	v_fmac_f16_e32 v0, 0.5, v22
	v_fmac_f16_e32 v34, 2.0, v9
	v_fmac_f16_e32 v37, s0, v26
	v_mul_f16_e32 v26, s0, v14
	v_fmac_f16_e32 v36, s0, v1
	v_fmac_f16_e32 v12, 0.5, v9
	v_fmac_f16_e32 v6, s3, v48
	v_fmac_f16_e32 v7, 0.5, v9
	v_fmac_f16_e32 v33, s3, v22
	v_fmac_f16_e32 v35, 2.0, v9
	v_fmac_f16_e32 v5, -2.0, v48
	v_mul_f16_e32 v13, -0.5, v11
	v_fmac_f16_e32 v0, -2.0, v11
	v_fmac_f16_e32 v34, 2.0, v22
	v_fmac_f16_e32 v37, s1, v26
	v_mul_f16_e32 v38, s0, v18
	v_fmac_f16_e32 v12, -0.5, v48
	v_fmac_f16_e32 v36, -2.0, v10
	v_fmac_f16_e32 v6, -0.5, v11
	v_fmac_f16_e32 v7, 2.0, v48
	v_fmac_f16_e32 v33, -2.0, v11
	v_fmac_f16_e32 v5, s0, v13
	v_fmac_f16_e32 v35, -0.5, v22
	v_fmac_f16_e32 v0, s0, v14
	v_fmac_f16_e32 v34, -2.0, v11
	v_fmac_f16_e32 v37, -2.0, v38
	v_mul_f16_e32 v41, s0, v29
	v_fmac_f16_e32 v12, -0.5, v11
	v_fmac_f16_e32 v36, s0, v14
	v_sub_f16_e32 v6, v6, v14
	v_fmac_f16_e32 v7, -0.5, v11
	v_fmac_f16_e32 v33, s1, v14
	v_fmac_f16_e32 v35, -2.0, v11
	v_fmac_f16_e32 v5, -0.5, v10
	v_fmac_f16_e32 v0, s2, v38
	v_fmac_f16_e32 v37, s0, v41
	v_fmac_f16_e32 v34, -2.0, v26
	v_fmac_f16_e32 v36, s1, v38
	v_fmac_f16_e32 v12, 0.5, v14
	v_fmac_f16_e32 v6, 0.5, v18
	v_fmac_f16_e32 v7, -2.0, v14
	v_fmac_f16_e32 v33, 0.5, v38
	v_add_f16_e32 v44, v14, v5
	v_fmac_f16_e32 v35, 0.5, v26
	v_fmac_f16_e32 v0, 0.5, v41
	v_fmac_f16_e32 v34, s1, v18
	v_fmac_f16_e32 v37, s0, v20
	v_sub_f16_e32 v15, v12, v18
	v_fmac_f16_e32 v36, -2.0, v41
	v_mul_f16_e32 v1, s0, v20
	v_sub_f16_e32 v7, v7, v18
	v_fmac_f16_e32 v33, s3, v41
	v_fmac_f16_e32 v6, s3, v29
	v_fmac_f16_e32 v44, s1, v18
	v_fmac_f16_e32 v35, s1, v18
	v_fmac_f16_e32 v0, s0, v20
	v_add_f16_e32 v30, v30, v37
	v_fmac_f16_e32 v34, 2.0, v41
	v_add_co_u32 v5, vcc_lo, 0x111000, v31
	v_fmac_f16_e32 v36, s0, v1
	v_fmac_f16_e32 v15, -0.5, v29
	v_fmac_f16_e32 v7, 2.0, v29
	v_add_f16_e32 v43, v6, v20
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v33, s0, v20
	v_add_co_u32 v12, vcc_lo, 0x11b800, v31
	v_fmac_f16_e32 v44, -2.0, v29
	v_fmac_f16_e32 v35, -0.5, v41
	v_add_f16_e32 v0, v0, v23
	v_fmac_f16_e32 v30, s1, v23
	v_fmac_f16_e32 v34, s0, v20
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v37, v15, v20
	v_add_co_u32 v15, vcc_lo, 0x126000, v31
	v_fmac_f16_e32 v36, s0, v19
	v_sub_f16_e32 v2, v33, v23
	v_add_f16_e32 v7, v7, v20
	v_fmac_f16_e32 v35, s0, v20
	v_add_co_ci_u32_e32 v16, vcc_lo, 0, v32, vcc_lo
	v_fmac_f16_e32 v44, s0, v20
	v_fmac_f16_e32 v0, s2, v25
	v_fmac_f16_e32 v30, -2.0, v25
	v_fmac_f16_e32 v34, -2.0, v23
	global_store_short v[5:6], v43, off
	global_store_short v[12:13], v7, off
	global_store_short v[15:16], v37, off
	v_add_co_u32 v5, vcc_lo, 0x130800, v31
	v_add_f16_e32 v8, v23, v36
	v_fmac_f16_e32 v2, 0.5, v25
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v7, v19, v44
	v_fmac_f16_e32 v35, 0.5, v23
	v_fmac_f16_e32 v0, 0.5, v24
	v_sub_f16_e32 v4, v34, v25
	v_fmac_f16_e32 v30, s0, v24
	v_add_co_u32 v12, vcc_lo, 0x13b000, v31
	v_fmac_f16_e32 v8, s1, v25
	v_fmac_f16_e32 v2, s3, v24
	global_store_short v[5:6], v7, off
	v_sub_f16_e32 v6, v35, v25
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v10, v0, v28
	v_add_co_u32 v0, vcc_lo, 0x145800, v31
	v_add_f16_e32 v15, v28, v30
	v_fmac_f16_e32 v4, 2.0, v24
	v_fmac_f16_e32 v8, -2.0, v24
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v11, v2, v28
	v_add_co_u32 v2, vcc_lo, 0x150000, v31
	v_fmac_f16_e32 v6, -0.5, v24
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v32, vcc_lo
	global_store_short v[12:13], v15, off
	v_add_f16_e32 v12, v4, v28
	v_add_co_u32 v4, vcc_lo, 0x15a800, v31
	v_fmac_f16_e32 v8, s0, v28
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v13, v6, v28
	v_add_co_u32 v6, vcc_lo, 0x165000, v31
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v32, vcc_lo
	v_add_f16_e32 v14, v27, v8
	v_add_co_u32 v8, vcc_lo, 0x16f800, v31
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v32, vcc_lo
	global_store_short v[0:1], v10, off
	global_store_short v[2:3], v11, off
	global_store_short v[4:5], v12, off
	global_store_short v[6:7], v13, off
	global_store_short v[8:9], v14, off
	s_endpgm
BB36_75:
	v_add_nc_u32_e32 v1, 0x800, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v34, v[1:2], off
	s_add_i32 s0, s1, 4
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_11
BB36_76:
	v_add_nc_u32_e32 v1, 0xa00, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v33, v[1:2], off
	v_cmp_gt_u32_e64 s0, 24, v23
	s_and_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccnz BB36_12
	s_branch BB36_69
BB36_77:
	v_add_nc_u32_e32 v1, 0x3a00, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v7, v[1:2], off
	s_add_i32 s6, s1, 4
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_22
BB36_78:
	v_add_nc_u32_e32 v1, 0x3c00, v37
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v6, v[1:2], off
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_23
	s_branch BB36_70
BB36_79:
	v_add_nc_u32_e32 v8, 0x6c00, v37
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_load_ushort v3, v[8:9], off
	s_add_i32 s6, s1, 4
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_33
BB36_80:
	v_add_nc_u32_e32 v8, 0x6e00, v37
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_load_ushort v4, v[8:9], off
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_34
	s_branch BB36_71
BB36_81:
	v_add_nc_u32_e32 v18, 0x9e00, v37
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	global_load_ushort v11, v[18:19], off
	s_add_i32 s6, s1, 4
	s_cmp_gt_u32 s6, 24
	s_cbranch_scc1 BB36_44
BB36_82:
	v_add_nc_u32_e32 v18, 0xa000, v37
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	global_load_ushort v10, v[18:19], off
	s_andn2_b32 vcc_lo, exec_lo, s0
	s_cbranch_vccz BB36_45
	s_branch BB36_72
BB36_83:
	v_add_nc_u32_e32 v24, 0xd000, v37
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v24, vcc_lo, s8, v24
	v_add_co_ci_u32_e32 v25, vcc_lo, s9, v25, vcc_lo
	global_load_ushort v20, v[24:25], off
	s_add_i32 s0, s1, 4
	s_cmp_gt_u32 s0, 24
	s_cbranch_scc1 BB36_55
BB36_84:
	v_add_nc_u32_e32 v24, 0xd200, v37
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v24, vcc_lo, s8, v24
	v_add_co_ci_u32_e32 v25, vcc_lo, s9, v25, vcc_lo
	global_load_ushort v19, v[24:25], off
	v_add_nc_u32_e32 v23, 4, v23
	v_cmp_lt_u32_e32 vcc_lo, 23, v23
	s_and_b32 vcc_lo, exec_lo, vcc_lo
	s_cbranch_vccz BB36_56
	s_branch BB36_73
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 57
		.amdhsa_next_free_sgpr 10
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end36:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0, .Lfunc_end36-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1:
	v_lshlrev_b32_e32 v2, 3, v0
	s_mov_b32 s0, 0x30c30c31
	s_mul_hi_i32 s1, s6, 0x2aaaaaab
	v_mul_hi_i32 v1, v0, s0
	s_lshr_b32 s2, s1, 31
	v_or_b32_e32 v4, 1, v2
	v_or_b32_e32 v7, 2, v2
	s_ashr_i32 s1, s1, 1
	s_movk_i32 s12, 0x540
	s_add_i32 s13, s1, s2
	v_mul_hi_i32 v6, v4, s0
	v_lshrrev_b32_e32 v5, 31, v1
	v_ashrrev_i32_e32 v1, 5, v1
	v_mul_hi_i32 v9, v7, s0
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_mul_i32 s4, s13, 12
	s_mov_b32 s7, 0x1f800
	v_add_nc_u32_e32 v1, v1, v5
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 8, v6
	s_sub_i32 s14, s6, s4
	v_lshrrev_b32_e32 v11, 31, v9
	v_mul_lo_u32 v5, 0xa8, v1
	v_ashrrev_i32_e32 v9, 8, v9
	v_add_nc_u32_e32 v6, v6, v8
	v_mul_lo_u32 v1, v1, s7
	v_or_b32_e32 v12, 3, v2
	s_ashr_i32 s4, s14, 1
	s_mul_i32 s1, s13, 0x3f000
	v_mul_i32_i24_e32 v10, s12, v6
	v_sub_nc_u32_e32 v5, v0, v5
	s_mulk_i32 s4, 0x5400
	v_add_nc_u32_e32 v9, v9, v11
	v_mul_hi_i32 v11, v12, s0
	v_sub_nc_u32_e32 v10, v4, v10
	v_or_b32_e32 v14, 4, v2
	s_add_i32 s5, s4, s1
	v_lshlrev_b32_e32 v5, 7, v5
	v_and_b32_e32 v4, 25, v4
	v_mov_b32_e32 v3, 0xfffffe00
	v_lshlrev_b32_e32 v10, 4, v10
	v_and_b32_e32 v8, 24, v2
	v_add_nc_u32_e32 v1, s5, v1
	v_mul_hi_i32 v16, v14, s0
	v_mul_i32_i24_e32 v13, s12, v9
	v_lshrrev_b32_e32 v17, 31, v11
	v_and_b32_e32 v5, 0xfffffe00, v5
	v_or_b32_e32 v1, v1, v8
	v_and_b32_e32 v10, v3, v10
	v_mul_i32_i24_e32 v6, s7, v6
	v_or_b32_e32 v15, s5, v4
	v_ashrrev_i32_e32 v11, 8, v11
	v_sub_nc_u32_e32 v13, v7, v13
	v_add_nc_u32_e32 v24, v1, v5
	v_and_b32_e32 v7, 26, v7
	v_add3_u32 v28, v15, v6, v10
	v_add_nc_u32_e32 v5, v11, v17
	v_lshrrev_b32_e32 v6, 31, v16
	v_ashrrev_i32_e32 v10, 8, v16
	v_lshlrev_b32_e32 v1, 4, v13
	v_or_b32_e32 v13, 5, v2
	v_mul_i32_i24_e32 v11, s12, v5
	v_mul_i32_i24_e32 v9, s7, v9
	v_add_nc_u32_e32 v6, v10, v6
	v_and_b32_e32 v1, v3, v1
	v_or_b32_e32 v10, s5, v7
	v_sub_nc_u32_e32 v11, v12, v11
	v_mul_hi_i32 v15, v13, s0
	v_mul_i32_i24_e32 v16, s12, v6
	v_or_b32_e32 v17, 6, v2
	v_add3_u32 v30, v10, v9, v1
	v_lshlrev_b32_e32 v9, 4, v11
	v_and_b32_e32 v1, 27, v12
	v_sub_nc_u32_e32 v10, v14, v16
	v_or_b32_e32 v16, 7, v2
	v_mul_hi_i32 v11, v17, s0
	v_lshrrev_b32_e32 v12, 31, v15
	v_ashrrev_i32_e32 v15, 8, v15
	v_lshlrev_b32_e32 v10, 4, v10
	v_mul_hi_i32 v18, v16, s0
	v_and_b32_e32 v14, 28, v14
	v_and_b32_e32 v9, v3, v9
	v_add_nc_u32_e32 v12, v15, v12
	v_lshrrev_b32_e32 v15, 31, v11
	v_ashrrev_i32_e32 v11, 8, v11
	v_mul_i32_i24_e32 v5, s7, v5
	v_or_b32_e32 v19, s5, v1
	v_and_b32_e32 v10, v3, v10
	v_mul_i32_i24_e32 v6, s7, v6
	v_add_nc_u32_e32 v11, v11, v15
	v_lshrrev_b32_e32 v15, 31, v18
	v_ashrrev_i32_e32 v18, 8, v18
	v_or_b32_e32 v22, s5, v14
	v_add3_u32 v33, v19, v5, v9
	v_mul_i32_i24_e32 v20, s12, v12
	v_mul_i32_i24_e32 v21, s12, v11
	v_add_nc_u32_e32 v5, v18, v15
	v_add3_u32 v34, v22, v6, v10
	v_add_nc_u32_e32 v18, 0x800, v2
	v_sub_nc_u32_e32 v20, v13, v20
	v_sub_nc_u32_e32 v15, v17, v21
	v_mul_i32_i24_e32 v10, s12, v5
	v_and_b32_e32 v6, 29, v13
	v_lshrrev_b32_e32 v18, 6, v18
	v_lshlrev_b32_e32 v9, 4, v20
	v_lshlrev_b32_e32 v13, 4, v15
	v_sub_nc_u32_e32 v10, v16, v10
	v_and_b32_e32 v16, 31, v16
	v_lshrrev_b32_e32 v20, 2, v0
	v_and_b32_e32 v17, 30, v17
	s_mov_b32 s0, 0xc30c30d
	v_lshlrev_b32_e32 v10, 4, v10
	v_and_b32_e32 v9, v3, v9
	v_and_b32_e32 v13, v3, v13
	v_mul_i32_i24_e32 v12, s7, v12
	v_or_b32_e32 v15, s5, v6
	v_and_b32_e32 v3, v3, v10
	v_add_nc_u32_e32 v10, 22, v20
	v_add_nc_u32_e32 v21, 0x801, v2
	v_mul_i32_i24_e32 v5, s7, v5
	v_or_b32_e32 v22, s5, v16
	v_mul_hi_u32 v18, v18, s0
	v_add3_u32 v38, v15, v12, v9
	v_lshrrev_b32_e32 v9, 6, v21
	v_mul_i32_i24_e32 v11, s7, v11
	v_add3_u32 v40, v22, v5, v3
	v_or_b32_e32 v19, s5, v17
	v_lshlrev_b32_e32 v25, 5, v10
	v_lshlrev_b32_e32 v5, 9, v10
	v_add_nc_u32_e32 v10, 0x802, v2
	v_mul_hi_u32 v9, v9, s0
	v_add3_u32 v39, v19, v11, v13
	v_mul_i32_i24_e32 v11, s7, v18
	v_or_b32_e32 v13, s5, v8
	v_lshrrev_b32_e32 v10, 6, v10
	v_add_nc_u32_e32 v15, 0x803, v2
	v_mad_i32_i24 v3, v18, s12, v25
	v_add_nc_u32_e32 v12, s5, v5
	v_add3_u32 v43, v13, v5, v11
	v_mul_hi_u32 v10, v10, s0
	v_lshrrev_b32_e32 v5, 6, v15
	v_or_b32_e32 v3, v3, v8
	v_or_b32_e32 v19, v12, v4
	v_mad_i32_i24 v18, v9, s12, v25
	s_mov_b32 s15, 0x8000
	v_mul_hi_u32 v5, v5, s0
	v_lshl_add_u32 v44, v3, 1, s15
	v_mad_i32_i24 v45, v9, s7, v19
	v_or_b32_e32 v3, v18, v4
	v_or_b32_e32 v11, v12, v7
	v_mad_i32_i24 v9, v10, s12, v25
	v_add_nc_u32_e32 v4, 0x804, v2
	s_mov_b32 s5, 0x300000
	v_lshl_add_u32 v46, v3, 1, s15
	v_mad_i32_i24 v47, v10, s7, v11
	v_or_b32_e32 v7, v9, v7
	v_lshrrev_b32_e32 v3, 6, v4
	v_add_nc_u32_e32 v4, 0x805, v2
	v_mad_i32_i24 v9, v5, s12, v25
	v_add_nc_u32_e32 v10, 0x806, v2
	v_lshl_add_u32 v48, v7, 1, s15
	v_or_b32_e32 v7, v12, v1
	v_lshrrev_b32_e32 v4, 6, v4
	v_or_b32_e32 v1, v9, v1
	v_lshrrev_b32_e32 v9, 6, v10
	v_mul_hi_u32 v3, v3, s0
	v_add_nc_u32_e32 v10, 0x807, v2
	v_mad_i32_i24 v51, v5, s7, v7
	v_mul_hi_u32 v4, v4, s0
	v_lshl_add_u32 v52, v1, 1, s15
	v_mul_hi_u32 v1, v9, s0
	v_lshrrev_b32_e32 v7, 6, v10
	v_or_b32_e32 v9, v12, v14
	v_mad_i32_i24 v5, v3, s12, v25
	v_or_b32_e32 v11, v12, v6
	v_lshlrev_b32_e32 v23, 4, v0
	v_mul_hi_u32 v7, v7, s0
	v_mad_i32_i24 v10, v4, s12, v25
	v_or_b32_e32 v5, v5, v14
	v_mad_i32_i24 v54, v3, s7, v9
	v_mad_i32_i24 v3, v1, s12, v25
	v_mad_i32_i24 v56, v4, s7, v11
	v_or_b32_e32 v4, v12, v17
	v_lshl_add_u32 v55, v5, 1, s15
	v_or_b32_e32 v5, v10, v6
	v_mad_i32_i24 v6, v7, s12, v25
	v_or_b32_e32 v3, v3, v17
	v_mad_i32_i24 v58, v1, s7, v4
	v_add_nc_u32_e32 v4, 0x2800, v2
	v_or_b32_e32 v9, v12, v16
	v_or_b32_e32 v1, v6, v16
	s_movk_i32 s12, 0x6000
	v_lshl_add_u32 v57, v5, 1, s15
	v_lshl_add_u32 v59, v3, 1, s15
	v_lshlrev_b32_e32 v3, 9, v20
	v_lshl_add_u32 v63, v1, 1, s15
	v_add_nc_u32_e32 v5, 64, v20
	v_and_b32_e32 v6, s12, v4
	v_lshrrev_b32_e32 v1, 13, v4
	v_mad_i32_i24 v60, v7, s7, v9
	s_lshl_b32 s0, s14, 17
	s_mul_i32 s7, s13, s5
	v_lshlrev_b32_e32 v4, 9, v5
	s_add_i32 s7, s7, s0
	s_mov_b32 s0, 0x180000
	v_or3_b32 v64, s7, v3, v8
	v_lshl_add_u32 v3, v5, 5, v6
	v_add_nc_u32_e32 v5, 0x3000, v2
	v_or_b32_e32 v6, s7, v8
	v_mul_u32_u24_e32 v1, s0, v1
	v_add_nc_u32_e32 v7, 0x80, v20
	v_add_nc_u32_e32 v2, 0x3800, v2
	v_and_b32_e32 v9, s12, v5
	v_or_b32_e32 v3, v3, v8
	v_add3_u32 v70, v6, v4, v1
	v_lshrrev_b32_e32 v1, 13, v5
	v_add_nc_u32_e32 v4, 0xc0, v20
	v_and_b32_e32 v5, 0x6000, v2
	v_lshl_add_u32 v9, v7, 5, v9
	v_lshlrev_b32_e32 v7, 9, v7
	v_mul_u32_u24_e32 v1, s0, v1
	v_lshrrev_b32_e32 v2, 13, v2
	v_lshlrev_b32_e32 v71, 1, v3
	v_lshl_add_u32 v3, v4, 5, v5
	v_or_b32_e32 v5, v9, v8
	v_add3_u32 v72, v6, v7, v1
	v_lshlrev_b32_e32 v1, 7, v0
	v_lshrrev_b32_e32 v7, 6, v0
	v_or_b32_e32 v3, v3, v8
	v_lshlrev_b32_e32 v4, 9, v4
	v_mul_u32_u24_e32 v2, s0, v2
	v_and_b32_e32 v1, 0x1f80, v1
	v_lshlrev_b32_e32 v8, 6, v0
	v_lshlrev_b32_e32 v73, 1, v5
	v_lshlrev_b32_e32 v75, 1, v3
	v_add3_u32 v74, v6, v4, v2
	v_mul_u32_u24_e32 v76, 0x2a0, v7
	v_and_or_b32 v77, 0xe000, v8, v1
	v_or_b32_e32 v26, s15, v23
	v_cmp_gt_i32_e32 vcc_lo, 0x50, v0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v41, 0
	v_mov_b32_e32 v42, 0
	v_mov_b32_e32 v49, 0
	v_mov_b32_e32 v50, 0
	v_mov_b32_e32 v61, 0
	v_mov_b32_e32 v53, 0
	v_mov_b32_e32 v65, 0
	v_mov_b32_e32 v62, 0
	v_mov_b32_e32 v66, 0
	v_mov_b32_e32 v67, 0
	v_mov_b32_e32 v68, 0
	v_mov_b32_e32 v69, 0
	s_mov_b32 s7, 0
BB37_1:
	s_lshl_b32 s12, s7, 5
	v_add_nc_u32_e32 v78, s12, v24
	v_add_nc_u32_e32 v80, s12, v30
	v_add_nc_u32_e32 v82, s12, v34
	v_add_nc_u32_e32 v84, s12, v39
	v_add_nc_u32_e32 v86, s12, v38
	v_ashrrev_i32_e32 v79, 31, v78
	v_ashrrev_i32_e32 v81, 31, v80
	v_ashrrev_i32_e32 v83, 31, v82
	v_ashrrev_i32_e32 v85, 31, v84
	v_add_nc_u32_e32 v88, s12, v40
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_lshlrev_b64 v[80:81], 1, v[80:81]
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_lshlrev_b64 v[84:85], 1, v[84:85]
	v_ashrrev_i32_e32 v87, 31, v86
	v_ashrrev_i32_e32 v89, 31, v88
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v78, s0, s8, v78
	v_add_co_ci_u32_e64 v79, s0, s9, v79, s0
	v_add_co_u32 v80, s0, s8, v80
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_add_co_ci_u32_e64 v81, s0, s9, v81, s0
	v_add_co_u32 v82, s0, s8, v82
	v_lshlrev_b64 v[88:89], 1, v[88:89]
	v_add_co_ci_u32_e64 v83, s0, s9, v83, s0
	v_add_co_u32 v84, s0, s8, v84
	v_add_co_ci_u32_e64 v85, s0, s9, v85, s0
	s_clause 0x3
	global_load_ushort v78, v[78:79], off
	global_load_ushort v79, v[80:81], off
	global_load_ushort v80, v[82:83], off
	global_load_ushort v81, v[84:85], off
	v_add_nc_u32_e32 v82, s12, v28
	v_add_nc_u32_e32 v84, s12, v33
	v_ashrrev_i32_e32 v83, 31, v82
	v_ashrrev_i32_e32 v85, 31, v84
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_lshlrev_b64 v[84:85], 1, v[84:85]
	v_add_co_u32 v82, s0, s8, v82
	v_add_co_ci_u32_e64 v83, s0, s9, v83, s0
	v_add_co_u32 v84, s0, s8, v84
	v_add_co_ci_u32_e64 v85, s0, s9, v85, s0
	v_add_co_u32 v86, s0, s8, v86
	v_add_co_ci_u32_e64 v87, s0, s9, v87, s0
	v_add_co_u32 v88, s0, s8, v88
	v_add_co_ci_u32_e64 v89, s0, s9, v89, s0
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v78, v[82:83], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v79, v[84:85], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v80, v[86:87], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v81, v[88:89], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b128 v26, v[78:81]
	s_and_saveexec_b32 s13, vcc_lo
	s_cbranch_execz BB37_3
	v_add_nc_u32_e32 v78, s12, v43
	v_add_nc_u32_e32 v80, s12, v45
	v_add_nc_u32_e32 v82, s12, v47
	v_add_nc_u32_e32 v84, s12, v51
	v_add_nc_u32_e32 v86, s12, v54
	v_ashrrev_i32_e32 v79, 31, v78
	v_ashrrev_i32_e32 v81, 31, v80
	v_ashrrev_i32_e32 v83, 31, v82
	v_ashrrev_i32_e32 v85, 31, v84
	v_add_nc_u32_e32 v88, s12, v56
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_lshlrev_b64 v[80:81], 1, v[80:81]
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_ashrrev_i32_e32 v87, 31, v86
	v_add_nc_u32_e32 v90, s12, v58
	v_lshlrev_b64 v[84:85], 1, v[84:85]
	v_add_co_u32 v78, s0, s8, v78
	v_ashrrev_i32_e32 v89, 31, v88
	v_add_co_ci_u32_e64 v79, s0, s9, v79, s0
	v_add_co_u32 v80, s0, s8, v80
	v_add_nc_u32_e32 v92, s12, v60
	v_add_co_ci_u32_e64 v81, s0, s9, v81, s0
	v_add_co_u32 v82, s0, s8, v82
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_ashrrev_i32_e32 v91, 31, v90
	v_add_co_ci_u32_e64 v83, s0, s9, v83, s0
	v_add_co_u32 v84, s0, s8, v84
	v_lshlrev_b64 v[88:89], 1, v[88:89]
	v_ashrrev_i32_e32 v93, 31, v92
	v_add_co_ci_u32_e64 v85, s0, s9, v85, s0
	v_add_co_u32 v86, s0, s8, v86
	v_lshlrev_b64 v[90:91], 1, v[90:91]
	v_add_co_ci_u32_e64 v87, s0, s9, v87, s0
	v_add_co_u32 v88, s0, s8, v88
	v_lshlrev_b64 v[92:93], 1, v[92:93]
	v_add_co_ci_u32_e64 v89, s0, s9, v89, s0
	v_add_co_u32 v90, s0, s8, v90
	v_add_co_ci_u32_e64 v91, s0, s9, v91, s0
	v_add_co_u32 v92, s0, s8, v92
	v_add_co_ci_u32_e64 v93, s0, s9, v93, s0
	s_clause 0x7
	global_load_ushort v78, v[78:79], off
	global_load_ushort v79, v[80:81], off
	global_load_ushort v80, v[82:83], off
	global_load_ushort v81, v[84:85], off
	global_load_ushort v82, v[86:87], off
	global_load_ushort v83, v[88:89], off
	global_load_ushort v84, v[90:91], off
	global_load_ushort v85, v[92:93], off
	s_waitcnt vmcnt(7)
	ds_write_b16 v44, v78
	s_waitcnt vmcnt(6)
	ds_write_b16 v46, v79
	s_waitcnt vmcnt(5)
	ds_write_b16 v48, v80
	s_waitcnt vmcnt(4)
	ds_write_b16 v52, v81
	s_waitcnt vmcnt(3)
	ds_write_b16 v55, v82
	s_waitcnt vmcnt(2)
	ds_write_b16 v57, v83
	s_waitcnt vmcnt(1)
	ds_write_b16 v59, v84
	s_waitcnt vmcnt(0)
	ds_write_b16 v63, v85
BB37_3:
	s_or_b32 exec_lo, exec_lo, s13
	v_add_nc_u32_e32 v78, s12, v64
	v_add_nc_u32_e32 v80, s12, v70
	v_add_nc_u32_e32 v86, s12, v72
	v_add_nc_u32_e32 v88, s12, v74
	v_ashrrev_i32_e32 v79, 31, v78
	v_ashrrev_i32_e32 v81, 31, v80
	v_ashrrev_i32_e32 v87, 31, v86
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_lshlrev_b64 v[91:92], 1, v[80:81]
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_add_co_u32 v89, s0, s10, v78
	v_add_co_ci_u32_e64 v90, s0, s11, v79, s0
	v_add_co_u32 v82, s0, 0x10000, v89
	v_add_co_ci_u32_e64 v83, s0, 0, v90, s0
	v_add_co_u32 v93, s0, 0x20000, v89
	v_add_co_ci_u32_e64 v94, s0, 0, v90, s0
	v_add_co_u32 v95, s0, 0x30000, v89
	s_clause 0x1
	global_load_dwordx4 v[78:81], v[89:90], off
	global_load_dwordx4 v[82:85], v[82:83], off
	v_add_co_ci_u32_e64 v96, s0, 0, v90, s0
	v_add_co_u32 v97, s0, s5, v89
	v_ashrrev_i32_e32 v89, 31, v88
	v_add_co_ci_u32_e64 v98, s0, 0, v90, s0
	v_add_co_u32 v99, s0, s10, v91
	v_add_co_ci_u32_e64 v100, s0, s11, v92, s0
	v_lshlrev_b64 v[88:89], 1, v[88:89]
	v_add_co_u32 v102, s0, s10, v86
	v_add_co_ci_u32_e64 v103, s0, s11, v87, s0
	v_add_co_u32 v106, s0, s10, v88
	v_add_co_ci_u32_e64 v107, s0, s11, v89, s0
	s_clause 0x5
	global_load_dwordx4 v[86:89], v[93:94], off
	global_load_dwordx4 v[90:93], v[95:96], off
	global_load_dwordx4 v[94:97], v[97:98], off
	global_load_dwordx4 v[98:101], v[99:100], off
	global_load_dwordx4 v[102:105], v[102:103], off
	global_load_dwordx4 v[106:109], v[106:107], off
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(7)
	ds_write_b128 v23, v[78:81]
	s_waitcnt vmcnt(6)
	ds_write_b128 v23, v[82:85] offset:4096
	s_waitcnt vmcnt(5)
	ds_write_b128 v23, v[86:89] offset:8192
	s_waitcnt vmcnt(4)
	ds_write_b128 v23, v[90:93] offset:12288
	s_waitcnt vmcnt(3)
	ds_write_b128 v23, v[94:97] offset:16384
	s_waitcnt vmcnt(2)
	ds_write_b128 v71, v[98:101]
	s_waitcnt vmcnt(1)
	ds_write_b128 v73, v[102:105]
	s_waitcnt vmcnt(0)
	ds_write_b128 v75, v[106:109]
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB37_4:
	s_lshl_b32 s12, s0, 3
	v_mov_b32_e32 v82, 0xffff
	v_add_lshl_u32 v83, v77, s12, 1
	s_add_i32 s0, s0, 1
	s_cmp_lg_u32 s0, 4
	ds_read_b128 v[78:81], v83
	ds_read_b128 v[90:93], v83 offset:64
	s_waitcnt lgkmcnt(1)
	v_and_b32_e32 v84, v82, v78
	v_and_b32_e32 v85, v82, v79
	v_and_b32_sdwa v86, v82, v78 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v87, v82, v79 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v88, v82, v80
	v_and_b32_sdwa v98, v82, v80 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v99, v82, v81
	v_and_b32_sdwa v100, v82, v81 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	ds_read_b128 v[78:81], v83 offset:128
	ds_read_b128 v[94:97], v83 offset:192
	s_waitcnt lgkmcnt(2)
	v_lshl_or_b32 v89, v91, 16, v85
	v_lshl_or_b32 v106, v90, 16, v84
	v_lshl_or_b32 v85, v92, 16, v88
	s_waitcnt lgkmcnt(1)
	v_and_b32_e32 v83, v82, v78
	v_and_b32_sdwa v101, v82, v78 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v78, v82, v79
	v_and_b32_e32 v102, v82, v80
	v_and_b32_sdwa v103, v82, v80 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v80, v93, 16, v99
	v_lshrrev_b32_e32 v99, 16, v92
	s_waitcnt lgkmcnt(0)
	v_lshl_or_b32 v92, v94, 16, v83
	v_and_b32_sdwa v79, v82, v79 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v104, v82, v81
	v_and_b32_sdwa v105, v82, v81 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v82, 16, v90
	v_lshrrev_b32_e32 v90, 16, v91
	v_lshrrev_b32_e32 v94, 16, v94
	v_lshl_or_b32 v88, v95, 16, v78
	v_lshrrev_b32_e32 v93, 16, v93
	v_lshl_or_b32 v84, v96, 16, v102
	v_lshl_or_b32 v81, v97, 16, v104
	v_lshl_or_b32 v87, v90, 16, v87
	v_lshl_or_b32 v90, v94, 16, v101
	v_lshrrev_b32_e32 v95, 16, v95
	v_lshrrev_b32_e32 v96, 16, v96
	v_lshrrev_b32_e32 v97, 16, v97
	v_add_lshl_u32 v101, s12, v76, 1
	v_lshl_or_b32 v91, v82, 16, v86
	v_lshl_or_b32 v86, v95, 16, v79
	v_lshl_or_b32 v83, v99, 16, v98
	v_lshl_or_b32 v78, v93, 16, v100
	v_lshl_or_b32 v82, v96, 16, v103
	v_lshl_or_b32 v79, v97, 16, v105
	ds_read_b128 v[93:96], v101 offset:32768
	ds_read_b128 v[97:100], v101 offset:32832
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v68, v93, v106, v68 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v69, v93, v92, v69 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v66, v97, v106, v66 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v67, v97, v92, v67 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v68, v93, v91, v68 op_sel:[1,0,0]
	v_pk_fma_f16 v69, v93, v90, v69 op_sel:[1,0,0]
	v_pk_fma_f16 v66, v97, v91, v66 op_sel:[1,0,0]
	v_pk_fma_f16 v67, v97, v90, v67 op_sel:[1,0,0]
	v_pk_fma_f16 v68, v94, v89, v68 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v69, v94, v88, v69 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v66, v98, v89, v66 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v67, v98, v88, v67 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v68, v94, v87, v68 op_sel:[1,0,0]
	v_pk_fma_f16 v69, v94, v86, v69 op_sel:[1,0,0]
	v_pk_fma_f16 v66, v98, v87, v66 op_sel:[1,0,0]
	v_pk_fma_f16 v67, v98, v86, v67 op_sel:[1,0,0]
	v_pk_fma_f16 v68, v95, v85, v68 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v69, v95, v84, v69 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v66, v99, v85, v66 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v67, v99, v84, v67 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v68, v95, v83, v68 op_sel:[1,0,0]
	v_pk_fma_f16 v69, v95, v82, v69 op_sel:[1,0,0]
	v_pk_fma_f16 v66, v99, v83, v66 op_sel:[1,0,0]
	v_pk_fma_f16 v67, v99, v82, v67 op_sel:[1,0,0]
	v_pk_fma_f16 v68, v96, v80, v68 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v69, v96, v81, v69 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v66, v100, v80, v66 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v67, v100, v81, v67 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v68, v96, v78, v68 op_sel:[1,0,0]
	v_pk_fma_f16 v69, v96, v79, v69 op_sel:[1,0,0]
	v_pk_fma_f16 v66, v100, v78, v66 op_sel:[1,0,0]
	v_pk_fma_f16 v67, v100, v79, v67 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:32896
	ds_read_b128 v[97:100], v101 offset:32960
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v65, v93, v106, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v62, v93, v92, v62 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v61, v97, v106, v61 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v97, v92, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v93, v91, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v62, v93, v90, v62 op_sel:[1,0,0]
	v_pk_fma_f16 v61, v97, v91, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v97, v90, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v94, v89, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v62, v94, v88, v62 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v61, v98, v89, v61 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v98, v88, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v94, v87, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v62, v94, v86, v62 op_sel:[1,0,0]
	v_pk_fma_f16 v61, v98, v87, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v98, v86, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v95, v85, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v62, v95, v84, v62 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v61, v99, v85, v61 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v99, v84, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v95, v83, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v62, v95, v82, v62 op_sel:[1,0,0]
	v_pk_fma_f16 v61, v99, v83, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v99, v82, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v96, v80, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v62, v96, v81, v62 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v61, v100, v80, v61 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v100, v81, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v96, v78, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v62, v96, v79, v62 op_sel:[1,0,0]
	v_pk_fma_f16 v61, v100, v78, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v100, v79, v53 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33024
	ds_read_b128 v[97:100], v101 offset:33088
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v49, v93, v106, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v93, v92, v50 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v41, v97, v106, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v97, v92, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v93, v91, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v93, v90, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v97, v91, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v97, v90, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v94, v89, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v94, v88, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v98, v89, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v98, v88, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v94, v87, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v94, v86, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v98, v87, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v98, v86, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v95, v85, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v95, v84, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v99, v85, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v99, v84, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v95, v83, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v95, v82, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v99, v83, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v99, v82, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v96, v80, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v96, v81, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v100, v80, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v100, v81, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v96, v78, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v96, v79, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v100, v78, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v100, v79, v42 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33152
	ds_read_b128 v[97:100], v101 offset:33216
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v36, v93, v106, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v93, v92, v37 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v35, v97, v106, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v97, v92, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v93, v91, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v93, v90, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v97, v91, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v97, v90, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v94, v89, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v94, v88, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v98, v89, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v98, v88, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v94, v87, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v94, v86, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v98, v87, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v98, v86, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v95, v85, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v95, v84, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v99, v85, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v99, v84, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v95, v83, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v95, v82, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v99, v83, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v99, v82, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v96, v80, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v96, v81, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v100, v80, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v100, v81, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v96, v78, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v96, v79, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v100, v78, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v100, v79, v32 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33280
	ds_read_b128 v[97:100], v101 offset:33344
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v31, v93, v106, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v93, v92, v29 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v25, v97, v106, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v97, v92, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v93, v91, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v93, v90, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v97, v91, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v97, v90, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v94, v89, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v94, v88, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v98, v89, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v98, v88, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v94, v87, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v94, v86, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v98, v87, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v98, v86, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v95, v85, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v95, v84, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v99, v85, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v99, v84, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v95, v83, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v95, v82, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v99, v83, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v99, v82, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v96, v80, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v96, v81, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v100, v80, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v100, v81, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v96, v78, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v96, v79, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v100, v78, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v100, v79, v27 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33408
	ds_read_b128 v[97:100], v101 offset:33472
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v21, v93, v106, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v93, v92, v22 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v19, v97, v106, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v97, v92, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v93, v91, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v93, v90, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v97, v91, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v97, v90, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v94, v89, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v94, v88, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v98, v89, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v98, v88, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v94, v87, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v94, v86, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v98, v87, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v98, v86, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v95, v85, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v95, v84, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v99, v85, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v99, v84, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v95, v83, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v95, v82, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v99, v83, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v99, v82, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v96, v80, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v96, v81, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v100, v80, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v100, v81, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v96, v78, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v96, v79, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v100, v78, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v100, v79, v20 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33536
	ds_read_b128 v[97:100], v101 offset:33600
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v18, v93, v106, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v93, v92, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v15, v97, v106, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v97, v92, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v93, v91, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v93, v90, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v97, v91, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v97, v90, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v94, v89, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v94, v88, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v98, v89, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v98, v88, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v94, v87, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v94, v86, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v98, v87, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v98, v86, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v95, v85, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v95, v84, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v99, v85, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v99, v84, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v95, v83, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v95, v82, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v99, v83, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v99, v82, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v96, v80, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v96, v81, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v100, v80, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v100, v81, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v96, v78, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v96, v79, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v100, v78, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v100, v79, v14 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33664
	ds_read_b128 v[97:100], v101 offset:33728
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v11, v93, v106, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v93, v92, v12 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v5, v97, v106, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v97, v92, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v93, v91, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v93, v90, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v97, v91, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v97, v90, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v94, v89, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v94, v88, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v98, v89, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v98, v88, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v94, v87, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v94, v86, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v98, v87, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v98, v86, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v95, v85, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v95, v84, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v99, v85, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v99, v84, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v95, v83, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v95, v82, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v99, v83, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v99, v82, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v96, v80, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v96, v81, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v100, v80, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v100, v81, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v96, v78, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v96, v79, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v100, v78, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v100, v79, v6 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33792
	ds_read_b128 v[97:100], v101 offset:33856
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v3, v93, v106, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v93, v92, v4 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v2, v97, v106, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v97, v92, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v93, v91, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v93, v90, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v97, v91, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v97, v90, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v94, v89, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v94, v88, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v98, v89, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v98, v88, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v94, v87, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v94, v86, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v98, v87, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v98, v86, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v95, v85, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v95, v84, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v99, v85, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v99, v84, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v95, v83, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v95, v82, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v99, v83, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v99, v82, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v96, v80, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v96, v81, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v100, v80, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v100, v81, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v96, v78, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v96, v79, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v100, v78, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v100, v79, v1 op_sel:[1,0,0]
	ds_read_b128 v[93:96], v101 offset:33920
	ds_read_b128 v[97:100], v101 offset:33984
	ds_read_b128 v[101:104], v101 offset:34048
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v17, v93, v106, v17 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v13, v97, v106, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v10, v101, v106, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v93, v92, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v97, v92, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v101, v92, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v93, v91, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v97, v91, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v101, v91, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v93, v90, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v97, v90, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v101, v90, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v94, v89, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v98, v89, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v102, v89, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v94, v88, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v98, v88, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v102, v88, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v94, v87, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v98, v87, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v102, v87, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v94, v86, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v98, v86, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v102, v86, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v95, v85, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v99, v85, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v103, v85, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v95, v84, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v99, v84, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v103, v84, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v95, v83, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v99, v83, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v103, v83, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v95, v82, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v99, v82, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v103, v82, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v96, v80, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v100, v80, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v96, v81, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v100, v81, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v104, v80, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v104, v81, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v96, v78, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v96, v79, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v100, v78, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v100, v79, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v104, v78, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v104, v79, v7 op_sel:[1,0,0]
	s_cbranch_scc1 BB37_4
	s_add_i32 s7, s7, 1
	s_cmp_eq_u32 s7, 16
	s_cbranch_scc0 BB37_1
	v_lshlrev_b32_e32 v23, 2, v0
	v_lshrrev_b32_e32 v24, 7, v0
	v_bfe_u32 v0, v0, 6, 1
	s_lshl_b32 s0, s6, 8
	v_and_b32_e32 v23, 0xfc, v23
	v_mad_u32_u24 v24, 0x1f800, v24, s1
	s_and_b32 s0, s0, 0x100
	v_mul_u32_u24_e32 v0, 0x2a00, v0
	v_or3_b32 v23, v24, s0, v23
	v_add3_u32 v23, v23, s4, v0
	v_add_nc_u32_e32 v33, 0x400, v23
	v_ashrrev_i32_e32 v24, 31, v23
	v_add_nc_u32_e32 v38, 0x402, v23
	v_add_nc_u32_e32 v43, 0x600, v23
	v_add_nc_u32_e32 v45, 0x602, v23
	v_ashrrev_i32_e32 v34, 31, v33
	v_lshlrev_b64 v[46:47], 1, v[23:24]
	v_ashrrev_i32_e32 v39, 31, v38
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_nc_u32_e32 v51, 0x800, v23
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_add_nc_u32_e32 v40, 0xe00, v23
	v_add_co_u32 v54, vcc_lo, s2, v46
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	v_add_co_ci_u32_e32 v55, vcc_lo, s3, v47, vcc_lo
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_add_co_u32 v38, vcc_lo, s2, v38
	global_store_dword v[54:55], v68, off
	global_store_dword v[54:55], v69, off offset:4
	global_store_dword v[54:55], v66, off offset:1024
	global_store_dword v[54:55], v67, off offset:1028
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v39, vcc_lo
	v_ashrrev_i32_e32 v52, 31, v51
	global_store_dword v[33:34], v65, off
	v_add_co_u32 v33, vcc_lo, s2, v43
	v_add_nc_u32_e32 v43, 0x802, v23
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v44, vcc_lo
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_add_nc_u32_e32 v47, 0xa02, v23
	v_add_nc_u32_e32 v30, 0x1202, v23
	v_ashrrev_i32_e32 v44, 31, v43
	global_store_dword v[38:39], v62, off
	global_store_dword v[33:34], v61, off
	v_lshlrev_b64 v[33:34], 1, v[51:52]
	v_add_co_u32 v38, vcc_lo, s2, v45
	v_add_nc_u32_e32 v45, 0xa00, v23
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v46, vcc_lo
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_add_co_u32 v43, vcc_lo, s2, v43
	global_store_dword v[38:39], v53, off
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v44, vcc_lo
	v_lshlrev_b64 v[38:39], 1, v[45:46]
	v_add_nc_u32_e32 v45, 0xc02, v23
	v_add_nc_u32_e32 v26, 0x1600, v23
	global_store_dword v[33:34], v49, off
	global_store_dword v[43:44], v50, off
	v_lshlrev_b64 v[33:34], 1, v[47:48]
	v_add_nc_u32_e32 v43, 0xc00, v23
	v_add_co_u32 v38, vcc_lo, s2, v38
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v39, vcc_lo
	v_add_nc_u32_e32 v0, 0x2602, v23
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	global_store_dword v[38:39], v41, off
	global_store_dword v[33:34], v42, off
	v_ashrrev_i32_e32 v41, 31, v40
	v_lshlrev_b64 v[33:34], 1, v[45:46]
	v_add_nc_u32_e32 v42, 0xe02, v23
	v_add_co_u32 v38, vcc_lo, s2, v43
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v44, vcc_lo
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_add_nc_u32_e32 v44, 0x1000, v23
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_ashrrev_i32_e32 v43, 31, v42
	v_add_co_u32 v40, vcc_lo, s2, v40
	global_store_dword v[38:39], v36, off
	v_add_co_ci_u32_e32 v41, vcc_lo, s3, v41, vcc_lo
	v_ashrrev_i32_e32 v45, 31, v44
	v_lshlrev_b64 v[38:39], 1, v[42:43]
	global_store_dword v[33:34], v37, off
	global_store_dword v[40:41], v35, off
	v_add_nc_u32_e32 v35, 0x1002, v23
	v_lshlrev_b64 v[33:34], 1, v[44:45]
	v_add_co_u32 v37, vcc_lo, s2, v38
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v39, vcc_lo
	v_add_nc_u32_e32 v39, 0x1200, v23
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_ashrrev_i32_e32 v40, 31, v39
	global_store_dword v[37:38], v32, off
	global_store_dword v[33:34], v31, off
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_nc_u32_e32 v38, 0x1402, v23
	v_add_co_u32 v34, vcc_lo, s2, v35
	v_lshlrev_b64 v[32:33], 1, v[39:40]
	v_add_co_ci_u32_e32 v35, vcc_lo, s3, v36, vcc_lo
	v_add_nc_u32_e32 v36, 0x1400, v23
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_u32 v32, vcc_lo, s2, v32
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v33, vcc_lo, s3, v33, vcc_lo
	v_add_co_u32 v30, vcc_lo, s2, v30
	global_store_dword v[34:35], v29, off
	v_add_co_ci_u32_e32 v31, vcc_lo, s3, v31, vcc_lo
	v_lshlrev_b64 v[28:29], 1, v[36:37]
	global_store_dword v[32:33], v25, off
	global_store_dword v[30:31], v27, off
	v_lshlrev_b64 v[24:25], 1, v[38:39]
	v_ashrrev_i32_e32 v27, 31, v26
	v_add_nc_u32_e32 v30, 0x1602, v23
	v_add_co_u32 v28, vcc_lo, s2, v28
	v_add_nc_u32_e32 v32, 0x1800, v23
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	v_add_co_u32 v24, vcc_lo, s2, v24
	v_ashrrev_i32_e32 v31, 31, v30
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v25, vcc_lo
	v_ashrrev_i32_e32 v33, 31, v32
	global_store_dword v[28:29], v21, off
	global_store_dword v[24:25], v22, off
	v_lshlrev_b64 v[21:22], 1, v[30:31]
	v_add_co_u32 v24, vcc_lo, s2, v26
	v_add_nc_u32_e32 v28, 0x1802, v23
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v27, vcc_lo
	v_lshlrev_b64 v[26:27], 1, v[32:33]
	v_add_nc_u32_e32 v30, 0x1a00, v23
	v_add_co_u32 v21, vcc_lo, s2, v21
	v_ashrrev_i32_e32 v29, 31, v28
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v22, vcc_lo
	global_store_dword v[24:25], v19, off
	v_add_co_u32 v26, vcc_lo, s2, v26
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v27, vcc_lo
	v_lshlrev_b64 v[24:25], 1, v[28:29]
	v_add_nc_u32_e32 v28, 0x1c02, v23
	global_store_dword v[21:22], v20, off
	global_store_dword v[26:27], v18, off
	v_add_nc_u32_e32 v20, 0x1a02, v23
	v_lshlrev_b64 v[18:19], 1, v[30:31]
	v_add_nc_u32_e32 v26, 0x1c00, v23
	v_add_co_u32 v24, vcc_lo, s2, v24
	v_ashrrev_i32_e32 v29, 31, v28
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v25, vcc_lo
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_ashrrev_i32_e32 v27, 31, v26
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	global_store_dword v[24:25], v16, off
	global_store_dword v[18:19], v15, off
	v_lshlrev_b64 v[15:16], 1, v[26:27]
	v_add_nc_u32_e32 v24, 0x1e00, v23
	v_add_co_u32 v18, vcc_lo, s2, v20
	v_add_nc_u32_e32 v26, 0x1e02, v23
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v21, vcc_lo
	v_lshlrev_b64 v[20:21], 1, v[28:29]
	v_add_co_u32 v15, vcc_lo, s2, v15
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v16, vcc_lo, s3, v16, vcc_lo
	v_ashrrev_i32_e32 v27, 31, v26
	global_store_dword v[18:19], v14, off
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_lshlrev_b64 v[18:19], 1, v[24:25]
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_add_nc_u32_e32 v14, 0x2000, v23
	v_add_nc_u32_e32 v24, 0x2200, v23
	global_store_dword v[15:16], v11, off
	global_store_dword v[20:21], v12, off
	v_lshlrev_b64 v[11:12], 1, v[26:27]
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_nc_u32_e32 v20, 0x2002, v23
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_add_co_u32 v11, vcc_lo, s2, v11
	v_ashrrev_i32_e32 v21, 31, v20
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v12, vcc_lo
	global_store_dword v[18:19], v5, off
	global_store_dword v[11:12], v6, off
	v_lshlrev_b64 v[5:6], 1, v[20:21]
	v_add_co_u32 v11, vcc_lo, s2, v14
	v_add_nc_u32_e32 v18, 0x2202, v23
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v15, vcc_lo
	v_lshlrev_b64 v[14:15], 1, v[24:25]
	v_add_nc_u32_e32 v20, 0x2400, v23
	v_add_co_u32 v5, vcc_lo, s2, v5
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo
	global_store_dword v[11:12], v3, off
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_lshlrev_b64 v[11:12], 1, v[18:19]
	global_store_dword v[5:6], v4, off
	global_store_dword v[14:15], v2, off
	v_lshlrev_b64 v[2:3], 1, v[20:21]
	v_add_nc_u32_e32 v4, 0x2402, v23
	v_add_co_u32 v11, vcc_lo, s2, v11
	v_add_nc_u32_e32 v14, 0x2600, v23
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v12, vcc_lo
	v_ashrrev_i32_e32 v5, 31, v4
	v_add_co_u32 v2, vcc_lo, s2, v2
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	global_store_dword v[11:12], v1, off
	v_add_nc_u32_e32 v11, 0x2800, v23
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_ashrrev_i32_e32 v1, 31, v0
	global_store_dword v[2:3], v17, off
	v_lshlrev_b64 v[2:3], 1, v[14:15]
	v_add_nc_u32_e32 v14, 0x2802, v23
	v_ashrrev_i32_e32 v12, 31, v11
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_u32 v2, vcc_lo, s2, v2
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	v_add_co_u32 v11, vcc_lo, s2, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v12, vcc_lo
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	global_store_dword v[4:5], v9, off
	global_store_dword v[2:3], v13, off
	global_store_dword v[0:1], v8, off
	global_store_dword v[11:12], v10, off
	global_store_dword v[14:15], v7, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1
		.amdhsa_group_segment_fixed_size 38144
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 110
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end37:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1, .Lfunc_end37-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2:
	s_mul_i32 s6, s6, 28
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_add_nc_u32_e32 v0, s6, v0
	s_mov_b32 s16, 0xa800
	s_mov_b32 s17, 0x15000
	s_mov_b32 s18, 0x1f800
	s_mov_b32 s9, 0x3f000
	v_lshrrev_b32_e32 v1, 1, v0
	v_lshlrev_b32_e32 v2, 4, v0
	v_and_b32_e32 v0, 0xfffffc1f, v0
	s_mov_b32 s10, 0x49800
	s_mov_b32 s19, 0x2a000
	v_and_b32_e32 v1, 0x1e0, v1
	v_and_b32_e32 v2, 0x200, v2
	s_mov_b32 s12, 0x54000
	s_mov_b32 s22, 0x34800
	s_mov_b32 s7, 0x5e800
	s_mov_b32 s8, 0x69000
	v_or3_b32 v0, v0, v2, v1
	s_mov_b32 s2, 0x7e000
	s_mov_b32 s6, 0x73800
	s_mov_b32 s3, 0x9d800
	s_load_dwordx2 s[20:21], s[4:5], 0x0
	v_ashrrev_i32_e32 v1, 31, v0
	s_movk_i32 s11, 0x3000
	s_movk_i32 s5, 0x3400
	s_mov_b32 s4, 0xc800
	s_mov_b32 s15, 0xb000
	v_lshlrev_b64 v[26:27], 1, v[0:1]
	s_movk_i32 s14, 0x4800
	s_mov_b32 s13, 0xb400
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s0, v26
	s_mov_b32 s0, 0x93000
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v27, vcc_lo
	s_mov_b32 s1, 0x88800
	v_add_co_u32 v0, vcc_lo, s16, v3
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v7, vcc_lo, s17, v3
	v_add_co_ci_u32_e32 v8, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v10, vcc_lo, s18, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v13, vcc_lo, s9, v3
	s_clause 0x2
	global_load_ushort v12, v[3:4], off
	global_load_ushort v6, v[0:1], off
	global_load_ushort v5, v[7:8], off
	v_add_co_ci_u32_e32 v14, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v15, vcc_lo, s10, v3
	v_add_co_ci_u32_e32 v16, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v0, vcc_lo, 0xdc800, v3
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v17, vcc_lo, s19, v3
	v_add_co_ci_u32_e32 v18, vcc_lo, 0, v4, vcc_lo
	s_clause 0x2
	global_load_ushort v9, v[13:14], off
	global_load_ushort v7, v[15:16], off
	global_load_ushort v0, v[0:1], off
	v_add_co_u32 v1, vcc_lo, 0xe7000, v3
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v19, vcc_lo, 0x11b800, v3
	s_clause 0x1
	global_load_ushort v15, v[10:11], off
	global_load_ushort v13, v[17:18], off
	v_add_co_ci_u32_e32 v20, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v10, vcc_lo, s12, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v16, vcc_lo, s22, v3
	s_clause 0x1
	global_load_ushort v2, v[1:2], off
	global_load_ushort v1, v[19:20], off
	v_add_co_ci_u32_e32 v17, vcc_lo, 0, v4, vcc_lo
	s_clause 0x1
	global_load_ushort v44, v[10:11], off
	global_load_ushort v45, v[16:17], off
	v_add_co_u32 v10, vcc_lo, s7, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v46, v[10:11], off
	v_add_co_u32 v10, vcc_lo, 0x126000, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v8, v[10:11], off
	v_add_co_u32 v10, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v47, v[10:11], off
	v_add_co_u32 v10, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v16, vcc_lo, s1, v3
	v_add_co_ci_u32_e32 v17, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v18, vcc_lo, s6, v3
	global_load_ushort v48, v[10:11], off
	v_add_co_ci_u32_e32 v19, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v10, vcc_lo, s0, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	s_clause 0x2
	global_load_ushort v25, v[16:17], off
	global_load_ushort v49, v[18:19], off
	global_load_ushort v24, v[10:11], off
	v_add_co_u32 v10, vcc_lo, s3, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v23, v[10:11], off
	v_add_co_u32 v10, vcc_lo, 0xa8000, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v22, v[10:11], off
	v_add_co_u32 v10, vcc_lo, 0xb2800, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v20, v[10:11], off
	v_add_co_u32 v10, vcc_lo, 0xc7800, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v17, vcc_lo, 0xd2000, v3
	v_add_co_ci_u32_e32 v18, vcc_lo, 0, v4, vcc_lo
	s_clause 0x1
	global_load_ushort v16, v[10:11], off
	global_load_ushort v14, v[17:18], off
	v_add_co_u32 v10, vcc_lo, 0xbd000, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v21, v[10:11], off
	v_add_co_u32 v10, vcc_lo, 0x106800, v3
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v17, vcc_lo, 0x111000, v3
	v_add_co_ci_u32_e32 v18, vcc_lo, 0, v4, vcc_lo
	s_clause 0x1
	global_load_ushort v11, v[10:11], off
	global_load_ushort v10, v[17:18], off
	v_add_co_u32 v17, vcc_lo, 0xf1800, v3
	v_add_co_ci_u32_e32 v18, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v28, vcc_lo, 0xfc000, v3
	v_add_co_ci_u32_e32 v29, vcc_lo, 0, v4, vcc_lo
	s_clause 0x1
	global_load_ushort v18, v[17:18], off
	global_load_ushort v19, v[28:29], off
	v_add_co_u32 v28, vcc_lo, 0x130800, v3
	v_add_co_ci_u32_e32 v29, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v26, vcc_lo, s20, v26
	v_add_co_ci_u32_e32 v27, vcc_lo, s21, v27, vcc_lo
	global_load_ushort v17, v[28:29], off
	v_add_co_u32 v28, vcc_lo, s16, v26
	v_add_co_ci_u32_e32 v29, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v30, vcc_lo, s17, v26
	v_add_co_ci_u32_e32 v31, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v32, vcc_lo, s18, v26
	v_add_co_ci_u32_e32 v33, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v34, vcc_lo, s19, v26
	v_add_co_ci_u32_e32 v35, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v36, vcc_lo, s22, v26
	v_add_co_ci_u32_e32 v37, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v38, vcc_lo, 0x13b000, v3
	v_add_co_ci_u32_e32 v39, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v40, vcc_lo, 0x145800, v3
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v50, v[38:39], off
	v_add_co_u32 v38, vcc_lo, 0x150000, v3
	v_add_co_ci_u32_e32 v39, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v51, v[40:41], off
	v_add_co_u32 v40, vcc_lo, 0x15a800, v3
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v4, vcc_lo
	global_load_ushort v52, v[38:39], off
	v_add_co_u32 v38, vcc_lo, s9, v26
	v_add_co_ci_u32_e32 v39, vcc_lo, 0, v27, vcc_lo
	global_load_ushort v53, v[40:41], off
	v_add_co_u32 v40, vcc_lo, 0x165000, v3
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v42, vcc_lo, s10, v26
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v3, vcc_lo, 0x16f800, v3
	global_load_ushort v54, v[40:41], off
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v4, vcc_lo
	v_add_co_u32 v40, vcc_lo, s12, v26
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v27, vcc_lo
	global_load_ushort v55, v[3:4], off
	s_waitcnt vmcnt(35)
	v_add_f16_e32 v12, 0, v12
	s_waitcnt vmcnt(34)
	v_sub_f16_e32 v3, 0, v6
	v_add_f16_e32 v4, 0, v6
	v_add_f16_e32 v12, v12, v6
	s_waitcnt vmcnt(33)
	v_add_f16_e32 v3, v3, v5
	v_add_f16_e32 v4, v4, v5
	v_add_f16_e32 v6, v12, v5
	v_mov_b32_e32 v58, v3
	s_waitcnt vmcnt(31)
	v_add_f16_e32 v56, 0, v7
	v_sub_f16_e32 v12, 0, v9
	s_waitcnt vmcnt(30)
	v_mul_f16_e32 v57, 0.5, v0
	s_waitcnt vmcnt(29)
	v_add_f16_e32 v6, v6, v15
	v_fmac_f16_e32 v3, s11, v15
	v_fmac_f16_e32 v4, s5, v15
	v_fmac_f16_e32 v58, 0.5, v15
	v_sub_f16_e32 v12, v12, v7
	s_waitcnt vmcnt(28)
	v_add_f16_e32 v6, v6, v13
	v_fmac_f16_e32 v3, s4, v13
	v_fmac_f16_e32 v4, 4.0, v13
	v_fmac_f16_e32 v58, -2.0, v13
	v_sub_f16_e32 v15, 0, v7
	v_add_f16_e32 v6, v6, v9
	v_add_f16_e32 v9, 0, v9
	s_waitcnt vmcnt(24)
	v_add_f16_e32 v3, v3, v45
	v_sub_f16_e32 v13, v56, v44
	v_add_f16_e32 v4, v4, v7
	v_add_f16_e32 v6, v6, v7
	v_add_f16_e32 v9, v9, v7
	v_sub_f16_e32 v58, v58, v7
	v_sub_f16_e32 v3, v3, v7
	v_mov_b32_e32 v7, v13
	s_waitcnt vmcnt(23)
	v_fmac_f16_e32 v13, s15, v46
	v_sub_f16_e32 v45, v15, v44
	v_sub_f16_e32 v12, v12, v44
	v_add_f16_e32 v9, v9, v44
	v_add_f16_e32 v6, v6, v44
	v_add_f16_e32 v3, v44, v3
	v_fmac_f16_e32 v45, s13, v46
	v_fmac_f16_e32 v7, -0.5, v46
	v_add_f16_e32 v15, v15, v44
	v_add_f16_e32 v56, v56, v44
	v_add_f16_e32 v4, v4, v44
	v_add_f16_e32 v58, v58, v44
	v_sub_f16_e32 v12, v12, v46
	v_mov_b32_e32 v44, v15
	v_fmac_f16_e32 v15, s11, v46
	v_add_f16_e32 v9, v9, v46
	s_waitcnt vmcnt(21)
	v_fmac_f16_e32 v13, s14, v47
	v_add_f16_e32 v6, v6, v46
	v_fmac_f16_e32 v3, s11, v46
	v_fmac_f16_e32 v45, -4.0, v47
	v_fmac_f16_e32 v7, 2.0, v47
	v_fmac_f16_e32 v56, s5, v46
	v_fmac_f16_e32 v44, 0.5, v46
	v_fmac_f16_e32 v4, s5, v46
	v_fmac_f16_e32 v58, 0.5, v46
	v_fmac_f16_e32 v15, s4, v47
	v_sub_f16_e32 v12, v12, v47
	v_add_f16_e32 v9, v9, v47
	v_add_f16_e32 v6, v6, v47
	s_waitcnt vmcnt(18)
	v_sub_f16_e32 v13, v13, v49
	v_fmac_f16_e32 v3, s4, v47
	v_add_f16_e32 v45, v45, v25
	v_sub_f16_e32 v7, v7, v25
	v_fmac_f16_e32 v56, 4.0, v47
	v_sub_f16_e32 v13, v13, v25
	v_fmac_f16_e32 v44, -2.0, v47
	v_fmac_f16_e32 v4, 4.0, v47
	v_fmac_f16_e32 v58, -2.0, v47
	v_add_f16_e32 v12, v12, v48
	s_waitcnt vmcnt(17)
	v_add_f16_e32 v13, v24, v13
	v_add_f16_e32 v9, v9, v48
	v_add_f16_e32 v6, v6, v48
	v_add_f16_e32 v15, v15, v49
	v_add_f16_e32 v3, v49, v3
	v_add_f16_e32 v45, v45, v24
	v_add_f16_e32 v7, v7, v24
	s_waitcnt vmcnt(16)
	v_fmac_f16_e32 v13, s11, v23
	v_add_f16_e32 v56, v56, v25
	v_sub_f16_e32 v44, v44, v25
	v_sub_f16_e32 v15, v15, v25
	v_add_f16_e32 v12, v12, v25
	v_fmac_f16_e32 v45, s5, v23
	v_add_f16_e32 v9, v9, v25
	v_fmac_f16_e32 v7, 0.5, v23
	v_add_f16_e32 v4, v4, v25
	v_sub_f16_e32 v58, v58, v25
	v_add_f16_e32 v6, v6, v25
	v_sub_f16_e32 v3, v3, v25
	s_waitcnt vmcnt(15)
	v_fmac_f16_e32 v13, s4, v22
	v_add_f16_e32 v56, v56, v24
	v_add_f16_e32 v44, v44, v24
	v_add_f16_e32 v15, v24, v15
	v_add_f16_e32 v12, v12, v24
	v_add_f16_e32 v9, v9, v24
	v_add_f16_e32 v4, v4, v24
	v_add_f16_e32 v58, v58, v24
	v_add_f16_e32 v6, v6, v24
	v_add_f16_e32 v3, v24, v3
	v_fmac_f16_e32 v45, 4.0, v22
	v_fmac_f16_e32 v7, -2.0, v22
	s_waitcnt vmcnt(14)
	v_add_f16_e32 v13, v20, v13
	v_fmac_f16_e32 v56, s5, v23
	v_fmac_f16_e32 v44, 0.5, v23
	v_mov_b32_e32 v25, v45
	v_mov_b32_e32 v24, v7
	v_fmac_f16_e32 v15, s11, v23
	v_add_f16_e32 v12, v12, v23
	v_add_f16_e32 v9, v9, v23
	v_fmac_f16_e32 v4, s5, v23
	v_fmac_f16_e32 v58, 0.5, v23
	v_add_f16_e32 v6, v6, v23
	v_fmac_f16_e32 v3, s11, v23
	v_mov_b32_e32 v23, v13
	s_waitcnt vmcnt(13)
	v_fmac_f16_e32 v25, 0.5, v16
	v_fmac_f16_e32 v24, -0.5, v16
	v_add_f16_e32 v12, v12, v22
	v_add_f16_e32 v9, v9, v22
	v_fmac_f16_e32 v23, -0.5, v16
	s_waitcnt vmcnt(12)
	v_fmac_f16_e32 v25, 0.5, v14
	v_fmac_f16_e32 v24, 0.5, v14
	v_add_f16_e32 v6, v6, v22
	v_fmac_f16_e32 v3, s4, v22
	v_fmac_f16_e32 v23, 0.5, v14
	v_fmac_f16_e32 v25, s5, v57
	v_fmac_f16_e32 v24, 0.5, v57
	v_mul_f16_e32 v5, 0.5, v2
	v_fmac_f16_e32 v4, 4.0, v22
	v_fmac_f16_e32 v23, s11, v57
	v_mov_b32_e32 v57, v12
	v_fmac_f16_e32 v58, -2.0, v22
	s_waitcnt vmcnt(11)
	v_fmac_f16_e32 v9, s5, v21
	v_fmac_f16_e32 v12, s11, v21
	v_add_f16_e32 v3, v20, v3
	v_fmac_f16_e32 v57, 0.5, v21
	v_add_f16_e32 v6, v6, v21
	v_fmac_f16_e32 v9, s5, v16
	v_fmac_f16_e32 v12, s11, v16
	v_add_f16_e32 v4, v4, v16
	v_fmac_f16_e32 v57, 0.5, v16
	v_fmac_f16_e32 v25, 4.0, v5
	v_fmac_f16_e32 v24, -2.0, v5
	v_fmac_f16_e32 v23, s4, v5
	v_add_f16_e32 v5, v6, v16
	v_sub_f16_e32 v3, v3, v16
	v_sub_f16_e32 v58, v58, v16
	v_fmac_f16_e32 v9, s5, v14
	v_add_f16_e32 v4, v4, v14
	v_fmac_f16_e32 v57, 0.5, v14
	v_add_f16_e32 v5, v5, v14
	v_add_f16_e32 v21, v58, v14
	v_add_f16_e32 v3, v14, v3
	v_fmac_f16_e32 v12, s11, v14
	v_fmac_f16_e32 v13, s15, v16
	v_fmac_f16_e32 v9, s5, v0
	v_fmac_f16_e32 v4, s5, v0
	v_fmac_f16_e32 v57, 0.5, v0
	v_fmac_f16_e32 v21, 0.5, v0
	v_add_f16_e32 v5, v5, v0
	v_fmac_f16_e32 v3, s11, v0
	v_fmac_f16_e32 v12, s11, v0
	v_mul_f16_e32 v47, s5, v0
	v_mul_f16_e32 v0, s11, v0
	v_fmac_f16_e32 v13, s11, v14
	v_fmac_f16_e32 v44, -2.0, v22
	v_fmac_f16_e32 v9, s5, v2
	v_fmac_f16_e32 v4, 4.0, v2
	v_fmac_f16_e32 v57, 0.5, v2
	v_fmac_f16_e32 v3, s4, v2
	v_add_f16_e32 v5, v5, v2
	v_fmac_f16_e32 v12, s11, v2
	v_fmac_f16_e32 v21, -2.0, v2
	v_mul_f16_e32 v48, s5, v2
	v_mul_f16_e32 v2, s11, v2
	v_fmac_f16_e32 v13, s11, v0
	v_fmac_f16_e32 v44, s13, v16
	v_fmac_f16_e32 v15, s4, v22
	v_fmac_f16_e32 v7, s15, v16
	s_waitcnt vmcnt(8)
	v_fmac_f16_e32 v23, 0.5, v18
	v_fmac_f16_e32 v13, s4, v2
	v_fmac_f16_e32 v44, s5, v14
	s_waitcnt vmcnt(7)
	v_fmac_f16_e32 v12, s4, v19
	v_fmac_f16_e32 v45, s11, v16
	v_add_f16_e32 v15, v20, v15
	v_add_f16_e32 v3, v18, v3
	v_fmac_f16_e32 v57, -2.0, v19
	v_fmac_f16_e32 v7, s11, v14
	v_fmac_f16_e32 v13, s11, v18
	v_fmac_f16_e32 v56, 4.0, v22
	v_fmac_f16_e32 v44, 0.5, v47
	v_fmac_f16_e32 v23, 2.0, v11
	v_fmac_f16_e32 v12, s4, v11
	v_fmac_f16_e32 v45, s11, v14
	v_add_f16_e32 v4, v4, v11
	v_add_f16_e32 v5, v5, v19
	v_sub_f16_e32 v3, v3, v11
	v_fmac_f16_e32 v15, s13, v16
	v_fmac_f16_e32 v25, -2.0, v11
	v_fmac_f16_e32 v24, 2.0, v11
	v_sub_f16_e32 v6, v21, v11
	v_fmac_f16_e32 v9, 4.0, v19
	v_fmac_f16_e32 v57, -2.0, v11
	v_fmac_f16_e32 v7, 0.5, v0
	v_fmac_f16_e32 v13, s14, v11
	v_fmac_f16_e32 v45, s5, v0
	v_fmac_f16_e32 v56, s5, v16
	v_fmac_f16_e32 v44, -2.0, v48
	v_fmac_f16_e32 v12, s4, v10
	v_mul_f16_e32 v59, -2.0, v1
	v_fmac_f16_e32 v23, -2.0, v10
	v_add_f16_e32 v4, v4, v10
	v_add_f16_e32 v5, v5, v11
	v_add_f16_e32 v3, v10, v3
	v_fmac_f16_e32 v15, s5, v14
	v_fmac_f16_e32 v25, -2.0, v10
	v_fmac_f16_e32 v24, -2.0, v10
	v_add_f16_e32 v6, v6, v10
	v_fmac_f16_e32 v9, 4.0, v11
	v_fmac_f16_e32 v57, -2.0, v10
	v_fmac_f16_e32 v7, -2.0, v2
	v_mul_f16_e32 v0, s4, v1
	v_fmac_f16_e32 v13, s4, v10
	v_fmac_f16_e32 v45, 4.0, v2
	v_fmac_f16_e32 v56, s5, v14
	v_fmac_f16_e32 v44, -4.0, v11
	v_fmac_f16_e32 v12, s4, v1
	v_mul_f16_e32 v46, -2.0, v8
	v_fmac_f16_e32 v23, s11, v59
	v_fmac_f16_e32 v4, s5, v1
	v_add_f16_e32 v5, v5, v10
	v_fmac_f16_e32 v3, s11, v1
	v_fmac_f16_e32 v15, s11, v47
	v_fmac_f16_e32 v25, s5, v59
	v_fmac_f16_e32 v24, 0.5, v59
	v_fmac_f16_e32 v6, 0.5, v1
	v_fmac_f16_e32 v9, 4.0, v10
	v_fmac_f16_e32 v57, -2.0, v1
	v_fmac_f16_e32 v7, s14, v11
	v_mul_f16_e32 v2, s4, v8
	v_fmac_f16_e32 v13, s11, v0
	v_fmac_f16_e32 v56, s5, v47
	v_fmac_f16_e32 v23, s4, v46
	v_fmac_f16_e32 v45, s4, v11
	v_mul_f16_e32 v49, 4.0, v1
	v_fmac_f16_e32 v44, 4.0, v10
	v_fmac_f16_e32 v12, s4, v8
	v_fmac_f16_e32 v4, 4.0, v8
	v_add_f16_e32 v5, v5, v1
	v_fmac_f16_e32 v3, s4, v8
	v_fmac_f16_e32 v15, s4, v48
	v_fmac_f16_e32 v25, 4.0, v46
	v_fmac_f16_e32 v24, -2.0, v46
	v_fmac_f16_e32 v6, -2.0, v8
	v_fmac_f16_e32 v9, 4.0, v1
	v_fmac_f16_e32 v7, s4, v10
	v_fmac_f16_e32 v13, s4, v2
	v_fmac_f16_e32 v57, -2.0, v8
	v_fmac_f16_e32 v56, 4.0, v48
	s_waitcnt vmcnt(5)
	v_add_f16_e32 v1, v12, v50
	v_fmac_f16_e32 v45, s4, v10
	v_mul_f16_e32 v22, 4.0, v8
	v_fmac_f16_e32 v44, 0.5, v49
	v_fmac_f16_e32 v23, -2.0, v17
	global_store_short v[30:31], v4, off
	v_add_f16_e32 v4, v5, v8
	v_fmac_f16_e32 v15, s5, v18
	v_add_f16_e32 v3, v17, v3
	global_store_short v[38:39], v25, off
	global_store_short v[36:37], v24, off
	global_store_short v[28:29], v6, off
	global_store_short v[34:35], v57, off
	global_store_short v[42:43], v23, off
	global_store_short v[26:27], v4, off
	global_store_short v[32:33], v3, off
	v_add_co_u32 v3, vcc_lo, s7, v26
	v_fmac_f16_e32 v7, 0.5, v0
	v_fmac_f16_e32 v9, 4.0, v8
	v_fmac_f16_e32 v13, s4, v17
	v_fmac_f16_e32 v56, 4.0, v11
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v27, vcc_lo
	v_fmac_f16_e32 v45, s5, v0
	v_fmac_f16_e32 v44, -2.0, v22
	s_waitcnt vmcnt(4)
	v_add_f16_e32 v1, v1, v51
	v_fmac_f16_e32 v15, -4.0, v11
	v_fmac_f16_e32 v7, -2.0, v2
	global_store_short v[40:41], v9, off
	global_store_short v[3:4], v44, off
	v_sub_f16_e32 v4, v13, v51
	v_fmac_f16_e32 v56, 4.0, v10
	s_waitcnt vmcnt(3)
	v_add_f16_e32 v0, v1, v52
	v_fmac_f16_e32 v45, 4.0, v2
	v_fmac_f16_e32 v15, 4.0, v10
	v_add_co_u32 v5, vcc_lo, s8, v26
	v_add_f16_e32 v8, v4, v52
	v_sub_f16_e32 v1, v7, v51
	v_fmac_f16_e32 v56, s5, v49
	s_waitcnt vmcnt(2)
	v_add_f16_e32 v2, v0, v53
	v_add_f16_e32 v3, v45, v51
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v27, vcc_lo
	v_fmac_f16_e32 v15, s11, v49
	v_add_co_u32 v0, vcc_lo, s6, v26
	v_add_f16_e32 v10, v1, v52
	v_fmac_f16_e32 v8, s11, v53
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v27, vcc_lo
	v_add_f16_e32 v12, v3, v52
	v_fmac_f16_e32 v56, 4.0, v22
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v11, v2, v54
	v_add_co_u32 v2, vcc_lo, s2, v26
	v_fmac_f16_e32 v15, s4, v22
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v4, vcc_lo, s1, v26
	v_fmac_f16_e32 v10, 0.5, v53
	v_fmac_f16_e32 v8, s4, v54
	v_fmac_f16_e32 v12, s5, v53
	global_store_short v[5:6], v56, off
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v27, vcc_lo
	v_add_co_u32 v6, vcc_lo, s0, v26
	v_fmac_f16_e32 v15, 4.0, v17
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v27, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v13, v8, v55
	v_add_co_u32 v8, vcc_lo, s3, v26
	v_fmac_f16_e32 v10, -2.0, v54
	v_fmac_f16_e32 v12, 4.0, v54
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v27, vcc_lo
	global_store_short v[0:1], v15, off
	global_store_short v[2:3], v11, off
	global_store_short v[4:5], v10, off
	global_store_short v[6:7], v12, off
	global_store_short v[8:9], v13, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 60
		.amdhsa_next_free_sgpr 23
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end38:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2, .Lfunc_end38-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3:
	v_lshl_add_u32 v0, s6, 6, v0
	s_mov_b32 s0, 0x51eb851f
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_mul_hi_i32 v1, v0, s0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v3, 14, v1
	v_ashrrev_i32_e32 v1, 12, v1
	v_add_nc_u32_e32 v3, v3, v2
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_i32_i24_e32 v4, 0xc800, v3
	v_mul_i32_i24_e32 v1, 0x3200, v1
	v_mul_i32_i24_e32 v3, 0xe00, v3
	v_sub_nc_u32_e32 v4, v0, v4
	v_sub_nc_u32_e32 v1, v0, v1
	v_mul_hi_i32 v2, v4, s0
	v_and_b32_e32 v4, 0x1ff, v0
	v_ashrrev_i32_e32 v6, 2, v1
	v_bfe_u32 v1, v1, 9, 2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_or_b32_e32 v3, v3, v4
	v_lshrrev_b32_e32 v5, 31, v2
	v_ashrrev_i32_e32 v2, 12, v2
	v_mul_u32_u24_e32 v1, 0x5400, v1
	v_add_nc_u32_e32 v2, v2, v5
	v_and_b32_e32 v5, 0xfffffe00, v6
	v_mad_i32_i24 v2, 0x15000, v2, v3
	v_lshlrev_b32_e32 v3, 1, v4
	v_add3_u32 v1, v2, v5, v1
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_ushort v3, v3, s[2:3]
	global_load_ushort v2, v[1:2], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v3, v2
	v_max_f16_e32 v2, 0, v2
	global_store_short v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 7
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end39:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3, .Lfunc_end39-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0:
	v_lshrrev_b32_e32 v1, 4, v0
	s_and_b32 s0, s6, -4
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	v_add_nc_u32_e32 v2, s0, v1
	s_lshl_b32 s0, s6, 4
	s_and_b32 s7, s0, 48
	s_movk_i32 s0, 0xc8
	v_mul_hi_i32 v1, 0x51eb851f, v2
	v_lshrrev_b32_e32 v3, 31, v1
	v_ashrrev_i32_e32 v1, 5, v1
	v_add_nc_u32_e32 v3, v1, v3
	v_and_b32_e32 v1, 15, v0
	v_mul_lo_u32 v4, 0x64, v3
	v_mul_lo_u32 v5, 0x6400, v3
	v_lshlrev_b32_e32 v13, 1, v3
	v_sub_nc_u32_e32 v2, v2, v4
	v_or3_b32 v4, v1, s7, v5
	v_lshlrev_b32_e32 v5, 7, v2
	v_lshlrev_b32_e32 v3, 1, v2
	v_add_nc_u32_e32 v2, -1, v13
	v_add3_u32 v7, v4, v5, 0xffffcdc0
	v_add_nc_u32_e32 v6, -1, v3
	v_cmp_gt_u32_e64 s2, 0xbc, v2
	v_ashrrev_i32_e32 v8, 31, v7
	v_cmp_gt_u32_e64 s1, s0, v6
	v_lshlrev_b64 v[4:5], 1, v[7:8]
	s_and_b32 s10, s2, s1
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s8, v4
	v_mov_b32_e32 v4, 0
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v5, vcc_lo
	s_and_saveexec_b32 s3, s10
	s_cbranch_execz BB40_2
	global_load_ushort v2, v[8:9], off
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v4, 0, v2
BB40_2:
	s_or_b32 exec_lo, exec_lo, s3
	v_cmp_gt_u32_e64 s0, s0, v3
	v_mov_b32_e32 v5, 0
	s_and_b32 s3, s2, s0
	s_and_saveexec_b32 s10, s3
	s_cbranch_execz BB40_4
	global_load_ushort v5, v[8:9], off offset:128
BB40_4:
	s_or_b32 exec_lo, exec_lo, s10
	v_mov_b32_e32 v2, 0
	s_and_saveexec_b32 s10, s3
	s_cbranch_execz BB40_6
	global_load_ushort v2, v[8:9], off offset:256
BB40_6:
	s_or_b32 exec_lo, exec_lo, s10
	v_add_nc_u32_e32 v3, 2, v3
	v_mov_b32_e32 v6, 0
	v_cmp_gt_u32_e32 vcc_lo, 0xc8, v3
	s_and_b32 s3, s2, vcc_lo
	s_and_saveexec_b32 s2, s3
	s_cbranch_execz BB40_8
	global_load_ushort v6, v[8:9], off offset:384
BB40_8:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_u32_e64 s2, 0xbc, v13
	v_mov_b32_e32 v3, 0
	s_and_b32 s11, s2, s1
	s_and_saveexec_b32 s10, s11
	s_cbranch_execz BB40_10
	v_add_nc_u32_e32 v8, 0x3200, v7
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v8, s3, s8, v8
	v_add_co_ci_u32_e64 v9, s3, s9, v9, s3
	global_load_ushort v3, v[8:9], off
BB40_10:
	s_or_b32 exec_lo, exec_lo, s10
	v_mov_b32_e32 v9, 0
	s_and_b32 s10, s2, s0
	s_and_saveexec_b32 s12, s10
	s_cbranch_execz BB40_12
	v_add_nc_u32_e32 v8, 0x3240, v7
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v8, s3, s8, v8
	v_add_co_ci_u32_e64 v9, s3, s9, v9, s3
	global_load_ushort v9, v[8:9], off
BB40_12:
	s_or_b32 exec_lo, exec_lo, s12
	v_mov_b32_e32 v8, 0
	s_and_saveexec_b32 s12, s10
	s_cbranch_execz BB40_14
	v_add_nc_u32_e32 v10, 0x3280, v7
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_add_co_u32 v10, s3, s8, v10
	v_add_co_ci_u32_e64 v11, s3, s9, v11, s3
	global_load_ushort v8, v[10:11], off
BB40_14:
	s_or_b32 exec_lo, exec_lo, s12
	v_mov_b32_e32 v10, 0
	s_and_b32 s3, s2, vcc_lo
	s_and_saveexec_b32 s12, s3
	s_cbranch_execnz BB40_29
	s_or_b32 exec_lo, exec_lo, s12
	v_mov_b32_e32 v11, 0
	s_and_saveexec_b32 s12, s11
	s_cbranch_execnz BB40_30
BB40_16:
	s_or_b32 exec_lo, exec_lo, s12
	v_mov_b32_e32 v12, 0
	s_and_saveexec_b32 s11, s10
	s_cbranch_execnz BB40_31
BB40_17:
	s_or_b32 exec_lo, exec_lo, s11
	v_mov_b32_e32 v14, 0
	s_and_saveexec_b32 s11, s10
	s_cbranch_execnz BB40_32
BB40_18:
	s_or_b32 exec_lo, exec_lo, s11
	v_mov_b32_e32 v15, 0
	s_and_saveexec_b32 s10, s3
	s_cbranch_execz BB40_20
BB40_19:
	v_add_nc_u32_e32 v15, 0x64c0, v7
	v_ashrrev_i32_e32 v16, 31, v15
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_add_co_u32 v15, s2, s8, v15
	v_add_co_ci_u32_e64 v16, s2, s9, v16, s2
	global_load_ushort v15, v[15:16], off
BB40_20:
	s_or_b32 exec_lo, exec_lo, s10
	v_add_nc_u32_e32 v13, 2, v13
	v_cmp_gt_u32_e64 s2, 0xbc, v13
	v_mov_b32_e32 v13, 0
	s_and_b32 s1, s2, s1
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB40_22
	v_add_nc_u32_e32 v16, 0x9600, v7
	v_ashrrev_i32_e32 v17, 31, v16
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_add_co_u32 v16, s1, s8, v16
	v_add_co_ci_u32_e64 v17, s1, s9, v17, s1
	global_load_ushort v13, v[16:17], off
BB40_22:
	s_or_b32 exec_lo, exec_lo, s3
	v_mov_b32_e32 v16, 0
	s_and_b32 s1, s2, s0
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB40_24
	v_add_nc_u32_e32 v16, 0x9640, v7
	v_ashrrev_i32_e32 v17, 31, v16
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_add_co_u32 v16, s0, s8, v16
	v_add_co_ci_u32_e64 v17, s0, s9, v17, s0
	global_load_ushort v16, v[16:17], off
BB40_24:
	s_or_b32 exec_lo, exec_lo, s3
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	v_mov_b32_e32 v17, 0
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB40_26
	v_add_nc_u32_e32 v17, 0x9680, v7
	v_ashrrev_i32_e32 v18, 31, v17
	v_lshlrev_b64 v[17:18], 1, v[17:18]
	v_add_co_u32 v17, s0, s8, v17
	v_add_co_ci_u32_e64 v18, s0, s9, v18, s0
	global_load_ushort v17, v[17:18], off
BB40_26:
	s_or_b32 exec_lo, exec_lo, s3
	v_mov_b32_e32 v18, 0
	s_and_b32 s1, s2, vcc_lo
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB40_28
	v_add_nc_u32_e32 v18, 0x96c0, v7
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	global_load_ushort v18, v[18:19], off
BB40_28:
	s_or_b32 exec_lo, exec_lo, s0
	v_lshlrev_b32_e32 v0, 2, v0
	s_lshl_b32 s0, s6, 6
	s_waitcnt vmcnt(0)
	v_sub_f16_e32 v4, v4, v2
	s_and_b32 s0, s0, 0xffffff00
	v_sub_f16_e32 v7, 0, v5
	v_and_b32_e32 v0, 0xfc0, v0
	v_add_f16_e32 v5, 0, v5
	v_sub_f16_e32 v4, v4, v11
	v_add_f16_e32 v20, 0, v9
	v_add_f16_e32 v21, v2, v7
	v_add_nc_u32_e32 v0, s0, v0
	v_add_f16_e32 v2, v2, v5
	v_add_f16_e32 v5, v7, v6
	v_add_f16_e32 v4, v4, v14
	v_add_f16_e32 v6, v21, v12
	v_or3_b32 v0, v0, s7, v1
	v_sub_f16_e32 v2, v2, v12
	v_add_f16_e32 v5, v5, v12
	v_sub_f16_e32 v19, 0, v3
	v_sub_f16_e32 v21, v6, v14
	v_ashrrev_i32_e32 v1, 31, v0
	v_sub_f16_e32 v2, v2, v14
	v_sub_f16_e32 v22, v5, v15
	v_sub_f16_e32 v23, v20, v8
	v_sub_f16_e32 v9, 0, v9
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_f16_e32 v19, v19, v8
	v_add_f16_e32 v27, 0, v3
	v_sub_f16_e32 v26, v20, v10
	v_add_f16_e32 v10, v9, v10
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s4, v0
	v_sub_f16_e32 v27, v27, v8
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo
	v_sub_f16_e32 v28, v26, v12
	v_sub_f16_e32 v10, v10, v12
	global_store_short v[0:1], v4, off
	v_add_co_u32 v4, vcc_lo, 0x125800, v0
	v_add_f16_e32 v10, v15, v10
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x24b800, v0
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	global_store_short v[4:5], v21, off offset:1024
	v_add_co_u32 v4, vcc_lo, 0x371000, v0
	v_add_f16_e32 v21, v11, v19
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	global_store_short v[6:7], v2, off
	global_store_short v[4:5], v22, off offset:1024
	v_sub_f16_e32 v2, v23, v12
	v_sub_f16_e32 v22, v9, v8
	v_add_co_u32 v4, vcc_lo, 0x497000, v0
	v_sub_f16_e32 v21, v21, v14
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v24, v14, v2
	v_add_f16_e32 v2, v12, v22
	v_add_co_u32 v6, vcc_lo, 0x5bc800, v0
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v25, v14, v2
	v_add_co_u32 v2, vcc_lo, 0x6e2800, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	global_store_short v[4:5], v21, off
	global_store_short v[6:7], v24, off offset:1024
	global_store_short v[2:3], v25, off
	v_add_f16_e32 v5, v8, v9
	v_add_f16_e32 v4, v11, v27
	v_add_f16_e32 v7, v8, v20
	v_add_co_u32 v2, vcc_lo, 0x808000, v0
	v_add_f16_e32 v21, v15, v28
	v_sub_f16_e32 v6, v5, v12
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_sub_f16_e32 v11, v4, v14
	v_add_co_u32 v4, vcc_lo, 0x92e000, v0
	v_add_f16_e32 v8, v12, v7
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v20, v14, v6
	v_add_co_u32 v6, vcc_lo, 0xa53800, v0
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v14, v14, v8
	v_add_co_u32 v8, vcc_lo, 0xb79800, v0
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v21, off offset:1024
	global_store_short v[4:5], v11, off
	global_store_short v[6:7], v20, off offset:1024
	global_store_short v[8:9], v14, off
	v_add_f16_e32 v4, v19, v13
	v_add_co_u32 v2, vcc_lo, 0xc9f000, v0
	v_sub_f16_e32 v6, v23, v16
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v8, v22, v16
	v_sub_f16_e32 v11, v4, v17
	v_add_co_u32 v4, vcc_lo, 0xdc5000, v0
	v_add_f16_e32 v12, v17, v6
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0xeea800, v0
	v_sub_f16_e32 v14, v26, v16
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v13, v17, v8
	v_add_co_u32 v8, vcc_lo, 0x1010800, v0
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v1, vcc_lo
	v_add_co_u32 v0, vcc_lo, 0x1136000, v0
	v_add_f16_e32 v14, v14, v18
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v1, vcc_lo
	global_store_short v[2:3], v10, off offset:1024
	global_store_short v[4:5], v11, off
	global_store_short v[6:7], v12, off offset:1024
	global_store_short v[8:9], v13, off
	global_store_short v[0:1], v14, off offset:1024
	s_endpgm
BB40_29:
	v_add_nc_u32_e32 v10, 0x32c0, v7
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_add_co_u32 v10, s2, s8, v10
	v_add_co_ci_u32_e64 v11, s2, s9, v11, s2
	global_load_ushort v10, v[10:11], off
	s_or_b32 exec_lo, exec_lo, s12
	v_mov_b32_e32 v11, 0
	s_and_saveexec_b32 s12, s11
	s_cbranch_execz BB40_16
BB40_30:
	v_add_nc_u32_e32 v11, 0x6400, v7
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	v_add_co_u32 v11, s2, s8, v11
	v_add_co_ci_u32_e64 v12, s2, s9, v12, s2
	global_load_ushort v11, v[11:12], off
	s_or_b32 exec_lo, exec_lo, s12
	v_mov_b32_e32 v12, 0
	s_and_saveexec_b32 s11, s10
	s_cbranch_execz BB40_17
BB40_31:
	v_add_nc_u32_e32 v14, 0x6440, v7
	v_ashrrev_i32_e32 v15, 31, v14
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_u32 v14, s2, s8, v14
	v_add_co_ci_u32_e64 v15, s2, s9, v15, s2
	global_load_ushort v12, v[14:15], off
	s_or_b32 exec_lo, exec_lo, s11
	v_mov_b32_e32 v14, 0
	s_and_saveexec_b32 s11, s10
	s_cbranch_execz BB40_18
BB40_32:
	v_add_nc_u32_e32 v14, 0x6480, v7
	v_ashrrev_i32_e32 v15, 31, v14
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_u32 v14, s2, s8, v14
	v_add_co_ci_u32_e64 v15, s2, s9, v15, s2
	global_load_ushort v14, v[14:15], off
	s_or_b32 exec_lo, exec_lo, s11
	v_mov_b32_e32 v15, 0
	s_and_saveexec_b32 s10, s3
	s_cbranch_execnz BB40_19
	s_branch BB40_20
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 29
		.amdhsa_next_free_sgpr 13
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end40:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0, .Lfunc_end40-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1:
	s_clause 0x2
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_mul_i32 s1, s6, 0xa00
	v_lshlrev_b32_e32 v2, 4, v0
	v_lshl_add_u32 v4, v0, 6, s1
	s_mul_hi_i32 s0, s6, 0x8b70344b
	v_lshrrev_b32_e32 v3, 5, v0
	s_add_i32 s0, s0, s6
	v_and_b32_e32 v6, 0x3fc0, v2
	v_ashrrev_i32_e32 v5, 31, v4
	s_lshr_b32 s5, s0, 31
	s_lshr_b32 s0, s0, 7
	s_movk_i32 s4, 0x400
	s_add_i32 s0, s0, s5
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_lshl_add_u32 v7, s0, 12, v6
	v_mul_u32_u24_e32 v10, 0xa0, v3
	v_lshlrev_b32_e32 v1, 1, v0
	v_add_nc_u32_e32 v6, s4, v2
	v_lshlrev_b32_e32 v2, 5, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v11, s0, s10, v4
	v_lshl_add_u32 v10, v10, 1, s4
	v_add_co_ci_u32_e64 v12, s0, s11, v5, s0
	v_cmp_gt_i32_e32 vcc_lo, 40, v0
	v_lshlrev_b32_e32 v8, 2, v0
	v_and_b32_e32 v9, 0x3e0, v2
	v_and_or_b32 v7, v1, 6, v7
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	s_mov_b32 s4, 0
	s_branch BB41_2
BB41_1:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v29, s4, v7
	v_mov_b32_e32 v71, 0xffff
	s_add_i32 s4, s4, 8
	s_cmp_eq_u32 s4, 64
	v_ashrrev_i32_e32 v30, 31, v29
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_u32 v29, s0, s8, v29
	v_add_co_ci_u32_e64 v30, s0, s9, v30, s0
	v_add_co_u32 v31, s0, v29, 0x1000
	v_add_co_ci_u32_e64 v32, s0, 0, v30, s0
	v_add_co_u32 v33, s0, 0x1800, v29
	v_add_co_ci_u32_e64 v34, s0, 0, v30, s0
	v_add_co_u32 v11, s0, v11, 16
	s_clause 0x3
	global_load_dword v29, v[29:30], off
	global_load_dword v30, v[31:32], off
	global_load_dword v31, v[31:32], off offset:-2048
	global_load_dword v32, v[33:34], off
	v_add_co_ci_u32_e64 v12, s0, 0, v12, s0
	s_waitcnt vmcnt(1)
	ds_write2st64_b32 v8, v29, v31 offset1:1
	s_waitcnt vmcnt(0)
	ds_write2st64_b32 v8, v30, v32 offset0:2 offset1:3
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[29:32], v9
	ds_read_b128 v[33:36], v9 offset:16
	ds_read_b64 v[37:38], v10 offset:64
	ds_read_b64 v[39:40], v10 offset:96
	ds_read2_b32 v[41:42], v10 offset0:22 offset1:23
	ds_read_b64 v[43:44], v10 offset:80
	ds_read2_b32 v[45:46], v10 offset0:18 offset1:19
	ds_read_b64 v[47:48], v10 offset:128
	ds_read2_b32 v[49:50], v10 offset0:30 offset1:31
	ds_read_b64 v[51:52], v10 offset:112
	ds_read2_b32 v[53:54], v10 offset0:26 offset1:27
	ds_read_b64 v[55:56], v10 offset:160
	ds_read2_b32 v[57:58], v10 offset0:38 offset1:39
	ds_read_b64 v[59:60], v10 offset:144
	ds_read2_b32 v[61:62], v10 offset0:34 offset1:35
	ds_read2_b32 v[63:64], v10 offset0:46 offset1:47
	ds_read_b64 v[65:66], v10 offset:176
	ds_read2_b32 v[67:68], v10 offset0:42 offset1:43
	ds_read2_b32 v[69:70], v10 offset0:48 offset1:51
	s_waitcnt lgkmcnt(17)
	v_lshrrev_b32_e32 v77, 16, v34
	v_lshrrev_b32_e32 v78, 16, v35
	v_lshrrev_b32_e32 v79, 16, v36
	v_and_b32_e32 v72, v71, v29
	v_and_b32_e32 v73, v71, v30
	v_and_b32_e32 v74, v71, v31
	v_and_b32_e32 v75, v71, v32
	v_and_b32_sdwa v30, v71, v30 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v80, v33, 16, v72
	v_and_b32_sdwa v29, v71, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v31, v71, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v76, v71, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v71, 16, v33
	s_waitcnt lgkmcnt(16)
	v_pk_fma_f16 v28, v37, v80, v28 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(13)
	v_pk_fma_f16 v27, v43, v80, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v39, v80, v26 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v25, v51, v80, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v81, v71, 16, v29
	v_pk_fma_f16 v24, v47, v80, v24 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v23, v59, v80, v23 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v73, v34, 16, v73
	v_lshl_or_b32 v74, v35, 16, v74
	ds_read2_b32 v[32:33], v10 offset0:52 offset1:55
	ds_read2_b32 v[34:35], v10 offset0:56 offset1:59
	v_pk_fma_f16 v27, v43, v81, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v39, v81, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v51, v81, v25 op_sel:[1,0,0]
	ds_read2_b32 v[71:72], v10 offset0:60 offset1:63
	v_pk_fma_f16 v22, v55, v80, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v37, v81, v28 op_sel:[1,0,0]
	v_lshl_or_b32 v77, v77, 16, v30
	v_pk_fma_f16 v26, v40, v73, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v52, v73, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v55, v81, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v59, v81, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v38, v73, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v44, v73, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v47, v81, v24 op_sel:[1,0,0]
	v_lshl_or_b32 v75, v36, 16, v75
	v_pk_fma_f16 v39, v60, v73, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v38, v77, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v44, v77, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v48, v73, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v40, v77, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v52, v77, v25 op_sel:[1,0,0]
	ds_read2_b32 v[22:23], v10 offset0:49 offset1:50
	ds_read2_b32 v[24:25], v10 offset0:53 offset1:54
	ds_read2_b32 v[26:27], v10 offset0:57 offset1:58
	ds_read2_b32 v[28:29], v10 offset0:61 offset1:62
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v20, v69, v80, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v19, v32, v80, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v18, v34, v80, v18 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v17, v71, v80, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v65, v80, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v69, v81, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v32, v81, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v34, v81, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v71, v81, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v65, v81, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v59, v48, v77, v36 op_sel:[1,0,0]
	ds_read2_b32 v[36:37], v10 offset0:64 offset1:67
	v_pk_fma_f16 v60, v60, v77, v39 op_sel:[1,0,0]
	ds_read2_b32 v[38:39], v10 offset0:68 offset1:71
	ds_read2_b32 v[43:44], v10 offset0:72 offset1:75
	ds_read2_b32 v[47:48], v10 offset0:76 offset1:79
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v20, v22, v73, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v19, v24, v73, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v18, v26, v73, v18 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v17, v28, v73, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v66, v73, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v22, v77, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v24, v77, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v26, v77, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v28, v77, v17 op_sel:[1,0,0]
	v_lshl_or_b32 v65, v78, 16, v31
	v_pk_fma_f16 v20, v23, v74, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v25, v74, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v27, v74, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v29, v74, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v66, v77, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v66, v23, v65, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v69, v25, v65, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v71, v27, v65, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v78, v29, v65, v17 op_sel:[1,0,0]
	ds_read2_b32 v[17:18], v10 offset0:65 offset1:66
	ds_read2_b32 v[19:20], v10 offset0:69 offset1:70
	ds_read2_b32 v[21:22], v10 offset0:73 offset1:74
	ds_read2_b32 v[23:24], v10 offset0:77 offset1:78
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v5, v36, v80, v5 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v4, v38, v80, v4 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v2, v43, v80, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v0, v47, v80, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v56, v73, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v36, v81, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v38, v81, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v43, v81, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v47, v81, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v56, v77, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v63, v74, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v33, v75, v69 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v35, v75, v71 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v5, v17, v73, v5 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v4, v19, v73, v4 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v2, v21, v73, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v0, v23, v73, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v17, v77, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v19, v77, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v21, v77, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v23, v77, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v18, v74, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v20, v74, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v22, v74, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v24, v74, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v18, v65, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v20, v65, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v22, v65, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v24, v65, v0 op_sel:[1,0,0]
	ds_read2_b64 v[17:20], v10 offset1:1
	ds_read2_b64 v[21:24], v10 offset0:2 offset1:3
	ds_read2_b64 v[25:28], v10 offset0:4 offset1:5
	ds_read2_b64 v[29:32], v10 offset0:6 offset1:7
	v_pk_fma_f16 v5, v37, v75, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v39, v75, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v44, v75, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v48, v75, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v15, v17, v80, v15 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v16, v21, v80, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v13, v25, v80, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v14, v29, v80, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v17, v81, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v21, v81, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v25, v81, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v29, v81, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v45, v74, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v18, v73, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v22, v73, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v26, v73, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v30, v73, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v53, v74, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v18, v77, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v22, v77, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v26, v77, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v30, v77, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v41, v74, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v19, v74, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v23, v74, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v27, v74, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v31, v74, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v49, v74, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v61, v74, v59 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v57, v74, v60 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v67, v74, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v19, v65, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v23, v65, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v53, v65, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v49, v65, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v61, v65, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v57, v65, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v27, v65, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v31, v65, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v45, v65, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v41, v65, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v67, v65, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v63, v65, v34 op_sel:[1,0,0]
	v_lshl_or_b32 v29, v79, 16, v76
	v_pk_fma_f16 v15, v20, v75, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v24, v75, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v28, v75, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v32, v75, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v58, v75, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v42, v75, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v46, v75, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v54, v75, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v64, v75, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v50, v75, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v68, v75, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v62, v75, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v70, v75, v66 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v72, v75, v78 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v20, v29, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v24, v29, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v28, v29, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v46, v29, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v42, v29, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v54, v29, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v50, v29, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v62, v29, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v32, v29, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v58, v29, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v68, v29, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v64, v29, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v70, v29, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v33, v29, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v35, v29, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v72, v29, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v37, v29, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v39, v29, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v44, v29, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v48, v29, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB41_4
BB41_2:
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB41_1
	global_load_dwordx4 v[29:32], v[11:12], off
	s_waitcnt vmcnt(0)
	ds_write_b128 v6, v[29:32]
	s_branch BB41_1
BB41_4:
	v_mad_u32_u24 v3, 0x500, v3, s1
	v_and_or_b32 v6, v1, 62, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_add_nc_u32_e32 v9, 0x400, v6
	v_add_nc_u32_e32 v11, 0x440, v6
	v_lshlrev_b64 v[7:8], 1, v[6:7]
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v12, 31, v11
	v_add_co_u32 v7, vcc_lo, s2, v7
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v8, vcc_lo
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	global_store_dword v[7:8], v15, off
	global_store_short v[7:8], v16, off offset:128
	global_store_short_d16_hi v[7:8], v16, off offset:130
	global_store_short v[7:8], v13, off offset:256
	global_store_short_d16_hi v[7:8], v13, off offset:258
	global_store_short v[7:8], v14, off offset:384
	global_store_short_d16_hi v[7:8], v14, off offset:386
	global_store_dword v[7:8], v28, off offset:512
	global_store_dword v[7:8], v27, off offset:640
	global_store_dword v[7:8], v26, off offset:768
	global_store_dword v[7:8], v25, off offset:896
	global_store_dword v[7:8], v24, off offset:1024
	global_store_dword v[7:8], v23, off offset:1152
	global_store_dword v[7:8], v22, off offset:1280
	global_store_dword v[7:8], v21, off offset:1408
	global_store_dword v[7:8], v20, off offset:1536
	v_add_nc_u32_e32 v13, 0x480, v6
	v_add_nc_u32_e32 v15, 0x4c0, v6
	v_add_co_u32 v9, vcc_lo, s2, v9
	global_store_dword v[7:8], v19, off offset:1664
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v10, vcc_lo
	v_ashrrev_i32_e32 v14, 31, v13
	v_ashrrev_i32_e32 v16, 31, v15
	v_add_co_u32 v11, vcc_lo, s2, v11
	global_store_dword v[7:8], v18, off offset:1792
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v12, vcc_lo
	v_lshlrev_b64 v[13:14], 1, v[13:14]
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_add_co_u32 v13, vcc_lo, s2, v13
	v_add_co_ci_u32_e32 v14, vcc_lo, s3, v14, vcc_lo
	v_add_co_u32 v15, vcc_lo, s2, v15
	v_add_co_ci_u32_e32 v16, vcc_lo, s3, v16, vcc_lo
	global_store_dword v[7:8], v17, off offset:1920
	global_store_dword v[9:10], v5, off
	global_store_dword v[11:12], v4, off
	global_store_dword v[13:14], v2, off
	global_store_dword v[15:16], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1
		.amdhsa_group_segment_fixed_size 1664
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 82
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end41:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1, .Lfunc_end41-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2:
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshl_add_u32 v0, s6, 6, v0
	s_mov_b32 s2, 0x125800
	s_mov_b32 s3, 0x24b800
	s_mov_b32 s6, 0x371000
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_u32 v4, vcc_lo, s2, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, s3, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0x497000, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v10, vcc_lo, 0x5bc800, v2
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v3, vcc_lo
	s_clause 0x4
	global_load_ushort v14, v[2:3], off
	global_load_ushort v15, v[4:5], off offset:1024
	global_load_ushort v16, v[6:7], off
	global_load_ushort v17, v[8:9], off
	global_load_ushort v18, v[10:11], off offset:1024
	v_add_co_u32 v4, vcc_lo, 0x6e2800, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0x92e000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, 0xa53800, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v10, vcc_lo, s6, v2
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v12, vcc_lo, 0x808000, v2
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v3, vcc_lo
	s_clause 0x4
	global_load_ushort v19, v[4:5], off
	global_load_ushort v20, v[6:7], off
	global_load_ushort v8, v[8:9], off offset:1024
	global_load_ushort v9, v[10:11], off offset:1024
	global_load_ushort v10, v[12:13], off offset:1024
	v_add_co_u32 v4, vcc_lo, 0xb79800, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0xc9f000, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	s_clause 0x1
	global_load_ushort v11, v[4:5], off
	global_load_ushort v12, v[6:7], off offset:1024
	v_add_co_u32 v4, vcc_lo, 0xdc5000, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v6, vcc_lo, 0xeea800, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v3, vcc_lo
	s_clause 0x1
	global_load_ushort v13, v[4:5], off
	global_load_ushort v6, v[6:7], off offset:1024
	v_add_co_u32 v4, vcc_lo, 0x1010800, v2
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v2, vcc_lo, 0x1136000, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v3, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	global_load_ushort v21, v[4:5], off
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_load_ushort v22, v[2:3], off offset:1024
	s_waitcnt vmcnt(15)
	v_add_f16_e32 v2, 0, v14
	s_waitcnt vmcnt(14)
	v_sub_f16_e32 v3, 0, v15
	s_waitcnt vmcnt(12)
	v_sub_f16_e32 v4, 0, v17
	s_waitcnt vmcnt(11)
	v_add_f16_e32 v5, 0, v18
	v_add_f16_e32 v2, v2, v15
	v_add_f16_e32 v3, v3, v16
	v_sub_f16_e32 v4, v4, v18
	v_add_f16_e32 v2, v2, v16
	v_add_f16_e32 v2, v2, v17
	s_waitcnt vmcnt(10)
	v_sub_f16_e32 v5, v5, v19
	v_sub_f16_e32 v4, v4, v19
	s_waitcnt vmcnt(7)
	v_add_f16_e32 v3, v3, v9
	v_add_f16_e32 v2, v2, v18
	s_waitcnt vmcnt(6)
	v_sub_f16_e32 v5, v5, v10
	v_add_f16_e32 v4, v4, v20
	v_sub_f16_e32 v3, v3, v18
	v_add_f16_e32 v7, v2, v19
	v_sub_f16_e32 v5, v5, v8
	v_add_f16_e32 v4, v4, v8
	v_add_co_u32 v2, vcc_lo, s2, v0
	v_add_f16_e32 v3, v19, v3
	v_add_f16_e32 v7, v7, v20
	s_waitcnt vmcnt(5)
	v_add_f16_e32 v5, v11, v5
	v_add_f16_e32 v4, v4, v11
	v_add_f16_e32 v9, v10, v3
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	s_waitcnt vmcnt(4)
	v_add_f16_e32 v5, v12, v5
	v_sub_f16_e32 v9, v9, v8
	s_waitcnt vmcnt(3)
	v_add_f16_e32 v10, v4, v13
	s_waitcnt vmcnt(2)
	v_sub_f16_e32 v13, v5, v6
	v_add_f16_e32 v8, v7, v8
	v_add_co_u32 v4, vcc_lo, s3, v0
	v_add_f16_e32 v9, v11, v9
	v_add_f16_e32 v10, v10, v6
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v1, vcc_lo
	v_add_f16_e32 v8, v8, v11
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v13, v13, v21
	v_add_co_u32 v6, vcc_lo, s6, v0
	v_add_f16_e32 v9, v12, v9
	v_add_f16_e32 v10, v10, v21
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v11, v13, v22
	global_store_short v[0:1], v8, off
	global_store_short v[2:3], v9, off offset:1024
	global_store_short v[4:5], v10, off
	global_store_short v[6:7], v11, off offset:1024
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 23
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end42:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2, .Lfunc_end42-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2

	.globl	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3
	.p2align	8
	.type	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3,@function
tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3:
	s_mul_hi_i32 s0, s6, 0x51eb851f
	v_lshlrev_b32_e32 v3, 1, v0
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s2, s0, 7
	s_ashr_i32 s0, s0, 6
	s_add_i32 s2, s2, s1
	s_add_i32 s0, s0, s1
	s_mul_i32 s3, s2, 0x190
	s_mulk_i32 s0, 0xc8
	s_sub_i32 s3, s6, s3
	s_sub_i32 s0, s6, s0
	s_sext_i32_i16 s3, s3
	s_lshl_b32 s0, s0, 5
	s_mulk_i32 s3, 0x147b
	s_andn2_b32 s0, s0, 63
	s_lshr_b32 s7, s3, 31
	s_ashr_i32 s3, s3, 20
	s_mulk_i32 s2, 0x1900
	v_add_nc_u16 v1, s3, s7
	s_and_b32 s3, s6, 1
	s_mul_i32 s3, s3, 0x92e00
	v_bfe_i32 v1, v1, 0, 16
	v_mul_lo_u32 v1, 0x125c00, v1
	v_add_nc_u32_e32 v1, s0, v1
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_add_nc_u32_e32 v1, s2, v1
	v_add3_u32 v1, v1, s3, v0
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_lshl_add_u32 v0, s6, 6, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_ushort v3, v3, s[2:3]
	global_load_ushort v2, v[1:2], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v3, v2
	v_max_f16_e32 v2, 0, v2
	global_store_short v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end43:
	.size	tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3, .Lfunc_end43-tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3

	.globl	tvmgen_default_fused_nn_conv2d_add_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_1_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_1_kernel0:
	v_lshrrev_b32_e32 v1, 5, v0
	s_mov_b32 s0, 0x5397829d
	v_add_nc_u32_e32 v4, 0x500, v0
	v_add_nc_u32_e32 v5, 0x640, v0
	v_add_nc_u32_e32 v6, 0x780, v0
	v_add_nc_u32_e32 v2, 40, v1
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[8:9], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	v_mul_hi_u32 v4, v4, s0
	v_mul_hi_u32 v5, v5, s0
	s_and_b32 s4, s6, 3
	v_mul_hi_u32 v3, v2, s0
	s_ashr_i32 s5, s6, 2
	v_add_nc_u32_e32 v7, 0x8c0, v0
	s_mulk_i32 s4, 0x3200
	s_mul_i32 s6, s5, 0x32000
	v_mul_hi_u32 v6, v6, s0
	s_add_i32 s6, s6, s4
	v_mul_hi_u32 v7, v7, s0
	v_lshrrev_b32_e32 v3, 4, v3
	v_and_or_b32 v9, v0, 31, s6
	v_add_nc_u32_e32 v8, 0xa00, v0
	v_lshrrev_b32_e32 v4, 9, v4
	v_lshrrev_b32_e32 v5, 9, v5
	v_mul_u32_u24_e32 v3, 49, v3
	s_mov_b32 s7, 0xc800
	v_lshl_add_u32 v41, v1, 8, v9
	v_lshrrev_b32_e32 v7, 9, v7
	s_movk_i32 s6, 0x100
	v_sub_nc_u32_e32 v2, v2, v3
	v_add_nc_u32_e32 v3, 41, v1
	v_mul_i32_i24_e32 v1, s7, v4
	v_mul_i32_i24_e32 v4, s7, v5
	v_lshrrev_b32_e32 v5, 9, v6
	v_mul_hi_u32 v6, v8, s0
	v_mul_hi_u32 v8, v3, s0
	v_lshlrev_b32_e32 v2, 8, v2
	v_add3_u32 v43, v41, v4, s6
	v_lshrrev_b32_e32 v46, 6, v0
	v_lshlrev_b32_e32 v54, 2, v0
	s_mov_b32 s1, 0x8000
	v_add3_u32 v42, v9, v1, v2
	v_mul_i32_i24_e32 v1, s7, v5
	v_mul_i32_i24_e32 v2, s7, v7
	v_lshrrev_b32_e32 v4, 9, v6
	v_lshrrev_b32_e32 v5, 4, v8
	v_add_nc_u32_e32 v6, 0xb40, v0
	v_add3_u32 v44, v41, v1, 0xb00
	v_add3_u32 v45, v41, v2, 0x1500
	v_mul_i32_i24_e32 v1, s7, v4
	v_mul_u32_u24_e32 v2, 49, v5
	v_mul_hi_u32 v4, v6, s0
	v_add_nc_u32_e32 v5, 0xc80, v0
	v_add_nc_u32_e32 v6, 0xdc0, v0
	v_add3_u32 v48, v41, v1, 0x1f00
	v_sub_nc_u32_e32 v1, v3, v2
	v_add_nc_u32_e32 v2, 0xf00, v0
	v_mul_hi_u32 v3, v5, s0
	v_mul_hi_u32 v5, v6, s0
	v_add_nc_u32_e32 v6, 0x1040, v0
	v_lshrrev_b32_e32 v4, 9, v4
	v_mul_hi_u32 v2, v2, s0
	v_add_nc_u32_e32 v7, 0x1180, v0
	v_lshlrev_b32_e32 v1, 8, v1
	v_mul_hi_u32 v6, v6, s0
	v_lshrrev_b32_e32 v3, 9, v3
	v_mul_i32_i24_e32 v4, s7, v4
	v_mul_hi_u32 v7, v7, s0
	v_lshrrev_b32_e32 v5, 9, v5
	v_lshrrev_b32_e32 v2, 9, v2
	v_mul_i32_i24_e32 v3, s7, v3
	v_add3_u32 v49, v9, v4, v1
	v_lshrrev_b32_e32 v1, 9, v6
	v_mul_i32_i24_e32 v4, s7, v5
	v_mul_i32_i24_e32 v2, s7, v2
	v_add3_u32 v50, v41, v3, 0x200
	v_lshrrev_b32_e32 v3, 9, v7
	v_mul_i32_i24_e32 v1, s7, v1
	v_add3_u32 v51, v41, v4, 0xc00
	v_add3_u32 v52, v41, v2, 0x1600
	v_cmp_gt_i32_e64 s0, s6, v0
	v_mul_i32_i24_e32 v2, s7, v3
	v_add3_u32 v53, v41, v1, 0x2000
	v_mul_u32_u24_e32 v1, 0x140, v46
	v_lshl_or_b32 v40, v0, 1, s1
	v_cmp_gt_i32_e32 vcc_lo, 0xe0, v0
	v_add3_u32 v55, v41, v2, 0x2a00
	v_lshlrev_b32_e32 v56, 3, v0
	v_lshl_or_b32 v57, v1, 1, s1
	v_and_b32_e32 v47, 0xfc, v54
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v15, 0
	s_mov_b32 s6, 0
	s_movk_i32 s7, 0x1000
	s_movk_i32 s14, 0x2800
	s_movk_i32 s15, 0x3800
	s_movk_i32 s16, 0x800
	s_movk_i32 s17, 0x4000
BB44_1:
	s_lshl_b32 s18, s6, 5
	v_add_nc_u32_e32 v58, s18, v41
	v_add_nc_u32_e32 v60, s18, v42
	v_add_nc_u32_e32 v62, s18, v43
	v_add_nc_u32_e32 v64, s18, v44
	v_add_nc_u32_e32 v70, s18, v45
	v_ashrrev_i32_e32 v59, 31, v58
	v_ashrrev_i32_e32 v61, 31, v60
	v_ashrrev_i32_e32 v63, 31, v62
	v_ashrrev_i32_e32 v65, 31, v64
	v_add_nc_u32_e32 v72, s18, v48
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	v_lshlrev_b64 v[60:61], 1, v[60:61]
	v_lshlrev_b64 v[62:63], 1, v[62:63]
	v_ashrrev_i32_e32 v71, 31, v70
	v_add_nc_u32_e32 v74, s18, v49
	v_lshlrev_b64 v[64:65], 1, v[64:65]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v58, s1, s10, v58
	v_ashrrev_i32_e32 v73, 31, v72
	v_add_co_ci_u32_e64 v59, s1, s11, v59, s1
	v_add_nc_u32_e32 v76, s18, v50
	v_lshlrev_b64 v[70:71], 1, v[70:71]
	v_add_co_u32 v66, s1, s7, v58
	v_ashrrev_i32_e32 v75, 31, v74
	v_add_co_ci_u32_e64 v67, s1, 0, v59, s1
	v_add_co_u32 v68, s1, s14, v58
	global_load_ushort v84, v[58:59], off
	v_add_co_ci_u32_e64 v69, s1, 0, v59, s1
	v_add_co_u32 v58, s1, s15, v58
	v_add_nc_u32_e32 v78, s18, v51
	v_add_co_ci_u32_e64 v59, s1, 0, v59, s1
	v_add_co_u32 v60, s1, s10, v60
	v_lshlrev_b64 v[72:73], 1, v[72:73]
	v_add_co_ci_u32_e64 v61, s1, s11, v61, s1
	v_add_co_u32 v62, s1, s10, v62
	v_ashrrev_i32_e32 v77, 31, v76
	v_add_co_ci_u32_e64 v63, s1, s11, v63, s1
	v_add_co_u32 v64, s1, s10, v64
	v_add_nc_u32_e32 v80, s18, v52
	v_add_co_ci_u32_e64 v65, s1, s11, v65, s1
	v_add_co_u32 v70, s1, s10, v70
	v_lshlrev_b64 v[74:75], 1, v[74:75]
	v_ashrrev_i32_e32 v79, 31, v78
	v_add_co_ci_u32_e64 v71, s1, s11, v71, s1
	v_add_nc_u32_e32 v82, s18, v53
	v_add_co_u32 v72, s1, s10, v72
	v_lshlrev_b64 v[76:77], 1, v[76:77]
	v_ashrrev_i32_e32 v81, 31, v80
	v_add_co_ci_u32_e64 v73, s1, s11, v73, s1
	v_add_co_u32 v74, s1, s10, v74
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_ashrrev_i32_e32 v83, 31, v82
	v_add_co_ci_u32_e64 v75, s1, s11, v75, s1
	v_add_co_u32 v76, s1, s10, v76
	v_lshlrev_b64 v[80:81], 1, v[80:81]
	v_add_co_ci_u32_e64 v77, s1, s11, v77, s1
	v_add_co_u32 v78, s1, s10, v78
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_add_co_ci_u32_e64 v79, s1, s11, v79, s1
	v_add_co_u32 v80, s1, s10, v80
	v_add_co_ci_u32_e64 v81, s1, s11, v81, s1
	s_clause 0x4
	global_load_ushort v85, v[72:73], off
	global_load_ushort v74, v[74:75], off
	global_load_ushort v75, v[76:77], off
	global_load_ushort v76, v[78:79], off
	global_load_ushort v77, v[80:81], off
	v_add_co_u32 v72, s1, s10, v82
	v_add_co_ci_u32_e64 v73, s1, s11, v83, s1
	s_clause 0x7
	global_load_ushort v66, v[66:67], off offset:1024
	global_load_ushort v67, v[68:69], off
	global_load_ushort v58, v[58:59], off offset:1024
	global_load_ushort v59, v[60:61], off
	global_load_ushort v60, v[62:63], off
	global_load_ushort v61, v[64:65], off
	global_load_ushort v62, v[70:71], off
	global_load_ushort v63, v[72:73], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v40, v84
	ds_write_b16 v40, v85 offset:5120
	ds_write_b16 v40, v74 offset:5760
	ds_write_b16 v40, v75 offset:6400
	ds_write_b16 v40, v76 offset:7040
	ds_write_b16 v40, v77 offset:7680
	ds_write_b16 v40, v66 offset:640
	ds_write_b16 v40, v67 offset:1280
	ds_write_b16 v40, v58 offset:1920
	ds_write_b16 v40, v59 offset:2560
	ds_write_b16 v40, v60 offset:3200
	ds_write_b16 v40, v61 offset:3840
	ds_write_b16 v40, v62 offset:4480
	ds_write_b16 v40, v63 offset:8320
	s_and_saveexec_b32 s19, vcc_lo
	s_cbranch_execz BB44_3
	v_add_nc_u32_e32 v58, s18, v55
	v_ashrrev_i32_e32 v59, 31, v58
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	v_add_co_u32 v58, s1, s10, v58
	v_add_co_ci_u32_e64 v59, s1, s11, v59, s1
	global_load_ushort v58, v[58:59], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v40, v58 offset:8960
BB44_3:
	s_or_b32 exec_lo, exec_lo, s19
	v_lshl_or_b32 v58, s6, 14, v54
	v_ashrrev_i32_e32 v59, 31, v58
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	v_add_co_u32 v58, s1, s12, v58
	v_add_co_ci_u32_e64 v59, s1, s13, v59, s1
	v_add_co_u32 v60, s1, s16, v58
	v_add_co_ci_u32_e64 v61, s1, 0, v59, s1
	v_add_co_u32 v62, s1, s7, v58
	v_add_co_ci_u32_e64 v63, s1, 0, v59, s1
	v_add_co_u32 v64, s1, 0x1800, v58
	v_add_co_ci_u32_e64 v65, s1, 0, v59, s1
	v_add_co_u32 v74, s1, s14, v58
	s_clause 0x7
	global_load_ushort v66, v[58:59], off
	global_load_ushort v67, v[58:59], off offset:4
	global_load_ushort v68, v[60:61], off offset:512
	global_load_ushort v69, v[60:61], off offset:516
	global_load_ushort v70, v[62:63], off offset:1024
	global_load_ushort v71, v[62:63], off offset:1028
	global_load_ushort v72, v[64:65], off offset:1536
	global_load_ushort v73, v[64:65], off offset:1540
	v_add_co_ci_u32_e64 v75, s1, 0, v59, s1
	v_add_co_u32 v76, s1, 0x3000, v58
	v_add_co_ci_u32_e64 v77, s1, 0, v59, s1
	v_add_co_u32 v78, s1, s15, v58
	v_add_co_ci_u32_e64 v79, s1, 0, v59, s1
	v_add_co_u32 v80, s1, s17, v58
	v_add_co_ci_u32_e64 v81, s1, 0, v59, s1
	s_clause 0x7
	global_load_ushort v82, v[74:75], off
	global_load_ushort v83, v[74:75], off offset:4
	global_load_ushort v84, v[76:77], off offset:512
	global_load_ushort v85, v[76:77], off offset:516
	global_load_ushort v86, v[78:79], off offset:1024
	global_load_ushort v87, v[78:79], off offset:1028
	global_load_ushort v88, v[80:81], off offset:1536
	global_load_ushort v89, v[80:81], off offset:1540
	v_add_co_u32 v90, s1, 0x5000, v58
	v_add_co_ci_u32_e64 v91, s1, 0, v59, s1
	v_add_co_u32 v92, s1, 0x5800, v58
	v_add_co_ci_u32_e64 v93, s1, 0, v59, s1
	v_add_co_u32 v94, s1, 0x6000, v58
	v_add_co_ci_u32_e64 v95, s1, 0, v59, s1
	v_add_co_u32 v96, s1, 0x6800, v58
	v_add_co_ci_u32_e64 v97, s1, 0, v59, s1
	s_clause 0x7
	global_load_ushort v98, v[90:91], off
	global_load_ushort v99, v[90:91], off offset:4
	global_load_ushort v100, v[92:93], off offset:512
	global_load_ushort v101, v[92:93], off offset:516
	global_load_ushort v102, v[94:95], off offset:1024
	global_load_ushort v103, v[94:95], off offset:1028
	global_load_ushort v104, v[96:97], off offset:1536
	global_load_ushort v105, v[96:97], off offset:1540
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v66, v[58:59], off offset:2
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v67, v[58:59], off offset:6
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v68, v[60:61], off offset:514
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v69, v[60:61], off offset:518
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v70, v[62:63], off offset:1026
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v71, v[62:63], off offset:1030
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v72, v[64:65], off offset:1538
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v73, v[64:65], off offset:1542
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v82, v[74:75], off offset:2
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v83, v[74:75], off offset:6
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v84, v[76:77], off offset:514
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v85, v[76:77], off offset:518
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v86, v[78:79], off offset:1026
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v87, v[78:79], off offset:1030
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v88, v[80:81], off offset:1538
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v89, v[80:81], off offset:1542
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v98, v[90:91], off offset:2
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v99, v[90:91], off offset:6
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v100, v[92:93], off offset:514
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v101, v[92:93], off offset:518
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v102, v[94:95], off offset:1026
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v103, v[94:95], off offset:1030
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v104, v[96:97], off offset:1538
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v105, v[96:97], off offset:1542
	s_waitcnt vmcnt(20)
	ds_write2st64_b64 v56, v[66:67], v[68:69] offset1:5
	s_waitcnt vmcnt(16)
	ds_write2st64_b64 v56, v[70:71], v[72:73] offset0:10 offset1:15
	s_waitcnt vmcnt(12)
	ds_write2st64_b64 v56, v[82:83], v[84:85] offset0:20 offset1:25
	s_waitcnt vmcnt(8)
	ds_write2st64_b64 v56, v[86:87], v[88:89] offset0:30 offset1:35
	s_waitcnt vmcnt(4)
	ds_write2st64_b64 v56, v[98:99], v[100:101] offset0:40 offset1:45
	s_waitcnt vmcnt(0)
	ds_write2st64_b64 v56, v[102:103], v[104:105] offset0:50 offset1:55
	s_and_saveexec_b32 s18, s0
	s_cbranch_execz BB44_5
	v_add_co_u32 v58, s1, 0x7800, v58
	v_add_co_ci_u32_e64 v59, s1, 0, v59, s1
	s_clause 0x1
	global_load_ushort v60, v[58:59], off
	global_load_ushort v61, v[58:59], off offset:4
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v60, v[58:59], off offset:2
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v61, v[58:59], off offset:6
	s_waitcnt vmcnt(0)
	ds_write_b64 v56, v[60:61] offset:30720
BB44_5:
	s_or_b32 exec_lo, exec_lo, s18
	v_mov_b32_e32 v58, v57
	s_mov_b32 s1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB44_6:
	v_or_b32_e32 v67, s1, v47
	v_add_nc_u32_e32 v71, 0x1800, v58
	ds_read2_b64 v[59:62], v58 offset1:16
	ds_read2_b64 v[63:66], v58 offset0:32 offset1:48
	ds_read_b64 v[87:88], v58 offset:512
	ds_read_b64 v[89:90], v58 offset:6784
	v_mov_b32_e32 v95, 0xffff
	v_lshlrev_b32_e32 v93, 1, v67
	v_add_nc_u32_e32 v58, 8, v58
	s_add_i32 s1, s1, s16
	ds_read2_b64 v[67:70], v71 offset0:16 offset1:32
	ds_read2_b64 v[71:74], v71 offset0:48 offset1:64
	ds_read2_b32 v[91:92], v93 offset1:1
	ds_read2st64_b64 v[75:78], v93 offset0:1 offset1:2
	ds_read2st64_b64 v[79:82], v93 offset0:3 offset1:4
	ds_read2st64_b64 v[83:86], v93 offset0:5 offset1:6
	ds_read_b64 v[93:94], v93 offset:3584
	s_cmp_lg_u32 s1, s17
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v39, v59, v91, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v61, v91, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v63, v91, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v65, v91, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v87, v91, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v67, v91, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v69, v91, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v71, v91, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v73, v91, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v89, v91, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_and_b32_sdwa v91, v95, v75 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v31, v59, v76, v31 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v18, v61, v75, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v61, v76, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v63, v75, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v63, v76, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v65, v75, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v65, v76, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v87, v75, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v87, v76, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v67, v75, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v67, v76, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v69, v75, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v69, v76, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v71, v75, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v71, v76, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v73, v75, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v89, v75, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v73, v76, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v89, v76, v1 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_and_b32_sdwa v76, v95, v79 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v75, v75, 16, v91
	v_pk_fma_f16 v37, v59, v92, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v61, v92, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v63, v92, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v65, v92, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v87, v92, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v67, v92, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v69, v92, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v71, v92, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v73, v92, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v89, v92, v17 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_and_b32_sdwa v92, v95, v83 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v76, v79, 16, v76
	v_pk_fma_f16 v15, v59, v75, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v59, v77, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v59, v78, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v61, v77, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v61, v78, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v63, v77, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v63, v78, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v65, v77, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v65, v78, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v87, v77, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v87, v78, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v67, v77, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v67, v78, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v69, v77, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v69, v78, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v71, v77, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v71, v78, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v73, v77, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v73, v78, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v89, v77, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v89, v78, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v59, v80, v31 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v18, v61, v79, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v61, v80, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v63, v79, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v63, v80, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v65, v79, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v65, v80, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v87, v79, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v87, v80, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v67, v79, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v67, v80, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v69, v79, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v69, v80, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v71, v79, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v71, v80, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v73, v79, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v73, v80, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v89, v79, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v89, v80, v1 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_and_b32_sdwa v95, v95, v93 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v61, v83, 16, v92
	v_pk_fma_f16 v15, v59, v76, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v60, v81, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v60, v82, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v62, v81, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v62, v82, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v64, v81, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v64, v82, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v66, v81, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v66, v82, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v88, v81, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v88, v82, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v68, v81, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v68, v82, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v70, v81, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v70, v82, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v72, v81, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v72, v82, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v74, v81, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v74, v82, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v90, v81, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v90, v82, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v64, v83, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v64, v84, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v66, v83, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v66, v84, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v68, v83, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v68, v84, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v70, v83, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v70, v84, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v88, v83, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v88, v84, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v60, v84, v31 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v18, v62, v83, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v62, v84, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v72, v83, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v72, v84, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v74, v83, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v74, v84, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v90, v83, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v90, v84, v1 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v63, v93, 16, v95
	v_pk_fma_f16 v15, v60, v61, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v64, v85, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v64, v93, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v64, v86, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v64, v94, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v66, v85, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v66, v93, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v66, v86, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v66, v94, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v68, v85, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v68, v93, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v68, v86, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v68, v94, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v70, v85, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v70, v93, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v70, v86, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v70, v94, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v88, v85, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v88, v93, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v88, v86, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v88, v94, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v60, v85, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v60, v86, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v60, v94, v31 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v38, v62, v85, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v62, v93, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v62, v86, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v62, v94, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v72, v85, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v72, v93, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v72, v86, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v72, v94, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v74, v85, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v74, v93, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v74, v86, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v74, v94, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v90, v85, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v90, v93, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v90, v86, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v90, v94, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v60, v63, v15 op_sel:[1,0,0]
	s_cbranch_scc1 BB44_6
	s_add_i32 s6, s6, 1
	s_cmp_eq_u32 s6, 8
	s_cbranch_scc0 BB44_1
	v_lshlrev_b32_e32 v106, 1, v47
	v_mul_u32_u24_e32 v40, 0xa00, v46
	s_mul_i32 s5, s5, 0x19000
	global_load_dword v107, v106, s[2:3]
	v_add3_u32 v40, s4, s5, v40
	s_clause 0x1
	global_load_ushort v108, v106, s[2:3] offset:516
	global_load_ushort v109, v106, s[2:3] offset:518
	v_or_b32_e32 v40, v40, v47
	v_add_nc_u32_e32 v42, 0x400, v40
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_nc_u32_e32 v44, 0x402, v40
	v_add_nc_u32_e32 v50, 0x600, v40
	v_add_nc_u32_e32 v52, 0x602, v40
	v_ashrrev_i32_e32 v43, 31, v42
	v_lshlrev_b64 v[100:101], 1, v[40:41]
	v_ashrrev_i32_e32 v45, 31, v44
	v_ashrrev_i32_e32 v51, 31, v50
	v_add_nc_u32_e32 v46, 0x500, v40
	v_lshlrev_b64 v[41:42], 1, v[42:43]
	v_add_nc_u32_e32 v48, 0x502, v40
	v_add_nc_u32_e32 v54, 0x800, v40
	v_add_co_u32 v100, vcc_lo, s8, v100
	v_lshlrev_b64 v[43:44], 1, v[44:45]
	v_ashrrev_i32_e32 v53, 31, v52
	v_add_co_ci_u32_e32 v101, vcc_lo, s9, v101, vcc_lo
	v_add_nc_u32_e32 v56, 0x802, v40
	v_add_co_u32 v41, vcc_lo, s8, v41
	v_lshlrev_b64 v[50:51], 1, v[50:51]
	v_ashrrev_i32_e32 v55, 31, v54
	v_ashrrev_i32_e32 v47, 31, v46
	v_ashrrev_i32_e32 v49, 31, v48
	v_add_co_ci_u32_e32 v42, vcc_lo, s9, v42, vcc_lo
	v_add_nc_u32_e32 v62, 0xc800, v40
	v_add_co_u32 v43, vcc_lo, s8, v43
	v_lshlrev_b64 v[52:53], 1, v[52:53]
	v_ashrrev_i32_e32 v57, 31, v56
	v_add_nc_u32_e32 v64, 0xc802, v40
	v_add_co_ci_u32_e32 v44, vcc_lo, s9, v44, vcc_lo
	v_lshlrev_b64 v[45:46], 1, v[46:47]
	v_lshlrev_b64 v[47:48], 1, v[48:49]
	v_add_co_u32 v49, vcc_lo, s8, v50
	v_lshlrev_b64 v[54:55], 1, v[54:55]
	v_ashrrev_i32_e32 v63, 31, v62
	v_add_co_ci_u32_e32 v50, vcc_lo, s9, v51, vcc_lo
	v_add_nc_u32_e32 v66, 0xca00, v40
	v_add_co_u32 v51, vcc_lo, s8, v52
	v_lshlrev_b64 v[56:57], 1, v[56:57]
	v_ashrrev_i32_e32 v65, 31, v64
	v_add_co_ci_u32_e32 v52, vcc_lo, s9, v53, vcc_lo
	v_add_nc_u32_e32 v68, 0xca02, v40
	v_add_co_u32 v53, vcc_lo, s8, v54
	v_lshlrev_b64 v[62:63], 1, v[62:63]
	v_ashrrev_i32_e32 v67, 31, v66
	v_add_co_ci_u32_e32 v54, vcc_lo, s9, v55, vcc_lo
	v_add_nc_u32_e32 v72, 0xcc00, v40
	v_add_co_u32 v55, vcc_lo, s8, v56
	v_lshlrev_b64 v[64:65], 1, v[64:65]
	v_ashrrev_i32_e32 v69, 31, v68
	v_add_co_ci_u32_e32 v56, vcc_lo, s9, v57, vcc_lo
	v_add_nc_u32_e32 v74, 0xcc02, v40
	v_add_co_u32 v62, vcc_lo, s8, v62
	v_lshlrev_b64 v[66:67], 1, v[66:67]
	v_ashrrev_i32_e32 v73, 31, v72
	v_add_co_ci_u32_e32 v63, vcc_lo, s9, v63, vcc_lo
	v_add_nc_u32_e32 v76, 0xce00, v40
	v_add_co_u32 v64, vcc_lo, s8, v64
	v_lshlrev_b64 v[68:69], 1, v[68:69]
	v_ashrrev_i32_e32 v75, 31, v74
	v_add_co_ci_u32_e32 v65, vcc_lo, s9, v65, vcc_lo
	v_add_nc_u32_e32 v78, 0xce02, v40
	v_add_co_u32 v66, vcc_lo, s8, v66
	v_lshlrev_b64 v[72:73], 1, v[72:73]
	v_ashrrev_i32_e32 v77, 31, v76
	v_add_co_ci_u32_e32 v67, vcc_lo, s9, v67, vcc_lo
	v_add_co_u32 v68, vcc_lo, s8, v68
	v_lshlrev_b64 v[74:75], 1, v[74:75]
	v_ashrrev_i32_e32 v79, 31, v78
	v_add_co_ci_u32_e32 v69, vcc_lo, s9, v69, vcc_lo
	v_add_co_u32 v72, vcc_lo, s8, v72
	v_lshlrev_b64 v[76:77], 1, v[76:77]
	v_add_co_ci_u32_e32 v73, vcc_lo, s9, v73, vcc_lo
	v_add_nc_u32_e32 v58, 0x700, v40
	v_add_co_u32 v74, vcc_lo, s8, v74
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_add_co_ci_u32_e32 v75, vcc_lo, s9, v75, vcc_lo
	v_add_nc_u32_e32 v60, 0x702, v40
	v_add_co_u32 v76, vcc_lo, s8, v76
	v_ashrrev_i32_e32 v59, 31, v58
	v_add_co_ci_u32_e32 v77, vcc_lo, s9, v77, vcc_lo
	v_add_co_u32 v78, vcc_lo, s8, v78
	v_ashrrev_i32_e32 v61, 31, v60
	v_add_co_ci_u32_e32 v79, vcc_lo, s9, v79, vcc_lo
	v_add_co_u32 v45, vcc_lo, s8, v45
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	v_add_co_ci_u32_e32 v46, vcc_lo, s9, v46, vcc_lo
	v_add_co_u32 v47, vcc_lo, s8, v47
	v_lshlrev_b64 v[60:61], 1, v[60:61]
	v_add_co_ci_u32_e32 v48, vcc_lo, s9, v48, vcc_lo
	v_add_nc_u32_e32 v70, 0x900, v40
	v_add_co_u32 v57, vcc_lo, s8, v58
	v_add_nc_u32_e32 v80, 0x902, v40
	v_add_co_ci_u32_e32 v58, vcc_lo, s9, v59, vcc_lo
	v_add_co_u32 v59, vcc_lo, s8, v60
	v_ashrrev_i32_e32 v71, 31, v70
	v_add_co_ci_u32_e32 v60, vcc_lo, s9, v61, vcc_lo
	s_clause 0x1
	global_load_dword v61, v106, s[2:3] offset:4
	global_load_ushort v110, v106, s[2:3] offset:512
	v_add_nc_u32_e32 v82, 0xc900, v40
	v_ashrrev_i32_e32 v81, 31, v80
	v_add_nc_u32_e32 v84, 0xc902, v40
	v_lshlrev_b64 v[70:71], 1, v[70:71]
	v_add_nc_u32_e32 v86, 0xcb00, v40
	v_ashrrev_i32_e32 v83, 31, v82
	v_lshlrev_b64 v[80:81], 1, v[80:81]
	v_ashrrev_i32_e32 v85, 31, v84
	v_add_nc_u32_e32 v88, 0xcb02, v40
	v_add_co_u32 v70, vcc_lo, s8, v70
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_ashrrev_i32_e32 v87, 31, v86
	v_add_co_ci_u32_e32 v71, vcc_lo, s9, v71, vcc_lo
	v_add_nc_u32_e32 v90, 0xcd00, v40
	v_add_co_u32 v80, vcc_lo, s8, v80
	v_lshlrev_b64 v[84:85], 1, v[84:85]
	v_ashrrev_i32_e32 v89, 31, v88
	v_add_co_ci_u32_e32 v81, vcc_lo, s9, v81, vcc_lo
	v_add_nc_u32_e32 v92, 0xcd02, v40
	v_add_co_u32 v82, vcc_lo, s8, v82
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_ashrrev_i32_e32 v91, 31, v90
	v_add_co_ci_u32_e32 v83, vcc_lo, s9, v83, vcc_lo
	v_add_nc_u32_e32 v94, 0xcf00, v40
	v_add_co_u32 v84, vcc_lo, s8, v84
	v_lshlrev_b64 v[88:89], 1, v[88:89]
	v_ashrrev_i32_e32 v93, 31, v92
	v_add_co_ci_u32_e32 v85, vcc_lo, s9, v85, vcc_lo
	v_add_nc_u32_e32 v96, 0xcf02, v40
	v_add_co_u32 v86, vcc_lo, s8, v86
	v_lshlrev_b64 v[90:91], 1, v[90:91]
	v_ashrrev_i32_e32 v95, 31, v94
	v_add_co_ci_u32_e32 v87, vcc_lo, s9, v87, vcc_lo
	v_add_nc_u32_e32 v98, 0xd000, v40
	v_add_co_u32 v88, vcc_lo, s8, v88
	v_lshlrev_b64 v[92:93], 1, v[92:93]
	v_ashrrev_i32_e32 v97, 31, v96
	v_add_co_ci_u32_e32 v89, vcc_lo, s9, v89, vcc_lo
	v_add_co_u32 v90, vcc_lo, s8, v90
	v_lshlrev_b64 v[94:95], 1, v[94:95]
	v_ashrrev_i32_e32 v99, 31, v98
	v_add_co_ci_u32_e32 v91, vcc_lo, s9, v91, vcc_lo
	v_add_nc_u32_e32 v102, 0xd002, v40
	v_add_co_u32 v92, vcc_lo, s8, v92
	v_lshlrev_b64 v[96:97], 1, v[96:97]
	v_add_co_ci_u32_e32 v93, vcc_lo, s9, v93, vcc_lo
	v_add_co_u32 v94, vcc_lo, s8, v94
	v_lshlrev_b64 v[98:99], 1, v[98:99]
	v_ashrrev_i32_e32 v103, 31, v102
	v_add_co_ci_u32_e32 v95, vcc_lo, s9, v95, vcc_lo
	v_add_nc_u32_e32 v104, 0xd102, v40
	v_add_co_u32 v96, vcc_lo, s8, v96
	v_add_co_ci_u32_e32 v97, vcc_lo, s9, v97, vcc_lo
	v_add_co_u32 v98, vcc_lo, s8, v98
	v_lshlrev_b64 v[102:103], 1, v[102:103]
	v_add_co_ci_u32_e32 v99, vcc_lo, s9, v99, vcc_lo
	v_ashrrev_i32_e32 v105, 31, v104
	v_lshlrev_b64 v[104:105], 1, v[104:105]
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v35, v107, v35
	v_pk_add_f16 v33, v107, v33
	v_pk_add_f16 v34, v107, v34
	v_pk_add_f16 v28, v107, v28
	v_pk_add_f16 v26, v107, v26
	global_store_dword v[41:42], v35, off
	v_pk_add_f16 v35, v107, v39
	global_load_ushort v39, v106, s[2:3] offset:514
	v_add_nc_u32_e32 v41, 0xd100, v40
	v_mov_b32_e32 v40, 0xffff
	v_pk_add_f16 v27, v107, v27
	v_pk_add_f16 v24, v107, v24
	v_pk_add_f16 v38, v107, v38
	v_ashrrev_i32_e32 v42, 31, v41
	v_pk_add_f16 v20, v107, v20
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_add_co_u32 v41, vcc_lo, s8, v41
	v_add_co_ci_u32_e32 v42, vcc_lo, s9, v42, vcc_lo
	v_add_co_u32 v102, vcc_lo, s8, v102
	v_add_co_ci_u32_e32 v103, vcc_lo, s9, v103, vcc_lo
	v_add_co_u32 v104, vcc_lo, s8, v104
	v_add_co_ci_u32_e32 v105, vcc_lo, s9, v105, vcc_lo
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v32, v61, v32
	v_pk_add_f16 v29, v61, v29
	v_pk_add_f16 v30, v61, v30
	v_pk_add_f16 v25, v61, v25
	v_pk_add_f16 v22, v61, v22
	global_store_dword v[43:44], v32, off
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v43, v40, v110
	v_and_b32_e32 v40, v40, v108
	v_add_f16_sdwa v32, v110, v15 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_sdwa v44, v108, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v23, v61, v23
	v_pk_add_f16 v21, v61, v21
	v_pk_add_f16 v37, v61, v37
	v_pk_add_f16 v36, v61, v36
	v_add_f16_e32 v31, v109, v31
	v_pk_add_f16 v17, v61, v17
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v15, v39, v15
	global_store_dword v[49:50], v33, off
	global_store_dword v[51:52], v29, off
	global_store_dword v[53:54], v34, off
	global_store_dword v[55:56], v30, off
	global_store_dword v[62:63], v28, off
	global_store_dword v[64:65], v25, off
	global_store_dword v[66:67], v26, off
	global_store_dword v[68:69], v22, off
	global_store_dword v[72:73], v27, off
	global_store_dword v[74:75], v23, off
	global_store_dword v[76:77], v24, off
	global_store_dword v[78:79], v21, off
	global_store_short v[100:101], v32, off offset:512
	global_store_dword v[100:101], v35, off
	global_store_short v[100:101], v15, off offset:514
	global_store_short v[100:101], v44, off offset:516
	global_store_dword v[100:101], v37, off offset:4
	global_store_short v[100:101], v31, off offset:518
	global_store_dword v[100:101], v38, off offset:1024
	v_lshl_or_b32 v15, v39, 16, v43
	v_lshl_or_b32 v21, v109, 16, v40
	global_store_dword v[100:101], v36, off offset:1028
	global_store_dword v[98:99], v20, off
	global_store_dword v[102:103], v17, off
	v_pk_add_f16 v17, v15, v18
	v_pk_add_f16 v18, v21, v19
	v_pk_add_f16 v14, v15, v14
	v_pk_add_f16 v16, v21, v16
	v_pk_add_f16 v11, v15, v11
	v_pk_add_f16 v13, v21, v13
	v_pk_add_f16 v10, v15, v10
	v_pk_add_f16 v12, v21, v12
	v_pk_add_f16 v8, v15, v8
	v_pk_add_f16 v9, v21, v9
	v_pk_add_f16 v4, v15, v4
	v_pk_add_f16 v5, v21, v5
	v_pk_add_f16 v6, v15, v6
	v_pk_add_f16 v7, v21, v7
	v_pk_add_f16 v2, v15, v2
	v_pk_add_f16 v3, v21, v3
	v_pk_add_f16 v0, v15, v0
	v_pk_add_f16 v1, v21, v1
	global_store_dword v[100:101], v17, off offset:1536
	global_store_dword v[100:101], v18, off offset:1540
	global_store_dword v[45:46], v14, off
	global_store_dword v[47:48], v16, off
	global_store_dword v[57:58], v11, off
	global_store_dword v[59:60], v13, off
	global_store_dword v[70:71], v10, off
	global_store_dword v[80:81], v12, off
	global_store_dword v[82:83], v8, off
	global_store_dword v[84:85], v9, off
	global_store_dword v[86:87], v4, off
	global_store_dword v[88:89], v5, off
	global_store_dword v[90:91], v6, off
	global_store_dword v[92:93], v7, off
	global_store_dword v[94:95], v2, off
	global_store_dword v[96:97], v3, off
	global_store_dword v[41:42], v0, off
	global_store_dword v[104:105], v1, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_1_kernel0
		.amdhsa_group_segment_fixed_size 42176
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 111
		.amdhsa_next_free_sgpr 20
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end44:
	.size	tvmgen_default_fused_nn_conv2d_add_1_kernel0, .Lfunc_end44-tvmgen_default_fused_nn_conv2d_add_1_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_2_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_2_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshlrev_b32_e32 v1, 5, v0
	s_and_b32 s0, s6, 1
	v_lshrrev_b32_e32 v40, 6, v0
	s_mulk_i32 s0, 0x6400
	s_ashr_i32 s1, s6, 1
	v_and_or_b32 v2, v0, 15, s0
	v_and_b32_e32 v1, 0x7e00, v1
	s_mul_i32 s1, s1, 0x19000
	v_lshlrev_b32_e32 v3, 1, v0
	s_mov_b32 s7, 0x8000
	v_cmp_gt_i32_e32 vcc_lo, 0x90, v0
	v_add3_u32 v42, v2, s1, v1
	v_mul_u32_u24_e32 v1, 0xa0, v40
	v_or_b32_e32 v43, s7, v3
	v_and_b32_e32 v41, 0x7e, v3
	v_lshlrev_b32_e32 v44, 2, v0
	v_lshlrev_b32_e32 v45, 3, v0
	v_lshl_or_b32 v46, v1, 1, s7
	v_cmp_gt_i32_e64 s0, 0x100, v0
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v39, 0
	s_mov_b32 s7, 0
	s_movk_i32 s12, 0x5000
	s_movk_i32 s13, 0x800
	s_movk_i32 s14, 0x4000
BB45_1:
	v_lshl_add_u32 v47, s7, 4, v42
	v_ashrrev_i32_e32 v48, 31, v47
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v47, s1, s8, v47
	v_add_co_ci_u32_e64 v48, s1, s9, v48, s1
	v_add_co_u32 v49, s1, s12, v47
	v_add_co_ci_u32_e64 v50, s1, 0, v48, s1
	s_clause 0x1
	global_load_ushort v51, v[47:48], off
	global_load_ushort v49, v[49:50], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v43, v51
	ds_write_b16 v43, v49 offset:640
	s_and_saveexec_b32 s15, vcc_lo
	s_cbranch_execz BB45_3
	v_add_co_u32 v47, s1, 0xa000, v47
	v_add_co_ci_u32_e64 v48, s1, 0, v48, s1
	global_load_ushort v47, v[47:48], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v43, v47 offset:1280
BB45_3:
	s_or_b32 exec_lo, exec_lo, s15
	v_lshl_or_b32 v47, s7, 14, v44
	v_ashrrev_i32_e32 v48, 31, v47
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_co_u32 v47, s1, s10, v47
	v_add_co_ci_u32_e64 v48, s1, s11, v48, s1
	v_add_co_u32 v49, s1, s13, v47
	v_add_co_ci_u32_e64 v50, s1, 0, v48, s1
	v_add_co_u32 v51, s1, 0x1000, v47
	v_add_co_ci_u32_e64 v52, s1, 0, v48, s1
	v_add_co_u32 v53, s1, 0x1800, v47
	v_add_co_ci_u32_e64 v54, s1, 0, v48, s1
	v_add_co_u32 v63, s1, 0x2800, v47
	s_clause 0x7
	global_load_ushort v55, v[47:48], off
	global_load_ushort v56, v[47:48], off offset:4
	global_load_ushort v57, v[49:50], off offset:512
	global_load_ushort v58, v[49:50], off offset:516
	global_load_ushort v59, v[51:52], off offset:1024
	global_load_ushort v60, v[51:52], off offset:1028
	global_load_ushort v61, v[53:54], off offset:1536
	global_load_ushort v62, v[53:54], off offset:1540
	v_add_co_ci_u32_e64 v64, s1, 0, v48, s1
	v_add_co_u32 v65, s1, 0x3000, v47
	v_add_co_ci_u32_e64 v66, s1, 0, v48, s1
	v_add_co_u32 v67, s1, 0x3800, v47
	v_add_co_ci_u32_e64 v68, s1, 0, v48, s1
	v_add_co_u32 v69, s1, s14, v47
	v_add_co_ci_u32_e64 v70, s1, 0, v48, s1
	s_clause 0x7
	global_load_ushort v71, v[63:64], off
	global_load_ushort v72, v[63:64], off offset:4
	global_load_ushort v73, v[65:66], off offset:512
	global_load_ushort v74, v[65:66], off offset:516
	global_load_ushort v75, v[67:68], off offset:1024
	global_load_ushort v76, v[67:68], off offset:1028
	global_load_ushort v77, v[69:70], off offset:1536
	global_load_ushort v78, v[69:70], off offset:1540
	v_add_co_u32 v79, s1, s12, v47
	v_add_co_ci_u32_e64 v80, s1, 0, v48, s1
	v_add_co_u32 v81, s1, 0x5800, v47
	v_add_co_ci_u32_e64 v82, s1, 0, v48, s1
	v_add_co_u32 v83, s1, 0x6000, v47
	v_add_co_ci_u32_e64 v84, s1, 0, v48, s1
	v_add_co_u32 v85, s1, 0x6800, v47
	v_add_co_ci_u32_e64 v86, s1, 0, v48, s1
	s_clause 0x7
	global_load_ushort v87, v[79:80], off
	global_load_ushort v88, v[79:80], off offset:4
	global_load_ushort v89, v[81:82], off offset:512
	global_load_ushort v90, v[81:82], off offset:516
	global_load_ushort v91, v[83:84], off offset:1024
	global_load_ushort v92, v[83:84], off offset:1028
	global_load_ushort v93, v[85:86], off offset:1536
	global_load_ushort v94, v[85:86], off offset:1540
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v55, v[47:48], off offset:2
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v56, v[47:48], off offset:6
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v57, v[49:50], off offset:514
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v58, v[49:50], off offset:518
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v59, v[51:52], off offset:1026
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v60, v[51:52], off offset:1030
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v61, v[53:54], off offset:1538
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v62, v[53:54], off offset:1542
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v71, v[63:64], off offset:2
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v72, v[63:64], off offset:6
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v73, v[65:66], off offset:514
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v74, v[65:66], off offset:518
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v75, v[67:68], off offset:1026
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v76, v[67:68], off offset:1030
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v77, v[69:70], off offset:1538
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v78, v[69:70], off offset:1542
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v87, v[79:80], off offset:2
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v88, v[79:80], off offset:6
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v89, v[81:82], off offset:514
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v90, v[81:82], off offset:518
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v91, v[83:84], off offset:1026
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v92, v[83:84], off offset:1030
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v93, v[85:86], off offset:1538
	s_waitcnt vmcnt(23)
	global_load_short_d16_hi v94, v[85:86], off offset:1542
	s_waitcnt vmcnt(20)
	ds_write2st64_b64 v45, v[55:56], v[57:58] offset1:5
	s_waitcnt vmcnt(16)
	ds_write2st64_b64 v45, v[59:60], v[61:62] offset0:10 offset1:15
	s_waitcnt vmcnt(12)
	ds_write2st64_b64 v45, v[71:72], v[73:74] offset0:20 offset1:25
	s_waitcnt vmcnt(8)
	ds_write2st64_b64 v45, v[75:76], v[77:78] offset0:30 offset1:35
	s_waitcnt vmcnt(4)
	ds_write2st64_b64 v45, v[87:88], v[89:90] offset0:40 offset1:45
	s_waitcnt vmcnt(0)
	ds_write2st64_b64 v45, v[91:92], v[93:94] offset0:50 offset1:55
	s_and_saveexec_b32 s15, s0
	s_cbranch_execz BB45_5
	v_add_co_u32 v47, s1, 0x7800, v47
	v_add_co_ci_u32_e64 v48, s1, 0, v48, s1
	s_clause 0x1
	global_load_ushort v49, v[47:48], off
	global_load_ushort v50, v[47:48], off offset:4
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v49, v[47:48], off offset:2
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v50, v[47:48], off offset:6
	s_waitcnt vmcnt(0)
	ds_write_b64 v45, v[49:50] offset:30720
BB45_5:
	s_or_b32 exec_lo, exec_lo, s15
	v_mov_b32_e32 v47, v46
	s_mov_b32 s1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB45_6:
	v_or_b32_e32 v52, s1, v41
	ds_read2_b32 v[48:49], v47 offset1:16
	ds_read2_b32 v[50:51], v47 offset0:32 offset1:48
	ds_read_b32 v68, v47 offset:256
	v_add_nc_u32_e32 v47, 4, v47
	s_add_i32 s1, s1, s13
	v_lshlrev_b32_e32 v66, 1, v52
	s_cmp_lg_u32 s1, s14
	ds_read2st64_b32 v[52:53], v66 offset1:1
	ds_read2st64_b32 v[54:55], v66 offset0:2 offset1:3
	ds_read2st64_b32 v[56:57], v66 offset0:4 offset1:5
	ds_read2st64_b32 v[58:59], v66 offset0:6 offset1:7
	ds_read2st64_b32 v[60:61], v66 offset0:8 offset1:9
	ds_read2st64_b32 v[62:63], v66 offset0:10 offset1:11
	ds_read2st64_b32 v[64:65], v66 offset0:12 offset1:13
	ds_read2st64_b32 v[66:67], v66 offset0:14 offset1:15
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v38, v48, v52, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v48, v53, v39 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v34, v49, v52, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v49, v53, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v50, v52, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v50, v53, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v51, v52, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v51, v53, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v68, v52, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v68, v53, v22 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v37, v48, v54, v37 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v36, v48, v55, v36 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v26, v49, v54, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v49, v55, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v50, v54, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v50, v55, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v51, v54, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v51, v55, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v68, v54, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v68, v55, v4 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v35, v48, v56, v35 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v33, v48, v57, v33 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v32, v48, v58, v32 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v31, v48, v59, v31 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v19, v49, v56, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v49, v57, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v49, v58, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v49, v59, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v50, v56, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v50, v57, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v50, v58, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v50, v59, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v51, v56, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v51, v57, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v51, v58, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v51, v59, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v68, v56, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v68, v57, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v68, v58, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v68, v59, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v38, v48, v60, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v48, v61, v39 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v37, v48, v62, v37 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v36, v48, v63, v36 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v35, v48, v64, v35 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v33, v48, v65, v33 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v32, v48, v66, v32 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v31, v48, v67, v31 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v34, v49, v60, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v49, v61, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v49, v62, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v49, v63, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v49, v64, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v49, v65, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v49, v66, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v49, v67, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v50, v60, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v50, v61, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v50, v62, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v50, v63, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v50, v64, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v50, v65, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v50, v66, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v50, v67, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v51, v60, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v51, v61, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v51, v62, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v51, v63, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v51, v64, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v51, v65, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v51, v66, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v51, v67, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v68, v60, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v68, v61, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v68, v62, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v68, v63, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v68, v64, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v68, v65, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v68, v66, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v68, v67, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB45_6
	s_add_i32 s7, s7, 1
	s_cmp_eq_u32 s7, 32
	s_cbranch_scc0 BB45_1
	v_lshlrev_b32_e32 v42, 1, v41
	s_mulk_i32 s6, 0x6400
	v_mad_u32_u24 v40, 0x1400, v40, s6
	s_clause 0xe
	global_load_ushort v87, v42, s[4:5] offset:256
	global_load_ushort v88, v42, s[4:5] offset:512
	global_load_ushort v89, v42, s[4:5] offset:768
	global_load_ushort v90, v42, s[4:5] offset:1024
	global_load_ushort v91, v42, s[4:5] offset:1280
	global_load_ushort v92, v42, s[4:5] offset:1536
	global_load_ushort v93, v42, s[4:5] offset:1792
	global_load_ushort v94, v42, s[4:5] offset:770
	global_load_ushort v95, v42, s[4:5] offset:514
	global_load_ushort v96, v42, s[4:5] offset:258
	global_load_dword v97, v42, s[4:5]
	global_load_ushort v98, v42, s[4:5] offset:1794
	global_load_ushort v99, v42, s[4:5] offset:1538
	global_load_ushort v100, v42, s[4:5] offset:1282
	global_load_ushort v101, v42, s[4:5] offset:1026
	v_or_b32_e32 v40, v40, v41
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_nc_u32_e32 v42, 0x400, v40
	v_add_nc_u32_e32 v44, 0x800, v40
	v_add_nc_u32_e32 v51, 0xc00, v40
	v_add_nc_u32_e32 v46, 0x480, v40
	v_lshlrev_b64 v[66:67], 1, v[40:41]
	v_ashrrev_i32_e32 v43, 31, v42
	v_ashrrev_i32_e32 v45, 31, v44
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_nc_u32_e32 v48, 0x500, v40
	v_add_nc_u32_e32 v50, 0x580, v40
	v_add_co_u32 v66, vcc_lo, s2, v66
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_add_co_ci_u32_e32 v67, vcc_lo, s3, v67, vcc_lo
	v_lshlrev_b64 v[44:45], 1, v[44:45]
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_add_nc_u32_e32 v53, 0x600, v40
	v_add_nc_u32_e32 v55, 0x680, v40
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_add_nc_u32_e32 v57, 0x700, v40
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_co_u32 v44, vcc_lo, s2, v44
	v_add_nc_u32_e32 v59, 0x780, v40
	v_add_co_ci_u32_e32 v45, vcc_lo, s3, v45, vcc_lo
	v_add_co_u32 v51, vcc_lo, s2, v51
	v_ashrrev_i32_e32 v58, 31, v57
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v52, vcc_lo
	v_add_nc_u32_e32 v61, 0x880, v40
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_nc_u32_e32 v63, 0x900, v40
	v_add_nc_u32_e32 v65, 0x980, v40
	v_add_nc_u32_e32 v41, 0xa00, v40
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_nc_u32_e32 v68, 0xa80, v40
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_nc_u32_e32 v70, 0xb80, v40
	v_add_nc_u32_e32 v72, 0xd80, v40
	v_add_nc_u32_e32 v74, 0xe00, v40
	v_ashrrev_i32_e32 v69, 31, v68
	v_add_nc_u32_e32 v76, 0xf80, v40
	v_ashrrev_i32_e32 v71, 31, v70
	v_ashrrev_i32_e32 v73, 31, v72
	v_ashrrev_i32_e32 v75, 31, v74
	v_add_nc_u32_e32 v78, 0x1000, v40
	v_ashrrev_i32_e32 v77, 31, v76
	v_add_nc_u32_e32 v81, 0x1200, v40
	v_add_nc_u32_e32 v83, 0x1280, v40
	v_add_nc_u32_e32 v85, 0x1300, v40
	v_ashrrev_i32_e32 v79, 31, v78
	v_ashrrev_i32_e32 v82, 31, v81
	v_ashrrev_i32_e32 v84, 31, v83
	v_ashrrev_i32_e32 v86, 31, v85
	v_lshlrev_b64 v[81:82], 1, v[81:82]
	v_lshlrev_b64 v[83:84], 1, v[83:84]
	v_lshlrev_b64 v[85:86], 1, v[85:86]
	s_waitcnt vmcnt(14)
	v_add_f16_sdwa v47, v87, v39 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt vmcnt(13)
	v_add_f16_sdwa v49, v88, v37 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt vmcnt(12)
	v_add_f16_sdwa v54, v89, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_short v[66:67], v47, off offset:256
	s_waitcnt vmcnt(11)
	v_add_f16_sdwa v47, v90, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_short v[66:67], v49, off offset:512
	s_waitcnt vmcnt(10)
	v_add_f16_sdwa v49, v91, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_short v[66:67], v54, off offset:768
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v56, v97, v38
	global_store_short v[66:67], v47, off offset:1024
	v_add_f16_sdwa v47, v93, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_sdwa v54, v92, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v39, v96, v39
	v_add_f16_e32 v37, v95, v37
	v_add_f16_e32 v36, v94, v36
	global_store_short v[66:67], v49, off offset:1280
	global_store_short v[66:67], v54, off offset:1536
	global_store_short v[66:67], v47, off offset:1792
	global_store_dword v[66:67], v56, off
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v47, v101, v35
	v_add_f16_e32 v33, v100, v33
	v_add_f16_e32 v31, v98, v31
	global_store_short v[66:67], v39, off offset:258
	global_store_short v[66:67], v37, off offset:514
	v_add_f16_e32 v37, v99, v32
	global_store_short v[66:67], v36, off offset:770
	global_store_short v[66:67], v47, off offset:1026
	v_pk_add_f16 v30, v97, v30
	v_ashrrev_i32_e32 v47, 31, v46
	global_store_short v[66:67], v33, off offset:1282
	global_store_short v[66:67], v37, off offset:1538
	global_store_short v[66:67], v31, off offset:1794
	v_pk_add_f16 v31, v97, v29
	v_ashrrev_i32_e32 v49, 31, v48
	global_store_dword v[44:45], v30, off
	v_lshlrev_b64 v[45:46], 1, v[46:47]
	v_ashrrev_i32_e32 v54, 31, v53
	global_store_dword v[51:52], v31, off
	v_ashrrev_i32_e32 v51, 31, v50
	v_lshlrev_b64 v[47:48], 1, v[48:49]
	v_ashrrev_i32_e32 v56, 31, v55
	v_add_co_u32 v45, vcc_lo, s2, v45
	v_pk_add_f16 v33, v97, v34
	v_lshlrev_b64 v[49:50], 1, v[50:51]
	v_add_co_ci_u32_e32 v46, vcc_lo, s3, v46, vcc_lo
	v_add_co_u32 v47, vcc_lo, s2, v47
	v_lshlrev_b64 v[51:52], 1, v[53:54]
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v48, vcc_lo
	v_lshlrev_b64 v[53:54], 1, v[55:56]
	v_add_co_u32 v49, vcc_lo, s2, v49
	v_lshlrev_b64 v[55:56], 1, v[57:58]
	v_add_co_ci_u32_e32 v50, vcc_lo, s3, v50, vcc_lo
	v_add_co_u32 v51, vcc_lo, s2, v51
	v_lshlrev_b64 v[57:58], 1, v[59:60]
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v52, vcc_lo
	v_add_co_u32 v53, vcc_lo, s2, v53
	v_lshlrev_b64 v[59:60], 1, v[61:62]
	v_add_co_ci_u32_e32 v54, vcc_lo, s3, v54, vcc_lo
	v_add_co_u32 v55, vcc_lo, s2, v55
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_co_ci_u32_e32 v56, vcc_lo, s3, v56, vcc_lo
	v_add_co_u32 v57, vcc_lo, s2, v57
	v_lshlrev_b64 v[61:62], 1, v[63:64]
	global_store_dword v[42:43], v33, off
	v_ashrrev_i32_e32 v42, 31, v41
	v_add_co_ci_u32_e32 v58, vcc_lo, s3, v58, vcc_lo
	v_add_nc_u32_e32 v38, 0xb00, v40
	v_add_co_u32 v59, vcc_lo, s2, v59
	v_lshlrev_b64 v[63:64], 1, v[65:66]
	v_add_co_ci_u32_e32 v60, vcc_lo, s3, v60, vcc_lo
	v_add_co_u32 v61, vcc_lo, s2, v61
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v62, vcc_lo
	v_add_nc_u32_e32 v35, 0xc80, v40
	v_add_co_u32 v63, vcc_lo, s2, v63
	v_lshlrev_b64 v[65:66], 1, v[68:69]
	v_add_co_ci_u32_e32 v64, vcc_lo, s3, v64, vcc_lo
	v_add_nc_u32_e32 v32, 0xd00, v40
	v_add_co_u32 v41, vcc_lo, s2, v41
	v_lshlrev_b64 v[37:38], 1, v[38:39]
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v42, vcc_lo
	v_add_co_u32 v65, vcc_lo, s2, v65
	v_lshlrev_b64 v[67:68], 1, v[70:71]
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v66, vcc_lo, s3, v66, vcc_lo
	v_lshlrev_b64 v[34:35], 1, v[35:36]
	v_add_co_u32 v36, vcc_lo, s2, v37
	v_add_nc_u32_e32 v29, 0xe80, v40
	v_add_co_ci_u32_e32 v37, vcc_lo, s3, v38, vcc_lo
	v_add_co_u32 v38, vcc_lo, s2, v67
	v_lshlrev_b64 v[31:32], 1, v[32:33]
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v68, vcc_lo
	v_add_nc_u32_e32 v43, 0xf00, v40
	v_add_co_u32 v33, vcc_lo, s2, v34
	v_lshlrev_b64 v[69:70], 1, v[72:73]
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v35, vcc_lo
	v_add_co_u32 v31, vcc_lo, s2, v31
	v_lshlrev_b64 v[71:72], 1, v[74:75]
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_co_ci_u32_e32 v32, vcc_lo, s3, v32, vcc_lo
	v_add_co_u32 v67, vcc_lo, s2, v69
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_ci_u32_e32 v68, vcc_lo, s3, v70, vcc_lo
	v_add_co_u32 v69, vcc_lo, s2, v71
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_add_co_ci_u32_e32 v70, vcc_lo, s3, v72, vcc_lo
	v_lshlrev_b64 v[73:74], 1, v[76:77]
	v_add_co_u32 v29, vcc_lo, s2, v29
	v_lshlrev_b64 v[75:76], 1, v[78:79]
	v_add_co_ci_u32_e32 v30, vcc_lo, s3, v30, vcc_lo
	v_add_co_u32 v43, vcc_lo, s2, v43
	v_mov_b32_e32 v35, 0xffff
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v44, vcc_lo
	v_add_co_u32 v71, vcc_lo, s2, v73
	v_add_nc_u32_e32 v77, 0x1100, v40
	v_add_co_ci_u32_e32 v72, vcc_lo, s3, v74, vcc_lo
	v_add_co_u32 v73, vcc_lo, s2, v75
	v_add_nc_u32_e32 v75, 0x1080, v40
	v_add_co_ci_u32_e32 v74, vcc_lo, s3, v76, vcc_lo
	v_add_nc_u32_e32 v79, 0x1180, v40
	v_ashrrev_i32_e32 v78, 31, v77
	v_and_b32_e32 v87, v35, v87
	v_ashrrev_i32_e32 v76, 31, v75
	v_and_b32_e32 v88, v35, v88
	v_ashrrev_i32_e32 v80, 31, v79
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_lshl_or_b32 v87, v96, 16, v87
	v_lshlrev_b64 v[75:76], 1, v[75:76]
	v_lshl_or_b32 v88, v95, 16, v88
	v_lshlrev_b64 v[79:80], 1, v[79:80]
	v_and_b32_e32 v89, v35, v89
	v_pk_add_f16 v28, v87, v28
	v_pk_add_f16 v27, v87, v27
	v_add_co_u32 v75, vcc_lo, s2, v75
	v_pk_add_f16 v24, v87, v24
	v_add_co_ci_u32_e32 v76, vcc_lo, s3, v76, vcc_lo
	v_pk_add_f16 v87, v87, v22
	v_add_nc_u32_e32 v22, 0x1380, v40
	v_add_co_u32 v77, vcc_lo, s2, v77
	v_and_b32_e32 v90, v35, v90
	v_add_co_ci_u32_e32 v78, vcc_lo, s3, v78, vcc_lo
	v_add_co_u32 v79, vcc_lo, s2, v79
	v_and_b32_e32 v91, v35, v91
	v_and_b32_e32 v92, v35, v92
	v_and_b32_e32 v35, v35, v93
	v_pk_add_f16 v93, v88, v23
	v_ashrrev_i32_e32 v23, 31, v22
	v_add_co_ci_u32_e32 v80, vcc_lo, s3, v80, vcc_lo
	v_add_co_u32 v81, vcc_lo, s2, v81
	v_lshl_or_b32 v89, v94, 16, v89
	v_lshl_or_b32 v90, v101, 16, v90
	v_add_co_ci_u32_e32 v82, vcc_lo, s3, v82, vcc_lo
	v_lshl_or_b32 v91, v100, 16, v91
	v_lshl_or_b32 v35, v98, 16, v35
	v_add_co_u32 v83, vcc_lo, s2, v83
	v_lshlrev_b64 v[22:23], 1, v[22:23]
	v_lshl_or_b32 v92, v99, 16, v92
	v_add_co_ci_u32_e32 v84, vcc_lo, s3, v84, vcc_lo
	v_pk_add_f16 v26, v88, v26
	v_add_co_u32 v85, vcc_lo, s2, v85
	v_pk_add_f16 v21, v89, v21
	v_pk_add_f16 v25, v97, v25
	v_pk_add_f16 v19, v90, v19
	v_pk_add_f16 v4, v89, v4
	v_add_co_ci_u32_e32 v86, vcc_lo, s3, v86, vcc_lo
	v_pk_add_f16 v17, v91, v17
	v_pk_add_f16 v5, v35, v5
	v_pk_add_f16 v3, v90, v3
	v_pk_add_f16 v20, v88, v20
	v_pk_add_f16 v14, v88, v14
	v_pk_add_f16 v16, v92, v16
	v_pk_add_f16 v15, v35, v15
	v_pk_add_f16 v18, v89, v18
	v_pk_add_f16 v13, v90, v13
	v_pk_add_f16 v11, v91, v11
	v_pk_add_f16 v10, v92, v10
	v_pk_add_f16 v9, v35, v9
	v_pk_add_f16 v12, v89, v12
	v_pk_add_f16 v8, v90, v8
	v_pk_add_f16 v7, v91, v7
	v_pk_add_f16 v6, v92, v6
	global_store_dword v[45:46], v28, off
	global_store_dword v[47:48], v26, off
	global_store_dword v[49:50], v21, off
	global_store_dword v[51:52], v19, off
	global_store_dword v[53:54], v17, off
	global_store_dword v[55:56], v16, off
	global_store_dword v[57:58], v15, off
	global_store_dword v[59:60], v27, off
	global_store_dword v[61:62], v93, off
	global_store_dword v[63:64], v18, off
	global_store_dword v[41:42], v13, off
	global_store_dword v[65:66], v11, off
	global_store_dword v[36:37], v10, off
	global_store_dword v[38:39], v9, off
	global_store_dword v[33:34], v24, off
	global_store_dword v[31:32], v20, off
	global_store_dword v[67:68], v12, off
	global_store_dword v[69:70], v8, off
	global_store_dword v[29:30], v7, off
	global_store_dword v[43:44], v6, off
	global_store_dword v[71:72], v5, off
	v_add_co_u32 v5, vcc_lo, s2, v22
	v_pk_add_f16 v2, v91, v2
	v_pk_add_f16 v1, v92, v1
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v23, vcc_lo
	v_pk_add_f16 v0, v35, v0
	global_store_dword v[73:74], v25, off
	global_store_dword v[75:76], v87, off
	global_store_dword v[77:78], v14, off
	global_store_dword v[79:80], v4, off
	global_store_dword v[81:82], v3, off
	global_store_dword v[83:84], v2, off
	global_store_dword v[85:86], v1, off
	global_store_dword v[5:6], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_2_kernel0
		.amdhsa_group_segment_fixed_size 34336
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 102
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end45:
	.size	tvmgen_default_fused_nn_conv2d_add_2_kernel0, .Lfunc_end45-tvmgen_default_fused_nn_conv2d_add_2_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_3_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_3_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_3_kernel0:
	v_lshrrev_b32_e32 v1, 4, v0
	s_mov_b32 s0, 0x5397829d
	v_add_nc_u32_e32 v6, 0x280, v0
	v_add_nc_u32_e32 v8, 0x500, v0
	v_add_nc_u32_e32 v9, 0x780, v0
	v_add_nc_u32_e32 v2, 40, v1
	v_add_nc_u32_e32 v3, 31, v1
	v_mul_hi_u32 v6, v6, s0
	v_mul_hi_u32 v8, v8, s0
	v_lshlrev_b32_e32 v22, 10, v1
	v_mul_hi_u32 v4, v2, s0
	v_mul_hi_u32 v5, v3, s0
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[8:9], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	s_mov_b32 s14, 0xc800
	v_lshlrev_b32_e32 v10, 3, v0
	v_lshrrev_b32_e32 v1, 8, v6
	v_mul_hi_u32 v9, v9, s0
	v_lshrrev_b32_e32 v35, 7, v0
	v_lshrrev_b32_e32 v4, 4, v4
	v_lshrrev_b32_e32 v5, 4, v5
	v_mul_i32_i24_e32 v24, s14, v1
	v_lshlrev_b32_e32 v1, 5, v0
	v_lshlrev_b32_e32 v7, 1, v0
	v_mul_u32_u24_e32 v4, 49, v4
	v_mul_u32_u24_e32 v5, 49, v5
	s_movk_i32 s1, 0x4000
	v_and_b32_e32 v30, 0x7800, v1
	v_or_b32_e32 v1, 4, v10
	v_sub_nc_u32_e32 v2, v2, v4
	v_sub_nc_u32_e32 v3, v3, v5
	v_lshrrev_b32_e32 v4, 8, v8
	v_lshrrev_b32_e32 v5, 8, v9
	v_and_b32_e32 v36, 0x1fc, v1
	v_lshlrev_b32_e32 v25, 10, v2
	v_lshlrev_b32_e32 v26, 10, v3
	v_mul_i32_i24_e32 v27, s14, v4
	v_or_b32_e32 v2, 1, v10
	v_or_b32_e32 v3, 2, v10
	v_or_b32_e32 v4, 3, v10
	v_mul_u32_u24_e32 v1, 0xa0, v35
	v_mul_i32_i24_e32 v28, s14, v5
	v_and_b32_e32 v32, 0x1f9, v2
	v_and_b32_e32 v33, 0x1fa, v3
	v_and_b32_e32 v34, 0x1fb, v4
	v_or_b32_e32 v2, 5, v10
	v_or_b32_e32 v3, 6, v10
	v_or_b32_e32 v4, 7, v10
	v_and_b32_e32 v29, 0x1f8, v10
	v_lshl_or_b32 v40, v1, 1, s1
	v_and_b32_e32 v37, 0x1fd, v2
	v_and_b32_e32 v38, 0x1fe, v3
	v_and_b32_e32 v39, 0x1ff, v4
	v_and_b32_e32 v21, 15, v0
	v_or_b32_e32 v23, s1, v7
	v_and_b32_e32 v3, 0xfe, v7
	v_cmp_gt_i32_e32 vcc_lo, 0x1b0, v0
	v_lshlrev_b32_e32 v31, 4, v0
	v_cmp_gt_i32_e64 s0, 0x180, v0
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v17, 0
	s_lshl_b32 s4, s6, 9
	s_ashr_i32 s7, s6, 2
	s_and_b32 s4, s4, 0x600
	s_mul_i32 s5, s7, 0x32000
	s_mov_b32 s6, 0
	s_mov_b32 s14, 0xa000
BB46_1:
	s_lshl_b32 s15, s6, 4
	s_add_i32 s15, s15, s5
	v_or_b32_e32 v42, s15, v21
	v_add_nc_u32_e32 v41, v42, v22
	v_add3_u32 v43, v42, v24, v25
	v_add3_u32 v45, v42, v27, v26
	v_ashrrev_i32_e32 v42, 31, v41
	v_ashrrev_i32_e32 v44, 31, v43
	v_ashrrev_i32_e32 v46, 31, v45
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v41, s1, s10, v41
	v_add_co_ci_u32_e64 v42, s1, s11, v42, s1
	v_add_co_u32 v43, s1, s10, v43
	v_add_co_ci_u32_e64 v44, s1, s11, v44, s1
	v_add_co_u32 v45, s1, s10, v45
	v_add_co_ci_u32_e64 v46, s1, s11, v46, s1
	s_clause 0x2
	global_load_ushort v41, v[41:42], off
	global_load_ushort v42, v[43:44], off
	global_load_ushort v43, v[45:46], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v23, v41
	ds_write_b16 v23, v42 offset:1280
	ds_write_b16 v23, v43 offset:2560
	s_and_saveexec_b32 s16, vcc_lo
	s_cbranch_execz BB46_3
	s_addk_i32 s15, 0x5800
	v_or_b32_e32 v41, s15, v21
	v_add3_u32 v41, v41, v22, v28
	v_ashrrev_i32_e32 v42, 31, v41
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_add_co_u32 v41, s1, s10, v41
	v_add_co_ci_u32_e64 v42, s1, s11, v42, s1
	global_load_ushort v41, v[41:42], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v23, v41 offset:3840
BB46_3:
	s_or_b32 exec_lo, exec_lo, s16
	s_lshl_b32 s1, s6, 15
	v_or3_b32 v49, s1, v30, s4
	v_or_b32_e32 v41, v49, v29
	v_or_b32_e32 v43, v49, v33
	v_or_b32_e32 v45, v49, v36
	v_or_b32_e32 v47, v49, v38
	v_ashrrev_i32_e32 v42, 31, v41
	v_ashrrev_i32_e32 v44, 31, v43
	v_ashrrev_i32_e32 v46, 31, v45
	v_ashrrev_i32_e32 v48, 31, v47
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_co_u32 v55, s1, s12, v41
	v_add_co_ci_u32_e64 v56, s1, s13, v42, s1
	v_add_co_u32 v53, s1, s12, v43
	v_or_b32_e32 v43, v49, v32
	v_add_co_ci_u32_e64 v54, s1, s13, v44, s1
	v_add_co_u32 v51, s1, s12, v45
	v_or_b32_e32 v45, v49, v34
	v_add_co_ci_u32_e64 v52, s1, s13, v46, s1
	v_add_co_u32 v41, s1, s12, v47
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_co_ci_u32_e64 v42, s1, s13, v48, s1
	v_or_b32_e32 v47, v49, v37
	s_clause 0x3
	global_load_ushort v57, v[55:56], off
	global_load_ushort v58, v[53:54], off
	global_load_ushort v59, v[51:52], off
	global_load_ushort v60, v[41:42], off
	v_ashrrev_i32_e32 v46, 31, v45
	v_or_b32_e32 v49, v49, v39
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_ashrrev_i32_e32 v48, 31, v47
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_u32 v43, s1, s12, v43
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_co_ci_u32_e64 v44, s1, s13, v44, s1
	v_add_co_u32 v45, s1, s12, v45
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_add_co_ci_u32_e64 v46, s1, s13, v46, s1
	v_add_co_u32 v47, s1, s12, v47
	v_add_co_ci_u32_e64 v48, s1, s13, v48, s1
	v_add_co_u32 v49, s1, s12, v49
	v_add_co_ci_u32_e64 v50, s1, s13, v50, s1
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v57, v[43:44], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v58, v[45:46], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v59, v[47:48], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v60, v[49:50], off
	s_waitcnt vmcnt(0)
	ds_write_b128 v31, v[57:60]
	s_and_saveexec_b32 s15, s0
	s_cbranch_execz BB46_5
	v_add_co_u32 v55, s1, s14, v55
	v_add_co_ci_u32_e64 v56, s1, 0, v56, s1
	v_add_co_u32 v53, s1, s14, v53
	v_add_co_ci_u32_e64 v54, s1, 0, v54, s1
	v_add_co_u32 v57, s1, s14, v51
	v_add_co_ci_u32_e64 v58, s1, 0, v52, s1
	v_add_co_u32 v41, s1, s14, v41
	v_add_co_ci_u32_e64 v42, s1, 0, v42, s1
	s_clause 0x3
	global_load_ushort v51, v[55:56], off
	global_load_ushort v52, v[53:54], off
	global_load_ushort v53, v[57:58], off
	global_load_ushort v54, v[41:42], off
	v_add_co_u32 v41, s1, s14, v43
	v_add_co_ci_u32_e64 v42, s1, 0, v44, s1
	v_add_co_u32 v43, s1, s14, v45
	v_add_co_ci_u32_e64 v44, s1, 0, v46, s1
	v_add_co_u32 v45, s1, s14, v47
	v_add_co_ci_u32_e64 v46, s1, 0, v48, s1
	v_add_co_u32 v47, s1, s14, v49
	v_add_co_ci_u32_e64 v48, s1, 0, v50, s1
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v51, v[41:42], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v52, v[43:44], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v53, v[45:46], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v54, v[47:48], off
	s_waitcnt vmcnt(0)
	ds_write_b128 v31, v[51:54] offset:10240
BB46_5:
	s_or_b32 exec_lo, exec_lo, s15
	v_mov_b32_e32 v41, v40
	s_mov_b32 s1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB46_6:
	v_or_b32_e32 v46, s1, v3
	v_add_nc_u32_e32 v48, 0xc00, v41
	ds_read2_b32 v[42:43], v41 offset1:16
	ds_read2_b32 v[44:45], v41 offset0:32 offset1:48
	ds_read_b32 v54, v41 offset:256
	ds_read_b32 v55, v41 offset:3392
	v_add_nc_u32_e32 v41, 4, v41
	v_lshlrev_b32_e32 v52, 1, v46
	s_addk_i32 s1, 0x400
	ds_read2_b32 v[46:47], v48 offset0:16 offset1:32
	ds_read2_b32 v[48:49], v48 offset0:48 offset1:64
	ds_read2st64_b32 v[50:51], v52 offset1:2
	ds_read2st64_b32 v[52:53], v52 offset0:4 offset1:6
	s_cmpk_lg_i32 s1, 0x2000
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v20, v42, v50, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v42, v51, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v43, v50, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v43, v51, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v44, v50, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v44, v51, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v45, v50, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v45, v51, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v54, v50, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v54, v51, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v46, v50, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v46, v51, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v47, v50, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v47, v51, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v48, v50, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v48, v51, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v49, v50, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v49, v51, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v55, v50, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v55, v51, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v20, v42, v52, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v42, v53, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v43, v52, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v43, v53, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v44, v52, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v44, v53, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v45, v52, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v45, v53, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v54, v52, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v54, v53, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v46, v52, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v46, v53, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v47, v52, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v47, v53, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v48, v52, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v48, v53, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v49, v52, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v49, v53, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v55, v52, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v55, v53, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB46_6
	s_add_i32 s6, s6, 1
	s_cmp_eq_u32 s6, 64
	s_cbranch_scc0 BB46_1
	s_mul_i32 s7, s7, 0x19000
	v_mad_u32_u24 v21, 0x2800, v35, s7
	v_or3_b32 v21, v21, s4, v3
	v_or_b32_e32 v3, s4, v3
	v_add_nc_u32_e32 v23, 0x800, v21
	v_add_nc_u32_e32 v25, 0x900, v21
	v_add_nc_u32_e32 v27, 0x1000, v21
	v_add_nc_u32_e32 v29, 0x1100, v21
	v_ashrrev_i32_e32 v22, 31, v21
	v_ashrrev_i32_e32 v24, 31, v23
	v_ashrrev_i32_e32 v26, 31, v25
	v_ashrrev_i32_e32 v28, 31, v27
	v_ashrrev_i32_e32 v30, 31, v29
	v_lshlrev_b32_e32 v3, 1, v3
	v_lshlrev_b64 v[32:33], 1, v[21:22]
	v_lshlrev_b64 v[22:23], 1, v[23:24]
	v_lshlrev_b64 v[24:25], 1, v[25:26]
	v_lshlrev_b64 v[26:27], 1, v[27:28]
	v_lshlrev_b64 v[28:29], 1, v[29:30]
	v_add_nc_u32_e32 v36, 0x2000, v21
	v_add_nc_u32_e32 v38, 0x2100, v21
	v_add_nc_u32_e32 v40, 0xc800, v21
	v_add_nc_u32_e32 v42, 0xc900, v21
	v_add_nc_u32_e32 v44, 0xd000, v21
	v_add_nc_u32_e32 v46, 0xd100, v21
	v_add_nc_u32_e32 v48, 0xd800, v21
	v_add_nc_u32_e32 v50, 0xd900, v21
	v_add_nc_u32_e32 v52, 0xe000, v21
	v_add_nc_u32_e32 v54, 0xe100, v21
	v_add_nc_u32_e32 v56, 0xe800, v21
	v_add_nc_u32_e32 v58, 0xe900, v21
	v_add_nc_u32_e32 v31, 0x1800, v21
	v_add_nc_u32_e32 v30, 0x1900, v21
	s_clause 0x2
	global_load_dword v21, v3, s[2:3]
	global_load_ushort v60, v3, s[2:3] offset:512
	global_load_ushort v3, v3, s[2:3] offset:514
	v_add_co_u32 v34, vcc_lo, s8, v32
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v35, vcc_lo, s9, v33, vcc_lo
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_co_u32 v22, vcc_lo, s8, v22
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_ci_u32_e32 v23, vcc_lo, s9, v23, vcc_lo
	v_add_co_u32 v24, vcc_lo, s8, v24
	v_lshlrev_b64 v[32:33], 1, v[31:32]
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_co_ci_u32_e32 v25, vcc_lo, s9, v25, vcc_lo
	v_add_co_u32 v26, vcc_lo, s8, v26
	v_lshlrev_b64 v[36:37], 1, v[36:37]
	v_add_co_ci_u32_e32 v27, vcc_lo, s9, v27, vcc_lo
	v_add_co_u32 v28, vcc_lo, s8, v28
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_add_co_ci_u32_e32 v29, vcc_lo, s9, v29, vcc_lo
	v_add_co_u32 v32, vcc_lo, s8, v32
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_co_ci_u32_e32 v33, vcc_lo, s9, v33, vcc_lo
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	v_add_co_u32 v30, vcc_lo, s8, v30
	v_ashrrev_i32_e32 v43, 31, v42
	v_add_co_ci_u32_e32 v31, vcc_lo, s9, v31, vcc_lo
	v_add_co_u32 v36, vcc_lo, s8, v36
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_ashrrev_i32_e32 v45, 31, v44
	v_add_co_ci_u32_e32 v37, vcc_lo, s9, v37, vcc_lo
	v_add_co_u32 v38, vcc_lo, s8, v38
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_ashrrev_i32_e32 v47, 31, v46
	v_add_co_ci_u32_e32 v39, vcc_lo, s9, v39, vcc_lo
	v_add_co_u32 v40, vcc_lo, s8, v40
	v_lshlrev_b64 v[44:45], 1, v[44:45]
	v_ashrrev_i32_e32 v49, 31, v48
	v_add_co_ci_u32_e32 v41, vcc_lo, s9, v41, vcc_lo
	v_add_co_u32 v42, vcc_lo, s8, v42
	v_lshlrev_b64 v[46:47], 1, v[46:47]
	v_ashrrev_i32_e32 v51, 31, v50
	v_add_co_ci_u32_e32 v43, vcc_lo, s9, v43, vcc_lo
	v_add_co_u32 v44, vcc_lo, s8, v44
	v_lshlrev_b64 v[48:49], 1, v[48:49]
	v_ashrrev_i32_e32 v53, 31, v52
	v_add_co_ci_u32_e32 v45, vcc_lo, s9, v45, vcc_lo
	v_add_co_u32 v46, vcc_lo, s8, v46
	v_lshlrev_b64 v[50:51], 1, v[50:51]
	v_ashrrev_i32_e32 v55, 31, v54
	v_add_co_ci_u32_e32 v47, vcc_lo, s9, v47, vcc_lo
	v_add_co_u32 v48, vcc_lo, s8, v48
	v_lshlrev_b64 v[52:53], 1, v[52:53]
	v_ashrrev_i32_e32 v57, 31, v56
	v_add_co_ci_u32_e32 v49, vcc_lo, s9, v49, vcc_lo
	v_add_co_u32 v50, vcc_lo, s8, v50
	v_lshlrev_b64 v[54:55], 1, v[54:55]
	v_add_co_ci_u32_e32 v51, vcc_lo, s9, v51, vcc_lo
	v_ashrrev_i32_e32 v59, 31, v58
	v_add_co_u32 v52, vcc_lo, s8, v52
	v_lshlrev_b64 v[56:57], 1, v[56:57]
	v_add_co_ci_u32_e32 v53, vcc_lo, s9, v53, vcc_lo
	v_add_co_u32 v54, vcc_lo, s8, v54
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	v_add_co_ci_u32_e32 v55, vcc_lo, s9, v55, vcc_lo
	v_add_co_u32 v56, vcc_lo, s8, v56
	v_add_co_ci_u32_e32 v57, vcc_lo, s9, v57, vcc_lo
	v_add_co_u32 v58, vcc_lo, s8, v58
	v_add_co_ci_u32_e32 v59, vcc_lo, s9, v59, vcc_lo
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v20, v21, v20
	v_pk_add_f16 v19, v21, v19
	v_pk_add_f16 v18, v21, v18
	v_pk_add_f16 v16, v21, v16
	v_pk_add_f16 v15, v21, v15
	v_pk_add_f16 v14, v21, v14
	v_pk_add_f16 v13, v21, v13
	v_pk_add_f16 v11, v21, v11
	v_pk_add_f16 v9, v21, v9
	v_pk_add_f16 v7, v21, v7
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v21, v60, v17
	s_waitcnt vmcnt(0)
	v_add_f16_sdwa v17, v3, v17 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_short v[34:35], v21, off offset:512
	v_and_b32_e32 v21, 0xffff, v60
	global_store_dword v[34:35], v20, off
	global_store_short v[34:35], v17, off offset:514
	global_store_dword v[22:23], v19, off
	global_store_dword v[26:27], v18, off
	global_store_dword v[32:33], v16, off
	global_store_dword v[36:37], v15, off
	global_store_dword v[40:41], v14, off
	global_store_dword v[44:45], v13, off
	global_store_dword v[48:49], v11, off
	global_store_dword v[52:53], v9, off
	global_store_dword v[56:57], v7, off
	v_lshl_or_b32 v3, v3, 16, v21
	v_pk_add_f16 v7, v3, v12
	v_pk_add_f16 v9, v3, v10
	v_pk_add_f16 v8, v3, v8
	v_pk_add_f16 v6, v3, v6
	v_pk_add_f16 v5, v3, v5
	v_pk_add_f16 v4, v3, v4
	v_pk_add_f16 v2, v3, v2
	v_pk_add_f16 v1, v3, v1
	v_pk_add_f16 v0, v3, v0
	global_store_dword v[24:25], v7, off
	global_store_dword v[28:29], v9, off
	global_store_dword v[30:31], v8, off
	global_store_dword v[38:39], v6, off
	global_store_dword v[42:43], v5, off
	global_store_dword v[46:47], v4, off
	global_store_dword v[50:51], v2, off
	global_store_dword v[54:55], v1, off
	global_store_dword v[58:59], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_3_kernel0
		.amdhsa_group_segment_fixed_size 21088
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 61
		.amdhsa_next_free_sgpr 17
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end46:
	.size	tvmgen_default_fused_nn_conv2d_add_3_kernel0, .Lfunc_end46-tvmgen_default_fused_nn_conv2d_add_3_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_4_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_4_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_4_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[14:15], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	s_mul_hi_i32 s0, s6, 0x66666667
	v_lshlrev_b32_e32 v1, 5, v0
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s0, s0, 1
	v_and_b32_e32 v4, 63, v0
	s_add_i32 s1, s0, s1
	s_movk_i32 s10, 0x2800
	s_mul_i32 s0, s1, 5
	s_movk_i32 s7, 0x7800
	s_sub_i32 s6, s6, s0
	v_lshlrev_b32_e32 v2, 2, v0
	s_mul_i32 s0, s6, s10
	v_and_b32_e32 v8, s7, v1
	v_or_b32_e32 v9, s0, v4
	v_lshlrev_b32_e32 v5, 1, v0
	v_and_b32_e32 v3, 0x3c0, v0
	s_mov_b32 s12, 0x32000
	s_mov_b32 s11, 0x8000
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s13, s14, v2
	s_mul_i32 s0, s1, s12
	v_or_b32_e32 v1, s11, v5
	v_add_co_ci_u32_e64 v7, s13, s15, 0, s13
	v_cmp_gt_i32_e32 vcc_lo, 0xc0, v0
	v_lshl_or_b32 v3, v3, 1, s11
	v_lshlrev_b32_e32 v4, 3, v4
	v_or_b32_e32 v5, 0x807e, v5
	v_add3_u32 v8, v9, s0, v8
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	s_mov_b64 s[14:15], 0
	s_branch BB47_2
BB47_1:
	s_or_b32 exec_lo, exec_lo, s13
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[18:21], v3
	ds_read2_b32 v[62:63], v4 offset1:1
	ds_read_b128 v[22:25], v3 offset:640
	ds_read_b128 v[26:29], v3 offset:1280
	ds_read_b128 v[30:33], v3 offset:1920
	ds_read2st64_b64 v[34:37], v4 offset0:1 offset1:2
	ds_read_b128 v[38:41], v3 offset:16
	ds_read2st64_b64 v[42:45], v4 offset0:3 offset1:4
	ds_read2st64_b64 v[46:49], v4 offset0:5 offset1:6
	ds_read_b128 v[50:53], v3 offset:656
	ds_read_b128 v[54:57], v3 offset:1296
	ds_read_b128 v[58:61], v3 offset:1936
	v_add_nc_u32_e32 v8, 64, v8
	s_add_u32 s14, s14, s11
	s_addc_u32 s15, s15, 0
	s_cmp_eq_u32 s14, 0x100000
	s_waitcnt lgkmcnt(10)
	v_pk_fma_f16 v9, v18, v62, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v18, v63, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v12, v22, v62, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v22, v63, v17 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v15, v26, v62, v15 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v9, v18, v34, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v18, v35, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v26, v63, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v30, v63, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v22, v34, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v19, v36, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v19, v37, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v30, v62, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v22, v35, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v26, v34, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v26, v35, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v23, v36, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v30, v35, v10 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v9, v19, v42, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v19, v43, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v30, v34, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v23, v37, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v27, v36, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v27, v37, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v31, v37, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v23, v42, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v20, v44, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v20, v45, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v31, v36, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v23, v43, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v27, v42, v15 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v18, v20, v46, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v27, v43, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v31, v43, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v24, v44, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v20, v47, v11 op_sel:[1,0,0]
	ds_read2st64_b64 v[9:12], v4 offset0:7 offset1:8
	v_pk_fma_f16 v16, v24, v45, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v28, v44, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v24, v46, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v31, v42, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v28, v45, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v24, v47, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v28, v46, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v25, v48, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v32, v44, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v28, v47, v14 op_sel:[1,0,0]
	ds_read2st64_b64 v[13:16], v4 offset0:9 offset1:10
	v_pk_fma_f16 v18, v21, v48, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v21, v49, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v32, v45, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v32, v46, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v25, v49, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v29, v48, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v29, v49, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v32, v47, v17 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v34, v21, v9, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v21, v10, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v25, v10, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v25, v9, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v33, v48, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v38, v11, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v38, v12, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v29, v9, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v33, v49, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v33, v9, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v29, v10, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v50, v11, v26 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v34, v38, v14, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v38, v13, v25 op_sel:[1,0,0]
	ds_read_b128 v[17:20], v3 offset:32
	ds_read_b128 v[21:24], v3 offset:48
	ds_read2st64_b64 v[25:28], v4 offset0:11 offset1:12
	v_pk_fma_f16 v30, v50, v13, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v50, v12, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v33, v10, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v39, v15, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v54, v12, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v51, v15, v30 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[29:32], v4 offset0:13 offset1:14
	v_pk_fma_f16 v37, v54, v11, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v58, v11, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v58, v12, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v39, v16, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v54, v14, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v54, v13, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v58, v13, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v50, v14, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v58, v14, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v55, v16, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v55, v15, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v59, v15, v9 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v13, v39, v25, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v39, v26, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v51, v25, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v55, v25, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v51, v16, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v40, v27, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v59, v16, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v40, v28, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v55, v26, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v51, v26, v35 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v12, v40, v29, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v59, v25, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v59, v26, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v52, v27, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v40, v30, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v41, v31, v12 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[9:12], v4 offset0:15 offset1:16
	v_pk_fma_f16 v14, v56, v28, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v52, v29, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v41, v32, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v56, v27, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v52, v28, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v60, v27, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v53, v31, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v60, v28, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v56, v29, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v52, v30, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v56, v30, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v60, v29, v13 op_sel:[1,0,0]
	ds_read_b128 v[13:16], v3 offset:672
	ds_read2st64_b64 v[25:28], v4 offset0:17 offset1:18
	v_pk_fma_f16 v30, v60, v30, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v53, v32, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v57, v32, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v57, v31, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v61, v31, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v61, v32, v30 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v40, v41, v9, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v41, v10, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v53, v9, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v53, v10, v33 op_sel:[1,0,0]
	ds_read_b128 v[29:32], v3 offset:1312
	ds_read_b128 v[33:36], v3 offset:1952
	v_pk_fma_f16 v45, v17, v11, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v17, v12, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v57, v10, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v61, v10, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v57, v9, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v61, v9, v39 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v43, v13, v11, v43 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v45, v17, v25, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v17, v26, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v13, v12, v44 op_sel_hi:[0,1,1]
	ds_read_b128 v[37:40], v3 offset:688
	v_pk_fma_f16 v47, v13, v25, v43 op_sel:[1,0,0]
	ds_read2st64_b64 v[41:44], v4 offset0:19 offset1:20
	v_pk_fma_f16 v53, v18, v27, v45 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v13, v26, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v18, v28, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v14, v27, v47 op_sel_hi:[0,1,1]
	ds_read_b128 v[45:48], v3 offset:1328
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v55, v29, v11, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v29, v12, v50 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v57, v33, v11, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v33, v12, v10 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[9:12], v4 offset0:21 offset1:22
	v_pk_fma_f16 v55, v29, v25, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v29, v26, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v33, v25, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v33, v26, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v14, v28, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v30, v27, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v30, v28, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v34, v27, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v34, v28, v26 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v26, v18, v41, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v18, v42, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v14, v41, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v14, v42, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v30, v41, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v19, v43, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v19, v44, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v15, v43, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v30, v42, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v34, v41, v25 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v33, v19, v9, v26 op_sel:[1,0,0]
	ds_read2st64_b64 v[25:28], v4 offset0:23 offset1:24
	v_pk_fma_f16 v17, v19, v10, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v15, v44, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v34, v42, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v15, v9, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v31, v43, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v20, v11, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v15, v10, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v35, v44, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v16, v11, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v31, v44, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v35, v43, v30 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[41:44], v4 offset0:25 offset1:26
	v_pk_fma_f16 v14, v31, v9, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v20, v12, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v31, v10, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v35, v9, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v35, v10, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v32, v11, v14 op_sel_hi:[0,1,1]
	ds_read_b128 v[49:52], v3 offset:1968
	v_pk_fma_f16 v13, v16, v12, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v36, v11, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v36, v12, v10 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v10, v20, v25, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v20, v26, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v32, v12, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v16, v25, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v16, v26, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v21, v27, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v21, v28, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v32, v26, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v37, v27, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v36, v25, v9 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v18, v21, v41, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v21, v42, v11 op_sel:[1,0,0]
	ds_read2st64_b64 v[9:12], v4 offset0:27 offset1:28
	v_pk_fma_f16 v14, v32, v25, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v37, v28, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v36, v26, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v45, v28, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v37, v41, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v45, v27, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v37, v42, v13 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v27, v49, v27, v16 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[13:16], v4 offset0:29 offset1:30
	v_pk_fma_f16 v18, v22, v43, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v22, v44, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v38, v43, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v49, v28, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v45, v41, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v45, v42, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v49, v41, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v38, v44, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v49, v42, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v46, v43, v25 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v18, v22, v9, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v22, v10, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v38, v9, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v46, v44, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v50, v43, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v23, v11, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v50, v44, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v23, v12, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v39, v11, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v46, v9, v25 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v18, v23, v13, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v46, v10, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v38, v10, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v23, v14, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v39, v13, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v50, v9, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v50, v10, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v24, v15, v18 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[17:20], v4 offset0:31 offset1:32
	v_pk_fma_f16 v21, v39, v12, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v47, v11, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v40, v15, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v47, v12, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v51, v11, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v51, v12, v10 op_sel_hi:[0,1,1]
	ds_read_b128 v[9:12], v3 offset:64
	v_pk_fma_f16 v22, v47, v13, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v39, v14, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v47, v14, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v51, v13, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v51, v14, v27 op_sel:[1,0,0]
	ds_read_b128 v[25:28], v3 offset:704
	ds_read2st64_b64 v[29:32], v4 offset0:33 offset1:34
	v_pk_fma_f16 v23, v24, v16, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v40, v16, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v48, v15, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v48, v16, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v52, v15, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v52, v16, v14 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v38, v24, v17, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v40, v17, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v24, v18, v23 op_sel:[1,0,0]
	ds_read_b128 v[13:16], v3 offset:1344
	v_pk_fma_f16 v49, v48, v17, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v48, v18, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v40, v18, v21 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v44, v9, v19, v38 op_sel_hi:[0,1,1]
	ds_read_b128 v[21:24], v3 offset:1984
	ds_read_b128 v[33:36], v3 offset:80
	v_pk_fma_f16 v45, v9, v20, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v52, v18, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v52, v17, v37 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v42, v25, v19, v42 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v44, v9, v29, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v9, v30, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v45, v25, v20, v43 op_sel_hi:[0,1,1]
	ds_read_b128 v[37:40], v3 offset:720
	v_pk_fma_f16 v46, v25, v29, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v10, v31, v44 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[41:44], v4 offset0:35 offset1:36
	v_pk_fma_f16 v25, v25, v30, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v10, v32, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v26, v31, v46 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v55, v13, v19, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v13, v20, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v26, v32, v25 op_sel_hi:[0,1,1]
	ds_read_b128 v[45:48], v3 offset:1360
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v57, v21, v19, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v21, v20, v18 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[17:20], v4 offset0:37 offset1:38
	v_pk_fma_f16 v55, v13, v29, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v13, v30, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v21, v29, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v21, v30, v58 op_sel:[1,0,0]
	ds_read_b128 v[49:52], v3 offset:2000
	v_pk_fma_f16 v30, v14, v31, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v14, v32, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v22, v31, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v22, v32, v21 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v31, v10, v41, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v10, v42, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v26, v41, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v26, v42, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v14, v41, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v11, v43, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v14, v42, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v22, v41, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v11, v44, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v22, v42, v21 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v41, v11, v17, v30 op_sel:[1,0,0]
	ds_read2st64_b64 v[29:32], v4 offset0:39 offset1:40
	v_pk_fma_f16 v10, v27, v43, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v11, v18, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v27, v44, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v15, v43, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v15, v44, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v23, v43, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v12, v19, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v23, v44, v21 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[41:44], v4 offset0:41 offset1:42
	v_pk_fma_f16 v10, v27, v17, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v12, v20, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v27, v18, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v15, v18, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v15, v17, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v23, v18, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v28, v19, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v28, v20, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v23, v17, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v16, v19, v25 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v9, v12, v30, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v12, v29, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v16, v20, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v28, v29, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v28, v30, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v33, v32, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v33, v31, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v24, v19, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v24, v20, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v16, v29, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v16, v30, v13 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v16, v33, v41, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v37, v31, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v33, v42, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v37, v32, v11 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[9:12], v4 offset0:43 offset1:44
	v_pk_fma_f16 v21, v34, v43, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v24, v29, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v24, v30, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v37, v41, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v45, v32, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v34, v44, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v37, v42, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v45, v31, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v38, v43, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v49, v31, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v49, v32, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v45, v42, v13 op_sel:[1,0,0]
	ds_read2st64_b64 v[13:16], v4 offset0:45 offset1:46
	v_pk_fma_f16 v17, v45, v41, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v38, v44, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v49, v41, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v49, v42, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v46, v44, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v46, v43, v17 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v18, v34, v10, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v38, v9, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v38, v10, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v34, v9, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v46, v9, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v50, v43, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v50, v44, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v39, v12, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v35, v11, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v35, v12, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v39, v11, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v50, v9, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v46, v10, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v50, v10, v23 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v21, v35, v13, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v35, v14, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v39, v13, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v39, v14, v19 op_sel:[1,0,0]
	ds_read2st64_b64 v[17:20], v4 offset0:47 offset1:48
	v_pk_fma_f16 v25, v47, v11, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v36, v15, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v36, v16, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v40, v16, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v40, v15, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v47, v12, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v51, v11, v9 op_sel_hi:[0,1,1]
	ds_read_b128 v[21:24], v3 offset:96
	v_pk_fma_f16 v25, v47, v13, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v51, v12, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v47, v14, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v51, v13, v9 op_sel:[1,0,0]
	ds_read2st64_b64 v[9:12], v4 offset0:49 offset1:50
	v_pk_fma_f16 v34, v48, v15, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v51, v14, v27 op_sel:[1,0,0]
	ds_read_b128 v[25:28], v3 offset:736
	v_pk_fma_f16 v37, v48, v16, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v52, v15, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v41, v36, v17, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v52, v16, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v40, v17, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v40, v18, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v36, v18, v30 op_sel:[1,0,0]
	ds_read_b128 v[13:16], v3 offset:1376
	v_pk_fma_f16 v49, v48, v17, v34 op_sel:[1,0,0]
	ds_read_b128 v[29:32], v3 offset:2016
	ds_read2_b64 v[33:36], v3 offset0:14 offset1:15
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v40, v21, v19, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v21, v20, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v48, v18, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v52, v17, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v52, v18, v39 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v42, v21, v9, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v21, v10, v41 op_sel:[1,0,0]
	ds_read_b128 v[37:40], v3 offset:752
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v45, v25, v19, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v25, v20, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v22, v11, v42 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[41:44], v4 offset0:51 offset1:52
	v_pk_fma_f16 v21, v22, v12, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v25, v9, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v25, v10, v46 op_sel:[1,0,0]
	ds_read_b128 v[45:48], v3 offset:1392
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v55, v13, v19, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v13, v20, v50 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v57, v29, v19, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v29, v20, v18 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[17:20], v4 offset0:53 offset1:54
	v_pk_fma_f16 v55, v13, v9, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v13, v10, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v29, v9, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v26, v11, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v26, v12, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v14, v11, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v29, v10, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v30, v11, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v14, v12, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v11, v22, v41, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v22, v42, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v30, v12, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v26, v42, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v26, v41, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v23, v43, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v23, v44, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v14, v41, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v14, v42, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v30, v41, v9 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v26, v23, v17, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v23, v18, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v27, v43, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v27, v44, v12 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[9:12], v4 offset0:55 offset1:56
	v_pk_fma_f16 v22, v30, v42, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v15, v43, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v15, v44, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v31, v43, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v27, v17, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v31, v44, v22 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[41:44], v4 offset0:57 offset1:58
	v_pk_fma_f16 v26, v24, v19, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v31, v17, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v15, v17, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v27, v18, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v15, v18, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v31, v18, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v24, v20, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v16, v19, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v28, v20, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v28, v19, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v32, v19, v14 op_sel_hi:[0,1,1]
	ds_read_b128 v[49:52], v3 offset:2032
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v19, v24, v9, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v28, v10, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v16, v20, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v32, v20, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v24, v10, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v33, v11, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v28, v9, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v16, v9, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v16, v10, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v32, v9, v14 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v23, v33, v41, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v33, v12, v20 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[13:16], v4 offset0:59 offset1:60
	v_pk_fma_f16 v10, v32, v10, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v45, v11, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v45, v12, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v33, v42, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v37, v12, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v34, v43, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v45, v41, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v37, v11, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v34, v44, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v37, v42, v20 op_sel:[1,0,0]
	ds_read2st64_b64 v[17:20], v4 offset0:61 offset1:62
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v9, v49, v11, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v49, v12, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v45, v42, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v38, v44, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v46, v43, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v37, v41, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v49, v41, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v49, v42, v10 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v22, v34, v13, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v34, v14, v23 op_sel:[1,0,0]
	ds_read_u16 v27, v5
	ds_read_b64 v[9:10], v4 offset:32256
	v_pk_fma_f16 v21, v38, v43, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v46, v44, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v35, v15, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v35, v16, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v50, v43, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v50, v44, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v38, v13, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v38, v14, v11 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v22, v35, v17, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v35, v18, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v46, v14, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v50, v14, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v46, v13, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v50, v13, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v39, v15, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v36, v19, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v36, v20, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v39, v16, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v51, v15, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v51, v16, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v39, v17, v12 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v12, v27, v9, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v39, v18, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v47, v15, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v47, v16, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v51, v17, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v51, v18, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v40, v20, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v47, v17, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v47, v18, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v52, v19, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v27, v10, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v40, v19, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v48, v19, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v48, v20, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v52, v20, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v40, v10, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v40, v9, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v48, v9, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v48, v10, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v52, v9, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v52, v10, v19 op_sel:[1,0,0]
	s_cbranch_scc1 BB47_4
BB47_2:
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[18:19], 1, v[8:9]
	v_add_co_u32 v20, s0, s8, v18
	v_add_co_ci_u32_e64 v21, s0, s9, v19, s0
	v_add_co_u32 v22, s0, 0x19000, v20
	v_add_co_ci_u32_e64 v23, s0, 0, v21, s0
	v_add_co_u32 v24, s0, s12, v20
	v_add_co_ci_u32_e64 v25, s0, 0, v21, s0
	v_add_co_u32 v18, s0, v6, s14
	v_add_co_ci_u32_e64 v19, s0, s15, v7, s0
	v_add_co_u32 v26, s0, 0x4b000, v20
	v_add_co_ci_u32_e64 v27, s0, 0, v21, s0
	v_add_co_u32 v28, s0, 0x800, v18
	s_clause 0x1
	global_load_dword v9, v[18:19], off
	global_load_dword v38, v[18:19], off offset:1280
	v_add_co_ci_u32_e64 v29, s0, 0, v19, s0
	v_add_co_u32 v30, s0, 0x1000, v18
	v_add_co_ci_u32_e64 v31, s0, 0, v19, s0
	v_add_co_u32 v32, s0, 0x1800, v18
	v_add_co_ci_u32_e64 v33, s0, 0, v19, s0
	v_add_co_u32 v34, s0, 0x2000, v18
	v_add_co_ci_u32_e64 v35, s0, 0, v19, s0
	v_add_co_u32 v36, s0, s10, v18
	v_add_co_ci_u32_e64 v37, s0, 0, v19, s0
	s_clause 0x7
	global_load_dword v39, v[28:29], off offset:512
	global_load_dword v40, v[28:29], off offset:1792
	global_load_dword v41, v[30:31], off offset:1024
	global_load_dword v42, v[32:33], off offset:256
	global_load_dword v43, v[32:33], off offset:1536
	global_load_dword v44, v[34:35], off offset:768
	global_load_dword v45, v[36:37], off
	global_load_dword v46, v[36:37], off offset:1280
	v_add_co_u32 v28, s0, 0x3000, v18
	v_add_co_ci_u32_e64 v29, s0, 0, v19, s0
	v_add_co_u32 v30, s0, 0x3800, v18
	v_add_co_ci_u32_e64 v31, s0, 0, v19, s0
	v_add_co_u32 v32, s0, 0x4000, v18
	v_add_co_ci_u32_e64 v33, s0, 0, v19, s0
	v_add_co_u32 v34, s0, 0x4800, v18
	v_add_co_ci_u32_e64 v35, s0, 0, v19, s0
	v_add_co_u32 v36, s0, 0x5000, v18
	v_add_co_ci_u32_e64 v37, s0, 0, v19, s0
	s_clause 0x7
	global_load_dword v47, v[28:29], off offset:512
	global_load_dword v48, v[28:29], off offset:1792
	global_load_dword v49, v[30:31], off offset:1024
	global_load_dword v50, v[32:33], off offset:256
	global_load_dword v51, v[32:33], off offset:1536
	global_load_dword v52, v[34:35], off offset:768
	global_load_dword v53, v[36:37], off
	global_load_dword v36, v[36:37], off offset:1280
	v_add_co_u32 v28, s0, 0x5800, v18
	v_add_co_ci_u32_e64 v29, s0, 0, v19, s0
	v_add_co_u32 v30, s0, 0x6000, v18
	v_add_co_ci_u32_e64 v31, s0, 0, v19, s0
	v_add_co_u32 v32, s0, 0x6800, v18
	v_add_co_ci_u32_e64 v33, s0, 0, v19, s0
	v_add_co_u32 v34, s0, 0x7000, v18
	v_add_co_ci_u32_e64 v35, s0, 0, v19, s0
	s_clause 0x5
	global_load_dword v37, v[28:29], off offset:512
	global_load_dword v54, v[28:29], off offset:1792
	global_load_dword v30, v[30:31], off offset:1024
	global_load_dword v31, v[32:33], off offset:256
	global_load_dword v32, v[32:33], off offset:1536
	global_load_dword v33, v[34:35], off offset:768
	v_add_co_u32 v28, s0, s7, v18
	v_add_co_ci_u32_e64 v29, s0, 0, v19, s0
	s_clause 0x3
	global_load_ushort v20, v[20:21], off
	global_load_ushort v21, v[22:23], off
	global_load_ushort v22, v[24:25], off
	global_load_ushort v23, v[26:27], off
	global_load_dword v24, v[28:29], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2st64_b32 v2, v9, v38 offset1:5
	ds_write2st64_b32 v2, v39, v40 offset0:10 offset1:15
	ds_write2st64_b32 v2, v41, v42 offset0:20 offset1:25
	ds_write2st64_b32 v2, v43, v44 offset0:30 offset1:35
	ds_write2st64_b32 v2, v45, v46 offset0:40 offset1:45
	ds_write2st64_b32 v2, v47, v48 offset0:50 offset1:55
	ds_write2st64_b32 v2, v49, v50 offset0:60 offset1:65
	ds_write2st64_b32 v2, v51, v52 offset0:70 offset1:75
	ds_write2st64_b32 v2, v53, v36 offset0:80 offset1:85
	ds_write2st64_b32 v2, v37, v54 offset0:90 offset1:95
	ds_write2st64_b32 v2, v30, v31 offset0:100 offset1:105
	ds_write2st64_b32 v2, v32, v33 offset0:110 offset1:115
	ds_write_b16 v1, v20
	ds_write_b16 v1, v21 offset:640
	ds_write_b16 v1, v22 offset:1280
	ds_write_b16 v1, v23 offset:1920
	ds_write_b32 v2, v24 offset:30720
	s_and_saveexec_b32 s13, vcc_lo
	s_cbranch_execz BB47_1
	v_add_co_u32 v18, s0, s7, v18
	v_add_co_ci_u32_e64 v19, s0, 0, v19, s0
	global_load_ushort v9, v[18:19], off offset:1280
	s_waitcnt vmcnt(0)
	global_load_short_d16_hi v9, v[18:19], off offset:1282
	s_waitcnt vmcnt(0)
	ds_write_b32 v2, v9 offset:32000
	s_branch BB47_1
BB47_4:
	v_lshlrev_b32_e32 v1, 3, v0
	v_lshlrev_b32_e32 v0, 2, v0
	s_mulk_i32 s6, 0x500
	s_mulk_i32 s1, 0x6400
	v_and_b32_e32 v1, 0x1f8, v1
	v_add3_u32 v0, s6, s1, v0
	s_clause 0x1
	global_load_dword v22, v1, s[4:5]
	global_load_dword v23, v1, s[4:5] offset:4
	v_add_nc_u32_e32 v2, 0x1900, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_nc_u32_e32 v4, 0x1902, v0
	v_add_nc_u32_e32 v6, 0x3200, v0
	v_add_nc_u32_e32 v8, 0x3202, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_add_nc_u32_e32 v18, 0x4b00, v0
	v_add_nc_u32_e32 v20, 0x4b02, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	v_add_co_u32 v2, vcc_lo, s2, v2
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s2, v8
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v9, vcc_lo
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v12, v22, v12
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v11, v23, v11
	v_pk_add_f16 v16, v22, v16
	v_pk_add_f16 v17, v23, v17
	v_pk_add_f16 v15, v22, v15
	v_pk_add_f16 v14, v23, v14
	v_pk_add_f16 v13, v22, v13
	v_pk_add_f16 v10, v23, v10
	global_store_dword v[0:1], v12, off
	global_store_dword v[0:1], v11, off offset:4
	global_store_dword v[2:3], v16, off
	global_store_dword v[4:5], v17, off
	global_store_dword v[6:7], v15, off
	global_store_dword v[8:9], v14, off
	global_store_dword v[18:19], v13, off
	global_store_dword v[20:21], v10, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_4_kernel0
		.amdhsa_group_segment_fixed_size 35328
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 64
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end47:
	.size	tvmgen_default_fused_nn_conv2d_add_4_kernel0, .Lfunc_end47-tvmgen_default_fused_nn_conv2d_add_4_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0:
	v_lshlrev_b32_e32 v1, 4, v0
	s_ashr_i32 s7, s6, 2
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[8:9], s[4:5], 0x18
	s_mul_i32 s0, s7, 0x3200
	v_lshlrev_b32_e32 v3, 2, v0
	v_and_b32_e32 v2, 0x3f80, v1
	s_load_dwordx2 s[4:5], s[4:5], 0x20
	v_lshlrev_b32_e32 v41, 3, v0
	v_lshrrev_b32_e32 v42, 5, v0
	v_or_b32_e32 v4, 2, v3
	v_add_nc_u32_e32 v2, s0, v2
	v_and_b32_e32 v40, 0x7c, v3
	s_lshl_b32 s0, s6, 7
	s_movk_i32 s14, 0x4000
	s_and_b32 s1, s0, 0x180
	v_and_or_b32 v44, v41, 56, v2
	v_or_b32_e32 v2, 1, v3
	v_or_b32_e32 v3, 3, v3
	v_and_b32_e32 v48, 0x7e, v4
	v_cmp_gt_i32_e64 s0, 0x80, v0
	v_or_b32_e32 v43, s14, v1
	v_and_b32_e32 v46, 0x7d, v2
	v_mul_u32_u24_e32 v2, 0x500, v42
	v_and_b32_e32 v47, 0x3e00, v1
	v_and_b32_e32 v49, 0x7f, v3
	v_lshlrev_b32_e32 v45, 9, v42
	v_mov_b32_e32 v0, 0
	v_lshl_add_u32 v50, v2, 1, s14
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v34, 0
	s_mov_b32 s27, 0
	s_mov_b32 s26, -1
	s_movk_i32 s6, 0x1000
	s_movk_i32 s14, 0x2800
	s_movk_i32 s15, 0x3800
	s_movk_i32 s16, 0x5000
	s_movk_i32 s17, 0x6000
	s_movk_i32 s18, 0x7800
	s_mov_b32 s19, 0x8800
	s_mov_b32 s20, 0xa000
	s_mov_b32 s21, 0xb000
	s_mov_b32 s22, 0xc800
	s_mov_b32 s23, 0xd800
	s_mov_b32 s24, 0xf000
	s_movk_i32 s25, 0x800
BB48_1:
	v_lshl_or_b32 v51, s27, 6, v44
	s_lshl_b32 s27, s27, 15
	v_or_b32_e32 v53, s27, v45
	v_or3_b32 v71, s27, v47, s1
	v_ashrrev_i32_e32 v52, 31, v51
	v_or3_b32 v53, v53, s1, v40
	v_or_b32_e32 v55, v71, v48
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_ashrrev_i32_e32 v54, 31, v53
	v_ashrrev_i32_e32 v56, 31, v55
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v57, vcc_lo, s10, v51
	v_add_co_ci_u32_e32 v58, vcc_lo, s11, v52, vcc_lo
	v_lshlrev_b64 v[51:52], 1, v[53:54]
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	global_load_dwordx4 v[59:62], v[57:58], off
	v_add_co_u32 v53, vcc_lo, s12, v51
	v_add_co_ci_u32_e32 v54, vcc_lo, s13, v52, vcc_lo
	v_add_co_u32 v51, vcc_lo, s12, v55
	v_add_co_ci_u32_e32 v52, vcc_lo, s13, v56, vcc_lo
	v_add_co_u32 v55, vcc_lo, s6, v53
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v63, vcc_lo, s6, v51
	v_add_co_ci_u32_e32 v64, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v65, vcc_lo, s14, v53
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v67, vcc_lo, s14, v51
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v69, vcc_lo, s15, v53
	v_add_co_ci_u32_e32 v70, vcc_lo, 0, v54, vcc_lo
	s_clause 0x4
	global_load_ushort v75, v[55:56], off offset:1024
	global_load_ushort v76, v[63:64], off offset:1024
	global_load_ushort v77, v[65:66], off
	global_load_ushort v78, v[67:68], off
	global_load_ushort v79, v[69:70], off offset:1024
	v_add_co_u32 v55, vcc_lo, s15, v51
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v63, vcc_lo, s16, v53
	v_add_co_ci_u32_e32 v64, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v65, vcc_lo, s16, v51
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v67, vcc_lo, s17, v53
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v54, vcc_lo
	s_clause 0x3
	global_load_ushort v80, v[55:56], off offset:1024
	global_load_ushort v81, v[63:64], off
	global_load_ushort v82, v[65:66], off
	global_load_ushort v83, v[67:68], off offset:1024
	v_add_co_u32 v55, vcc_lo, s17, v51
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v63, vcc_lo, s18, v53
	v_add_co_ci_u32_e32 v64, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v65, vcc_lo, s18, v51
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v67, vcc_lo, s19, v53
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v54, vcc_lo
	s_clause 0x3
	global_load_ushort v84, v[55:56], off offset:1024
	global_load_ushort v85, v[63:64], off
	global_load_ushort v86, v[65:66], off
	global_load_ushort v87, v[67:68], off offset:1024
	v_add_co_u32 v55, vcc_lo, s19, v51
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v63, vcc_lo, s20, v53
	v_add_co_ci_u32_e32 v64, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v65, vcc_lo, s20, v51
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v67, vcc_lo, s21, v53
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v54, vcc_lo
	s_clause 0x3
	global_load_ushort v88, v[55:56], off offset:1024
	global_load_ushort v89, v[63:64], off
	global_load_ushort v90, v[65:66], off
	global_load_ushort v91, v[67:68], off offset:1024
	v_add_co_u32 v55, vcc_lo, s21, v51
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v63, vcc_lo, s22, v53
	v_add_co_ci_u32_e32 v64, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v65, vcc_lo, s22, v51
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v67, vcc_lo, s23, v53
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v54, vcc_lo
	s_clause 0x5
	global_load_ushort v92, v[55:56], off offset:1024
	global_load_ushort v93, v[63:64], off
	global_load_ushort v94, v[65:66], off
	global_load_ushort v95, v[67:68], off offset:1024
	global_load_ushort v97, v[53:54], off
	global_load_ushort v98, v[51:52], off
	v_add_co_u32 v55, vcc_lo, s23, v51
	v_or_b32_e32 v63, v71, v49
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v65, vcc_lo, s6, v57
	s_waitcnt vmcnt(0)
	s_barrier 
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v67, vcc_lo, s14, v57
	global_load_ushort v96, v[55:56], off offset:1024
	v_or_b32_e32 v55, v71, v46
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v69, vcc_lo, s15, v57
	v_ashrrev_i32_e32 v56, 31, v55
	v_add_co_ci_u32_e32 v70, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v71, vcc_lo, s16, v57
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_add_co_ci_u32_e32 v72, vcc_lo, 0, v58, vcc_lo
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_add_co_u32 v55, vcc_lo, s12, v55
	v_add_co_ci_u32_e32 v56, vcc_lo, s13, v56, vcc_lo
	v_add_co_u32 v57, vcc_lo, s12, v63
	v_add_co_ci_u32_e32 v58, vcc_lo, s13, v64, vcc_lo
	v_add_co_u32 v73, vcc_lo, s6, v55
	global_load_dwordx4 v[63:66], v[65:66], off offset:1024
	v_add_co_ci_u32_e32 v74, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v99, vcc_lo, s6, v57
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v58, vcc_lo
	ds_write_b128 v43, v[59:62]
	v_add_co_u32 v59, vcc_lo, s14, v55
	v_add_co_ci_u32_e32 v60, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v61, vcc_lo, s14, v57
	v_add_co_ci_u32_e32 v62, vcc_lo, 0, v58, vcc_lo
	global_load_short_d16_hi v75, v[73:74], off offset:1024
	v_add_co_u32 v73, vcc_lo, s15, v55
	global_load_short_d16_hi v76, v[99:100], off offset:1024
	v_add_co_ci_u32_e32 v74, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v99, vcc_lo, s15, v57
	global_load_short_d16_hi v77, v[59:60], off
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v59, vcc_lo, s16, v55
	global_load_short_d16_hi v78, v[61:62], off
	v_add_co_ci_u32_e32 v60, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v61, vcc_lo, s16, v57
	global_load_short_d16_hi v79, v[73:74], off offset:1024
	v_add_co_ci_u32_e32 v62, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v73, vcc_lo, s17, v55
	v_add_co_ci_u32_e32 v74, vcc_lo, 0, v56, vcc_lo
	global_load_short_d16_hi v80, v[99:100], off offset:1024
	v_add_co_u32 v99, vcc_lo, s17, v57
	global_load_short_d16_hi v81, v[59:60], off
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v59, vcc_lo, s18, v55
	global_load_short_d16_hi v82, v[61:62], off
	v_add_co_ci_u32_e32 v60, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v61, vcc_lo, s18, v57
	global_load_short_d16_hi v83, v[73:74], off offset:1024
	v_add_co_ci_u32_e32 v62, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v73, vcc_lo, s19, v55
	v_add_co_ci_u32_e32 v74, vcc_lo, 0, v56, vcc_lo
	global_load_short_d16_hi v84, v[99:100], off offset:1024
	v_add_co_u32 v99, vcc_lo, s19, v57
	global_load_short_d16_hi v85, v[59:60], off
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v59, vcc_lo, s20, v55
	global_load_short_d16_hi v86, v[61:62], off
	v_add_co_ci_u32_e32 v60, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v61, vcc_lo, s20, v57
	global_load_short_d16_hi v87, v[73:74], off offset:1024
	v_add_co_ci_u32_e32 v62, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v73, vcc_lo, s21, v55
	v_add_co_ci_u32_e32 v74, vcc_lo, 0, v56, vcc_lo
	global_load_short_d16_hi v88, v[99:100], off offset:1024
	v_add_co_u32 v99, vcc_lo, s21, v57
	global_load_short_d16_hi v89, v[59:60], off
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v59, vcc_lo, s22, v55
	global_load_short_d16_hi v90, v[61:62], off
	v_add_co_ci_u32_e32 v60, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v101, vcc_lo, s22, v57
	global_load_short_d16_hi v91, v[73:74], off offset:1024
	v_add_co_ci_u32_e32 v102, vcc_lo, 0, v58, vcc_lo
	v_add_co_u32 v103, vcc_lo, s23, v55
	v_add_co_ci_u32_e32 v104, vcc_lo, 0, v56, vcc_lo
	s_clause 0x1
	global_load_short_d16_hi v92, v[99:100], off offset:1024
	global_load_short_d16_hi v93, v[59:60], off
	s_clause 0x1
	global_load_dwordx4 v[59:62], v[67:68], off
	global_load_dwordx4 v[67:70], v[69:70], off offset:1024
	global_load_short_d16_hi v94, v[101:102], off
	global_load_dwordx4 v[71:74], v[71:72], off
	global_load_short_d16_hi v95, v[103:104], off offset:1024
	v_add_co_u32 v99, vcc_lo, s23, v57
	v_add_nc_u32_e32 v101, 0x1c00, v41
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v58, vcc_lo
	s_clause 0x1
	global_load_short_d16_hi v97, v[55:56], off
	global_load_short_d16_hi v98, v[57:58], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v96, v[99:100], off offset:1024
	v_add_nc_u32_e32 v99, s25, v41
	v_add_nc_u32_e32 v100, 0x1400, v41
	s_waitcnt vmcnt(27)
	ds_write_b128 v43, v[63:66] offset:2560
	v_add_nc_u32_e32 v63, s14, v41
	v_add_nc_u32_e32 v64, 0x3000, v41
	s_waitcnt vmcnt(7)
	ds_write_b128 v43, v[59:62] offset:5120
	s_waitcnt vmcnt(6)
	ds_write_b128 v43, v[67:70] offset:7680
	s_waitcnt vmcnt(4)
	ds_write_b128 v43, v[71:74] offset:10240
	s_waitcnt vmcnt(1)
	ds_write2_b64 v41, v[97:98], v[75:76] offset1:160
	ds_write2_b64 v99, v[77:78], v[79:80] offset0:64 offset1:224
	ds_write2_b64 v100, v[81:82], v[83:84] offset1:160
	ds_write2_b64 v101, v[85:86], v[87:88] offset0:64 offset1:224
	ds_write2_b64 v63, v[89:90], v[91:92] offset1:160
	s_waitcnt vmcnt(0)
	ds_write2_b64 v64, v[93:94], v[95:96] offset0:64 offset1:224
	s_and_saveexec_b32 s27, s0
	s_cbranch_execz BB48_3
	v_add_co_u32 v53, vcc_lo, s24, v53
	v_add_co_ci_u32_e32 v54, vcc_lo, 0, v54, vcc_lo
	v_add_co_u32 v51, vcc_lo, s24, v51
	v_add_co_ci_u32_e32 v52, vcc_lo, 0, v52, vcc_lo
	s_clause 0x1
	global_load_ushort v53, v[53:54], off
	global_load_ushort v54, v[51:52], off
	v_add_co_u32 v51, vcc_lo, s24, v55
	v_add_co_ci_u32_e32 v52, vcc_lo, 0, v56, vcc_lo
	v_add_co_u32 v55, vcc_lo, s24, v57
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v58, vcc_lo
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v53, v[51:52], off
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v54, v[55:56], off
	s_waitcnt vmcnt(0)
	ds_write_b64 v41, v[53:54] offset:15360
BB48_3:
	s_or_b32 exec_lo, exec_lo, s27
	v_mov_b32_e32 v51, v50
	s_xor_b32 s26, s26, -1
	s_mov_b32 s27, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB48_4:
	v_or_b32_e32 v84, s27, v40
	v_add_nc_u32_e32 v88, s25, v51
	ds_read2_b64 v[52:55], v51 offset1:16
	ds_read2_b64 v[56:59], v51 offset0:32 offset1:48
	ds_read2_b64 v[60:63], v51 offset0:64 offset1:80
	ds_read2_b64 v[64:67], v51 offset0:96 offset1:112
	ds_read2_b64 v[68:71], v51 offset0:128 offset1:144
	ds_read2_b64 v[72:75], v51 offset0:160 offset1:176
	ds_read2_b64 v[76:79], v51 offset0:192 offset1:208
	ds_read2_b64 v[80:83], v51 offset0:224 offset1:240
	v_add_nc_u32_e32 v51, 8, v51
	s_addk_i32 s27, 0x200
	v_lshlrev_b32_e32 v92, 1, v84
	s_cmpk_lg_i32 s27, 0x2000
	ds_read2_b64 v[84:87], v88 offset1:16
	ds_read2_b64 v[88:91], v88 offset0:32 offset1:48
	ds_read2_b32 v[96:97], v92 offset1:1
	ds_read_b64 v[98:99], v92 offset:768
	ds_read2_b64 v[92:95], v92 offset0:32 offset1:64
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v39, v52, v96, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v52, v97, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v54, v96, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v54, v97, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v56, v96, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v56, v97, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v58, v96, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v58, v97, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v60, v96, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v60, v97, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v62, v96, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v62, v97, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v64, v96, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v64, v97, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v66, v96, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v66, v97, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v68, v96, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v68, v97, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v70, v96, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v70, v97, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v72, v96, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v72, v97, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v74, v96, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v74, v97, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v76, v96, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v76, v97, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v78, v96, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v78, v97, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v80, v96, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v80, v97, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v82, v96, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v82, v97, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v84, v96, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v84, v97, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v86, v96, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v86, v97, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v88, v96, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v88, v97, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v90, v96, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v90, v97, v1 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v39, v52, v92, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v52, v93, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v54, v92, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v54, v93, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v56, v92, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v56, v93, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v58, v92, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v58, v93, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v60, v92, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v60, v93, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v62, v92, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v62, v93, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v64, v92, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v64, v93, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v66, v92, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v66, v93, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v68, v92, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v68, v93, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v70, v92, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v70, v93, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v72, v92, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v72, v93, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v74, v92, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v74, v93, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v76, v92, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v76, v93, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v78, v92, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v78, v93, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v80, v92, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v80, v93, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v82, v92, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v82, v93, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v84, v92, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v84, v93, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v86, v92, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v86, v93, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v88, v92, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v88, v93, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v90, v92, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v90, v93, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v53, v94, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v53, v95, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v55, v94, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v55, v95, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v57, v94, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v57, v95, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v59, v94, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v59, v95, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v61, v94, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v61, v95, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v63, v94, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v63, v95, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v65, v94, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v65, v95, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v67, v94, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v67, v95, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v69, v94, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v69, v95, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v71, v94, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v71, v95, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v73, v94, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v73, v95, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v75, v94, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v75, v95, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v77, v94, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v77, v95, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v79, v94, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v79, v95, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v81, v94, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v81, v95, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v83, v94, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v83, v95, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v85, v94, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v85, v95, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v87, v94, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v87, v95, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v89, v94, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v89, v95, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v91, v94, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v91, v95, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v53, v98, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v53, v99, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v55, v98, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v55, v99, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v57, v98, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v57, v99, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v59, v98, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v59, v99, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v61, v98, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v61, v99, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v63, v98, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v63, v99, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v65, v98, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v65, v99, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v67, v98, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v67, v99, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v69, v98, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v69, v99, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v71, v98, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v71, v99, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v73, v98, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v73, v99, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v75, v98, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v75, v99, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v77, v98, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v77, v99, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v79, v98, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v79, v99, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v81, v98, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v81, v99, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v83, v98, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v83, v99, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v85, v98, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v85, v99, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v87, v98, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v87, v99, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v89, v98, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v89, v99, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v91, v98, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v91, v99, v1 op_sel:[1,0,0]
	s_cbranch_scc1 BB48_4
	s_and_b32 vcc_lo, exec_lo, s26
	s_mov_b32 s27, 1
	s_mov_b32 s26, 0
	s_cbranch_vccz BB48_1
	s_mul_i32 s7, s7, 0xc800
	v_mad_u32_u24 v41, 0x2800, v42, s7
	v_or3_b32 v41, v41, s1, v40
	v_or_b32_e32 v40, s1, v40
	v_ashrrev_i32_e32 v42, 31, v41
	v_or_b32_e32 v47, 0x400, v41
	v_lshlrev_b32_e32 v40, 1, v40
	v_or_b32_e32 v49, 0x401, v41
	v_or_b32_e32 v53, 0x600, v41
	v_lshlrev_b64 v[43:44], 1, v[41:42]
	v_ashrrev_i32_e32 v48, 31, v47
	global_load_dword v42, v40, s[8:9]
	v_ashrrev_i32_e32 v50, 31, v49
	v_or_b32_e32 v55, 0x601, v41
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_u32 v45, vcc_lo, s4, v43
	v_or_b32_e32 v57, 0x602, v41
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v44, vcc_lo
	v_ashrrev_i32_e32 v56, 31, v55
	v_or_b32_e32 v59, 0x603, v41
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	global_load_dword v40, v40, s[8:9] offset:4
	s_clause 0x5
	global_load_dword v87, v[45:46], off
	global_load_dword v88, v[45:46], off offset:4
	global_load_ushort v89, v[45:46], off offset:1024
	global_load_ushort v90, v[45:46], off offset:1026
	global_load_ushort v91, v[45:46], off offset:1028
	global_load_ushort v92, v[45:46], off offset:1030
	v_lshlrev_b64 v[45:46], 1, v[47:48]
	v_lshlrev_b64 v[47:48], 1, v[49:50]
	v_ashrrev_i32_e32 v58, 31, v57
	v_add_nc_u32_e32 v61, 0x800, v41
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_co_u32 v49, vcc_lo, s4, v45
	v_add_nc_u32_e32 v63, 0x802, v41
	v_add_co_ci_u32_e32 v50, vcc_lo, s5, v46, vcc_lo
	v_add_co_u32 v51, vcc_lo, s4, v47
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	v_add_co_ci_u32_e32 v52, vcc_lo, s5, v48, vcc_lo
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_nc_u32_e32 v65, 0xa00, v41
	v_lshlrev_b64 v[59:60], 1, v[59:60]
	s_clause 0x1
	global_load_ushort v93, v[49:50], off
	global_load_ushort v94, v[51:52], off
	v_or_b32_e32 v49, 0x402, v41
	v_or_b32_e32 v51, 0x403, v41
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_nc_u32_e32 v67, 0xa02, v41
	v_lshlrev_b64 v[61:62], 1, v[61:62]
	v_ashrrev_i32_e32 v50, 31, v49
	v_ashrrev_i32_e32 v52, 31, v51
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_nc_u32_e32 v69, 0xc00, v41
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_ashrrev_i32_e32 v70, 31, v69
	v_add_co_u32 v71, vcc_lo, s4, v49
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_ci_u32_e32 v72, vcc_lo, s5, v50, vcc_lo
	v_add_co_u32 v73, vcc_lo, s4, v51
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_add_co_ci_u32_e32 v74, vcc_lo, s5, v52, vcc_lo
	v_add_co_u32 v75, vcc_lo, s4, v53
	v_add_co_ci_u32_e32 v76, vcc_lo, s5, v54, vcc_lo
	v_add_co_u32 v77, vcc_lo, s4, v55
	v_add_co_ci_u32_e32 v78, vcc_lo, s5, v56, vcc_lo
	v_add_co_u32 v79, vcc_lo, s4, v57
	s_clause 0x3
	global_load_ushort v96, v[71:72], off
	global_load_ushort v97, v[73:74], off
	global_load_ushort v98, v[75:76], off
	global_load_ushort v99, v[77:78], off
	v_add_co_ci_u32_e32 v80, vcc_lo, s5, v58, vcc_lo
	v_add_co_u32 v81, vcc_lo, s4, v59
	v_add_nc_u32_e32 v77, 0x1000, v41
	v_add_co_ci_u32_e32 v82, vcc_lo, s5, v60, vcc_lo
	v_add_co_u32 v83, vcc_lo, s4, v61
	v_add_co_ci_u32_e32 v84, vcc_lo, s5, v62, vcc_lo
	v_add_co_u32 v85, vcc_lo, s4, v63
	v_add_co_ci_u32_e32 v86, vcc_lo, s5, v64, vcc_lo
	v_add_co_u32 v71, vcc_lo, s4, v65
	s_clause 0x2
	global_load_ushort v100, v[79:80], off
	global_load_ushort v101, v[81:82], off
	global_load_dword v102, v[83:84], off
	v_add_co_ci_u32_e32 v72, vcc_lo, s5, v66, vcc_lo
	v_add_co_u32 v73, vcc_lo, s4, v67
	v_add_co_ci_u32_e32 v74, vcc_lo, s5, v68, vcc_lo
	v_add_co_u32 v75, vcc_lo, s4, v69
	v_add_co_ci_u32_e32 v76, vcc_lo, s5, v70, vcc_lo
	v_add_co_u32 v43, vcc_lo, s2, v43
	s_clause 0x3
	global_load_dword v103, v[85:86], off
	global_load_dword v104, v[71:72], off
	global_load_dword v105, v[73:74], off
	global_load_dword v106, v[75:76], off
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v44, vcc_lo
	v_add_co_u32 v45, vcc_lo, s2, v45
	v_add_nc_u32_e32 v71, 0xc02, v41
	v_add_co_ci_u32_e32 v46, vcc_lo, s3, v46, vcc_lo
	v_add_co_u32 v47, vcc_lo, s2, v47
	v_add_nc_u32_e32 v73, 0xe00, v41
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v48, vcc_lo
	v_add_co_u32 v49, vcc_lo, s2, v49
	v_ashrrev_i32_e32 v72, 31, v71
	v_add_co_ci_u32_e32 v50, vcc_lo, s3, v50, vcc_lo
	v_add_co_u32 v51, vcc_lo, s2, v51
	v_add_nc_u32_e32 v75, 0xe02, v41
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v52, vcc_lo
	v_add_co_u32 v53, vcc_lo, s2, v53
	v_lshlrev_b64 v[71:72], 1, v[71:72]
	v_add_co_ci_u32_e32 v54, vcc_lo, s3, v54, vcc_lo
	v_add_co_u32 v55, vcc_lo, s2, v55
	v_ashrrev_i32_e32 v74, 31, v73
	v_add_co_ci_u32_e32 v56, vcc_lo, s3, v56, vcc_lo
	v_add_co_u32 v57, vcc_lo, s2, v57
	v_ashrrev_i32_e32 v76, 31, v75
	v_add_co_ci_u32_e32 v58, vcc_lo, s3, v58, vcc_lo
	v_add_co_u32 v59, vcc_lo, s2, v59
	v_lshlrev_b64 v[73:74], 1, v[73:74]
	v_add_co_ci_u32_e32 v60, vcc_lo, s3, v60, vcc_lo
	v_add_co_u32 v79, vcc_lo, s4, v71
	v_lshlrev_b64 v[75:76], 1, v[75:76]
	v_add_co_ci_u32_e32 v80, vcc_lo, s5, v72, vcc_lo
	v_add_co_u32 v61, vcc_lo, s2, v61
	v_add_nc_u32_e32 v85, 0x1002, v41
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v62, vcc_lo
	v_add_co_u32 v81, vcc_lo, s4, v73
	v_add_co_ci_u32_e32 v82, vcc_lo, s5, v74, vcc_lo
	v_add_co_u32 v83, vcc_lo, s4, v75
	v_add_co_ci_u32_e32 v84, vcc_lo, s5, v76, vcc_lo
	v_add_co_u32 v63, vcc_lo, s2, v63
	v_add_co_ci_u32_e32 v64, vcc_lo, s3, v64, vcc_lo
	v_add_co_u32 v65, vcc_lo, s2, v65
	v_add_co_ci_u32_e32 v66, vcc_lo, s3, v66, vcc_lo
	v_add_co_u32 v67, vcc_lo, s2, v67
	v_add_co_ci_u32_e32 v68, vcc_lo, s3, v68, vcc_lo
	v_add_co_u32 v69, vcc_lo, s2, v69
	v_add_co_ci_u32_e32 v70, vcc_lo, s3, v70, vcc_lo
	v_add_co_u32 v71, vcc_lo, s2, v71
	v_add_co_ci_u32_e32 v72, vcc_lo, s3, v72, vcc_lo
	v_add_co_u32 v73, vcc_lo, s2, v73
	v_add_co_ci_u32_e32 v74, vcc_lo, s3, v74, vcc_lo
	v_add_co_u32 v75, vcc_lo, s2, v75
	v_add_co_ci_u32_e32 v76, vcc_lo, s3, v76, vcc_lo
	s_waitcnt vmcnt(20)
	v_pk_add_f16 v39, v42, v39
	v_pk_add_f16 v38, v42, v38
	v_pk_add_f16 v33, v42, v33
	v_pk_add_f16 v29, v42, v29
	v_pk_add_f16 v24, v42, v24
	v_pk_add_f16 v23, v42, v23
	v_pk_add_f16 v0, v42, v0
	s_waitcnt vmcnt(19)
	v_pk_add_f16 v78, v40, v37
	s_waitcnt vmcnt(18)
	v_pk_add_f16 v39, v87, v39
	s_waitcnt vmcnt(16)
	v_add_f16_e32 v86, v89, v38
	v_pk_add_f16 v36, v40, v36
	s_waitcnt vmcnt(15)
	v_add_f16_sdwa v38, v90, v38 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v78, v88, v78
	v_pk_max_f16 v39, v39, 0
	v_max_f16_e32 v86, 0, v86
	s_waitcnt vmcnt(14)
	v_add_f16_e32 v88, v91, v36
	v_max_f16_e32 v38, 0, v38
	v_pk_max_f16 v78, v78, 0
	global_store_dword v[43:44], v39, off
	s_waitcnt vmcnt(13)
	v_add_f16_sdwa v36, v92, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_max_f16_e32 v39, 0, v88
	v_add_nc_u32_e32 v37, 0x1200, v41
	global_store_dword v[43:44], v78, off offset:4
	global_store_short v[43:44], v86, off offset:1024
	v_pk_add_f16 v78, v42, v35
	global_store_short v[43:44], v38, off offset:1026
	global_store_short v[43:44], v39, off offset:1028
	v_ashrrev_i32_e32 v86, 31, v85
	v_add_nc_u32_e32 v87, 0x1202, v41
	v_ashrrev_i32_e32 v38, 31, v37
	s_waitcnt vmcnt(12)
	v_add_f16_e32 v39, v93, v78
	s_waitcnt vmcnt(11)
	v_add_f16_sdwa v94, v94, v78 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_ashrrev_i32_e32 v78, 31, v77
	v_max_f16_e32 v36, 0, v36
	v_add_nc_u32_e32 v89, 0x1400, v41
	v_max_f16_e32 v39, 0, v39
	v_lshlrev_b64 v[85:86], 1, v[85:86]
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_ashrrev_i32_e32 v88, 31, v87
	v_max_f16_e32 v94, 0, v94
	v_add_nc_u32_e32 v91, 0x1402, v41
	global_store_short v[43:44], v36, off offset:1030
	global_store_short v[45:46], v39, off
	v_add_co_u32 v45, vcc_lo, s4, v77
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_ashrrev_i32_e32 v90, 31, v89
	v_add_nc_u32_e32 v35, 0x1600, v41
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v78, vcc_lo
	global_store_short v[47:48], v94, off
	v_add_co_u32 v47, vcc_lo, s4, v85
	v_lshlrev_b64 v[87:88], 1, v[87:88]
	v_ashrrev_i32_e32 v92, 31, v91
	v_add_co_ci_u32_e32 v48, vcc_lo, s5, v86, vcc_lo
	v_add_co_u32 v94, vcc_lo, s4, v37
	v_lshlrev_b64 v[89:90], 1, v[89:90]
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_nc_u32_e32 v43, 0x1602, v41
	v_add_co_ci_u32_e32 v95, vcc_lo, s5, v38, vcc_lo
	s_clause 0x1
	global_load_dword v39, v[79:80], off
	global_load_dword v81, v[81:82], off
	v_add_co_u32 v79, vcc_lo, s4, v87
	v_lshlrev_b64 v[91:92], 1, v[91:92]
	v_add_co_ci_u32_e32 v80, vcc_lo, s5, v88, vcc_lo
	s_clause 0x1
	global_load_dword v82, v[83:84], off
	global_load_dword v83, v[45:46], off
	v_add_co_u32 v45, vcc_lo, s4, v89
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v90, vcc_lo
	s_clause 0x1
	global_load_dword v84, v[47:48], off
	global_load_dword v95, v[94:95], off
	v_add_co_u32 v47, vcc_lo, s4, v91
	v_add_nc_u32_e32 v93, 0x1800, v41
	v_add_co_ci_u32_e32 v48, vcc_lo, s5, v92, vcc_lo
	s_clause 0x1
	global_load_dword v107, v[79:80], off
	global_load_dword v108, v[45:46], off
	v_add_co_u32 v45, vcc_lo, s4, v35
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v36, vcc_lo
	v_ashrrev_i32_e32 v94, 31, v93
	v_pk_add_f16 v32, v40, v32
	v_pk_add_f16 v34, v40, v34
	s_clause 0x1
	global_load_dword v109, v[47:48], off
	global_load_dword v110, v[45:46], off
	v_add_co_u32 v45, vcc_lo, s4, v43
	v_lshlrev_b64 v[47:48], 1, v[93:94]
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v44, vcc_lo
	s_waitcnt vmcnt(18)
	v_add_f16_e32 v80, v98, v33
	v_add_f16_sdwa v79, v97, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt vmcnt(15)
	v_add_f16_sdwa v98, v101, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v97, v100, v34
	global_load_dword v93, v[45:46], off
	v_add_co_u32 v45, vcc_lo, s4, v47
	v_pk_add_f16 v30, v40, v30
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v48, vcc_lo
	v_pk_add_f16 v28, v40, v28
	s_waitcnt vmcnt(13)
	v_pk_add_f16 v101, v104, v29
	v_pk_add_f16 v26, v40, v26
	v_pk_add_f16 v100, v103, v30
	global_load_dword v94, v[45:46], off
	v_pk_add_f16 v45, v42, v31
	v_add_f16_e32 v46, v96, v32
	v_add_f16_sdwa v96, v99, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_nc_u32_e32 v31, 0x1802, v41
	v_add_nc_u32_e32 v33, 0x1a00, v41
	v_pk_add_f16 v99, v42, v27
	v_pk_add_f16 v45, v102, v45
	s_waitcnt vmcnt(13)
	v_pk_add_f16 v28, v105, v28
	v_ashrrev_i32_e32 v32, 31, v31
	v_ashrrev_i32_e32 v34, 31, v33
	v_add_nc_u32_e32 v27, 0x1a02, v41
	v_pk_max_f16 v45, v45, 0
	v_pk_max_f16 v28, v28, 0
	v_lshlrev_b64 v[29:30], 1, v[31:32]
	v_lshlrev_b64 v[31:32], 1, v[33:34]
	s_waitcnt vmcnt(12)
	v_pk_add_f16 v33, v106, v99
	v_max_f16_e32 v34, 0, v46
	v_max_f16_e32 v46, 0, v79
	v_max_f16_e32 v79, 0, v80
	v_max_f16_e32 v80, 0, v96
	v_max_f16_e32 v96, 0, v97
	v_pk_max_f16 v33, v33, 0
	v_max_f16_e32 v97, 0, v98
	v_pk_max_f16 v98, v100, 0
	v_pk_max_f16 v99, v101, 0
	global_store_short v[49:50], v34, off
	global_store_short v[51:52], v46, off
	global_store_short v[53:54], v79, off
	global_store_short v[55:56], v80, off
	global_store_short v[57:58], v96, off
	global_store_short v[59:60], v97, off
	global_store_dword v[61:62], v45, off
	global_store_dword v[63:64], v98, off
	global_store_dword v[65:66], v99, off
	global_store_dword v[67:68], v28, off
	global_store_dword v[69:70], v33, off
	v_add_nc_u32_e32 v33, 0x1c00, v41
	v_ashrrev_i32_e32 v28, 31, v27
	v_add_nc_u32_e32 v49, 0x1c02, v41
	v_add_nc_u32_e32 v53, 0x1e00, v41
	v_add_co_u32 v45, vcc_lo, s4, v29
	v_ashrrev_i32_e32 v34, 31, v33
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v30, vcc_lo
	v_add_nc_u32_e32 v57, 0x1e02, v41
	v_add_co_u32 v51, vcc_lo, s4, v31
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v52, vcc_lo, s5, v32, vcc_lo
	v_add_co_u32 v55, vcc_lo, s4, v27
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_ashrrev_i32_e32 v58, 31, v57
	v_add_co_ci_u32_e32 v56, vcc_lo, s5, v28, vcc_lo
	v_add_co_u32 v59, vcc_lo, s4, v33
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_add_co_ci_u32_e32 v60, vcc_lo, s5, v34, vcc_lo
	v_add_co_u32 v61, vcc_lo, s4, v49
	v_add_nc_u32_e32 v63, 0x2000, v41
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	v_add_co_ci_u32_e32 v62, vcc_lo, s5, v50, vcc_lo
	v_add_co_u32 v65, vcc_lo, s4, v53
	s_clause 0x1
	global_load_dword v96, v[45:46], off
	global_load_dword v97, v[51:52], off
	v_add_nc_u32_e32 v45, 0x2002, v41
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_co_ci_u32_e32 v66, vcc_lo, s5, v54, vcc_lo
	v_add_co_u32 v51, vcc_lo, s4, v57
	v_add_nc_u32_e32 v67, 0x2200, v41
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v52, vcc_lo, s5, v58, vcc_lo
	s_clause 0x4
	global_load_dword v98, v[55:56], off
	global_load_dword v99, v[59:60], off
	global_load_dword v100, v[61:62], off
	global_load_dword v101, v[65:66], off
	global_load_dword v102, v[51:52], off
	v_add_nc_u32_e32 v51, 0x2202, v41
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_add_nc_u32_e32 v65, 0x2400, v41
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_nc_u32_e32 v69, 0x2402, v41
	v_add_co_u32 v55, vcc_lo, s4, v63
	v_lshlrev_b64 v[59:60], 1, v[67:68]
	v_add_co_ci_u32_e32 v56, vcc_lo, s5, v64, vcc_lo
	v_add_co_u32 v61, vcc_lo, s4, v45
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_co_ci_u32_e32 v62, vcc_lo, s5, v46, vcc_lo
	v_add_co_u32 v67, vcc_lo, s4, v59
	v_ashrrev_i32_e32 v70, 31, v69
	v_add_co_ci_u32_e32 v68, vcc_lo, s5, v60, vcc_lo
	v_add_co_u32 v79, vcc_lo, s4, v51
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_add_co_ci_u32_e32 v80, vcc_lo, s5, v52, vcc_lo
	v_pk_add_f16 v22, v40, v22
	s_clause 0x3
	global_load_dword v103, v[55:56], off
	global_load_dword v104, v[61:62], off
	global_load_dword v105, v[67:68], off
	global_load_dword v79, v[79:80], off
	v_lshlrev_b64 v[55:56], 1, v[69:70]
	v_pk_add_f16 v20, v40, v20
	v_add_co_u32 v61, vcc_lo, s4, v65
	v_pk_add_f16 v18, v40, v18
	v_add_co_ci_u32_e32 v62, vcc_lo, s5, v66, vcc_lo
	v_pk_add_f16 v16, v40, v16
	v_add_co_u32 v67, vcc_lo, s4, v55
	v_pk_add_f16 v12, v40, v12
	v_add_co_ci_u32_e32 v68, vcc_lo, s5, v56, vcc_lo
	v_pk_add_f16 v10, v40, v10
	v_pk_add_f16 v8, v40, v8
	v_pk_add_f16 v6, v40, v6
	s_clause 0x1
	global_load_dword v80, v[61:62], off
	global_load_dword v106, v[67:68], off
	v_add_nc_u32_e32 v61, 0x2600, v41
	v_pk_add_f16 v4, v40, v4
	v_pk_add_f16 v2, v40, v2
	v_ashrrev_i32_e32 v62, 31, v61
	v_lshlrev_b64 v[61:62], 1, v[61:62]
	v_add_co_u32 v67, vcc_lo, s4, v61
	v_add_co_ci_u32_e32 v68, vcc_lo, s5, v62, vcc_lo
	global_load_dword v111, v[67:68], off
	v_add_nc_u32_e32 v67, 0x2602, v41
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v69, vcc_lo, s4, v67
	v_add_co_ci_u32_e32 v70, vcc_lo, s5, v68, vcc_lo
	global_load_dword v41, v[69:70], off
	s_waitcnt vmcnt(26)
	v_pk_add_f16 v26, v39, v26
	s_waitcnt vmcnt(25)
	v_pk_add_f16 v39, v81, v24
	v_pk_add_f16 v24, v40, v25
	s_waitcnt vmcnt(23)
	v_pk_add_f16 v69, v83, v23
	v_pk_max_f16 v26, v26, 0
	v_pk_add_f16 v25, v82, v24
	v_add_co_u32 v23, vcc_lo, s2, v77
	v_pk_max_f16 v39, v39, 0
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v78, vcc_lo
	v_pk_max_f16 v69, v69, 0
	v_pk_max_f16 v25, v25, 0
	global_store_dword v[71:72], v26, off
	global_store_dword v[73:74], v39, off
	global_store_dword v[75:76], v25, off
	global_store_dword v[23:24], v69, off
	v_pk_add_f16 v24, v42, v21
	s_waitcnt vmcnt(22)
	v_pk_add_f16 v23, v84, v22
	v_add_co_u32 v21, vcc_lo, s2, v85
	v_pk_add_f16 v26, v42, v19
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v86, vcc_lo
	s_waitcnt vmcnt(21)
	v_pk_add_f16 v25, v95, v24
	v_pk_max_f16 v39, v23, 0
	v_add_co_u32 v23, vcc_lo, s2, v37
	s_waitcnt vmcnt(19)
	v_pk_add_f16 v69, v108, v26
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v38, vcc_lo
	v_pk_max_f16 v37, v25, 0
	v_pk_add_f16 v25, v107, v20
	v_add_co_u32 v19, vcc_lo, s2, v87
	v_pk_max_f16 v69, v69, 0
	v_add_co_ci_u32_e32 v20, vcc_lo, s3, v88, vcc_lo
	v_pk_max_f16 v38, v25, 0
	v_add_co_u32 v25, vcc_lo, s2, v89
	v_add_co_ci_u32_e32 v26, vcc_lo, s3, v90, vcc_lo
	global_store_dword v[21:22], v39, off
	global_store_dword v[23:24], v37, off
	global_store_dword v[19:20], v38, off
	global_store_dword v[25:26], v69, off
	v_pk_add_f16 v20, v42, v17
	s_waitcnt vmcnt(18)
	v_pk_add_f16 v19, v109, v18
	v_add_co_u32 v17, vcc_lo, s2, v91
	v_pk_add_f16 v22, v42, v15
	v_add_co_ci_u32_e32 v18, vcc_lo, s3, v92, vcc_lo
	s_waitcnt vmcnt(17)
	v_pk_add_f16 v21, v110, v20
	v_pk_max_f16 v23, v19, 0
	v_add_co_u32 v19, vcc_lo, s2, v35
	s_waitcnt vmcnt(15)
	v_pk_add_f16 v26, v94, v22
	v_add_co_ci_u32_e32 v20, vcc_lo, s3, v36, vcc_lo
	v_pk_max_f16 v24, v21, 0
	v_pk_add_f16 v21, v93, v16
	v_add_co_u32 v15, vcc_lo, s2, v43
	v_pk_max_f16 v26, v26, 0
	global_store_dword v[17:18], v23, off
	global_store_dword v[19:20], v24, off
	v_pk_add_f16 v17, v40, v14
	v_pk_add_f16 v18, v42, v13
	v_add_co_ci_u32_e32 v16, vcc_lo, s3, v44, vcc_lo
	v_pk_max_f16 v25, v21, 0
	v_add_co_u32 v21, vcc_lo, s2, v47
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v48, vcc_lo
	v_add_co_u32 v13, vcc_lo, s2, v29
	v_add_co_ci_u32_e32 v14, vcc_lo, s3, v30, vcc_lo
	s_waitcnt vmcnt(14)
	v_pk_add_f16 v19, v96, v17
	s_waitcnt vmcnt(13)
	v_pk_add_f16 v20, v97, v18
	v_add_co_u32 v17, vcc_lo, s2, v31
	v_add_co_ci_u32_e32 v18, vcc_lo, s3, v32, vcc_lo
	v_pk_max_f16 v19, v19, 0
	v_pk_max_f16 v20, v20, 0
	global_store_dword v[15:16], v25, off
	global_store_dword v[21:22], v26, off
	global_store_dword v[13:14], v19, off
	global_store_dword v[17:18], v20, off
	v_pk_add_f16 v14, v42, v11
	s_waitcnt vmcnt(12)
	v_pk_add_f16 v13, v98, v12
	v_add_co_u32 v11, vcc_lo, s2, v27
	v_pk_add_f16 v16, v42, v9
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v28, vcc_lo
	s_waitcnt vmcnt(11)
	v_pk_add_f16 v15, v99, v14
	v_pk_max_f16 v17, v13, 0
	v_add_co_u32 v13, vcc_lo, s2, v33
	s_waitcnt vmcnt(9)
	v_pk_add_f16 v20, v101, v16
	v_add_co_ci_u32_e32 v14, vcc_lo, s3, v34, vcc_lo
	v_pk_max_f16 v18, v15, 0
	v_pk_add_f16 v15, v100, v10
	v_add_co_u32 v9, vcc_lo, s2, v49
	v_pk_max_f16 v20, v20, 0
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v50, vcc_lo
	v_pk_max_f16 v19, v15, 0
	v_add_co_u32 v15, vcc_lo, s2, v53
	v_add_co_ci_u32_e32 v16, vcc_lo, s3, v54, vcc_lo
	global_store_dword v[11:12], v17, off
	global_store_dword v[13:14], v18, off
	global_store_dword v[9:10], v19, off
	global_store_dword v[15:16], v20, off
	v_pk_add_f16 v10, v42, v7
	s_waitcnt vmcnt(8)
	v_pk_add_f16 v9, v102, v8
	v_add_co_u32 v7, vcc_lo, s2, v57
	v_pk_add_f16 v12, v42, v5
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v58, vcc_lo
	s_waitcnt vmcnt(7)
	v_pk_add_f16 v11, v103, v10
	v_pk_max_f16 v13, v9, 0
	v_add_co_u32 v9, vcc_lo, s2, v63
	s_waitcnt vmcnt(5)
	v_pk_add_f16 v16, v105, v12
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v64, vcc_lo
	v_pk_max_f16 v14, v11, 0
	v_pk_add_f16 v11, v104, v6
	v_add_co_u32 v5, vcc_lo, s2, v45
	v_pk_max_f16 v16, v16, 0
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v46, vcc_lo
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v2, v106, v2
	v_pk_max_f16 v15, v11, 0
	v_add_co_u32 v11, vcc_lo, s2, v59
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v60, vcc_lo
	v_pk_max_f16 v2, v2, 0
	global_store_dword v[7:8], v13, off
	global_store_dword v[9:10], v14, off
	global_store_dword v[5:6], v15, off
	global_store_dword v[11:12], v16, off
	v_pk_add_f16 v6, v42, v3
	v_pk_add_f16 v5, v79, v4
	v_add_co_u32 v3, vcc_lo, s2, v51
	v_pk_add_f16 v10, v40, v1
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v52, vcc_lo
	v_pk_add_f16 v7, v80, v6
	v_pk_max_f16 v11, v5, 0
	v_add_co_u32 v5, vcc_lo, s2, v65
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v66, vcc_lo
	v_pk_max_f16 v12, v7, 0
	v_add_co_u32 v7, vcc_lo, s2, v55
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v56, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v9, v111, v0
	v_add_co_u32 v0, vcc_lo, s2, v61
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v62, vcc_lo
	v_pk_max_f16 v13, v9, 0
	v_add_co_u32 v9, vcc_lo, s2, v67
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v14, v41, v10
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v68, vcc_lo
	v_pk_max_f16 v14, v14, 0
	global_store_dword v[3:4], v11, off
	global_store_dword v[5:6], v12, off
	global_store_dword v[7:8], v2, off
	global_store_dword v[0:1], v13, off
	global_store_dword v[9:10], v14, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0
		.amdhsa_group_segment_fixed_size 29184
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 40
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 112
		.amdhsa_next_free_sgpr 28
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end48:
	.size	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0, .Lfunc_end48-tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[8:9], s[4:5], 0x18
	s_load_dwordx2 s[12:13], s[4:5], 0x0
	s_mul_i32 s0, s6, 0xa00
	s_load_dwordx2 s[4:5], s[4:5], 0x20
	v_lshl_add_u32 v1, v0, 8, s0
	s_movk_i32 s1, 0x2000
	v_lshlrev_b32_e32 v31, 4, v0
	v_mul_i32_i24_e32 v3, -6, v0
	v_cmp_gt_i32_e32 vcc_lo, 10, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshl_or_b32 v32, v0, 3, s1
	v_lshlrev_b32_e32 v42, 1, v0
	v_lshl_add_u32 v43, v3, 1, v31
	v_mov_b32_e32 v3, 0
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v5, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v44, s0, s10, v31
	v_mov_b32_e32 v6, 0
	v_add_co_ci_u32_e64 v45, s0, s11, 0, s0
	v_add_co_u32 v46, s0, s12, v0
	v_mov_b32_e32 v0, 0
	v_add_co_ci_u32_e64 v47, s0, s13, v1, s0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v40, 0
	v_mov_b32_e32 v41, 0
	s_mov_b64 s[10:11], 0
	s_branch BB49_2
BB49_1:
	s_or_b32 exec_lo, exec_lo, s7
	v_add_co_u32 v56, s0, v44, 0x1000
	v_mov_b32_e32 v64, 0
	v_add_co_ci_u32_e64 v57, s0, 0, v45, s0
	v_add_co_u32 v60, s0, 0x1800, v44
	s_add_u32 s10, s10, 8
	v_add_co_ci_u32_e64 v61, s0, 0, v45, s0
	s_addc_u32 s11, s11, 0
	s_clause 0x3
	global_load_dwordx4 v[48:51], v[44:45], off
	global_load_dwordx4 v[52:55], v[56:57], off offset:-2048
	global_load_dwordx4 v[56:59], v[56:57], off
	global_load_dwordx4 v[60:63], v[60:61], off
	v_add_co_u32 v44, s0, v44, s1
	s_cmpk_eq_i32 s10, 0x200
	v_add_co_ci_u32_e64 v45, s0, 0, v45, s0
	s_waitcnt vmcnt(3)
	ds_write_b128 v31, v[48:51]
	s_waitcnt vmcnt(2)
	ds_write_b128 v31, v[52:55] offset:2048
	s_waitcnt vmcnt(1)
	ds_write_b128 v31, v[56:59] offset:4096
	s_waitcnt vmcnt(0)
	ds_write_b128 v31, v[60:63] offset:6144
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read2st64_b32 v[68:69], v43 offset1:2
	ds_read_b128 v[48:51], v64 offset:8192
	ds_read_b128 v[52:55], v64 offset:8208
	ds_read_b128 v[56:59], v64 offset:8224
	ds_read_b128 v[60:63], v64 offset:8240
	ds_read2st64_b32 v[70:71], v43 offset0:4 offset1:6
	ds_read2st64_b32 v[72:73], v43 offset0:8 offset1:10
	ds_read_b128 v[64:67], v64 offset:8256
	ds_read2st64_b32 v[74:75], v43 offset0:12 offset1:14
	ds_read2st64_b32 v[76:77], v43 offset0:16 offset1:18
	ds_read2st64_b32 v[78:79], v43 offset0:20 offset1:22
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v41, v48, v68, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v48, v69, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v50, v68, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v50, v69, v36 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v34, v52, v68, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v52, v69, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v54, v68, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v54, v69, v28 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v26, v56, v68, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v56, v69, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v58, v68, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v58, v69, v18 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v17, v60, v68, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v60, v69, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v62, v68, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v62, v69, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v7, v64, v68, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v64, v69, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v66, v68, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v66, v69, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v48, v70, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v48, v71, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v50, v70, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v50, v71, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v52, v70, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v52, v71, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v54, v70, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v54, v71, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v56, v70, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v56, v71, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v58, v70, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v58, v71, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v60, v70, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v60, v71, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v62, v70, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v62, v71, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v64, v70, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v64, v71, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v66, v70, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v66, v71, v0 op_sel_hi:[0,1,1]
	ds_read2st64_b32 v[68:69], v43 offset0:24 offset1:26
	ds_read2st64_b32 v[70:71], v43 offset0:28 offset1:30
	v_pk_fma_f16 v41, v48, v72, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v48, v73, v40 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v39, v48, v74, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v48, v75, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v50, v72, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v50, v73, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v50, v74, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v50, v75, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v52, v72, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v52, v73, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v52, v74, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v52, v75, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v54, v72, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v54, v73, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v54, v74, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v54, v75, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v56, v72, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v56, v73, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v58, v72, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v58, v73, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v60, v72, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v60, v73, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v62, v72, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v62, v73, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v64, v72, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v64, v73, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v66, v72, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v66, v73, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v56, v74, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v56, v75, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v58, v74, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v58, v75, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v60, v74, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v60, v75, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v62, v74, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v62, v75, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v64, v74, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v64, v75, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v66, v74, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v66, v75, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v41, v49, v76, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v49, v77, v40 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v39, v49, v78, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v49, v79, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v51, v76, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v51, v77, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v51, v78, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v51, v79, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v53, v76, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v53, v77, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v53, v78, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v53, v79, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v55, v76, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v55, v77, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v55, v78, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v55, v79, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v57, v76, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v57, v77, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v59, v76, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v59, v77, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v61, v76, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v61, v77, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v63, v76, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v63, v77, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v65, v76, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v65, v77, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v67, v76, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v67, v77, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v57, v78, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v57, v79, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v59, v78, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v59, v79, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v61, v78, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v61, v79, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v63, v78, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v63, v79, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v65, v78, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v65, v79, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v67, v78, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v67, v79, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v41, v49, v68, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v49, v69, v40 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v39, v49, v70, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v49, v71, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v51, v68, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v51, v69, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v51, v70, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v51, v71, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v53, v68, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v53, v69, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v53, v70, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v53, v71, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v55, v68, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v55, v69, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v55, v70, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v55, v71, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v57, v68, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v57, v69, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v57, v70, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v57, v71, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v59, v68, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v59, v69, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v59, v70, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v59, v71, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v61, v68, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v61, v69, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v61, v70, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v61, v71, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v63, v68, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v63, v69, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v63, v70, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v63, v71, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v65, v68, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v65, v69, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v65, v70, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v65, v71, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v67, v68, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v67, v69, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v67, v70, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v67, v71, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB49_4
BB49_2:
	s_barrier 
	s_and_saveexec_b32 s7, vcc_lo
	s_cbranch_execz BB49_1
	v_add_co_u32 v48, s0, v46, s10
	v_add_co_ci_u32_e64 v49, s0, s11, v47, s0
	global_load_dwordx2 v[48:49], v[48:49], off
	s_waitcnt vmcnt(0)
	ds_write_b64 v32, v[48:49]
	s_branch BB49_1
BB49_4:
	s_mulk_i32 s6, 0x2800
	v_lshlrev_b32_e32 v68, 1, v42
	v_or_b32_e32 v31, s6, v42
	global_load_ushort v69, v68, s[8:9]
	v_ashrrev_i32_e32 v32, 31, v31
	v_or_b32_e32 v46, 1, v31
	v_add_nc_u32_e32 v48, 0x400, v31
	v_add_nc_u32_e32 v50, 0x500, v31
	v_add_nc_u32_e32 v52, 0x600, v31
	v_lshlrev_b64 v[42:43], 1, v[31:32]
	v_ashrrev_i32_e32 v47, 31, v46
	v_ashrrev_i32_e32 v49, 31, v48
	v_ashrrev_i32_e32 v51, 31, v50
	v_add_nc_u32_e32 v54, 0x700, v31
	v_ashrrev_i32_e32 v53, 31, v52
	v_add_co_u32 v44, vcc_lo, s4, v42
	v_lshlrev_b64 v[46:47], 1, v[46:47]
	v_add_co_ci_u32_e32 v45, vcc_lo, s5, v43, vcc_lo
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_lshlrev_b64 v[48:49], 1, v[48:49]
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_nc_u32_e32 v56, 0x800, v31
	global_load_ushort v70, v[44:45], off
	v_add_co_u32 v60, vcc_lo, s4, v46
	v_lshlrev_b64 v[50:51], 1, v[50:51]
	v_add_co_ci_u32_e32 v61, vcc_lo, s5, v47, vcc_lo
	v_add_co_u32 v46, vcc_lo, s2, v46
	v_ashrrev_i32_e32 v55, 31, v54
	v_add_co_ci_u32_e32 v47, vcc_lo, s3, v47, vcc_lo
	v_add_nc_u32_e32 v58, 0x900, v31
	v_add_co_u32 v62, vcc_lo, s4, v48
	v_lshlrev_b64 v[52:53], 1, v[52:53]
	v_ashrrev_i32_e32 v57, 31, v56
	v_add_co_ci_u32_e32 v63, vcc_lo, s5, v49, vcc_lo
	v_add_co_u32 v64, vcc_lo, s4, v50
	v_lshlrev_b64 v[54:55], 1, v[54:55]
	v_ashrrev_i32_e32 v59, 31, v58
	v_add_co_ci_u32_e32 v65, vcc_lo, s5, v51, vcc_lo
	s_clause 0x2
	global_load_ushort v71, v[44:45], off offset:512
	global_load_ushort v72, v[44:45], off offset:1024
	global_load_dword v73, v[44:45], off offset:1536
	v_add_co_u32 v44, vcc_lo, s4, v52
	v_lshlrev_b64 v[56:57], 1, v[56:57]
	v_add_co_ci_u32_e32 v45, vcc_lo, s5, v53, vcc_lo
	v_add_co_u32 v66, vcc_lo, s4, v54
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	v_add_co_ci_u32_e32 v67, vcc_lo, s5, v55, vcc_lo
	s_clause 0x3
	global_load_ushort v74, v[60:61], off
	global_load_ushort v75, v[60:61], off offset:512
	global_load_ushort v76, v[60:61], off offset:1024
	global_load_dword v63, v[62:63], off
	v_add_co_u32 v60, vcc_lo, s4, v56
	s_clause 0x1
	global_load_dword v64, v[64:65], off
	global_load_dword v77, v[44:45], off
	v_add_co_ci_u32_e32 v61, vcc_lo, s5, v57, vcc_lo
	v_add_co_u32 v44, vcc_lo, s4, v58
	v_add_co_ci_u32_e32 v45, vcc_lo, s5, v59, vcc_lo
	global_load_dword v78, v[66:67], off
	global_load_ushort v62, v68, s[8:9] offset:512
	global_load_dword v79, v[60:61], off
	global_load_dword v32, v68, s[8:9] offset:1024
	global_load_dword v80, v[44:45], off
	global_load_dword v81, v68, s[8:9]
	v_add_co_u32 v48, vcc_lo, s2, v48
	v_add_co_ci_u32_e32 v49, vcc_lo, s3, v49, vcc_lo
	v_add_co_u32 v50, vcc_lo, s2, v50
	v_add_co_ci_u32_e32 v51, vcc_lo, s3, v51, vcc_lo
	v_add_co_u32 v52, vcc_lo, s2, v52
	v_add_co_ci_u32_e32 v53, vcc_lo, s3, v53, vcc_lo
	v_add_co_u32 v54, vcc_lo, s2, v54
	v_add_co_ci_u32_e32 v55, vcc_lo, s3, v55, vcc_lo
	s_waitcnt vmcnt(16)
	v_add_f16_e32 v44, v69, v41
	s_waitcnt vmcnt(15)
	v_add_f16_e32 v44, v70, v44
	s_clause 0x1
	global_load_dword v70, v68, s[8:9] offset:1536
	global_load_dword v82, v68, s[8:9] offset:512
	v_max_f16_e32 v44, 0, v44
	global_store_short v[42:43], v44, off
	v_add_nc_u32_e32 v44, 0xc00, v31
	s_waitcnt vmcnt(6)
	v_add_f16_e32 v45, v62, v40
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v39, v32, v39
	v_pk_add_f16 v35, v32, v35
	s_waitcnt vmcnt(2)
	v_add_f16_sdwa v41, v81, v41 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:WORD_1
	v_add_f16_e32 v45, v71, v45
	v_pk_add_f16 v34, v81, v34
	v_add_f16_e32 v61, v72, v39
	v_add_f16_sdwa v39, v76, v39 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v41, v74, v41
	v_max_f16_e32 v45, 0, v45
	v_pk_add_f16 v35, v77, v35
	v_max_f16_e32 v61, 0, v61
	v_max_f16_e32 v39, 0, v39
	v_max_f16_e32 v41, 0, v41
	v_pk_add_f16 v34, v79, v34
	global_store_short v[42:43], v45, off offset:512
	global_store_short v[42:43], v61, off offset:1024
	v_ashrrev_i32_e32 v45, 31, v44
	v_pk_max_f16 v35, v35, 0
	v_pk_add_f16 v27, v32, v27
	v_pk_max_f16 v34, v34, 0
	v_pk_add_f16 v29, v81, v29
	v_lshlrev_b64 v[44:45], 1, v[44:45]
	v_pk_add_f16 v23, v32, v23
	v_pk_add_f16 v26, v81, v26
	v_pk_add_f16 v21, v32, v21
	v_pk_add_f16 v19, v81, v19
	v_pk_add_f16 v15, v32, v15
	v_pk_add_f16 v17, v81, v17
	v_pk_add_f16 v13, v32, v13
	v_pk_add_f16 v7, v81, v7
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v38, v70, v38
	s_waitcnt vmcnt(0)
	v_add_f16_sdwa v40, v82, v40 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:WORD_1
	v_pk_add_f16 v33, v70, v33
	v_pk_add_f16 v30, v82, v30
	v_pk_add_f16 v25, v70, v25
	v_pk_add_f16 v60, v73, v38
	v_add_f16_e32 v62, v75, v40
	v_add_nc_u32_e32 v38, 0xa00, v31
	v_add_nc_u32_e32 v40, 0xb00, v31
	v_pk_add_f16 v33, v78, v33
	v_pk_max_f16 v65, v60, 0
	v_add_nc_u32_e32 v60, 0xd00, v31
	v_pk_add_f16 v30, v80, v30
	v_pk_add_f16 v28, v82, v28
	v_pk_max_f16 v33, v33, 0
	global_store_dword v[42:43], v65, off offset:1536
	v_max_f16_e32 v43, 0, v62
	global_store_short v[46:47], v41, off
	v_pk_add_f16 v41, v82, v36
	v_add_nc_u32_e32 v42, 0xe00, v31
	v_add_co_u32 v36, vcc_lo, s2, v56
	global_store_short v[46:47], v43, off offset:512
	global_store_short v[46:47], v39, off offset:1024
	v_pk_add_f16 v39, v81, v37
	v_pk_add_f16 v67, v64, v41
	v_ashrrev_i32_e32 v41, 31, v40
	v_ashrrev_i32_e32 v61, 31, v60
	v_add_nc_u32_e32 v62, 0xf00, v31
	v_pk_add_f16 v66, v63, v39
	v_ashrrev_i32_e32 v39, 31, v38
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_add_co_ci_u32_e32 v37, vcc_lo, s3, v57, vcc_lo
	v_ashrrev_i32_e32 v43, 31, v42
	v_pk_max_f16 v66, v66, 0
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	v_pk_max_f16 v68, v67, 0
	v_add_nc_u32_e32 v46, 0x1000, v31
	v_lshlrev_b64 v[60:61], 1, v[60:61]
	global_store_dword v[48:49], v66, off
	v_ashrrev_i32_e32 v63, 31, v62
	v_add_co_u32 v48, vcc_lo, s4, v38
	v_add_nc_u32_e32 v56, 0x1100, v31
	v_add_co_ci_u32_e32 v49, vcc_lo, s5, v39, vcc_lo
	v_add_co_u32 v66, vcc_lo, s4, v40
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_add_co_ci_u32_e32 v67, vcc_lo, s5, v41, vcc_lo
	global_store_dword v[50:51], v68, off
	v_add_co_u32 v50, vcc_lo, s4, v44
	v_ashrrev_i32_e32 v47, 31, v46
	v_add_co_ci_u32_e32 v51, vcc_lo, s5, v45, vcc_lo
	global_store_dword v[52:53], v35, off
	v_add_co_u32 v52, vcc_lo, s4, v60
	v_lshlrev_b64 v[62:63], 1, v[62:63]
	v_ashrrev_i32_e32 v57, 31, v56
	v_add_co_ci_u32_e32 v53, vcc_lo, s5, v61, vcc_lo
	v_add_nc_u32_e32 v64, 0x1200, v31
	v_add_co_u32 v68, vcc_lo, s4, v42
	v_lshlrev_b64 v[46:47], 1, v[46:47]
	v_add_co_ci_u32_e32 v69, vcc_lo, s5, v43, vcc_lo
	s_clause 0x1
	global_load_dword v71, v[48:49], off
	global_load_dword v72, v[66:67], off
	v_add_co_u32 v48, vcc_lo, s4, v62
	v_lshlrev_b64 v[56:57], 1, v[56:57]
	v_ashrrev_i32_e32 v65, 31, v64
	v_add_co_ci_u32_e32 v49, vcc_lo, s5, v63, vcc_lo
	s_clause 0x1
	global_load_dword v73, v[50:51], off
	global_load_dword v74, v[52:53], off
	v_add_co_u32 v50, vcc_lo, s4, v46
	v_add_nc_u32_e32 v35, 0x1500, v31
	v_add_co_ci_u32_e32 v51, vcc_lo, s5, v47, vcc_lo
	s_clause 0x1
	global_load_dword v68, v[68:69], off
	global_load_dword v69, v[48:49], off
	v_add_co_u32 v48, vcc_lo, s4, v56
	v_lshlrev_b64 v[52:53], 1, v[64:65]
	v_add_co_ci_u32_e32 v49, vcc_lo, s5, v57, vcc_lo
	v_pk_max_f16 v30, v30, 0
	v_pk_add_f16 v22, v70, v22
	v_pk_add_f16 v24, v82, v24
	s_clause 0x1
	global_load_dword v75, v[50:51], off
	global_load_dword v76, v[48:49], off
	v_add_co_u32 v48, vcc_lo, s4, v52
	global_store_dword v[54:55], v33, off
	v_add_co_ci_u32_e32 v49, vcc_lo, s5, v53, vcc_lo
	v_add_nc_u32_e32 v33, 0x1400, v31
	global_store_dword v[36:37], v34, off
	v_ashrrev_i32_e32 v36, 31, v35
	v_pk_add_f16 v20, v70, v20
	global_load_dword v77, v[48:49], off
	v_add_nc_u32_e32 v48, 0x1300, v31
	v_ashrrev_i32_e32 v34, 31, v33
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_pk_add_f16 v14, v70, v14
	v_pk_add_f16 v16, v82, v16
	v_ashrrev_i32_e32 v49, 31, v48
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_pk_add_f16 v10, v70, v10
	v_pk_add_f16 v11, v82, v11
	v_pk_add_f16 v2, v70, v2
	v_lshlrev_b64 v[48:49], 1, v[48:49]
	v_pk_add_f16 v3, v82, v3
	v_add_co_u32 v50, vcc_lo, s4, v48
	v_add_co_ci_u32_e32 v51, vcc_lo, s5, v49, vcc_lo
	global_load_dword v83, v[50:51], off
	v_add_co_u32 v50, vcc_lo, s2, v58
	v_add_co_ci_u32_e32 v51, vcc_lo, s3, v59, vcc_lo
	v_add_co_u32 v54, vcc_lo, s4, v33
	v_add_co_ci_u32_e32 v55, vcc_lo, s5, v34, vcc_lo
	global_store_dword v[50:51], v30, off
	v_add_nc_u32_e32 v50, 0x1600, v31
	global_load_dword v78, v[54:55], off
	v_add_co_u32 v54, vcc_lo, s4, v35
	v_add_co_ci_u32_e32 v55, vcc_lo, s5, v36, vcc_lo
	v_add_co_u32 v37, vcc_lo, s2, v38
	v_ashrrev_i32_e32 v51, 31, v50
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v39, vcc_lo
	v_add_co_u32 v39, vcc_lo, s2, v40
	global_load_dword v79, v[54:55], off
	v_add_co_ci_u32_e32 v40, vcc_lo, s3, v41, vcc_lo
	v_add_co_u32 v44, vcc_lo, s2, v44
	v_lshlrev_b64 v[50:51], 1, v[50:51]
	v_add_co_ci_u32_e32 v45, vcc_lo, s3, v45, vcc_lo
	v_add_co_u32 v54, vcc_lo, s2, v60
	v_add_co_ci_u32_e32 v55, vcc_lo, s3, v61, vcc_lo
	v_add_co_u32 v41, vcc_lo, s2, v42
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v43, vcc_lo
	v_add_co_u32 v58, vcc_lo, s2, v62
	v_add_co_ci_u32_e32 v59, vcc_lo, s3, v63, vcc_lo
	v_add_co_u32 v46, vcc_lo, s2, v46
	v_add_co_ci_u32_e32 v47, vcc_lo, s3, v47, vcc_lo
	v_add_co_u32 v56, vcc_lo, s2, v56
	v_add_co_ci_u32_e32 v57, vcc_lo, s3, v57, vcc_lo
	v_add_co_u32 v52, vcc_lo, s2, v52
	v_add_co_ci_u32_e32 v53, vcc_lo, s3, v53, vcc_lo
	v_add_co_u32 v48, vcc_lo, s2, v48
	v_add_co_ci_u32_e32 v49, vcc_lo, s3, v49, vcc_lo
	v_add_co_u32 v60, vcc_lo, s4, v50
	v_add_co_ci_u32_e32 v61, vcc_lo, s5, v51, vcc_lo
	global_load_dword v80, v[60:61], off
	v_add_nc_u32_e32 v60, 0x1700, v31
	v_ashrrev_i32_e32 v61, 31, v60
	v_lshlrev_b64 v[60:61], 1, v[60:61]
	v_add_co_u32 v62, vcc_lo, s4, v60
	v_add_co_ci_u32_e32 v63, vcc_lo, s5, v61, vcc_lo
	global_load_dword v84, v[62:63], off
	v_add_nc_u32_e32 v62, 0x1800, v31
	v_ashrrev_i32_e32 v63, 31, v62
	v_lshlrev_b64 v[62:63], 1, v[62:63]
	v_add_co_u32 v64, vcc_lo, s4, v62
	v_add_co_ci_u32_e32 v65, vcc_lo, s5, v63, vcc_lo
	global_load_dword v85, v[64:65], off
	v_add_nc_u32_e32 v64, 0x1900, v31
	v_ashrrev_i32_e32 v65, 31, v64
	v_lshlrev_b64 v[64:65], 1, v[64:65]
	v_add_co_u32 v66, vcc_lo, s4, v64
	v_add_co_ci_u32_e32 v67, vcc_lo, s5, v65, vcc_lo
	global_load_dword v66, v[66:67], off
	s_waitcnt vmcnt(15)
	v_pk_add_f16 v27, v71, v27
	s_waitcnt vmcnt(14)
	v_pk_add_f16 v25, v72, v25
	s_waitcnt vmcnt(13)
	v_pk_add_f16 v29, v73, v29
	s_waitcnt vmcnt(12)
	v_pk_add_f16 v28, v74, v28
	v_pk_max_f16 v27, v27, 0
	v_pk_max_f16 v25, v25, 0
	s_waitcnt vmcnt(11)
	v_pk_add_f16 v23, v68, v23
	s_waitcnt vmcnt(10)
	v_pk_add_f16 v22, v69, v22
	v_pk_max_f16 v29, v29, 0
	v_pk_max_f16 v28, v28, 0
	v_pk_max_f16 v23, v23, 0
	v_pk_max_f16 v22, v22, 0
	s_waitcnt vmcnt(9)
	v_pk_add_f16 v26, v75, v26
	s_waitcnt vmcnt(8)
	v_pk_add_f16 v24, v76, v24
	global_store_dword v[37:38], v27, off
	global_store_dword v[39:40], v25, off
	global_store_dword v[44:45], v29, off
	global_store_dword v[54:55], v28, off
	global_store_dword v[41:42], v23, off
	v_add_nc_u32_e32 v39, 0x1e00, v31
	v_add_nc_u32_e32 v41, 0x2000, v31
	v_pk_max_f16 v23, v26, 0
	v_pk_max_f16 v24, v24, 0
	v_ashrrev_i32_e32 v40, 31, v39
	s_waitcnt vmcnt(7)
	v_pk_add_f16 v21, v77, v21
	v_ashrrev_i32_e32 v42, 31, v41
	v_lshlrev_b64 v[39:40], 1, v[39:40]
	v_pk_max_f16 v21, v21, 0
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	s_waitcnt vmcnt(6)
	v_pk_add_f16 v20, v83, v20
	v_pk_max_f16 v20, v20, 0
	global_store_dword v[58:59], v22, off
	global_store_dword v[46:47], v23, off
	global_store_dword v[56:57], v24, off
	global_store_dword v[52:53], v21, off
	global_store_dword v[48:49], v20, off
	v_pk_add_f16 v23, v82, v18
	v_add_nc_u32_e32 v18, 0x1a00, v31
	v_add_nc_u32_e32 v22, 0x1b00, v31
	v_add_co_u32 v20, vcc_lo, s2, v33
	s_waitcnt vmcnt(5)
	v_pk_add_f16 v28, v78, v19
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v34, vcc_lo
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_u32 v24, vcc_lo, s2, v35
	v_add_nc_u32_e32 v35, 0x1d00, v31
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v36, vcc_lo
	v_add_co_u32 v26, vcc_lo, s2, v50
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v29, v79, v23
	v_ashrrev_i32_e32 v23, 31, v22
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v51, vcc_lo
	v_pk_max_f16 v30, v28, 0
	v_add_nc_u32_e32 v28, 0x1c00, v31
	v_add_co_u32 v33, vcc_lo, s4, v18
	v_lshlrev_b64 v[22:23], 1, v[22:23]
	v_add_co_ci_u32_e32 v34, vcc_lo, s5, v19, vcc_lo
	v_ashrrev_i32_e32 v36, 31, v35
	v_pk_max_f16 v55, v29, 0
	v_ashrrev_i32_e32 v29, 31, v28
	v_add_nc_u32_e32 v49, 0x2100, v31
	v_add_co_u32 v37, vcc_lo, s4, v22
	v_add_nc_u32_e32 v53, 0x2200, v31
	v_add_co_ci_u32_e32 v38, vcc_lo, s5, v23, vcc_lo
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_ashrrev_i32_e32 v50, 31, v49
	s_clause 0x1
	global_load_dword v56, v[33:34], off
	global_load_dword v57, v[37:38], off
	v_lshlrev_b64 v[33:34], 1, v[35:36]
	v_add_nc_u32_e32 v35, 0x1f00, v31
	v_add_co_u32 v37, vcc_lo, s4, v28
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v38, vcc_lo, s5, v29, vcc_lo
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_co_u32 v43, vcc_lo, s4, v33
	v_add_co_ci_u32_e32 v44, vcc_lo, s5, v34, vcc_lo
	v_add_co_u32 v45, vcc_lo, s4, v39
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v40, vcc_lo
	v_add_co_u32 v47, vcc_lo, s4, v35
	v_add_co_ci_u32_e32 v48, vcc_lo, s5, v36, vcc_lo
	v_add_co_u32 v51, vcc_lo, s4, v41
	s_clause 0x3
	global_load_dword v58, v[37:38], off
	global_load_dword v59, v[43:44], off
	global_load_dword v67, v[45:46], off
	global_load_dword v68, v[47:48], off
	v_lshlrev_b64 v[43:44], 1, v[49:50]
	global_store_dword v[20:21], v30, off
	v_add_nc_u32_e32 v37, 0x2300, v31
	v_lshlrev_b64 v[20:21], 1, v[53:54]
	v_add_co_ci_u32_e32 v52, vcc_lo, s5, v42, vcc_lo
	v_add_nc_u32_e32 v47, 0x2400, v31
	v_add_co_u32 v45, vcc_lo, s4, v43
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v46, vcc_lo, s5, v44, vcc_lo
	global_load_dword v69, v[51:52], off
	v_add_co_u32 v49, vcc_lo, s4, v20
	v_add_nc_u32_e32 v51, 0x2500, v31
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_co_ci_u32_e32 v50, vcc_lo, s5, v21, vcc_lo
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_add_nc_u32_e32 v30, 0x2700, v31
	v_ashrrev_i32_e32 v52, 31, v51
	s_clause 0x1
	global_load_dword v71, v[45:46], off
	global_load_dword v72, v[49:50], off
	v_add_nc_u32_e32 v45, 0x2600, v31
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_co_u32 v53, vcc_lo, s4, v37
	global_store_dword v[24:25], v55, off
	v_lshlrev_b64 v[24:25], 1, v[51:52]
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v54, vcc_lo, s5, v38, vcc_lo
	v_add_co_u32 v49, vcc_lo, s4, v47
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_co_ci_u32_e32 v50, vcc_lo, s5, v48, vcc_lo
	v_add_co_u32 v51, vcc_lo, s4, v24
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_add_co_ci_u32_e32 v52, vcc_lo, s5, v25, vcc_lo
	global_load_dword v53, v[53:54], off
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	s_waitcnt vmcnt(12)
	v_pk_add_f16 v55, v84, v14
	s_clause 0x1
	global_load_dword v54, v[49:50], off
	global_load_dword v51, v[51:52], off
	v_add_co_u32 v49, vcc_lo, s4, v45
	v_add_co_ci_u32_e32 v50, vcc_lo, s5, v46, vcc_lo
	v_pk_max_f16 v55, v55, 0
	global_load_dword v52, v[49:50], off
	v_add_co_u32 v49, vcc_lo, s4, v30
	v_add_co_ci_u32_e32 v50, vcc_lo, s5, v31, vcc_lo
	v_add_co_u32 v14, vcc_lo, s2, v60
	global_load_dword v49, v[49:50], off
	v_pk_add_f16 v50, v80, v15
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v61, vcc_lo
	v_pk_max_f16 v50, v50, 0
	global_store_dword v[26:27], v50, off
	global_store_dword v[14:15], v55, off
	s_waitcnt vmcnt(15)
	v_pk_add_f16 v26, v85, v17
	v_add_co_u32 v14, vcc_lo, s2, v62
	s_waitcnt vmcnt(14)
	v_pk_add_f16 v27, v66, v16
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v63, vcc_lo
	v_add_co_u32 v16, vcc_lo, s2, v64
	v_pk_max_f16 v26, v26, 0
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v65, vcc_lo
	v_pk_max_f16 v27, v27, 0
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	global_store_dword v[14:15], v26, off
	global_store_dword v[16:17], v27, off
	s_waitcnt vmcnt(13)
	v_pk_add_f16 v13, v56, v13
	s_waitcnt vmcnt(12)
	v_pk_add_f16 v10, v57, v10
	v_pk_max_f16 v15, v13, 0
	v_add_co_u32 v13, vcc_lo, s2, v22
	v_pk_add_f16 v22, v70, v8
	v_add_co_ci_u32_e32 v14, vcc_lo, s3, v23, vcc_lo
	global_store_dword v[18:19], v15, off
	v_pk_max_f16 v19, v10, 0
	v_pk_add_f16 v10, v81, v12
	v_add_co_u32 v15, vcc_lo, s2, v28
	v_pk_add_f16 v12, v32, v9
	v_add_co_ci_u32_e32 v16, vcc_lo, s3, v29, vcc_lo
	v_add_co_u32 v17, vcc_lo, s2, v33
	v_add_co_ci_u32_e32 v18, vcc_lo, s3, v34, vcc_lo
	v_add_co_u32 v8, vcc_lo, s2, v39
	s_waitcnt vmcnt(11)
	v_pk_add_f16 v23, v58, v10
	s_waitcnt vmcnt(10)
	v_pk_add_f16 v26, v59, v11
	s_waitcnt vmcnt(9)
	v_pk_add_f16 v12, v67, v12
	s_waitcnt vmcnt(8)
	v_pk_add_f16 v22, v68, v22
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v40, vcc_lo
	v_pk_max_f16 v23, v23, 0
	v_add_co_u32 v10, vcc_lo, s2, v35
	v_pk_max_f16 v26, v26, 0
	v_pk_max_f16 v12, v12, 0
	v_add_co_ci_u32_e32 v11, vcc_lo, s3, v36, vcc_lo
	v_pk_max_f16 v22, v22, 0
	global_store_dword v[13:14], v19, off
	global_store_dword v[15:16], v23, off
	global_store_dword v[17:18], v26, off
	global_store_dword v[8:9], v12, off
	global_store_dword v[10:11], v22, off
	v_pk_add_f16 v10, v82, v6
	v_pk_add_f16 v11, v32, v5
	v_add_co_u32 v8, vcc_lo, s2, v41
	s_waitcnt vmcnt(7)
	v_pk_add_f16 v7, v69, v7
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v42, vcc_lo
	v_add_co_u32 v5, vcc_lo, s2, v43
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v44, vcc_lo
	s_waitcnt vmcnt(6)
	v_pk_add_f16 v12, v71, v10
	s_waitcnt vmcnt(5)
	v_pk_add_f16 v13, v72, v11
	v_add_co_u32 v10, vcc_lo, s2, v20
	v_pk_max_f16 v7, v7, 0
	v_add_co_ci_u32_e32 v11, vcc_lo, s3, v21, vcc_lo
	v_pk_max_f16 v14, v12, 0
	v_pk_max_f16 v15, v13, 0
	v_add_co_u32 v12, vcc_lo, s2, v37
	global_store_dword v[8:9], v7, off
	global_store_dword v[5:6], v14, off
	global_store_dword v[10:11], v15, off
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v38, vcc_lo
	v_add_co_u32 v5, vcc_lo, s2, v47
	v_pk_add_f16 v10, v70, v0
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v48, vcc_lo
	v_add_co_u32 v7, vcc_lo, s2, v24
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v2, v53, v2
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v25, vcc_lo
	v_add_co_u32 v0, vcc_lo, s2, v45
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v14, v51, v3
	v_pk_max_f16 v9, v2, 0
	v_pk_add_f16 v2, v81, v4
	v_pk_add_f16 v4, v32, v1
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v46, vcc_lo
	v_pk_max_f16 v14, v14, 0
	v_pk_add_f16 v11, v54, v2
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v4, v52, v4
	v_add_co_u32 v2, vcc_lo, s2, v30
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v31, vcc_lo
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v4, v4, 0
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v10, v49, v10
	v_pk_max_f16 v10, v10, 0
	global_store_dword v[12:13], v9, off
	global_store_dword v[5:6], v11, off
	global_store_dword v[7:8], v14, off
	global_store_dword v[0:1], v4, off
	global_store_dword v[2:3], v10, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0
		.amdhsa_group_segment_fixed_size 8272
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 40
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 86
		.amdhsa_next_free_sgpr 14
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end49:
	.size	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0, .Lfunc_end49-tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0:
	v_and_b32_e32 v1, 15, v0
	s_lshl_b32 s0, s6, 5
	v_lshrrev_b32_e32 v25, 4, v0
	s_movk_i32 s7, 0x1000
	v_lshlrev_b32_e32 v30, 4, v0
	v_and_or_b32 v2, 0xfffffe00, s0, v1
	s_clause 0x4
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[8:9], s[4:5], 0x18
	s_load_dwordx2 s[2:3], s[4:5], 0x20
	v_lshl_or_b32 v26, v0, 1, s7
	v_lshlrev_b32_e32 v27, 3, v1
	v_lshlrev_b32_e32 v31, 2, v1
	v_mad_u32_u24 v28, 0x3200, v25, v2
	v_mul_u32_u24_e32 v2, 0x60, v25
	v_lshlrev_b32_e32 v29, 11, v25
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v5, 0
	v_lshl_add_u32 v32, v2, 1, s7
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	s_lshl_b32 s5, s6, 7
	s_mov_b32 s6, 0
	s_and_b32 s4, s5, 0x780
BB50_1:
	v_lshl_add_u32 v33, s6, 4, v28
	v_lshl_add_u32 v35, s6, 15, v29
	s_mov_b32 s7, 0
	v_ashrrev_i32_e32 v34, 31, v33
	v_or3_b32 v35, v35, s4, v27
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_ashrrev_i32_e32 v36, 31, v35
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v33, vcc_lo, s10, v33
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_add_co_ci_u32_e32 v34, vcc_lo, s11, v34, vcc_lo
	v_add_co_u32 v37, vcc_lo, 0x19000, v33
	v_add_co_ci_u32_e32 v38, vcc_lo, 0, v34, vcc_lo
	v_add_co_u32 v39, vcc_lo, 0x32000, v33
	v_add_co_ci_u32_e32 v40, vcc_lo, 0, v34, vcc_lo
	v_add_co_u32 v41, vcc_lo, 0x4b000, v33
	v_add_co_ci_u32_e32 v42, vcc_lo, 0, v34, vcc_lo
	v_add_co_u32 v43, vcc_lo, 0x64000, v33
	v_add_co_ci_u32_e32 v44, vcc_lo, 0, v34, vcc_lo
	v_add_co_u32 v35, vcc_lo, s12, v35
	v_add_co_ci_u32_e32 v36, vcc_lo, s13, v36, vcc_lo
	v_add_co_u32 v45, vcc_lo, 0x7d000, v33
	v_add_co_ci_u32_e32 v46, vcc_lo, 0, v34, vcc_lo
	v_add_co_u32 v47, vcc_lo, 0x4000, v35
	v_add_co_ci_u32_e32 v48, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v49, vcc_lo, 0x8000, v35
	v_add_co_ci_u32_e32 v50, vcc_lo, 0, v36, vcc_lo
	v_add_co_u32 v51, vcc_lo, 0xc000, v35
	v_add_co_ci_u32_e32 v52, vcc_lo, 0, v36, vcc_lo
	s_clause 0x5
	global_load_ushort v53, v[33:34], off
	global_load_ushort v54, v[37:38], off
	global_load_ushort v55, v[39:40], off
	global_load_ushort v56, v[41:42], off
	global_load_ushort v57, v[43:44], off
	global_load_ushort v58, v[45:46], off
	s_clause 0x3
	global_load_dwordx4 v[34:37], v[35:36], off
	global_load_dwordx4 v[38:41], v[47:48], off
	global_load_dwordx4 v[42:45], v[49:50], off
	global_load_dwordx4 v[46:49], v[51:52], off
	v_mov_b32_e32 v33, v32
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v26, v53
	ds_write_b16 v26, v54 offset:128
	ds_write_b16 v26, v55 offset:256
	ds_write_b16 v26, v56 offset:384
	ds_write_b16 v26, v57 offset:512
	ds_write_b16 v26, v58 offset:640
	ds_write_b128 v30, v[34:37]
	ds_write_b128 v30, v[38:41] offset:1024
	ds_write_b128 v30, v[42:45] offset:2048
	ds_write_b128 v30, v[46:49] offset:3072
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB50_2:
	v_or_b32_e32 v46, s7, v31
	ds_read2_b64 v[34:37], v33 offset1:4
	ds_read2_b64 v[38:41], v33 offset0:8 offset1:12
	ds_read2_b64 v[42:45], v33 offset0:16 offset1:20
	v_add_nc_u32_e32 v33, 8, v33
	s_addk_i32 s7, 0x200
	v_lshlrev_b32_e32 v60, 1, v46
	s_cmpk_lg_i32 s7, 0x800
	ds_read2_b32 v[58:59], v60 offset1:1
	ds_read2_b64 v[46:49], v60 offset0:16 offset1:32
	ds_read2_b64 v[50:53], v60 offset0:48 offset1:64
	ds_read2_b64 v[54:57], v60 offset0:80 offset1:96
	ds_read_b64 v[60:61], v60 offset:896
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v21, v34, v58, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v34, v59, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v36, v58, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v36, v59, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v23, v34, v46, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v34, v47, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v36, v46, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v36, v47, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v38, v58, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v38, v59, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v38, v46, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v38, v47, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v40, v58, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v40, v46, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v40, v59, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v40, v47, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v42, v58, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v42, v46, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v42, v59, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v42, v47, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v44, v58, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v44, v46, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v44, v59, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v44, v47, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v34, v48, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v34, v49, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v36, v48, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v36, v49, v19 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v23, v34, v50, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v34, v51, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v36, v50, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v36, v51, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v38, v48, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v38, v49, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v38, v50, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v38, v51, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v40, v48, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v40, v50, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v40, v49, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v40, v51, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v42, v48, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v42, v50, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v42, v49, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v42, v51, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v44, v48, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v44, v50, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v44, v49, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v44, v51, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v35, v52, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v35, v53, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v37, v52, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v37, v53, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v23, v35, v54, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v35, v55, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v37, v54, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v37, v55, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v39, v52, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v39, v53, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v39, v54, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v39, v55, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v41, v52, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v41, v54, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v41, v53, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v41, v55, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v43, v52, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v43, v54, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v43, v53, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v43, v55, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v45, v52, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v45, v54, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v45, v53, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v45, v55, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v35, v56, v21 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v23, v35, v60, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v35, v57, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v35, v61, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v37, v56, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v37, v60, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v37, v57, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v37, v61, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v39, v56, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v39, v60, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v39, v57, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v39, v61, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v41, v56, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v41, v60, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v41, v57, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v41, v61, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v43, v56, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v43, v60, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v43, v57, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v43, v61, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v45, v56, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v45, v60, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v45, v57, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v45, v61, v2 op_sel:[1,0,0]
	s_cbranch_scc1 BB50_2
	s_add_i32 s6, s6, 1
	s_cmp_eq_u32 s6, 32
	s_cbranch_scc0 BB50_1
	v_lshlrev_b32_e32 v0, 2, v0
	v_mad_u32_u24 v25, 0x4b000, v25, s5
	v_and_b32_e32 v0, 60, v0
	v_or_b32_e32 v25, v25, v0
	v_or_b32_e32 v0, s4, v0
	v_add_nc_u32_e32 v27, 0xc800, v25
	v_ashrrev_i32_e32 v26, 31, v25
	v_add_nc_u32_e32 v29, 0xc840, v25
	v_add_nc_u32_e32 v31, 0xc802, v25
	v_add_nc_u32_e32 v33, 0xc842, v25
	v_ashrrev_i32_e32 v28, 31, v27
	v_lshlrev_b64 v[35:36], 1, v[25:26]
	v_ashrrev_i32_e32 v30, 31, v29
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_nc_u32_e32 v26, 0x19000, v25
	v_lshlrev_b64 v[39:40], 1, v[27:28]
	v_ashrrev_i32_e32 v34, 31, v33
	v_add_co_u32 v37, vcc_lo, s2, v35
	v_lshlrev_b64 v[28:29], 1, v[29:30]
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v36, vcc_lo
	v_add_nc_u32_e32 v45, 0x19040, v25
	v_add_co_u32 v41, vcc_lo, s2, v39
	v_lshlrev_b64 v[30:31], 1, v[31:32]
	v_ashrrev_i32_e32 v27, 31, v26
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v40, vcc_lo
	v_add_nc_u32_e32 v55, 0x19002, v25
	v_add_co_u32 v43, vcc_lo, s2, v28
	v_lshlrev_b64 v[32:33], 1, v[33:34]
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v29, vcc_lo
	s_clause 0x5
	global_load_ushort v98, v[37:38], off offset:132
	global_load_ushort v99, v[37:38], off offset:134
	global_load_dword v97, v[37:38], off
	global_load_ushort v100, v[37:38], off offset:130
	global_load_ushort v101, v[37:38], off offset:128
	global_load_dword v102, v[37:38], off offset:4
	v_add_nc_u32_e32 v37, 0x19042, v25
	v_add_co_u32 v47, vcc_lo, s2, v30
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_ashrrev_i32_e32 v56, 31, v55
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v31, vcc_lo
	v_add_nc_u32_e32 v57, 0x25800, v25
	v_add_co_u32 v49, vcc_lo, s2, v32
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v50, vcc_lo, s3, v33, vcc_lo
	v_add_nc_u32_e32 v59, 0x25840, v25
	v_add_co_u32 v51, vcc_lo, s2, v26
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_ashrrev_i32_e32 v58, 31, v57
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v27, vcc_lo
	v_add_nc_u32_e32 v63, 0x25802, v25
	v_add_co_u32 v53, vcc_lo, s2, v45
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_co_ci_u32_e32 v54, vcc_lo, s3, v46, vcc_lo
	v_add_nc_u32_e32 v67, 0x25842, v25
	v_add_co_u32 v61, vcc_lo, s2, v55
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v56, vcc_lo
	v_add_nc_u32_e32 v71, 0x32000, v25
	v_add_co_u32 v65, vcc_lo, s2, v37
	v_lshlrev_b64 v[59:60], 1, v[59:60]
	v_ashrrev_i32_e32 v68, 31, v67
	v_add_co_ci_u32_e32 v66, vcc_lo, s3, v38, vcc_lo
	v_add_nc_u32_e32 v75, 0x32040, v25
	v_add_co_u32 v69, vcc_lo, s2, v57
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_ashrrev_i32_e32 v72, 31, v71
	v_add_co_ci_u32_e32 v70, vcc_lo, s3, v58, vcc_lo
	v_add_nc_u32_e32 v79, 0x32002, v25
	v_add_co_u32 v73, vcc_lo, s2, v59
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_ashrrev_i32_e32 v76, 31, v75
	v_add_co_ci_u32_e32 v74, vcc_lo, s3, v60, vcc_lo
	v_add_nc_u32_e32 v85, 0x32042, v25
	v_add_co_u32 v77, vcc_lo, s2, v63
	v_lshlrev_b64 v[71:72], 1, v[71:72]
	v_ashrrev_i32_e32 v80, 31, v79
	v_add_co_ci_u32_e32 v78, vcc_lo, s3, v64, vcc_lo
	v_add_nc_u32_e32 v89, 0x3e800, v25
	v_add_co_u32 v81, vcc_lo, s2, v67
	v_lshlrev_b64 v[75:76], 1, v[75:76]
	v_ashrrev_i32_e32 v86, 31, v85
	v_add_co_ci_u32_e32 v82, vcc_lo, s3, v68, vcc_lo
	v_lshlrev_b32_e32 v0, 1, v0
	v_add_nc_u32_e32 v93, 0x3e840, v25
	v_add_co_u32 v83, vcc_lo, s2, v71
	v_lshlrev_b64 v[79:80], 1, v[79:80]
	v_ashrrev_i32_e32 v90, 31, v89
	v_add_co_ci_u32_e32 v84, vcc_lo, s3, v72, vcc_lo
	v_add_nc_u32_e32 v95, 0x3e802, v25
	v_add_co_u32 v87, vcc_lo, s2, v75
	v_lshlrev_b64 v[85:86], 1, v[85:86]
	s_clause 0x5
	global_load_ushort v103, v0, s[8:9] offset:130
	global_load_ushort v104, v0, s[8:9] offset:132
	global_load_ushort v105, v0, s[8:9] offset:134
	global_load_ushort v106, v0, s[8:9] offset:128
	global_load_dword v107, v0, s[8:9] offset:4
	global_load_dword v0, v0, s[8:9]
	v_ashrrev_i32_e32 v94, 31, v93
	v_add_co_ci_u32_e32 v88, vcc_lo, s3, v76, vcc_lo
	s_clause 0x3
	global_load_dword v108, v[41:42], off
	global_load_dword v109, v[43:44], off
	global_load_dword v110, v[47:48], off
	global_load_dword v111, v[49:50], off
	v_add_nc_u32_e32 v49, 0x3e842, v25
	v_add_co_u32 v91, vcc_lo, s2, v79
	v_lshlrev_b64 v[43:44], 1, v[89:90]
	v_ashrrev_i32_e32 v96, 31, v95
	v_add_co_ci_u32_e32 v92, vcc_lo, s3, v80, vcc_lo
	v_add_co_u32 v41, vcc_lo, s2, v85
	v_lshlrev_b64 v[89:90], 1, v[93:94]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v86, vcc_lo
	v_lshlrev_b64 v[93:94], 1, v[95:96]
	v_add_co_u32 v47, vcc_lo, s2, v43
	s_clause 0x1
	global_load_dword v95, v[51:52], off
	global_load_dword v96, v[53:54], off
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v44, vcc_lo
	v_add_co_u32 v51, vcc_lo, s2, v89
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v90, vcc_lo
	v_add_co_u32 v53, vcc_lo, s2, v93
	s_clause 0x1
	global_load_dword v112, v[61:62], off
	global_load_dword v113, v[65:66], off
	v_add_co_ci_u32_e32 v54, vcc_lo, s3, v94, vcc_lo
	s_clause 0x1
	global_load_dword v69, v[69:70], off
	global_load_dword v70, v[73:74], off
	v_add_co_u32 v61, vcc_lo, s2, v49
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v50, vcc_lo
	s_clause 0x9
	global_load_dword v73, v[77:78], off
	global_load_dword v74, v[81:82], off
	global_load_dword v77, v[83:84], off
	global_load_dword v78, v[87:88], off
	global_load_dword v81, v[91:92], off
	global_load_dword v82, v[41:42], off
	global_load_dword v83, v[47:48], off
	global_load_dword v84, v[51:52], off
	global_load_dword v87, v[53:54], off
	global_load_dword v88, v[61:62], off
	v_add_co_u32 v34, vcc_lo, s0, v35
	v_mov_b32_e32 v91, 0xffff
	v_add_co_ci_u32_e32 v35, vcc_lo, s1, v36, vcc_lo
	v_add_co_u32 v39, vcc_lo, s0, v39
	v_add_co_ci_u32_e32 v40, vcc_lo, s1, v40, vcc_lo
	v_add_co_u32 v28, vcc_lo, s0, v28
	v_add_co_ci_u32_e32 v29, vcc_lo, s1, v29, vcc_lo
	v_add_co_u32 v30, vcc_lo, s0, v30
	v_add_co_ci_u32_e32 v31, vcc_lo, s1, v31, vcc_lo
	v_add_co_u32 v32, vcc_lo, s0, v32
	v_add_co_ci_u32_e32 v33, vcc_lo, s1, v33, vcc_lo
	v_add_co_u32 v25, vcc_lo, s0, v26
	v_add_co_ci_u32_e32 v26, vcc_lo, s1, v27, vcc_lo
	v_add_co_u32 v41, vcc_lo, s0, v45
	v_add_co_ci_u32_e32 v42, vcc_lo, s1, v46, vcc_lo
	v_add_co_u32 v45, vcc_lo, s0, v55
	v_add_co_ci_u32_e32 v46, vcc_lo, s1, v56, vcc_lo
	v_add_co_u32 v36, vcc_lo, s0, v37
	v_add_co_ci_u32_e32 v37, vcc_lo, s1, v38, vcc_lo
	v_add_co_u32 v47, vcc_lo, s0, v57
	v_add_co_ci_u32_e32 v48, vcc_lo, s1, v58, vcc_lo
	v_add_co_u32 v51, vcc_lo, s0, v59
	v_add_co_ci_u32_e32 v52, vcc_lo, s1, v60, vcc_lo
	v_add_co_u32 v53, vcc_lo, s0, v63
	v_add_co_ci_u32_e32 v54, vcc_lo, s1, v64, vcc_lo
	v_add_co_u32 v55, vcc_lo, s0, v67
	v_add_co_ci_u32_e32 v56, vcc_lo, s1, v68, vcc_lo
	v_add_co_u32 v57, vcc_lo, s0, v71
	v_add_co_ci_u32_e32 v58, vcc_lo, s1, v72, vcc_lo
	v_add_co_u32 v59, vcc_lo, s0, v75
	v_add_co_ci_u32_e32 v60, vcc_lo, s1, v76, vcc_lo
	v_add_co_u32 v61, vcc_lo, s0, v79
	v_add_co_ci_u32_e32 v62, vcc_lo, s1, v80, vcc_lo
	v_add_co_u32 v63, vcc_lo, s0, v85
	v_add_co_ci_u32_e32 v64, vcc_lo, s1, v86, vcc_lo
	v_add_co_u32 v43, vcc_lo, s0, v43
	v_add_co_ci_u32_e32 v44, vcc_lo, s1, v44, vcc_lo
	v_add_co_u32 v65, vcc_lo, s0, v89
	v_add_co_ci_u32_e32 v66, vcc_lo, s1, v90, vcc_lo
	v_add_co_u32 v67, vcc_lo, s0, v93
	v_add_co_ci_u32_e32 v68, vcc_lo, s1, v94, vcc_lo
	s_waitcnt vmcnt(22)
	v_and_b32_e32 v71, v91, v106
	v_and_b32_e32 v72, v91, v104
	s_waitcnt vmcnt(20)
	v_pk_add_f16 v21, v0, v21
	v_pk_add_f16 v20, v0, v20
	v_pk_add_f16 v18, v0, v18
	v_pk_add_f16 v15, v0, v15
	v_pk_add_f16 v11, v0, v11
	v_pk_add_f16 v0, v0, v7
	v_pk_add_f16 v7, v107, v19
	v_lshl_or_b32 v19, v103, 16, v71
	v_add_f16_e32 v27, v106, v23
	v_lshl_or_b32 v71, v105, 16, v72
	v_add_f16_sdwa v23, v103, v23 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v38, v104, v24
	v_pk_add_f16 v22, v107, v22
	v_add_f16_sdwa v24, v105, v24 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v16, v19, v16
	v_pk_add_f16 v12, v19, v12
	v_pk_add_f16 v8, v19, v8
	v_pk_add_f16 v4, v19, v4
	v_pk_add_f16 v1, v19, v1
	v_add_f16_e32 v19, v101, v27
	v_pk_add_f16 v21, v97, v21
	v_pk_add_f16 v3, v71, v3
	v_add_f16_e32 v23, v100, v23
	v_pk_add_f16 v14, v71, v14
	v_add_f16_e32 v27, v98, v38
	v_pk_add_f16 v22, v102, v22
	v_pk_add_f16 v17, v107, v17
	v_pk_add_f16 v13, v107, v13
	v_pk_add_f16 v9, v107, v9
	v_pk_add_f16 v5, v107, v5
	v_pk_add_f16 v10, v71, v10
	v_pk_add_f16 v6, v71, v6
	v_add_f16_e32 v24, v99, v24
	v_max_f16_e32 v19, 0, v19
	s_waitcnt vmcnt(19)
	v_pk_add_f16 v20, v108, v20
	v_pk_add_f16 v2, v71, v2
	s_waitcnt vmcnt(18)
	v_pk_add_f16 v16, v109, v16
	v_pk_max_f16 v21, v21, 0
	s_waitcnt vmcnt(17)
	v_pk_add_f16 v7, v110, v7
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v3, v82, v3
	v_max_f16_e32 v23, 0, v23
	v_pk_add_f16 v14, v111, v14
	v_max_f16_e32 v27, 0, v27
	s_waitcnt vmcnt(3)
	v_pk_add_f16 v0, v83, v0
	v_pk_add_f16 v18, v95, v18
	v_pk_add_f16 v4, v78, v4
	v_pk_max_f16 v22, v22, 0
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v1, v84, v1
	v_pk_add_f16 v12, v96, v12
	v_pk_add_f16 v17, v112, v17
	v_pk_add_f16 v10, v113, v10
	v_pk_add_f16 v15, v69, v15
	v_pk_add_f16 v8, v70, v8
	v_pk_add_f16 v13, v73, v13
	v_pk_add_f16 v6, v74, v6
	v_pk_add_f16 v11, v77, v11
	v_pk_add_f16 v9, v81, v9
	v_max_f16_e32 v24, 0, v24
	global_store_short v[34:35], v19, off offset:128
	global_store_dword v[34:35], v21, off
	global_store_short v[34:35], v23, off offset:130
	global_store_short v[34:35], v27, off offset:132
	global_store_dword v[34:35], v22, off offset:4
	global_store_short v[34:35], v24, off offset:134
	v_pk_max_f16 v19, v20, 0
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v5, v87, v5
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v2, v88, v2
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v20, v0, 0
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v18, v18, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v21, v1, 0
	v_add_co_u32 v0, vcc_lo, s0, v49
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v9, v9, 0
	global_store_dword v[39:40], v19, off
	global_store_dword v[28:29], v16, off
	global_store_dword v[30:31], v7, off
	global_store_dword v[32:33], v14, off
	global_store_dword v[25:26], v18, off
	global_store_dword v[41:42], v12, off
	global_store_dword v[45:46], v17, off
	global_store_dword v[36:37], v10, off
	global_store_dword v[47:48], v15, off
	global_store_dword v[51:52], v8, off
	global_store_dword v[53:54], v13, off
	global_store_dword v[55:56], v6, off
	global_store_dword v[57:58], v11, off
	global_store_dword v[59:60], v4, off
	global_store_dword v[61:62], v9, off
	v_pk_max_f16 v4, v5, 0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v50, vcc_lo
	v_pk_max_f16 v2, v2, 0
	global_store_dword v[63:64], v3, off
	global_store_dword v[43:44], v20, off
	global_store_dword v[65:66], v21, off
	global_store_dword v[67:68], v4, off
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0
		.amdhsa_group_segment_fixed_size 4864
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 40
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 114
		.amdhsa_next_free_sgpr 14
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end50:
	.size	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0, .Lfunc_end50-tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0:
	s_mul_hi_i32 s0, s6, 0x51eb851f
	v_lshrrev_b32_e32 v3, 6, v0
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s7, s0, 5
	s_mov_b32 s9, 0xc800
	s_add_i32 s7, s7, s1
	v_and_b32_e32 v1, 15, v0
	v_lshlrev_b32_e32 v2, 2, v0
	s_mul_i32 s0, s7, s9
	s_mul_i32 s8, s7, 0x64
	v_mad_u32_u24 v3, 0x3200, v3, s0
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	v_lshlrev_b32_e32 v4, 1, v1
	v_and_b32_e32 v5, 0xc0, v2
	s_load_dwordx2 s[4:5], s[4:5], 0x20
	s_sub_i32 s8, s6, s8
	v_lshlrev_b32_e32 v12, 4, v0
	s_lshl_b32 s14, s8, 7
	v_or3_b32 v3, v3, v5, v4
	s_and_b32 s15, s14, 0xffffff00
	s_movk_i32 s14, 0x2000
	v_lshlrev_b32_e32 v13, 3, v1
	v_or_b32_e32 v11, s14, v2
	v_add_nc_u32_e32 v10, s15, v3
	v_lshlrev_b32_e32 v3, 3, v0
	v_and_b32_e32 v9, 0x7c, v2
	v_and_b32_e32 v14, 0x3f00, v12
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_and_or_b32 v15, 0x1f00, v3, s14
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	s_lshl_b32 s6, s6, 7
	s_mov_b32 s17, 0
	s_and_b32 s6, s6, 0x80
	s_mov_b32 s16, -1
	s_movk_i32 s15, 0x1000
BB51_1:
	v_lshl_add_u32 v17, s17, 13, v14
	v_lshl_or_b32 v16, s17, 5, v10
	s_xor_b32 s16, s16, -1
	s_mov_b32 s17, 0
	v_or3_b32 v18, v17, s6, v13
	v_ashrrev_i32_e32 v17, 31, v16
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v16, vcc_lo, s10, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s11, v17, vcc_lo
	v_add_co_u32 v18, vcc_lo, s12, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s13, v19, vcc_lo
	v_add_co_u32 v20, vcc_lo, s9, v16
	v_add_co_ci_u32_e32 v21, vcc_lo, 0, v17, vcc_lo
	v_add_co_u32 v22, vcc_lo, s15, v18
	v_add_co_ci_u32_e32 v23, vcc_lo, 0, v19, vcc_lo
	v_add_co_u32 v25, vcc_lo, s14, v18
	v_add_co_ci_u32_e32 v26, vcc_lo, 0, v19, vcc_lo
	v_add_co_u32 v29, vcc_lo, 0x3000, v18
	v_add_co_ci_u32_e32 v30, vcc_lo, 0, v19, vcc_lo
	s_clause 0x1
	global_load_dword v33, v[16:17], off
	global_load_dword v34, v[20:21], off
	s_clause 0x3
	global_load_dwordx4 v[17:20], v[18:19], off
	global_load_dwordx4 v[21:24], v[22:23], off
	global_load_dwordx4 v[25:28], v[25:26], off
	global_load_dwordx4 v[29:32], v[29:30], off
	v_mov_b32_e32 v16, v15
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2st64_b32 v11, v33, v34 offset1:2
	ds_write_b128 v12, v[17:20]
	ds_write_b128 v12, v[21:24] offset:2048
	ds_write_b128 v12, v[25:28] offset:4096
	ds_write_b128 v12, v[29:32] offset:6144
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB51_2:
	v_or_b32_e32 v33, s17, v9
	ds_read_b128 v[17:20], v16
	ds_read_b128 v[21:24], v16 offset:64
	ds_read_b128 v[25:28], v16 offset:128
	ds_read_b128 v[29:32], v16 offset:192
	v_add_nc_u32_e32 v16, 16, v16
	s_addk_i32 s17, 0x400
	v_lshlrev_b32_e32 v41, 1, v33
	s_cmp_lg_u32 s17, s15
	ds_read2_b32 v[45:46], v41 offset1:1
	ds_read2_b64 v[33:36], v41 offset0:32 offset1:64
	ds_read_b64 v[47:48], v41 offset:1792
	ds_read2_b64 v[37:40], v41 offset0:96 offset1:128
	ds_read2_b64 v[41:44], v41 offset0:160 offset1:192
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v8, v17, v45, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v17, v46, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v21, v45, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v21, v46, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v25, v45, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v25, v46, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v29, v45, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v29, v46, v1 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v8, v17, v33, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v17, v34, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v21, v33, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v21, v34, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v25, v33, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v25, v34, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v29, v33, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v29, v34, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v18, v35, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v18, v36, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v22, v35, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v22, v36, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v26, v35, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v26, v36, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v30, v35, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v30, v36, v1 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v8, v18, v37, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v18, v38, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v22, v37, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v22, v38, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v26, v37, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v26, v38, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v30, v37, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v30, v38, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v19, v39, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v19, v40, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v23, v39, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v23, v40, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v27, v39, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v27, v40, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v31, v39, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v31, v40, v1 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v8, v19, v41, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v19, v42, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v23, v41, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v23, v42, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v27, v41, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v27, v42, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v31, v41, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v31, v42, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v20, v43, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v20, v44, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v24, v43, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v24, v44, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v28, v43, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v28, v44, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v32, v43, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v32, v44, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v20, v47, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v20, v48, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v24, v47, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v24, v48, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v28, v47, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v28, v48, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v32, v47, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v32, v48, v1 op_sel:[1,0,0]
	s_cbranch_scc1 BB51_2
	s_and_b32 vcc_lo, exec_lo, s16
	s_mov_b32 s17, 1
	s_mov_b32 s16, 0
	s_cbranch_vccz BB51_1
	v_lshrrev_b32_e32 v0, 5, v0
	s_mul_i32 s7, s7, 0x32000
	v_mad_u32_u24 v0, 0xc800, v0, s7
	s_lshl_b32 s7, s8, 9
	s_and_b32 s7, s7, 0xfffffc00
	v_or3_b32 v0, v0, s6, v9
	v_add_nc_u32_e32 v10, s7, v0
	v_or_b32_e32 v0, s6, v9
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b32_e32 v0, 1, v0
	v_lshlrev_b64 v[9:10], 1, v[10:11]
	s_clause 0x1
	global_load_dword v13, v0, s[2:3]
	global_load_dword v14, v0, s[2:3] offset:4
	v_add_co_u32 v11, vcc_lo, s4, v9
	v_add_co_ci_u32_e32 v12, vcc_lo, s5, v10, vcc_lo
	v_add_co_u32 v9, vcc_lo, s0, v9
	s_clause 0x1
	global_load_ushort v15, v0, s[2:3] offset:6
	global_load_ushort v0, v0, s[2:3] offset:2
	s_clause 0xd
	global_load_dword v16, v[11:12], off
	global_load_dword v17, v[11:12], off offset:4
	global_load_ushort v18, v[11:12], off offset:512
	global_load_ushort v19, v[11:12], off offset:514
	global_load_ushort v20, v[11:12], off offset:516
	global_load_ushort v21, v[11:12], off offset:518
	global_load_ushort v22, v[11:12], off offset:1024
	global_load_ushort v23, v[11:12], off offset:1026
	global_load_ushort v24, v[11:12], off offset:1028
	global_load_ushort v25, v[11:12], off offset:1030
	global_load_ushort v26, v[11:12], off offset:1536
	global_load_ushort v27, v[11:12], off offset:1538
	global_load_ushort v28, v[11:12], off offset:1540
	global_load_ushort v11, v[11:12], off offset:1542
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v10, vcc_lo
	s_waitcnt vmcnt(14)
	v_add_f16_sdwa v0, v0, v2 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v8, v13, v8
	v_pk_add_f16 v7, v14, v7
	v_pk_add_f16 v6, v13, v6
	v_pk_add_f16 v5, v14, v5
	v_add_f16_e32 v12, v13, v2
	v_add_f16_e32 v2, v14, v1
	v_add_f16_sdwa v1, v15, v1 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v4, v13, v4
	s_waitcnt vmcnt(13)
	v_pk_add_f16 v8, v16, v8
	v_pk_add_f16 v3, v14, v3
	s_waitcnt vmcnt(12)
	v_pk_add_f16 v7, v17, v7
	s_waitcnt vmcnt(11)
	v_add_f16_e32 v13, v18, v6
	s_waitcnt vmcnt(10)
	v_add_f16_sdwa v6, v19, v6 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt vmcnt(9)
	v_add_f16_e32 v14, v20, v5
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v1, v11, v1
	v_add_f16_sdwa v5, v21, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v12, v26, v12
	v_add_f16_e32 v0, v27, v0
	v_add_f16_e32 v2, v28, v2
	v_add_f16_e32 v15, v22, v4
	v_add_f16_sdwa v4, v23, v4 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v16, v24, v3
	v_add_f16_sdwa v3, v25, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v7, v7, 0
	v_max_f16_e32 v11, 0, v13
	v_max_f16_e32 v6, 0, v6
	v_max_f16_e32 v13, 0, v14
	v_max_f16_e32 v14, 0, v15
	v_max_f16_e32 v5, 0, v5
	v_max_f16_e32 v4, 0, v4
	v_max_f16_e32 v15, 0, v16
	v_max_f16_e32 v3, 0, v3
	v_max_f16_e32 v12, 0, v12
	v_max_f16_e32 v0, 0, v0
	v_max_f16_e32 v2, 0, v2
	v_max_f16_e32 v1, 0, v1
	global_store_dword v[9:10], v8, off
	global_store_dword v[9:10], v7, off offset:4
	global_store_short v[9:10], v11, off offset:512
	global_store_short v[9:10], v6, off offset:514
	global_store_short v[9:10], v13, off offset:516
	global_store_short v[9:10], v5, off offset:518
	global_store_short v[9:10], v14, off offset:1024
	global_store_short v[9:10], v4, off offset:1026
	global_store_short v[9:10], v15, off offset:1028
	global_store_short v[9:10], v3, off offset:1030
	global_store_short v[9:10], v12, off offset:1536
	global_store_short v[9:10], v0, off offset:1538
	global_store_short v[9:10], v2, off offset:1540
	global_store_short v[9:10], v1, off offset:1542
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0
		.amdhsa_group_segment_fixed_size 9216
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 40
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 49
		.amdhsa_next_free_sgpr 18
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end51:
	.size	tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0, .Lfunc_end51-tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_kernel0:
	v_lshlrev_b32_e32 v1, 1, v0
	s_movk_i32 s0, 0x780
	s_movk_i32 s12, 0xa00
	s_and_b32 s1, s6, 3
	v_add_nc_u32_e32 v4, s0, v0
	v_and_b32_e32 v2, 0x7c0, v1
	v_add_nc_u32_e32 v6, 0x8c0, v0
	v_add_nc_u32_e32 v7, s12, v0
	v_add_nc_u32_e32 v8, 0xb40, v0
	s_mul_i32 s13, s1, 0xc80
	s_mov_b32 s7, 0x51eb851f
	v_and_b32_e32 v3, 31, v0
	v_add_nc_u32_e32 v5, s13, v2
	s_ashr_i32 s6, s6, 2
	v_mul_hi_u32 v4, v4, s7
	v_mul_hi_u32 v6, v6, s7
	v_mul_hi_u32 v7, v7, s7
	v_mul_hi_u32 v8, v8, s7
	s_mul_i32 s14, s6, 0x6400
	v_or_b32_e32 v5, v5, v3
	v_add_nc_u32_e32 v2, s14, v2
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshrrev_b32_e32 v4, 9, v4
	s_movk_i32 s7, 0x3200
	v_add_nc_u32_e32 v42, s14, v5
	v_or_b32_e32 v2, v2, v3
	v_lshrrev_b32_e32 v3, 9, v6
	v_lshrrev_b32_e32 v5, 9, v7
	v_lshrrev_b32_e32 v6, 9, v8
	v_mul_i32_i24_e32 v4, s7, v4
	v_add_nc_u32_e32 v2, s13, v2
	v_mul_i32_i24_e32 v3, s7, v3
	v_mul_i32_i24_e32 v5, s7, v5
	v_mul_i32_i24_e32 v6, s7, v6
	v_lshrrev_b32_e32 v40, 6, v0
	v_add3_u32 v44, v2, v4, 0x280
	v_add3_u32 v45, v2, v3, 0x500
	v_add3_u32 v46, v2, v5, s0
	v_add3_u32 v47, v2, v6, s12
	v_mul_u32_u24_e32 v2, 0xa0, v40
	s_movk_i32 s15, 0x4000
	v_lshlrev_b32_e32 v48, 3, v0
	v_or_b32_e32 v43, s15, v1
	v_and_b32_e32 v41, 0x7e, v1
	v_lshl_or_b32 v50, v2, 1, s15
	v_lshlrev_b32_e32 v49, 4, v0
	v_cmp_gt_i32_e64 s0, 64, v0
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v32, 0
	s_mov_b32 s13, 0
	s_mov_b32 s12, -1
	s_movk_i32 s7, 0x1000
BB52_1:
	s_lshl_b32 s14, s13, 5
	v_or_b32_e32 v51, s14, v42
	v_or_b32_e32 v53, s14, v44
	v_or_b32_e32 v55, s14, v46
	v_or_b32_e32 v59, s14, v47
	v_or_b32_e32 v57, s14, v45
	v_ashrrev_i32_e32 v52, 31, v51
	v_ashrrev_i32_e32 v54, 31, v53
	v_ashrrev_i32_e32 v56, 31, v55
	v_ashrrev_i32_e32 v60, 31, v59
	v_ashrrev_i32_e32 v58, 31, v57
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v51, vcc_lo, s8, v51
	v_add_co_ci_u32_e32 v52, vcc_lo, s9, v52, vcc_lo
	v_add_co_u32 v65, vcc_lo, 0x800, v51
	v_add_co_ci_u32_e32 v66, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v67, vcc_lo, s7, v51
	s_clause 0x1
	global_load_ushort v79, v[51:52], off
	global_load_ushort v80, v[51:52], off offset:1280
	v_add_co_ci_u32_e32 v68, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v69, vcc_lo, 0x6000, v51
	v_add_co_ci_u32_e32 v70, vcc_lo, 0, v52, vcc_lo
	v_lshlrev_b64 v[51:52], 1, v[53:54]
	v_lshlrev_b64 v[53:54], 1, v[55:56]
	v_lshl_or_b32 v55, s13, 13, v48
	v_add_co_u32 v71, vcc_lo, s8, v51
	v_ashrrev_i32_e32 v56, 31, v55
	v_add_co_ci_u32_e32 v72, vcc_lo, s9, v52, vcc_lo
	v_lshlrev_b64 v[51:52], 1, v[59:60]
	v_add_co_u32 v53, vcc_lo, s8, v53
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_add_co_ci_u32_e32 v54, vcc_lo, s9, v54, vcc_lo
	v_add_co_u32 v59, vcc_lo, s8, v51
	v_add_co_ci_u32_e32 v60, vcc_lo, s9, v52, vcc_lo
	v_add_co_u32 v51, vcc_lo, s10, v55
	v_add_co_ci_u32_e32 v52, vcc_lo, s11, v56, vcc_lo
	v_add_co_u32 v73, vcc_lo, s8, v57
	v_add_co_ci_u32_e32 v74, vcc_lo, s9, v58, vcc_lo
	s_clause 0x1
	global_load_ushort v81, v[53:54], off
	global_load_ushort v82, v[59:60], off
	s_clause 0x3
	global_load_dword v53, v[51:52], off
	global_load_dword v54, v[51:52], off offset:4
	global_load_dword v55, v[51:52], off offset:8
	global_load_dword v56, v[51:52], off offset:12
	v_add_co_u32 v60, vcc_lo, 0x1400, v51
	v_add_co_ci_u32_e32 v61, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v75, vcc_lo, v51, 0x2800
	v_add_co_ci_u32_e32 v76, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v77, vcc_lo, s7, v51
	v_add_co_ci_u32_e32 v78, vcc_lo, 0, v52, vcc_lo
	s_clause 0x6
	global_load_dword v58, v[60:61], off offset:4
	global_load_dword v59, v[60:61], off offset:8
	global_load_dword v62, v[75:76], off offset:4
	global_load_dword v63, v[75:76], off offset:8
	global_load_dword v64, v[75:76], off offset:12
	global_load_dword v57, v[77:78], off offset:1024
	global_load_dword v60, v[60:61], off offset:12
	s_clause 0x5
	global_load_ushort v77, v[65:66], off offset:512
	global_load_ushort v65, v[65:66], off offset:1792
	global_load_ushort v66, v[67:68], off offset:1024
	global_load_ushort v67, v[69:70], off offset:1024
	global_load_ushort v68, v[71:72], off
	global_load_ushort v69, v[73:74], off
	global_load_dword v61, v[75:76], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b128 v49, v[53:56]
	ds_write_b16 v43, v79
	ds_write_b16 v43, v80 offset:640
	ds_write_b16 v43, v81 offset:5120
	ds_write_b16 v43, v82 offset:5760
	ds_write_b128 v49, v[57:60] offset:5120
	ds_write_b16 v43, v77 offset:1280
	ds_write_b16 v43, v65 offset:1920
	ds_write_b16 v43, v66 offset:2560
	ds_write_b16 v43, v67 offset:3200
	ds_write_b16 v43, v68 offset:3840
	ds_write_b16 v43, v69 offset:4480
	ds_write_b128 v49, v[61:64] offset:10240
	s_and_saveexec_b32 s13, s0
	s_cbranch_execz BB52_3
	v_add_co_u32 v54, vcc_lo, 0x3c00, v51
	v_add_co_ci_u32_e32 v55, vcc_lo, 0, v52, vcc_lo
	v_add_co_u32 v56, vcc_lo, 0x3800, v51
	v_add_co_ci_u32_e32 v57, vcc_lo, 0, v52, vcc_lo
	s_clause 0x3
	global_load_dword v52, v[54:55], off offset:4
	global_load_dword v53, v[54:55], off offset:8
	global_load_dword v51, v[56:57], off offset:1024
	global_load_dword v54, v[54:55], off offset:12
	s_waitcnt vmcnt(0)
	ds_write_b128 v49, v[51:54] offset:15360
BB52_3:
	s_or_b32 exec_lo, exec_lo, s13
	v_mov_b32_e32 v51, v50
	s_xor_b32 s12, s12, -1
	s_mov_b32 s13, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB52_4:
	v_or_b32_e32 v72, s13, v41
	v_add_nc_u32_e32 v80, 0x800, v51
	v_add_nc_u32_e32 v88, s7, v51
	ds_read2_b64 v[52:55], v51 offset1:8
	ds_read2_b64 v[56:59], v51 offset0:208 offset1:216
	ds_read2_b64 v[60:63], v51 offset0:16 offset1:24
	ds_read2_b64 v[64:67], v51 offset0:32 offset1:200
	ds_read2_b64 v[68:71], v51 offset0:224 offset1:232
	v_add_nc_u32_e32 v84, 0xc00, v51
	v_lshlrev_b32_e32 v98, 1, v72
	ds_read2_b64 v[72:75], v80 offset0:144 offset1:152
	ds_read2_b64 v[76:79], v88 offset0:96 offset1:104
	ds_read2_b64 v[80:83], v80 offset0:160 offset1:168
	ds_read2_b64 v[84:87], v84 offset0:48 offset1:216
	ds_read2_b64 v[88:91], v88 offset0:112 offset1:120
	ds_read2st64_b32 v[92:93], v98 offset1:1
	ds_read2st64_b32 v[94:95], v98 offset0:2 offset1:3
	ds_read2st64_b32 v[96:97], v98 offset0:4 offset1:5
	ds_read2st64_b32 v[98:99], v98 offset0:6 offset1:7
	v_add_nc_u32_e32 v51, 8, v51
	s_addk_i32 s13, 0x400
	s_cmpk_lg_i32 s13, 0x2000
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v34, v52, v92, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v52, v93, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v54, v92, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v54, v93, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v56, v92, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v56, v93, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v58, v92, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v58, v93, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v60, v92, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v60, v93, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v62, v92, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v62, v93, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v66, v92, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v66, v93, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v64, v92, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v64, v93, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v68, v92, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v68, v93, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v70, v92, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v70, v93, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v72, v92, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v72, v93, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v74, v92, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v74, v93, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v76, v92, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v76, v93, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v78, v92, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v78, v93, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v80, v92, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v80, v93, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v82, v92, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v82, v93, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v86, v92, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v86, v93, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v88, v92, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v88, v93, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v84, v92, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v84, v93, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v90, v92, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v90, v93, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v34, v52, v94, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v52, v95, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v54, v94, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v54, v95, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v56, v94, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v56, v95, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v58, v94, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v58, v95, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v60, v94, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v60, v95, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v62, v94, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v62, v95, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v66, v94, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v66, v95, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v64, v94, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v64, v95, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v68, v94, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v68, v95, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v70, v94, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v70, v95, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v72, v94, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v72, v95, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v74, v94, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v74, v95, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v76, v94, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v76, v95, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v78, v94, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v78, v95, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v80, v94, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v80, v95, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v82, v94, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v82, v95, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v86, v94, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v86, v95, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v88, v94, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v88, v95, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v84, v94, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v84, v95, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v90, v94, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v90, v95, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v34, v53, v96, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v53, v97, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v55, v96, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v55, v97, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v57, v96, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v57, v97, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v59, v96, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v59, v97, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v61, v96, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v61, v97, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v63, v96, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v63, v97, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v67, v96, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v67, v97, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v65, v96, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v65, v97, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v69, v96, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v69, v97, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v71, v96, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v71, v97, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v73, v96, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v73, v97, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v75, v96, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v75, v97, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v77, v96, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v77, v97, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v79, v96, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v79, v97, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v81, v96, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v81, v97, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v83, v96, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v83, v97, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v87, v96, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v87, v97, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v89, v96, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v89, v97, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v85, v96, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v85, v97, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v91, v96, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v91, v97, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v34, v53, v98, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v53, v99, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v55, v98, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v55, v99, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v57, v98, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v57, v99, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v59, v98, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v59, v99, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v61, v98, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v61, v99, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v63, v98, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v63, v99, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v67, v98, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v67, v99, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v65, v98, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v65, v99, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v69, v98, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v69, v99, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v71, v98, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v71, v99, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v73, v98, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v73, v99, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v75, v98, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v75, v99, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v77, v98, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v77, v99, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v79, v98, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v79, v99, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v81, v98, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v81, v99, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v83, v98, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v83, v99, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v87, v98, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v87, v99, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v89, v98, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v89, v99, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v85, v98, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v85, v99, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v91, v98, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v91, v99, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB52_4
	s_and_b32 vcc_lo, exec_lo, s12
	s_mov_b32 s13, 1
	s_mov_b32 s12, 0
	s_cbranch_vccz BB52_1
	v_lshlrev_b32_e32 v42, 1, v41
	v_mul_u32_u24_e32 v40, 0x500, v40
	s_mulk_i32 s1, 0x3200
	s_mul_i32 s6, s6, 0x19000
	s_clause 0x2
	global_load_dword v90, v42, s[4:5]
	global_load_ushort v91, v42, s[4:5] offset:256
	global_load_ushort v92, v42, s[4:5] offset:258
	v_add3_u32 v40, s1, s6, v40
	v_or_b32_e32 v40, v40, v41
	v_add_nc_u32_e32 v42, 0x1a00, v40
	v_add_nc_u32_e32 v44, 0x1b00, v40
	v_add_nc_u32_e32 v49, 0x1c00, v40
	v_add_nc_u32_e32 v52, 0x1d00, v40
	v_add_nc_u32_e32 v54, 0xc800, v40
	v_ashrrev_i32_e32 v43, 31, v42
	v_ashrrev_i32_e32 v45, 31, v44
	v_ashrrev_i32_e32 v50, 31, v49
	v_ashrrev_i32_e32 v53, 31, v52
	v_ashrrev_i32_e32 v55, 31, v54
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_lshlrev_b64 v[44:45], 1, v[44:45]
	v_add_nc_u32_e32 v60, 0xe100, v40
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_nc_u32_e32 v56, 0x400, v40
	v_add_nc_u32_e32 v58, 0x480, v40
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_add_nc_u32_e32 v62, 0xc900, v40
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_co_u32 v44, vcc_lo, s2, v44
	v_add_nc_u32_e32 v68, 0x1d80, v40
	v_add_co_ci_u32_e32 v45, vcc_lo, s3, v45, vcc_lo
	v_add_nc_u32_e32 v78, 0xc880, v40
	v_add_nc_u32_e32 v80, 0xe180, v40
	v_add_nc_u32_e32 v82, 0xc980, v40
	v_add_nc_u32_e32 v84, 0xe280, v40
	v_add_nc_u32_e32 v86, 0xe580, v40
	v_add_nc_u32_e32 v51, 0x1c80, v40
	v_ashrrev_i32_e32 v61, 31, v60
	v_add_nc_u32_e32 v64, 0xe200, v40
	v_lshlrev_b64 v[88:89], 1, v[40:41]
	v_ashrrev_i32_e32 v63, 31, v62
	v_ashrrev_i32_e32 v57, 31, v56
	v_ashrrev_i32_e32 v59, 31, v58
	v_ashrrev_i32_e32 v69, 31, v68
	v_ashrrev_i32_e32 v79, 31, v78
	v_ashrrev_i32_e32 v81, 31, v80
	v_ashrrev_i32_e32 v83, 31, v82
	v_ashrrev_i32_e32 v85, 31, v84
	v_ashrrev_i32_e32 v87, 31, v86
	v_add_nc_u32_e32 v66, 0xca00, v40
	v_lshlrev_b64 v[60:61], 1, v[60:61]
	v_ashrrev_i32_e32 v65, 31, v64
	v_add_nc_u32_e32 v70, 0xe300, v40
	v_lshlrev_b64 v[62:63], 1, v[62:63]
	v_ashrrev_i32_e32 v67, 31, v66
	v_add_nc_u32_e32 v72, 0xcb00, v40
	v_lshlrev_b64 v[64:65], 1, v[64:65]
	v_ashrrev_i32_e32 v71, 31, v70
	v_add_nc_u32_e32 v74, 0xe400, v40
	v_lshlrev_b64 v[66:67], 1, v[66:67]
	v_ashrrev_i32_e32 v73, 31, v72
	v_add_nc_u32_e32 v76, 0xcc00, v40
	v_lshlrev_b64 v[70:71], 1, v[70:71]
	v_ashrrev_i32_e32 v75, 31, v74
	v_add_nc_u32_e32 v46, 0x1a80, v40
	v_lshlrev_b64 v[72:73], 1, v[72:73]
	v_ashrrev_i32_e32 v77, 31, v76
	v_add_nc_u32_e32 v48, 0x1b80, v40
	v_lshlrev_b64 v[74:75], 1, v[74:75]
	v_lshlrev_b64 v[76:77], 1, v[76:77]
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v39, v90, v39
	v_pk_add_f16 v38, v90, v38
	v_pk_add_f16 v36, v90, v36
	v_pk_add_f16 v47, v90, v37
	v_add_nc_u32_e32 v37, 0xcb80, v40
	global_store_dword v[42:43], v39, off
	v_lshlrev_b64 v[42:43], 1, v[49:50]
	v_lshlrev_b64 v[49:50], 1, v[52:53]
	v_lshlrev_b64 v[52:53], 1, v[54:55]
	global_store_dword v[44:45], v38, off
	v_pk_add_f16 v38, v90, v35
	v_add_nc_u32_e32 v44, 0xe500, v40
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_add_nc_u32_e32 v39, 0xca80, v40
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_co_u32 v49, vcc_lo, s2, v49
	v_ashrrev_i32_e32 v45, 31, v44
	v_add_co_ci_u32_e32 v50, vcc_lo, s3, v50, vcc_lo
	v_add_co_u32 v52, vcc_lo, s2, v52
	global_store_dword v[42:43], v47, off
	v_add_co_ci_u32_e32 v53, vcc_lo, s3, v53, vcc_lo
	v_ashrrev_i32_e32 v47, 31, v46
	global_store_dword v[49:50], v36, off
	v_add_nc_u32_e32 v42, 0xcc80, v40
	v_ashrrev_i32_e32 v49, 31, v48
	global_store_dword v[52:53], v38, off
	v_ashrrev_i32_e32 v52, 31, v51
	v_lshlrev_b64 v[46:47], 1, v[46:47]
	v_ashrrev_i32_e32 v43, 31, v42
	v_lshlrev_b64 v[48:49], 1, v[48:49]
	v_add_nc_u32_e32 v54, 0xe380, v40
	v_lshlrev_b64 v[50:51], 1, v[51:52]
	v_lshlrev_b64 v[52:53], 1, v[56:57]
	v_lshlrev_b64 v[56:57], 1, v[58:59]
	v_lshlrev_b64 v[58:59], 1, v[68:69]
	v_lshlrev_b64 v[68:69], 1, v[78:79]
	v_lshlrev_b64 v[78:79], 1, v[80:81]
	v_lshlrev_b64 v[80:81], 1, v[82:83]
	v_lshlrev_b64 v[82:83], 1, v[84:85]
	v_lshlrev_b64 v[84:85], 1, v[86:87]
	v_add_co_u32 v86, vcc_lo, s2, v88
	v_lshlrev_b64 v[41:42], 1, v[42:43]
	v_add_co_ci_u32_e32 v87, vcc_lo, s3, v89, vcc_lo
	v_add_co_u32 v60, vcc_lo, s2, v60
	v_lshlrev_b64 v[43:44], 1, v[44:45]
	v_add_co_ci_u32_e32 v61, vcc_lo, s3, v61, vcc_lo
	v_add_co_u32 v62, vcc_lo, s2, v62
	v_add_nc_u32_e32 v35, 0xe480, v40
	v_add_co_ci_u32_e32 v63, vcc_lo, s3, v63, vcc_lo
	v_add_co_u32 v64, vcc_lo, s2, v64
	v_ashrrev_i32_e32 v40, 31, v39
	v_add_co_ci_u32_e32 v65, vcc_lo, s3, v65, vcc_lo
	v_add_co_u32 v66, vcc_lo, s2, v66
	v_ashrrev_i32_e32 v55, 31, v54
	v_add_co_ci_u32_e32 v67, vcc_lo, s3, v67, vcc_lo
	v_add_co_u32 v70, vcc_lo, s2, v70
	v_lshlrev_b64 v[39:40], 1, v[39:40]
	v_add_co_ci_u32_e32 v71, vcc_lo, s3, v71, vcc_lo
	v_add_co_u32 v72, vcc_lo, s2, v72
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v73, vcc_lo, s3, v73, vcc_lo
	v_add_co_u32 v74, vcc_lo, s2, v74
	v_lshlrev_b64 v[54:55], 1, v[54:55]
	v_add_co_ci_u32_e32 v75, vcc_lo, s3, v75, vcc_lo
	v_add_co_u32 v76, vcc_lo, s2, v76
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_co_ci_u32_e32 v77, vcc_lo, s3, v77, vcc_lo
	v_add_co_u32 v45, vcc_lo, s2, v46
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_add_co_ci_u32_e32 v46, vcc_lo, s3, v47, vcc_lo
	v_add_co_u32 v47, vcc_lo, s2, v48
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v49, vcc_lo
	v_add_co_u32 v49, vcc_lo, s2, v50
	v_pk_add_f16 v27, v90, v27
	v_add_co_ci_u32_e32 v50, vcc_lo, s3, v51, vcc_lo
	v_add_co_u32 v51, vcc_lo, s2, v52
	v_pk_add_f16 v24, v90, v24
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v53, vcc_lo
	v_add_co_u32 v56, vcc_lo, s2, v56
	v_pk_add_f16 v22, v90, v22
	v_add_co_ci_u32_e32 v57, vcc_lo, s3, v57, vcc_lo
	v_add_co_u32 v58, vcc_lo, s2, v58
	v_pk_add_f16 v20, v90, v20
	v_add_co_ci_u32_e32 v59, vcc_lo, s3, v59, vcc_lo
	v_add_co_u32 v68, vcc_lo, s2, v68
	v_pk_add_f16 v19, v90, v19
	v_add_co_ci_u32_e32 v69, vcc_lo, s3, v69, vcc_lo
	v_add_co_u32 v78, vcc_lo, s2, v78
	v_pk_add_f16 v17, v90, v17
	v_add_co_ci_u32_e32 v79, vcc_lo, s3, v79, vcc_lo
	v_add_co_u32 v80, vcc_lo, s2, v80
	v_pk_add_f16 v15, v90, v15
	v_add_co_ci_u32_e32 v81, vcc_lo, s3, v81, vcc_lo
	v_add_co_u32 v82, vcc_lo, s2, v82
	v_pk_add_f16 v14, v90, v14
	v_add_co_ci_u32_e32 v83, vcc_lo, s3, v83, vcc_lo
	v_add_co_u32 v39, vcc_lo, s2, v39
	v_pk_add_f16 v34, v90, v34
	v_add_co_ci_u32_e32 v40, vcc_lo, s3, v40, vcc_lo
	v_add_co_u32 v53, vcc_lo, s2, v54
	v_pk_add_f16 v33, v90, v33
	v_add_co_ci_u32_e32 v54, vcc_lo, s3, v55, vcc_lo
	v_add_co_u32 v37, vcc_lo, s2, v37
	v_pk_add_f16 v31, v90, v31
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v38, vcc_lo
	v_add_co_u32 v35, vcc_lo, s2, v35
	v_pk_add_f16 v30, v90, v30
	v_add_co_ci_u32_e32 v36, vcc_lo, s3, v36, vcc_lo
	v_add_co_u32 v41, vcc_lo, s2, v41
	v_pk_add_f16 v29, v90, v29
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v42, vcc_lo
	v_add_co_u32 v43, vcc_lo, s2, v43
	v_pk_add_f16 v26, v90, v26
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v44, vcc_lo
	v_add_co_u32 v84, vcc_lo, s2, v84
	v_pk_add_f16 v11, v90, v11
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v90, 0xffff, v91
	v_add_co_ci_u32_e32 v85, vcc_lo, s3, v85, vcc_lo
	v_add_co_u32 v88, vcc_lo, 0x3000, v86
	v_add_f16_e32 v55, v91, v32
	s_waitcnt vmcnt(0)
	v_add_f16_sdwa v32, v92, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_dword v[60:61], v27, off
	global_store_dword v[62:63], v24, off
	global_store_dword v[64:65], v22, off
	global_store_dword v[66:67], v20, off
	global_store_dword v[70:71], v19, off
	global_store_dword v[72:73], v17, off
	global_store_dword v[74:75], v15, off
	global_store_dword v[76:77], v14, off
	global_store_short v[86:87], v55, off offset:256
	global_store_dword v[86:87], v34, off
	global_store_short v[86:87], v32, off offset:258
	v_lshl_or_b32 v14, v92, 16, v90
	v_add_co_ci_u32_e32 v89, vcc_lo, 0, v87, vcc_lo
	v_pk_add_f16 v15, v14, v25
	global_store_dword v[88:89], v33, off offset:512
	global_store_dword v[86:87], v31, off offset:512
	global_store_dword v[86:87], v30, off offset:1024
	global_store_dword v[86:87], v29, off offset:1536
	global_store_dword v[43:44], v11, off
	v_pk_add_f16 v11, v14, v28
	v_pk_add_f16 v17, v14, v23
	v_pk_add_f16 v19, v14, v21
	v_pk_add_f16 v18, v14, v18
	v_pk_add_f16 v16, v14, v16
	v_pk_add_f16 v13, v14, v13
	v_pk_add_f16 v12, v14, v12
	v_pk_add_f16 v10, v14, v10
	v_pk_add_f16 v9, v14, v9
	v_pk_add_f16 v8, v14, v8
	v_pk_add_f16 v7, v14, v7
	v_pk_add_f16 v6, v14, v6
	v_pk_add_f16 v5, v14, v5
	v_pk_add_f16 v4, v14, v4
	v_pk_add_f16 v3, v14, v3
	v_pk_add_f16 v2, v14, v2
	v_pk_add_f16 v1, v14, v1
	v_pk_add_f16 v0, v14, v0
	global_store_dword v[88:89], v11, off offset:768
	global_store_dword v[86:87], v15, off offset:768
	global_store_dword v[45:46], v17, off
	global_store_dword v[86:87], v19, off offset:1280
	global_store_dword v[47:48], v18, off
	global_store_dword v[86:87], v16, off offset:1792
	global_store_dword v[49:50], v13, off
	global_store_dword v[51:52], v26, off
	global_store_dword v[56:57], v12, off
	global_store_dword v[58:59], v10, off
	global_store_dword v[68:69], v9, off
	global_store_dword v[78:79], v8, off
	global_store_dword v[80:81], v7, off
	global_store_dword v[82:83], v6, off
	global_store_dword v[39:40], v5, off
	global_store_dword v[53:54], v4, off
	global_store_dword v[37:38], v3, off
	global_store_dword v[35:36], v2, off
	global_store_dword v[41:42], v1, off
	global_store_dword v[84:85], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_kernel0
		.amdhsa_group_segment_fixed_size 22784
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 100
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end52:
	.size	tvmgen_default_fused_nn_conv2d_add_kernel0, .Lfunc_end52-tvmgen_default_fused_nn_conv2d_add_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0:
	v_mul_hi_i32 v1, 0x2e8ba2e9, v0
	v_lshrrev_b32_e32 v5, 2, v0
	s_mov_b32 s1, 0x66666667
	s_mov_b32 s13, 0xba2e8ba3
	s_mul_hi_i32 s2, s6, s1
	s_movk_i32 s0, 0x6400
	v_add_nc_u32_e32 v8, 3, v5
	v_add_nc_u32_e32 v5, 6, v5
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 3, v1
	s_lshr_b32 s3, s2, 31
	v_mul_hi_u32 v10, v8, s13
	s_ashr_i32 s7, s2, 2
	v_mul_hi_u32 v11, v5, s13
	v_add_nc_u32_e32 v2, v1, v2
	s_add_i32 s7, s7, s3
	s_clause 0x3
	s_load_dwordx2 s[14:15], s[4:5], 0x0
	s_load_dwordx2 s[16:17], s[4:5], 0x8
	s_load_dwordx2 s[8:9], s[4:5], 0x10
	s_load_dwordx2 s[10:11], s[4:5], 0x18
	s_mul_i32 s2, s7, 10
	s_lshl_b32 s4, s7, 4
	v_mul_lo_u32 v6, v2, 44
	s_sub_i32 s2, s6, s2
	v_lshrrev_b32_e32 v10, 3, v10
	s_ashr_i32 s12, s2, 1
	v_add_nc_u32_e32 v12, s4, v2
	v_add_nc_u32_e32 v7, 0x280, v0
	v_add_nc_u32_e32 v4, 0x140, v0
	v_mul_lo_u32 v2, v2, s0
	v_sub_nc_u32_e32 v6, v0, v6
	s_mul_i32 s19, s12, 10
	v_and_or_b32 v3, v0, 3, 0xffff9a00
	v_mul_u32_u24_e32 v10, 11, v10
	v_lshrrev_b32_e32 v11, 3, v11
	v_ashrrev_i32_e32 v6, 2, v6
	v_cmp_lt_i32_e64 s2, 0, v12
	v_mul_hi_u32 v9, v7, s13
	v_mul_hi_u32 v12, v4, s13
	s_mov_b32 s18, 0x64000
	v_add_nc_u32_e32 v13, s19, v6
	v_add_nc_u32_e32 v2, v3, v2
	v_lshlrev_b32_e32 v6, 9, v6
	v_sub_nc_u32_e32 v8, v8, v10
	s_mul_i32 s5, s7, s18
	v_cmp_lt_i32_e64 s3, 0, v13
	v_mul_u32_u24_e32 v13, 11, v11
	s_mul_i32 s20, s12, 0x1400
	v_add_nc_u32_e32 v3, s5, v3
	s_add_i32 s21, s20, s5
	s_movk_i32 s13, 0x80
	v_add3_u32 v10, s21, v2, v6
	v_sub_nc_u32_e32 v2, v5, v13
	v_lshrrev_b32_e32 v5, 5, v9
	v_add_nc_u32_e32 v6, s19, v8
	v_lshrrev_b32_e32 v9, 5, v12
	s_movk_i32 s23, 0xe00
	v_add_nc_u32_e32 v12, s19, v2
	v_lshlrev_b32_e32 v2, 9, v2
	v_cmp_lt_i32_e32 vcc_lo, 0, v6
	v_lshlrev_b32_e32 v6, 9, v8
	v_mad_i32_i24 v8, v9, s0, v3
	v_mad_i32_i24 v3, v5, s0, v3
	v_lshlrev_b32_e32 v1, 1, v0
	v_lshlrev_b32_e32 v9, 8, v0
	s_movk_i32 s19, 0xff
	v_add3_u32 v15, v8, s20, v6
	v_lshlrev_b32_e32 v6, 1, v7
	v_add_nc_u32_e32 v7, 0x3c0, v0
	v_add3_u32 v19, v3, s20, v2
	v_lshlrev_b32_e32 v3, 1, v4
	v_add_nc_u32_e32 v4, s13, v0
	v_and_b32_e32 v29, s23, v6
	v_lshlrev_b32_e32 v6, 1, v7
	v_lshlrev_b32_e32 v7, 8, v7
	v_add_nc_u32_e32 v13, s4, v5
	v_and_b32_e32 v28, s19, v4
	v_mov_b32_e32 v5, 0xe00
	v_lshlrev_b32_e32 v4, 1, v4
	v_and_b32_e32 v32, 0x40000, v7
	v_add_nc_u32_e32 v7, 0x480, v1
	s_movk_i32 s21, 0x600
	v_add_nc_u32_e32 v2, 64, v0
	v_and_b32_e32 v31, s21, v6
	v_add_nc_u32_e32 v6, 0x50000, v9
	v_cmp_lt_i32_e64 s4, 0, v12
	v_add_nc_u32_e32 v8, 0x200, v1
	v_and_b32_e32 v35, v5, v7
	v_add_nc_u32_e32 v7, 0x700, v1
	v_and_b32_e32 v45, v5, v4
	v_add_nc_u32_e32 v4, 0x380, v1
	v_add_nc_u32_e32 v12, 0x78000, v9
	v_and_b32_e32 v26, s19, v2
	v_and_b32_e32 v21, s19, v0
	s_mov_b32 s19, 0xc0000
	v_cmp_gt_i32_e64 s5, 48, v13
	v_and_b32_e32 v34, s19, v6
	v_add_nc_u32_e32 v6, s18, v9
	v_add_nc_u32_e32 v13, 0x8c000, v9
	v_lshlrev_b32_e32 v2, 1, v2
	v_and_b32_e32 v33, s23, v8
	v_and_b32_e32 v37, s21, v7
	v_and_b32_e32 v38, s19, v12
	v_add_nc_u32_e32 v7, 0x680, v1
	v_and_b32_e32 v47, v5, v4
	v_mov_b32_e32 v8, 0xc0000
	v_add_nc_u32_e32 v12, 0xb4000, v9
	v_add_nc_u32_e32 v4, 0x104000, v9
	s_lshl_b32 s6, s6, 8
	s_movk_i32 s20, 0x100
	v_mul_hi_i32 v18, v0, s1
	s_and_b32 s6, s6, s20
	v_and_b32_e32 v36, s19, v6
	v_and_b32_e32 v40, s19, v13
	s_mov_b32 s19, 0x140000
	v_and_b32_e32 v43, s21, v7
	v_add_nc_u32_e32 v7, 0x300, v1
	v_and_b32_e32 v44, v8, v12
	v_add_nc_u32_e32 v12, 0x118000, v9
	v_and_b32_e32 v2, v5, v2
	v_and_b32_e32 v4, s19, v4
	v_or_b32_e32 v13, s6, v26
	v_and_b32_e32 v27, s23, v3
	v_add_nc_u32_e32 v3, 0xc0, v0
	v_add_nc_u32_e32 v6, 0xa0000, v9
	v_and_b32_e32 v7, v5, v7
	v_or3_b32 v51, v13, v4, v2
	v_and_b32_e32 v12, s19, v12
	v_or_b32_e32 v17, s6, v28
	v_lshrrev_b32_e32 v2, 31, v18
	v_ashrrev_i32_e32 v4, 6, v18
	v_and_b32_e32 v30, 0xff, v3
	v_and_b32_e32 v42, v8, v6
	v_add_nc_u32_e32 v14, 0x580, v1
	v_add_nc_u32_e32 v16, 0x12c000, v9
	v_add_nc_u32_e32 v6, 0xdc000, v9
	v_or3_b32 v52, v17, v12, v7
	v_add_nc_u32_e32 v7, v4, v2
	s_mov_b32 s18, 0x1c0000
	v_lshlrev_b32_e32 v3, 1, v3
	v_and_b32_e32 v48, s18, v6
	v_add_nc_u32_e32 v6, 0xf0000, v9
	v_and_b32_e32 v16, s19, v16
	v_and_b32_e32 v14, v5, v14
	v_or_b32_e32 v20, s6, v30
	v_mul_lo_u32 v2, 0xa0, v7
	v_and_b32_e32 v39, v5, v3
	v_add_nc_u32_e32 v3, 0x400, v1
	v_and_b32_e32 v50, s18, v6
	v_or3_b32 v53, v20, v16, v14
	v_mov_b32_e32 v8, 0x1c0000
	v_add_nc_u32_e32 v22, 0x154000, v9
	v_add_nc_u32_e32 v6, 0x168000, v9
	v_add_nc_u32_e32 v12, 0x17c000, v9
	v_add_nc_u32_e32 v13, 0x190000, v9
	v_add_nc_u32_e32 v14, 0x1a4000, v9
	v_add_nc_u32_e32 v4, 0x1b8000, v9
	v_and_b32_e32 v41, v5, v3
	v_add_nc_u32_e32 v3, 0xc8000, v9
	v_and_b32_e32 v54, v8, v22
	v_and_b32_e32 v55, v8, v6
	v_and_b32_e32 v56, v8, v12
	v_and_b32_e32 v57, v8, v13
	v_and_b32_e32 v58, v8, v14
	v_and_b32_e32 v59, v8, v4
	v_sub_nc_u32_e32 v8, v0, v2
	v_add_nc_u32_e32 v12, 0x1e0000, v9
	v_add_nc_u32_e32 v6, 0x1cc000, v9
	v_add_nc_u32_e32 v13, 0x1f4000, v9
	s_mov_b32 s1, 0x3c0000
	v_and_b32_e32 v46, s18, v3
	v_add_nc_u32_e32 v2, 0x208000, v9
	v_ashrrev_i32_e32 v4, 2, v8
	s_movk_i32 s18, 0x58
	v_and_b32_e32 v61, s1, v12
	v_mul_lo_u32 v12, v7, s18
	v_and_b32_e32 v60, s1, v6
	v_and_b32_e32 v62, s1, v13
	s_mov_b32 s1, 0x240000
	v_add_nc_u32_e32 v3, s21, v1
	v_and_b32_e32 v63, s1, v2
	v_and_b32_e32 v2, 0x7ffffff8, v4
	v_add_nc_u32_e32 v6, 0x230000, v9
	v_add_nc_u32_e32 v13, s6, v0
	v_add_nc_u32_e32 v4, 0x21c000, v9
	v_and_b32_e32 v49, s21, v3
	v_and_b32_e32 v3, v5, v3
	v_add_nc_u32_e32 v2, v12, v2
	v_and_or_b32 v5, v6, s1, v13
	v_lshlrev_b32_e32 v6, 2, v0
	s_movk_i32 s22, 0x4800
	v_and_b32_e32 v64, s1, v4
	v_lshl_add_u32 v66, v2, 1, s22
	v_add_nc_u32_e32 v65, v5, v3
	v_and_b32_e32 v13, 0x7c, v6
	v_or_b32_e32 v11, s22, v1
	v_cmp_gt_i32_e64 s0, 0x6c, v0
	v_cmp_gt_i32_e64 s1, s20, v0
	v_and_b32_e32 v25, s21, v1
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v20, 0
	s_mov_b32 s19, 0
	s_and_b32 s3, s2, s3
	s_and_b32 s4, s5, s4
BB53_1:
	v_mov_b32_e32 v67, 0
	s_lshl_b32 s5, s19, 2
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s20, s3
	s_cbranch_execz BB53_3
	v_add_nc_u32_e32 v67, s5, v10
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v67, s2, s14, v67
	v_add_co_ci_u32_e64 v68, s2, s15, v68, s2
	global_load_ushort v67, v[67:68], off
BB53_3:
	s_or_b32 exec_lo, exec_lo, s20
	v_mov_b32_e32 v68, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v11, v67
	s_and_saveexec_b32 s20, vcc_lo
	s_cbranch_execz BB53_5
	v_add_nc_u32_e32 v67, s5, v15
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v67, s2, s14, v67
	v_add_co_ci_u32_e64 v68, s2, s15, v68, s2
	global_load_ushort v68, v[67:68], off
BB53_5:
	s_or_b32 exec_lo, exec_lo, s20
	s_waitcnt vmcnt(0)
	ds_write_b16 v11, v68 offset:640
	s_and_saveexec_b32 s20, s0
	s_cbranch_execz BB53_9
	v_mov_b32_e32 v67, 0
	s_and_saveexec_b32 s21, s4
	s_cbranch_execz BB53_8
	v_add_nc_u32_e32 v67, s5, v19
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v67, s2, s14, v67
	v_add_co_ci_u32_e64 v68, s2, s15, v68, s2
	global_load_ushort v67, v[67:68], off
BB53_8:
	s_or_b32 exec_lo, exec_lo, s21
	s_waitcnt vmcnt(0)
	ds_write_b16 v11, v67 offset:1280
BB53_9:
	s_or_b32 exec_lo, exec_lo, s20
	s_lshl_b32 s5, s19, 11
	v_add_nc_u32_e32 v68, s5, v27
	v_or_b32_e32 v67, s5, v25
	v_add_nc_u32_e32 v70, s5, v29
	v_add_nc_u32_e32 v72, s5, v32
	v_add_nc_u32_e32 v73, s5, v33
	v_or3_b32 v69, v68, s6, v26
	v_or3_b32 v67, v67, s6, v21
	v_or3_b32 v71, v70, s6, v28
	v_or_b32_e32 v74, v72, v31
	v_or3_b32 v108, v73, v21, s6
	v_ashrrev_i32_e32 v70, 31, v69
	v_ashrrev_i32_e32 v68, 31, v67
	v_ashrrev_i32_e32 v72, 31, v71
	v_or3_b32 v73, v74, s6, v30
	v_add_nc_u32_e32 v75, v108, v34
	v_lshlrev_b64 v[76:77], 1, v[69:70]
	v_add_nc_u32_e32 v70, s5, v35
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_lshlrev_b64 v[78:79], 1, v[71:72]
	v_ashrrev_i32_e32 v74, 31, v73
	v_add_nc_u32_e32 v98, s5, v51
	v_or3_b32 v110, v70, s6, v26
	v_add_nc_u32_e32 v70, s5, v38
	v_add_co_u32 v67, s2, s16, v67
	v_lshlrev_b64 v[72:73], 1, v[73:74]
	v_add_co_ci_u32_e64 v68, s2, s17, v68, s2
	v_add_co_u32 v80, s2, s16, v76
	v_ashrrev_i32_e32 v76, 31, v75
	v_or_b32_e32 v70, v70, v37
	v_add_co_ci_u32_e64 v81, s2, s17, v77, s2
	v_add_co_u32 v77, s2, s16, v78
	v_add_nc_u32_e32 v82, v110, v36
	v_add_co_ci_u32_e64 v78, s2, s17, v79, s2
	v_or3_b32 v84, v70, s6, v28
	v_lshlrev_b64 v[74:75], 1, v[75:76]
	v_add_nc_u32_e32 v76, s5, v39
	v_add_nc_u32_e32 v70, s5, v41
	v_add_nc_u32_e32 v79, s5, v44
	v_ashrrev_i32_e32 v83, 31, v82
	v_ashrrev_i32_e32 v85, 31, v84
	v_or3_b32 v76, v76, s6, v30
	v_or3_b32 v116, v70, v21, s6
	v_or_b32_e32 v70, v79, v43
	v_add_nc_u32_e32 v79, s5, v45
	v_add_co_u32 v72, s2, s16, v72
	v_add_nc_u32_e32 v86, v76, v40
	v_add_nc_u32_e32 v88, v116, v42
	v_or3_b32 v90, v70, s6, v26
	v_add_nc_u32_e32 v70, s5, v47
	v_or3_b32 v79, v79, s6, v28
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_ashrrev_i32_e32 v87, 31, v86
	v_add_co_ci_u32_e64 v73, s2, s17, v73, s2
	v_or3_b32 v122, v70, s6, v30
	v_add_nc_u32_e32 v70, s5, v50
	v_add_co_u32 v74, s2, s16, v74
	v_lshlrev_b64 v[84:85], 1, v[84:85]
	v_ashrrev_i32_e32 v89, 31, v88
	v_add_co_ci_u32_e64 v75, s2, s17, v75, s2
	v_add_nc_u32_e32 v92, v79, v46
	v_add_co_u32 v82, s2, s16, v82
	v_or_b32_e32 v70, v70, v49
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_ashrrev_i32_e32 v91, 31, v90
	v_add_co_ci_u32_e64 v83, s2, s17, v83, s2
	v_add_nc_u32_e32 v94, v122, v48
	v_add_co_u32 v84, s2, s16, v84
	v_lshlrev_b64 v[88:89], 1, v[88:89]
	v_ashrrev_i32_e32 v93, 31, v92
	v_add_co_ci_u32_e64 v85, s2, s17, v85, s2
	v_or3_b32 v96, v70, s6, v21
	v_add_co_u32 v86, s2, s16, v86
	v_lshlrev_b64 v[90:91], 1, v[90:91]
	v_ashrrev_i32_e32 v95, 31, v94
	v_add_co_ci_u32_e64 v87, s2, s17, v87, s2
	v_add_co_u32 v88, s2, s16, v88
	v_lshlrev_b64 v[92:93], 1, v[92:93]
	v_ashrrev_i32_e32 v97, 31, v96
	v_add_co_ci_u32_e64 v89, s2, s17, v89, s2
	v_add_nc_u32_e32 v100, s5, v52
	v_add_nc_u32_e32 v70, s5, v56
	v_add_co_u32 v90, s2, s16, v90
	v_lshlrev_b64 v[94:95], 1, v[94:95]
	v_ashrrev_i32_e32 v99, 31, v98
	v_add_co_ci_u32_e64 v91, s2, s17, v91, s2
	v_add_nc_u32_e32 v102, s5, v53
	v_add_co_u32 v92, s2, s16, v92
	v_lshlrev_b64 v[96:97], 1, v[96:97]
	v_ashrrev_i32_e32 v101, 31, v100
	v_add_nc_u32_e32 v104, v71, v55
	v_or_b32_e32 v71, v70, v31
	v_add_co_ci_u32_e64 v93, s2, s17, v93, s2
	v_add_nc_u32_e32 v69, v69, v54
	v_add_co_u32 v94, s2, s16, v94
	v_lshlrev_b64 v[98:99], 1, v[98:99]
	v_ashrrev_i32_e32 v103, 31, v102
	v_add_co_ci_u32_e64 v95, s2, s17, v95, s2
	v_add_co_u32 v96, s2, s16, v96
	v_or3_b32 v106, v71, s6, v30
	v_add_nc_u32_e32 v71, s5, v59
	v_lshlrev_b64 v[100:101], 1, v[100:101]
	v_ashrrev_i32_e32 v70, 31, v69
	v_add_co_ci_u32_e64 v97, s2, s17, v97, s2
	v_add_co_u32 v98, s2, s16, v98
	v_lshlrev_b64 v[102:103], 1, v[102:103]
	v_ashrrev_i32_e32 v105, 31, v104
	v_add_co_ci_u32_e64 v99, s2, s17, v99, s2
	v_add_nc_u32_e32 v108, v108, v57
	v_or_b32_e32 v71, v71, v37
	v_add_co_u32 v100, s2, s16, v100
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_ashrrev_i32_e32 v107, 31, v106
	v_add_co_ci_u32_e64 v101, s2, s17, v101, s2
	v_add_nc_u32_e32 v110, v110, v58
	v_add_co_u32 v102, s2, s16, v102
	v_lshlrev_b64 v[104:105], 1, v[104:105]
	v_ashrrev_i32_e32 v109, 31, v108
	v_or3_b32 v112, v71, s6, v28
	v_add_nc_u32_e32 v71, s5, v62
	v_add_co_ci_u32_e64 v103, s2, s17, v103, s2
	v_add_co_u32 v69, s2, s16, v69
	v_lshlrev_b64 v[106:107], 1, v[106:107]
	v_ashrrev_i32_e32 v111, 31, v110
	v_add_co_ci_u32_e64 v70, s2, s17, v70, s2
	v_add_nc_u32_e32 v114, v76, v60
	v_add_co_u32 v104, s2, s16, v104
	v_or_b32_e32 v71, v71, v43
	v_lshlrev_b64 v[108:109], 1, v[108:109]
	v_ashrrev_i32_e32 v113, 31, v112
	v_add_co_ci_u32_e64 v105, s2, s17, v105, s2
	v_add_nc_u32_e32 v116, v116, v61
	v_add_co_u32 v106, s2, s16, v106
	v_lshlrev_b64 v[110:111], 1, v[110:111]
	v_ashrrev_i32_e32 v115, 31, v114
	v_add_co_ci_u32_e64 v107, s2, s17, v107, s2
	v_or3_b32 v118, v71, s6, v26
	v_add_co_u32 v108, s2, s16, v108
	v_lshlrev_b64 v[112:113], 1, v[112:113]
	v_ashrrev_i32_e32 v117, 31, v116
	v_add_co_ci_u32_e64 v109, s2, s17, v109, s2
	v_add_nc_u32_e32 v120, v79, v63
	v_add_co_u32 v110, s2, s16, v110
	v_lshlrev_b64 v[114:115], 1, v[114:115]
	v_ashrrev_i32_e32 v119, 31, v118
	v_add_co_ci_u32_e64 v111, s2, s17, v111, s2
	v_add_nc_u32_e32 v122, v122, v64
	v_add_co_u32 v112, s2, s16, v112
	v_lshlrev_b64 v[116:117], 1, v[116:117]
	v_ashrrev_i32_e32 v121, 31, v120
	v_add_co_ci_u32_e64 v113, s2, s17, v113, s2
	v_add_co_u32 v114, s2, s16, v114
	v_lshlrev_b64 v[118:119], 1, v[118:119]
	v_ashrrev_i32_e32 v123, 31, v122
	v_add_co_ci_u32_e64 v115, s2, s17, v115, s2
	v_add_co_u32 v116, s2, s16, v116
	v_lshlrev_b64 v[120:121], 1, v[120:121]
	v_add_co_ci_u32_e64 v117, s2, s17, v117, s2
	v_add_co_u32 v118, s2, s16, v118
	v_lshlrev_b64 v[122:123], 1, v[122:123]
	v_add_co_ci_u32_e64 v119, s2, s17, v119, s2
	v_add_co_u32 v120, s2, s16, v120
	v_add_co_ci_u32_e64 v121, s2, s17, v121, s2
	v_add_co_u32 v122, s2, s16, v122
	v_add_co_ci_u32_e64 v123, s2, s17, v123, s2
	v_add_co_u32 v124, s2, 0x280000, v67
	v_add_co_ci_u32_e64 v125, s2, 0, v68, s2
	s_clause 0x1b
	global_load_ushort v67, v[67:68], off
	global_load_ushort v68, v[80:81], off
	global_load_ushort v71, v[77:78], off
	global_load_ushort v72, v[72:73], off
	global_load_ushort v73, v[74:75], off
	global_load_ushort v74, v[82:83], off
	global_load_ushort v75, v[84:85], off
	global_load_ushort v76, v[86:87], off
	global_load_ushort v77, v[88:89], off
	global_load_ushort v78, v[90:91], off
	global_load_ushort v79, v[92:93], off
	global_load_ushort v80, v[94:95], off
	global_load_ushort v81, v[96:97], off
	global_load_ushort v82, v[98:99], off
	global_load_ushort v83, v[100:101], off
	global_load_ushort v84, v[102:103], off
	global_load_ushort v85, v[124:125], off
	global_load_ushort v69, v[69:70], off
	global_load_ushort v70, v[104:105], off
	global_load_ushort v86, v[106:107], off
	global_load_ushort v87, v[108:109], off
	global_load_ushort v88, v[110:111], off
	global_load_ushort v89, v[112:113], off
	global_load_ushort v90, v[114:115], off
	global_load_ushort v91, v[116:117], off
	global_load_ushort v92, v[118:119], off
	global_load_ushort v93, v[120:121], off
	global_load_ushort v94, v[122:123], off
	s_waitcnt vmcnt(27)
	ds_write_b16 v1, v67
	s_waitcnt vmcnt(26)
	ds_write_b16 v1, v68 offset:640
	s_waitcnt vmcnt(25)
	ds_write_b16 v1, v71 offset:1280
	s_waitcnt vmcnt(24)
	ds_write_b16 v1, v72 offset:1920
	s_waitcnt vmcnt(23)
	ds_write_b16 v1, v73 offset:2560
	s_waitcnt vmcnt(22)
	ds_write_b16 v1, v74 offset:3200
	s_waitcnt vmcnt(21)
	ds_write_b16 v1, v75 offset:3840
	s_waitcnt vmcnt(20)
	ds_write_b16 v1, v76 offset:4480
	s_waitcnt vmcnt(19)
	ds_write_b16 v1, v77 offset:5120
	s_waitcnt vmcnt(18)
	ds_write_b16 v1, v78 offset:5760
	s_waitcnt vmcnt(17)
	ds_write_b16 v1, v79 offset:6400
	s_waitcnt vmcnt(16)
	ds_write_b16 v1, v80 offset:7040
	s_waitcnt vmcnt(15)
	ds_write_b16 v1, v81 offset:7680
	s_waitcnt vmcnt(14)
	ds_write_b16 v1, v82 offset:8320
	s_waitcnt vmcnt(13)
	ds_write_b16 v1, v83 offset:8960
	s_waitcnt vmcnt(12)
	ds_write_b16 v1, v84 offset:9600
	s_waitcnt vmcnt(11)
	ds_write_b16 v1, v85 offset:10240
	s_waitcnt vmcnt(10)
	ds_write_b16 v1, v69 offset:10880
	s_waitcnt vmcnt(9)
	ds_write_b16 v1, v70 offset:11520
	s_waitcnt vmcnt(8)
	ds_write_b16 v1, v86 offset:12160
	s_waitcnt vmcnt(7)
	ds_write_b16 v1, v87 offset:12800
	s_waitcnt vmcnt(6)
	ds_write_b16 v1, v88 offset:13440
	s_waitcnt vmcnt(5)
	ds_write_b16 v1, v89 offset:14080
	s_waitcnt vmcnt(4)
	ds_write_b16 v1, v90 offset:14720
	s_waitcnt vmcnt(3)
	ds_write_b16 v1, v91 offset:15360
	s_waitcnt vmcnt(2)
	ds_write_b16 v1, v92 offset:16000
	s_waitcnt vmcnt(1)
	ds_write_b16 v1, v93 offset:16640
	s_waitcnt vmcnt(0)
	ds_write_b16 v1, v94 offset:17280
	s_and_saveexec_b32 s20, s1
	s_cbranch_execz BB53_11
	v_add_nc_u32_e32 v67, s5, v65
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v67, s2, s16, v67
	v_add_co_ci_u32_e64 v68, s2, s17, v68, s2
	global_load_ushort v67, v[67:68], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v1, v67 offset:17920
BB53_11:
	s_or_b32 exec_lo, exec_lo, s20
	v_mov_b32_e32 v67, v66
	s_mov_b32 s2, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB53_12:
	s_mul_i32 s5, s2, 0xc00
	v_or_b32_e32 v68, s5, v13
	s_mov_b32 s5, 0
	v_lshlrev_b32_e32 v68, 1, v68
BB53_13:
	v_add_nc_u32_e32 v81, s5, v67
	v_add_nc_u32_e32 v91, 0x400, v68
	ds_read2_b64 v[69:72], v68 offset0:32 offset1:64
	ds_read2_b64 v[73:76], v68 offset0:160 offset1:192
	ds_read2_b32 v[85:86], v68 offset1:1
	ds_read_b64 v[87:88], v68 offset:768
	ds_read_b64 v[89:90], v68 offset:1792
	v_add_nc_u32_e32 v68, 0x800, v68
	s_add_i32 s5, s5, 8
	ds_read2_b64 v[77:80], v81 offset1:44
	ds_read2_b64 v[81:84], v81 offset0:88 offset1:132
	ds_read2_b32 v[91:92], v91 offset1:1
	s_cmp_lg_u32 s5, 24
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v24, v77, v85, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v79, v85, v23 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v17, v81, v85, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v83, v85, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v77, v69, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v79, v69, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v81, v69, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v83, v69, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v77, v86, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v77, v70, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v79, v86, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v79, v70, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v81, v86, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v81, v70, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v83, v86, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v83, v70, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v77, v71, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v77, v87, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v79, v71, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v79, v87, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v81, v71, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v81, v87, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v83, v71, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v83, v87, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v77, v72, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v77, v88, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v79, v72, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v79, v88, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v81, v72, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v81, v88, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v83, v72, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v83, v88, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v78, v73, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v80, v73, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v82, v73, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v84, v73, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v24, v78, v91, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v80, v91, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v82, v91, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v84, v91, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v78, v92, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v78, v74, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v80, v92, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v80, v74, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v82, v92, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v82, v74, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v84, v92, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v84, v74, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v78, v89, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v80, v89, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v82, v89, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v84, v89, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v78, v75, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v80, v75, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v82, v75, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v84, v75, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v78, v76, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v78, v90, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v80, v76, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v80, v90, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v82, v76, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v82, v90, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v84, v76, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v84, v90, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB53_13
	v_add_nc_u32_e32 v67, s18, v67
	s_add_i32 s2, s2, 1
	s_cmp_eq_u32 s2, 3
	s_cbranch_scc0 BB53_12
	s_add_i32 s19, s19, 1
	s_cmp_eq_u32 s19, s13
	s_cbranch_scc0 BB53_1
	v_or_b32_e32 v1, s6, v13
	v_mul_lo_u32 v7, 0x3200, v7
	s_mov_b32 s0, 0x19000
	v_lshlrev_b32_e32 v8, 4, v8
	s_mul_i32 s7, s7, s0
	v_lshlrev_b32_e32 v1, 1, v1
	s_mulk_i32 s12, 0xa00
	v_and_b32_e32 v8, 0xfffffe00, v8
	v_add_nc_u32_e32 v7, s7, v7
	s_clause 0x5
	global_load_ushort v15, v1, s[10:11] offset:256
	global_load_dword v19, v1, s[10:11]
	global_load_ushort v21, v1, s[10:11] offset:258
	global_load_ushort v41, v1, s[10:11] offset:260
	global_load_ushort v42, v1, s[10:11] offset:262
	global_load_dword v1, v1, s[10:11] offset:4
	v_or3_b32 v7, v7, s6, v13
	v_mov_b32_e32 v13, 0xffff
	v_add3_u32 v7, v7, s12, v8
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_nc_u32_e32 v10, 0x6402, v7
	v_add_nc_u32_e32 v25, 0x6482, v7
	v_add_nc_u32_e32 v27, 0xc802, v7
	v_add_nc_u32_e32 v29, 0xc882, v7
	v_add_nc_u32_e32 v31, 0x12c02, v7
	v_add_nc_u32_e32 v33, 0x12c82, v7
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_ashrrev_i32_e32 v11, 31, v10
	v_ashrrev_i32_e32 v26, 31, v25
	v_ashrrev_i32_e32 v28, 31, v27
	v_ashrrev_i32_e32 v30, 31, v29
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_co_u32 v7, vcc_lo, s8, v7
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_add_co_ci_u32_e32 v8, vcc_lo, s9, v8, vcc_lo
	v_lshlrev_b64 v[25:26], 1, v[25:26]
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_add_co_u32 v35, vcc_lo, 0x25800, v7
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_ci_u32_e32 v36, vcc_lo, 0, v8, vcc_lo
	v_add_co_u32 v37, vcc_lo, s0, v7
	v_ashrrev_i32_e32 v34, 31, v33
	v_add_co_ci_u32_e32 v38, vcc_lo, 0, v8, vcc_lo
	v_add_co_u32 v39, vcc_lo, 0xc800, v7
	v_lshlrev_b64 v[31:32], 1, v[31:32]
	v_add_co_ci_u32_e32 v40, vcc_lo, 0, v8, vcc_lo
	v_add_co_u32 v10, vcc_lo, s8, v10
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_add_co_ci_u32_e32 v11, vcc_lo, s9, v11, vcc_lo
	v_add_co_u32 v25, vcc_lo, s8, v25
	v_add_co_ci_u32_e32 v26, vcc_lo, s9, v26, vcc_lo
	v_add_co_u32 v27, vcc_lo, s8, v27
	v_add_co_ci_u32_e32 v28, vcc_lo, s9, v28, vcc_lo
	v_add_co_u32 v29, vcc_lo, s8, v29
	v_add_co_ci_u32_e32 v30, vcc_lo, s9, v30, vcc_lo
	v_add_co_u32 v31, vcc_lo, s8, v31
	v_add_co_ci_u32_e32 v32, vcc_lo, s9, v32, vcc_lo
	v_add_co_u32 v33, vcc_lo, s8, v33
	v_add_co_ci_u32_e32 v34, vcc_lo, s9, v34, vcc_lo
	s_waitcnt vmcnt(5)
	v_add_f16_e32 v43, v15, v22
	v_and_b32_e32 v15, v13, v15
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v23, v19, v23
	s_waitcnt vmcnt(2)
	v_and_b32_e32 v13, v13, v41
	v_pk_add_f16 v16, v19, v16
	v_pk_add_f16 v17, v19, v17
	v_lshl_or_b32 v15, v21, 16, v15
	v_pk_add_f16 v24, v19, v24
	s_waitcnt vmcnt(1)
	v_lshl_or_b32 v13, v42, 16, v13
	v_add_f16_e32 v19, v41, v20
	v_add_f16_sdwa v22, v21, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v2, v15, v2
	v_pk_add_f16 v4, v15, v4
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v18, v1, v18
	v_pk_add_f16 v5, v15, v5
	v_add_f16_sdwa v20, v42, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_add_f16 v14, v1, v14
	v_pk_add_f16 v6, v13, v6
	v_pk_add_f16 v12, v1, v12
	v_pk_add_f16 v1, v1, v9
	v_pk_add_f16 v3, v13, v3
	v_pk_add_f16 v0, v13, v0
	v_max_f16_e32 v9, 0, v43
	v_pk_max_f16 v23, v23, 0
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v24, v24, 0
	v_max_f16_e32 v19, 0, v19
	v_pk_max_f16 v4, v4, 0
	v_max_f16_e32 v22, 0, v22
	v_pk_max_f16 v18, v18, 0
	v_pk_max_f16 v5, v5, 0
	v_max_f16_e32 v20, 0, v20
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v6, v6, 0
	global_store_short v[7:8], v9, off offset:256
	global_store_dword v[7:8], v24, off
	global_store_short v[7:8], v22, off offset:258
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v1, v1, 0
	global_store_dword v[35:36], v16, off
	global_store_dword v[37:38], v17, off
	global_store_dword v[39:40], v23, off
	global_store_short v[7:8], v19, off offset:260
	global_store_dword v[7:8], v18, off offset:4
	global_store_short v[7:8], v20, off offset:262
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v0, v0, 0
	global_store_dword v[35:36], v2, off offset:256
	global_store_dword v[37:38], v4, off offset:256
	global_store_dword v[39:40], v5, off offset:256
	global_store_dword v[10:11], v14, off
	global_store_dword v[25:26], v6, off
	global_store_dword v[27:28], v12, off
	global_store_dword v[29:30], v3, off
	global_store_dword v[31:32], v1, off
	global_store_dword v[33:34], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0
		.amdhsa_group_segment_fixed_size 19928
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 126
		.amdhsa_next_free_sgpr 24
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end53:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0, .Lfunc_end53-tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0:
	s_mov_b32 s0, 0x66666667
	s_mov_b32 s9, 0xc800
	v_mul_hi_i32 v1, v0, s0
	s_mul_hi_i32 s0, s6, s0
	s_mov_b32 s10, 0x64000
	s_lshr_b32 s7, s0, 31
	s_ashr_i32 s0, s0, 2
	s_clause 0x3
	s_load_dwordx2 s[12:13], s[4:5], 0x0
	s_load_dwordx2 s[14:15], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	s_add_i32 s7, s0, s7
	v_lshlrev_b32_e32 v19, 3, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 6, v1
	s_mul_i32 s16, s7, s10
	s_mul_i32 s0, s7, 10
	s_lshl_b32 s1, s6, 8
	s_sub_i32 s0, s6, s0
	v_add_nc_u32_e32 v16, v1, v2
	v_and_b32_e32 v1, 31, v0
	s_movk_i32 s8, 0x2800
	s_ashr_i32 s6, s0, 1
	v_lshlrev_b32_e32 v20, 4, v0
	v_mul_lo_u32 v2, 0xa0, v16
	v_mul_lo_u32 v3, v16, s9
	v_mul_lo_u32 v8, 0x280, v16
	v_lshlrev_b32_e32 v21, 3, v1
	s_mul_i32 s0, s6, s8
	v_or_b32_e32 v5, 2, v19
	v_or_b32_e32 v6, 3, v19
	v_or_b32_e32 v7, 4, v19
	v_sub_nc_u32_e32 v17, v0, v2
	v_add_nc_u32_e32 v3, s16, v3
	v_or_b32_e32 v2, 1, v19
	s_mov_b32 s11, 0x8000
	v_and_b32_e32 v25, 0xfa, v5
	v_ashrrev_i32_e32 v4, 5, v17
	v_lshl_or_b32 v1, v1, 1, v3
	v_and_b32_e32 v23, 0xf9, v2
	v_or_b32_e32 v2, 6, v19
	v_and_b32_e32 v26, 0xfb, v6
	v_lshlrev_b32_e32 v3, 11, v4
	v_and_b32_e32 v27, 0xfc, v7
	v_lshl_or_b32 v18, v0, 2, s11
	v_and_b32_e32 v29, 0xfe, v2
	v_cmp_gt_i32_e32 vcc_lo, 0x80, v0
	v_add3_u32 v24, v1, s0, v3
	v_lshl_add_u32 v3, v4, 6, v8
	v_or_b32_e32 v1, 5, v19
	v_and_b32_e32 v22, 0x3e00, v20
	v_or_b32_e32 v30, 7, v19
	v_mov_b32_e32 v0, 0
	v_lshl_add_u32 v31, v3, 1, s11
	v_and_b32_e32 v28, 0xfd, v1
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	s_and_b32 s1, s1, 0x100
	s_mov_b32 s11, 0
	s_movk_i32 s16, 0x5000
	s_movk_i32 s17, 0x7800
	s_mov_b32 s18, 0xa000
	s_mov_b32 s19, 0xf000
BB54_1:
	s_lshl_b32 s0, s11, 15
	v_or3_b32 v79, s0, v22, s1
	v_or_b32_e32 v32, v79, v21
	v_or_b32_e32 v34, v79, v25
	v_or_b32_e32 v36, v79, v27
	v_or_b32_e32 v38, v79, v29
	v_ashrrev_i32_e32 v33, 31, v32
	v_ashrrev_i32_e32 v35, 31, v34
	v_ashrrev_i32_e32 v37, 31, v36
	v_ashrrev_i32_e32 v39, 31, v38
	v_lshlrev_b64 v[32:33], 1, v[32:33]
	v_lshlrev_b64 v[34:35], 1, v[34:35]
	v_lshlrev_b64 v[40:41], 1, v[36:37]
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v36, s0, s14, v32
	v_add_co_ci_u32_e64 v37, s0, s15, v33, s0
	v_add_co_u32 v34, s0, s14, v34
	v_add_co_ci_u32_e64 v35, s0, s15, v35, s0
	v_add_co_u32 v32, s0, s14, v40
	v_add_co_ci_u32_e64 v33, s0, s15, v41, s0
	v_add_co_u32 v40, s0, s8, v36
	v_add_co_ci_u32_e64 v41, s0, 0, v37, s0
	v_add_co_u32 v38, s0, s14, v38
	v_add_co_ci_u32_e64 v39, s0, s15, v39, s0
	v_add_co_u32 v42, s0, s8, v34
	v_add_co_ci_u32_e64 v43, s0, 0, v35, s0
	v_add_co_u32 v44, s0, s8, v32
	v_add_co_ci_u32_e64 v45, s0, 0, v33, s0
	v_add_co_u32 v46, s0, s8, v38
	v_add_co_ci_u32_e64 v47, s0, 0, v39, s0
	v_add_co_u32 v52, s0, s16, v36
	v_add_co_ci_u32_e64 v53, s0, 0, v37, s0
	v_add_co_u32 v54, s0, s16, v34
	v_add_co_ci_u32_e64 v55, s0, 0, v35, s0
	v_add_co_u32 v56, s0, s16, v32
	v_add_co_ci_u32_e64 v57, s0, 0, v33, s0
	v_add_co_u32 v58, s0, s16, v38
	v_add_co_ci_u32_e64 v59, s0, 0, v39, s0
	v_add_co_u32 v60, s0, s17, v36
	s_clause 0x7
	global_load_ushort v48, v[40:41], off
	global_load_ushort v49, v[42:43], off
	global_load_ushort v50, v[44:45], off
	global_load_ushort v51, v[46:47], off
	global_load_ushort v52, v[52:53], off
	global_load_ushort v53, v[54:55], off
	global_load_ushort v54, v[56:57], off
	global_load_ushort v55, v[58:59], off
	v_add_co_ci_u32_e64 v61, s0, 0, v37, s0
	v_add_co_u32 v40, s0, s17, v34
	s_clause 0x3
	global_load_ushort v56, v[36:37], off
	global_load_ushort v57, v[34:35], off
	global_load_ushort v58, v[32:33], off
	global_load_ushort v59, v[38:39], off
	v_add_co_ci_u32_e64 v41, s0, 0, v35, s0
	v_add_co_u32 v42, s0, s17, v32
	v_add_co_ci_u32_e64 v43, s0, 0, v33, s0
	v_add_co_u32 v44, s0, s17, v38
	v_add_co_ci_u32_e64 v45, s0, 0, v39, s0
	v_add_co_u32 v46, s0, s18, v36
	v_add_co_ci_u32_e64 v47, s0, 0, v37, s0
	v_add_co_u32 v65, s0, s18, v34
	v_add_co_ci_u32_e64 v66, s0, 0, v35, s0
	v_add_co_u32 v67, s0, s18, v32
	v_add_co_ci_u32_e64 v68, s0, 0, v33, s0
	v_add_co_u32 v69, s0, s18, v38
	v_add_co_ci_u32_e64 v70, s0, 0, v39, s0
	v_add_co_u32 v71, s0, s9, v36
	v_add_co_ci_u32_e64 v72, s0, 0, v37, s0
	v_add_co_u32 v73, s0, s9, v34
	v_add_co_ci_u32_e64 v74, s0, 0, v35, s0
	v_add_co_u32 v75, s0, s9, v32
	v_add_co_ci_u32_e64 v76, s0, 0, v33, s0
	v_add_co_u32 v77, s0, s9, v38
	v_add_co_ci_u32_e64 v78, s0, 0, v39, s0
	s_clause 0xb
	global_load_ushort v60, v[60:61], off
	global_load_ushort v61, v[40:41], off
	global_load_ushort v62, v[42:43], off
	global_load_ushort v63, v[44:45], off
	global_load_ushort v64, v[46:47], off
	global_load_ushort v65, v[65:66], off
	global_load_ushort v66, v[67:68], off
	global_load_ushort v67, v[69:70], off
	global_load_ushort v68, v[71:72], off
	global_load_ushort v69, v[73:74], off
	global_load_ushort v70, v[75:76], off
	global_load_ushort v71, v[77:78], off
	v_lshl_add_u32 v40, s11, 6, v24
	v_or_b32_e32 v42, v79, v23
	v_or_b32_e32 v44, v79, v26
	v_or_b32_e32 v46, v79, v28
	v_or_b32_sdwa v72, v79, v30 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
	v_ashrrev_i32_e32 v41, 31, v40
	v_ashrrev_i32_e32 v43, 31, v42
	v_ashrrev_i32_e32 v45, 31, v44
	v_ashrrev_i32_e32 v47, 31, v46
	v_ashrrev_i32_e32 v73, 31, v72
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_add_co_u32 v74, s0, s12, v40
	v_add_co_ci_u32_e64 v75, s0, s13, v41, s0
	v_lshlrev_b64 v[40:41], 1, v[42:43]
	v_lshlrev_b64 v[42:43], 1, v[44:45]
	v_lshlrev_b64 v[44:45], 1, v[46:47]
	v_lshlrev_b64 v[46:47], 1, v[72:73]
	v_add_co_u32 v72, s0, 0x32000, v74
	v_add_co_ci_u32_e64 v73, s0, 0, v75, s0
	v_add_co_u32 v76, s0, s10, v74
	v_add_co_ci_u32_e64 v77, s0, 0, v75, s0
	v_add_co_u32 v78, s0, 0x96000, v74
	v_add_co_ci_u32_e64 v79, s0, 0, v75, s0
	v_add_co_u32 v40, s0, s14, v40
	s_clause 0x3
	global_load_dword v108, v[74:75], off
	global_load_dword v109, v[72:73], off
	global_load_dword v110, v[76:77], off
	global_load_dword v111, v[78:79], off
	v_add_co_ci_u32_e64 v41, s0, s15, v41, s0
	v_add_co_u32 v42, s0, s14, v42
	v_add_co_ci_u32_e64 v43, s0, s15, v43, s0
	v_add_co_u32 v44, s0, s14, v44
	v_add_co_ci_u32_e64 v45, s0, s15, v45, s0
	v_add_co_u32 v46, s0, s14, v46
	v_add_co_ci_u32_e64 v47, s0, s15, v47, s0
	v_add_co_u32 v72, s0, s8, v40
	v_add_co_ci_u32_e64 v73, s0, 0, v41, s0
	v_add_co_u32 v74, s0, s8, v42
	v_add_co_ci_u32_e64 v75, s0, 0, v43, s0
	v_add_co_u32 v76, s0, s8, v44
	v_add_co_ci_u32_e64 v77, s0, 0, v45, s0
	v_add_co_u32 v78, s0, s8, v46
	v_add_co_ci_u32_e64 v79, s0, 0, v47, s0
	v_add_co_u32 v80, s0, s16, v40
	v_add_co_ci_u32_e64 v81, s0, 0, v41, s0
	v_add_co_u32 v82, s0, s16, v42
	v_add_co_ci_u32_e64 v83, s0, 0, v43, s0
	v_add_co_u32 v84, s0, s16, v44
	v_add_co_ci_u32_e64 v85, s0, 0, v45, s0
	v_add_co_u32 v86, s0, s16, v46
	v_add_co_ci_u32_e64 v87, s0, 0, v47, s0
	v_add_co_u32 v88, s0, s17, v40
	v_add_co_ci_u32_e64 v89, s0, 0, v41, s0
	v_add_co_u32 v90, s0, s17, v42
	v_add_co_ci_u32_e64 v91, s0, 0, v43, s0
	v_add_co_u32 v92, s0, s17, v44
	v_add_co_ci_u32_e64 v93, s0, 0, v45, s0
	v_add_co_u32 v94, s0, s17, v46
	v_add_co_ci_u32_e64 v95, s0, 0, v47, s0
	v_add_co_u32 v96, s0, s18, v40
	v_add_co_ci_u32_e64 v97, s0, 0, v41, s0
	v_add_co_u32 v98, s0, s18, v42
	v_add_co_ci_u32_e64 v99, s0, 0, v43, s0
	v_add_co_u32 v100, s0, s18, v44
	v_add_co_ci_u32_e64 v101, s0, 0, v45, s0
	v_add_co_u32 v102, s0, s18, v46
	v_add_co_ci_u32_e64 v103, s0, 0, v47, s0
	v_add_co_u32 v104, s0, s9, v40
	v_add_co_ci_u32_e64 v105, s0, 0, v41, s0
	v_add_co_u32 v106, s0, s9, v42
	v_add_co_ci_u32_e64 v107, s0, 0, v43, s0
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v48, v[72:73], off
	v_add_co_u32 v72, s0, s9, v44
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v49, v[74:75], off
	v_add_co_ci_u32_e64 v73, s0, 0, v45, s0
	v_add_co_u32 v74, s0, s9, v46
	v_add_co_ci_u32_e64 v75, s0, 0, v47, s0
	s_waitcnt vmcnt(21)
	global_load_short_d16_hi v56, v[40:41], off
	s_waitcnt vmcnt(21)
	global_load_short_d16_hi v57, v[42:43], off
	s_waitcnt vmcnt(21)
	global_load_short_d16_hi v58, v[44:45], off
	s_waitcnt vmcnt(21)
	s_clause 0x6
	global_load_short_d16_hi v59, v[46:47], off
	global_load_short_d16_hi v50, v[76:77], off
	global_load_short_d16_hi v51, v[78:79], off
	global_load_short_d16_hi v52, v[80:81], off
	global_load_short_d16_hi v53, v[82:83], off
	global_load_short_d16_hi v54, v[84:85], off
	global_load_short_d16_hi v55, v[86:87], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v60, v[88:89], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v61, v[90:91], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v62, v[92:93], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v63, v[94:95], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v64, v[96:97], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v65, v[98:99], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v66, v[100:101], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v67, v[102:103], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v68, v[104:105], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v69, v[106:107], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v70, v[72:73], off
	s_waitcnt vmcnt(27)
	global_load_short_d16_hi v71, v[74:75], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2st64_b32 v18, v108, v109 offset1:5
	ds_write2st64_b32 v18, v110, v111 offset0:10 offset1:15
	ds_write_b128 v20, v[56:59]
	ds_write_b128 v20, v[48:51] offset:5120
	ds_write_b128 v20, v[52:55] offset:10240
	ds_write_b128 v20, v[60:63] offset:15360
	ds_write_b128 v20, v[64:67] offset:20480
	ds_write_b128 v20, v[68:71] offset:25600
	s_and_saveexec_b32 s20, vcc_lo
	s_cbranch_execz BB54_3
	v_add_co_u32 v36, s0, s19, v36
	v_add_co_ci_u32_e64 v37, s0, 0, v37, s0
	v_add_co_u32 v34, s0, s19, v34
	v_add_co_ci_u32_e64 v35, s0, 0, v35, s0
	v_add_co_u32 v48, s0, s19, v32
	v_add_co_ci_u32_e64 v49, s0, 0, v33, s0
	v_add_co_u32 v38, s0, s19, v38
	v_add_co_ci_u32_e64 v39, s0, 0, v39, s0
	s_clause 0x3
	global_load_ushort v32, v[36:37], off
	global_load_ushort v33, v[34:35], off
	global_load_ushort v34, v[48:49], off
	global_load_ushort v35, v[38:39], off
	v_add_co_u32 v36, s0, s19, v40
	v_add_co_ci_u32_e64 v37, s0, 0, v41, s0
	v_add_co_u32 v38, s0, s19, v42
	v_add_co_ci_u32_e64 v39, s0, 0, v43, s0
	v_add_co_u32 v40, s0, s19, v44
	v_add_co_ci_u32_e64 v41, s0, 0, v45, s0
	v_add_co_u32 v42, s0, s19, v46
	v_add_co_ci_u32_e64 v43, s0, 0, v47, s0
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v32, v[36:37], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v33, v[38:39], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v34, v[40:41], off
	s_waitcnt vmcnt(3)
	global_load_short_d16_hi v35, v[42:43], off
	s_waitcnt vmcnt(0)
	ds_write_b128 v20, v[32:35] offset:30720
BB54_3:
	s_or_b32 exec_lo, exec_lo, s20
	v_mov_b32_e32 v32, v31
	s_mov_b32 s0, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB54_4:
	v_or_b32_e32 v49, s0, v21
	ds_read_b128 v[33:36], v32
	ds_read_b128 v[37:40], v32 offset:640
	ds_read_b128 v[41:44], v32 offset:2560
	ds_read_b128 v[45:48], v32 offset:3200
	v_add_nc_u32_e32 v32, 16, v32
	s_addk_i32 s0, 0x800
	v_lshlrev_b32_e32 v77, 1, v49
	s_cmpk_lg_i32 s0, 0x4000
	ds_read_b128 v[49:52], v77
	ds_read_b128 v[53:56], v77 offset:512
	ds_read_b128 v[57:60], v77 offset:1024
	ds_read_b128 v[61:64], v77 offset:1536
	ds_read_b128 v[65:68], v77 offset:2048
	ds_read_b128 v[69:72], v77 offset:2560
	ds_read_b128 v[73:76], v77 offset:3072
	ds_read_b128 v[77:80], v77 offset:3584
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v15, v33, v49, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v41, v49, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v33, v50, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v41, v50, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v33, v51, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v41, v51, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v33, v52, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v41, v52, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v37, v49, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v45, v49, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v37, v50, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v45, v50, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v37, v51, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v45, v51, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v37, v52, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v45, v52, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v15, v33, v53, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v41, v53, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v33, v54, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v41, v54, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v33, v55, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v41, v55, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v33, v56, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v41, v56, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v37, v53, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v45, v53, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v37, v54, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v45, v54, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v37, v55, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v45, v55, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v37, v56, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v45, v56, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v15, v34, v57, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v42, v57, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v34, v58, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v42, v58, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v34, v59, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v42, v59, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v34, v60, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v42, v60, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v38, v57, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v46, v57, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v38, v58, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v46, v58, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v38, v59, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v46, v59, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v38, v60, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v46, v60, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v15, v34, v61, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v42, v61, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v34, v62, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v42, v62, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v34, v63, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v42, v63, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v34, v64, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v42, v64, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v38, v61, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v46, v61, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v38, v62, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v46, v62, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v38, v63, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v46, v63, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v38, v64, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v46, v64, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v15, v35, v65, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v43, v65, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v35, v66, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v43, v66, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v35, v67, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v43, v67, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v35, v68, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v43, v68, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v39, v65, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v47, v65, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v39, v66, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v47, v66, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v39, v67, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v47, v67, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v39, v68, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v47, v68, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v15, v35, v69, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v43, v69, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v35, v70, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v43, v70, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v35, v71, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v43, v71, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v35, v72, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v43, v72, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v39, v69, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v47, v69, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v39, v70, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v47, v70, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v39, v71, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v47, v71, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v39, v72, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v47, v72, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v15, v36, v73, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v44, v73, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v36, v74, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v44, v74, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v36, v75, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v44, v75, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v36, v76, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v44, v76, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v40, v73, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v48, v73, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v40, v74, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v48, v74, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v40, v75, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v48, v75, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v40, v76, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v48, v76, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v15, v36, v77, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v44, v77, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v36, v78, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v44, v78, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v36, v79, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v44, v79, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v36, v80, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v44, v80, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v40, v77, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v48, v77, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v40, v78, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v48, v78, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v40, v79, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v48, v79, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v40, v80, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v48, v80, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB54_4
	s_add_i32 s11, s11, 1
	s_cmp_eq_u32 s11, 32
	s_cbranch_scc0 BB54_1
	v_and_b32_e32 v18, 0xf8, v19
	v_mul_lo_u32 v16, 0x6400, v16
	s_mov_b32 s0, 0x19000
	v_lshlrev_b32_e32 v17, 4, v17
	s_mul_i32 s7, s7, s0
	v_or_b32_e32 v19, s1, v18
	s_mulk_i32 s6, 0xa00
	v_and_b32_e32 v17, 0xfffffe00, v17
	v_add_nc_u32_e32 v16, s7, v16
	v_lshlrev_b32_e32 v19, 1, v19
	v_or3_b32 v16, v16, s1, v18
	s_clause 0x3
	global_load_dword v42, v19, s[4:5]
	global_load_dword v43, v19, s[4:5] offset:4
	global_load_dword v44, v19, s[4:5] offset:8
	global_load_dword v45, v19, s[4:5] offset:12
	v_add3_u32 v16, v16, s6, v17
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_nc_u32_e32 v18, 0xc802, v16
	v_add_nc_u32_e32 v20, 0xc804, v16
	v_add_nc_u32_e32 v22, 0xc806, v16
	v_add_nc_u32_e32 v24, 0x3200, v16
	v_add_nc_u32_e32 v26, 0xfa00, v16
	v_add_nc_u32_e32 v28, 0x3202, v16
	v_add_nc_u32_e32 v30, 0xfa02, v16
	v_add_nc_u32_e32 v32, 0x3204, v16
	v_add_nc_u32_e32 v34, 0xfa04, v16
	v_add_nc_u32_e32 v36, 0x3206, v16
	v_add_nc_u32_e32 v38, 0xfa06, v16
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_ashrrev_i32_e32 v19, 31, v18
	v_ashrrev_i32_e32 v21, 31, v20
	v_ashrrev_i32_e32 v23, 31, v22
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v27, 31, v26
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_lshlrev_b64 v[22:23], 1, v[22:23]
	v_add_co_u32 v40, vcc_lo, s0, v16
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_add_co_ci_u32_e32 v41, vcc_lo, 0, v17, vcc_lo
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_ashrrev_i32_e32 v29, 31, v28
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_add_co_u32 v22, vcc_lo, s2, v22
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_co_ci_u32_e32 v23, vcc_lo, s3, v23, vcc_lo
	v_add_co_u32 v24, vcc_lo, s2, v24
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v25, vcc_lo
	v_add_co_u32 v26, vcc_lo, s2, v26
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_ashrrev_i32_e32 v35, 31, v34
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v27, vcc_lo
	v_add_co_u32 v28, vcc_lo, s2, v28
	v_lshlrev_b64 v[32:33], 1, v[32:33]
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	v_add_co_u32 v30, vcc_lo, s2, v30
	v_lshlrev_b64 v[34:35], 1, v[34:35]
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_ci_u32_e32 v31, vcc_lo, s3, v31, vcc_lo
	v_add_co_u32 v32, vcc_lo, s2, v32
	v_lshlrev_b64 v[36:37], 1, v[36:37]
	v_add_co_ci_u32_e32 v33, vcc_lo, s3, v33, vcc_lo
	v_add_co_u32 v34, vcc_lo, s2, v34
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	v_add_co_ci_u32_e32 v35, vcc_lo, s3, v35, vcc_lo
	v_add_co_u32 v36, vcc_lo, s2, v36
	v_add_co_ci_u32_e32 v37, vcc_lo, s3, v37, vcc_lo
	v_add_co_u32 v38, vcc_lo, s2, v38
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v39, vcc_lo
	s_waitcnt vmcnt(3)
	v_pk_add_f16 v15, v42, v15
	v_pk_add_f16 v14, v42, v14
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v13, v43, v13
	v_pk_add_f16 v12, v43, v12
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v11, v44, v11
	v_pk_add_f16 v10, v44, v10
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v9, v45, v9
	v_pk_add_f16 v8, v45, v8
	v_pk_add_f16 v7, v42, v7
	v_pk_add_f16 v6, v42, v6
	v_pk_add_f16 v5, v43, v5
	v_pk_add_f16 v4, v43, v4
	v_pk_add_f16 v3, v44, v3
	v_pk_add_f16 v2, v44, v2
	v_pk_add_f16 v1, v45, v1
	v_pk_add_f16 v0, v45, v0
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v1, v1, 0
	v_pk_max_f16 v0, v0, 0
	global_store_dword v[16:17], v15, off
	global_store_dword v[40:41], v14, off
	global_store_dword v[16:17], v13, off offset:4
	global_store_dword v[18:19], v12, off
	global_store_dword v[16:17], v11, off offset:8
	global_store_dword v[20:21], v10, off
	global_store_dword v[16:17], v9, off offset:12
	global_store_dword v[22:23], v8, off
	global_store_dword v[24:25], v7, off
	global_store_dword v[26:27], v6, off
	global_store_dword v[28:29], v5, off
	global_store_dword v[30:31], v4, off
	global_store_dword v[32:33], v3, off
	global_store_dword v[34:35], v2, off
	global_store_dword v[36:37], v1, off
	global_store_dword v[38:39], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0
		.amdhsa_group_segment_fixed_size 37888
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 112
		.amdhsa_next_free_sgpr 21
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end54:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0, .Lfunc_end54-tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_and_b32_e32 v1, 7, v0
	v_lshrrev_b32_e32 v2, 3, v0
	v_lshlrev_b32_e32 v17, 1, v0
	s_ashr_i32 s1, s6, 1
	s_movk_i32 s7, 0x200
	s_mulk_i32 s1, 0x6400
	v_lshl_or_b32 v3, v2, 6, v1
	v_lshl_add_u32 v21, v2, 5, s7
	v_lshlrev_b32_e32 v22, 3, v1
	v_add_nc_u32_e32 v18, s7, v17
	v_cmp_gt_i32_e32 vcc_lo, 0x100, v0
	v_add_nc_u32_e32 v23, s1, v3
	v_and_b32_e32 v19, 31, v0
	v_and_b32_e32 v20, 0x7c0, v17
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v15, 0
	s_lshl_b32 s0, s6, 5
	s_mov_b32 s12, 0
	s_and_b32 s6, s0, 32
	s_branch BB55_2
BB55_1:
	s_or_b32 exec_lo, exec_lo, s13
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read2_b32 v[60:61], v22 offset1:1
	ds_read_b128 v[24:27], v21
	ds_read_b128 v[28:31], v21 offset:1600
	ds_read_b128 v[32:35], v21 offset:3200
	ds_read_b128 v[36:39], v21 offset:4800
	ds_read_b128 v[40:43], v21 offset:16
	ds_read_b128 v[44:47], v21 offset:1616
	ds_read_b128 v[48:51], v21 offset:3216
	ds_read_b128 v[52:55], v21 offset:4816
	ds_read2_b64 v[56:59], v22 offset0:8 offset1:16
	ds_read_b64 v[62:63], v22 offset:448
	v_add_nc_u32_e32 v20, s7, v20
	s_add_i32 s12, s12, 8
	s_cmp_eq_u32 s12, 64
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v14, v24, v60, v14 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v13, v28, v60, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v24, v61, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v28, v61, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v8, v32, v60, v8 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v10, v36, v60, v10 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v3, v48, v60, v3 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v4, v52, v60, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v32, v61, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v36, v61, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v40, v60, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v44, v60, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v40, v61, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v44, v61, v7 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v14, v24, v56, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v24, v57, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v28, v56, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v28, v57, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v48, v56, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v52, v56, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v60, v48, v61, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v61, v52, v61, v1 op_sel_hi:[0,1,1]
	ds_read2_b64 v[1:4], v22 offset0:24 offset1:32
	v_pk_fma_f16 v8, v32, v56, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v36, v56, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v40, v56, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v44, v56, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v40, v57, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v33, v58, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v37, v58, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v25, v59, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v45, v58, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v49, v58, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v25, v58, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v29, v58, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v41, v58, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v53, v58, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v41, v59, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v44, v57, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v32, v57, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v36, v57, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v48, v57, v60 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v8, v33, v1, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v37, v1, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v25, v2, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v45, v1, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v49, v1, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v25, v1, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v41, v1, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v29, v1, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v53, v1, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v41, v2, v16 op_sel:[1,0,0]
	ds_read2_b64 v[13:16], v22 offset0:40 offset1:48
	v_pk_fma_f16 v36, v52, v57, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v29, v59, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v33, v59, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v37, v59, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v45, v59, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v49, v59, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v53, v59, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v29, v2, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v33, v2, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v37, v2, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v45, v2, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v49, v2, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v53, v2, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v26, v3, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v34, v3, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v38, v3, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v26, v4, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v30, v4, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v34, v4, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v38, v4, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v42, v3, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v46, v3, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v50, v3, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v54, v3, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v46, v4, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v54, v4, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v30, v3, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v42, v4, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v50, v4, v29 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v4, v26, v13, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v26, v14, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v30, v13, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v42, v14, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v34, v14, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v27, v15, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v38, v14, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v50, v13, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v46, v14, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v30, v14, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v42, v13, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v50, v14, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v54, v14, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v27, v62, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v27, v16, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v31, v15, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v34, v13, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v38, v13, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v54, v13, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v46, v13, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v31, v62, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v31, v16, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v27, v63, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v43, v15, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v51, v15, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v35, v15, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v39, v15, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v35, v16, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v39, v16, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v47, v16, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v31, v63, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v47, v15, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v55, v15, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v43, v62, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v51, v62, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v43, v16, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v51, v16, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v55, v16, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v47, v62, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v55, v62, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v35, v62, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v39, v62, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v35, v63, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v39, v63, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v43, v63, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v47, v63, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v51, v63, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v55, v63, v26 op_sel:[1,0,0]
	s_cbranch_scc1 BB55_4
BB55_2:
	v_add_nc_u32_e32 v24, s12, v23
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v24, s0, s8, v24
	v_add_co_ci_u32_e64 v25, s0, s9, v25, s0
	v_add_co_u32 v26, s0, 0x1800, v24
	v_add_co_ci_u32_e64 v27, s0, 0, v25, s0
	v_add_co_u32 v28, s0, 0x3000, v24
	v_add_co_ci_u32_e64 v29, s0, 0, v25, s0
	v_add_co_u32 v30, s0, 0x4800, v24
	v_add_co_ci_u32_e64 v31, s0, 0, v25, s0
	v_add_co_u32 v32, s0, 0x6000, v24
	v_add_co_ci_u32_e64 v33, s0, 0, v25, s0
	v_add_co_u32 v34, s0, 0x7800, v24
	v_add_co_ci_u32_e64 v35, s0, 0, v25, s0
	v_add_co_u32 v36, s0, 0x9000, v24
	v_add_co_ci_u32_e64 v37, s0, 0, v25, s0
	v_add_co_u32 v38, s0, 0xa800, v24
	v_add_co_ci_u32_e64 v39, s0, 0, v25, s0
	s_clause 0x7
	global_load_ushort v24, v[24:25], off
	global_load_ushort v25, v[26:27], off offset:256
	global_load_ushort v26, v[28:29], off offset:512
	global_load_ushort v27, v[30:31], off offset:768
	global_load_ushort v28, v[32:33], off offset:1024
	global_load_ushort v29, v[34:35], off offset:1280
	global_load_ushort v30, v[36:37], off offset:1536
	global_load_ushort v31, v[38:39], off offset:1792
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v18, v24
	ds_write_b16 v18, v25 offset:800
	ds_write_b16 v18, v26 offset:1600
	ds_write_b16 v18, v27 offset:2400
	ds_write_b16 v18, v28 offset:3200
	ds_write_b16 v18, v29 offset:4000
	ds_write_b16 v18, v30 offset:4800
	ds_write_b16 v18, v31 offset:5600
	s_and_saveexec_b32 s13, vcc_lo
	s_cbranch_execz BB55_1
	v_or3_b32 v24, v20, s6, v19
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_add_co_u32 v24, s0, s10, v24
	v_add_co_ci_u32_e64 v25, s0, s11, v25, s0
	global_load_ushort v24, v[24:25], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v17, v24
	s_branch BB55_1
BB55_4:
	v_lshlrev_b32_e32 v17, 2, v0
	v_lshlrev_b32_e32 v0, 4, v0
	v_and_b32_e32 v17, 28, v17
	v_and_b32_e32 v0, 0x3f80, v0
	v_or_b32_e32 v18, s6, v17
	v_add_nc_u32_e32 v0, s1, v0
	v_lshlrev_b32_e32 v18, 1, v18
	v_or3_b32 v17, v0, s6, v17
	v_mov_b32_e32 v0, 0
	s_clause 0x1
	global_load_dword v43, v18, s[4:5]
	global_load_dword v44, v18, s[4:5] offset:4
	v_ashrrev_i32_e32 v18, 31, v17
	v_add_nc_u32_e32 v19, 0x1902, v17
	v_add_nc_u32_e32 v21, 0x1940, v17
	v_add_nc_u32_e32 v23, 0x1942, v17
	v_add_nc_u32_e32 v25, 0x3200, v17
	v_add_nc_u32_e32 v27, 0x4b00, v17
	v_add_nc_u32_e32 v29, 0x3202, v17
	v_add_nc_u32_e32 v31, 0x4b02, v17
	v_add_nc_u32_e32 v33, 0x3240, v17
	v_add_nc_u32_e32 v35, 0x4b40, v17
	v_add_nc_u32_e32 v37, 0x3242, v17
	v_add_nc_u32_e32 v39, 0x4b42, v17
	v_lshlrev_b64 v[17:18], 1, v[17:18]
	v_ashrrev_i32_e32 v20, 31, v19
	v_ashrrev_i32_e32 v22, 31, v21
	v_ashrrev_i32_e32 v24, 31, v23
	v_ashrrev_i32_e32 v26, 31, v25
	v_ashrrev_i32_e32 v28, 31, v27
	v_add_co_u32 v17, vcc_lo, s2, v17
	v_lshlrev_b64 v[19:20], 1, v[19:20]
	v_add_co_ci_u32_e32 v18, vcc_lo, s3, v18, vcc_lo
	v_lshlrev_b64 v[21:22], 1, v[21:22]
	v_lshlrev_b64 v[23:24], 1, v[23:24]
	v_add_co_u32 v41, vcc_lo, 0x3000, v17
	v_lshlrev_b64 v[25:26], 1, v[25:26]
	v_add_co_ci_u32_e32 v42, vcc_lo, 0, v18, vcc_lo
	v_add_co_u32 v19, vcc_lo, s2, v19
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_co_ci_u32_e32 v20, vcc_lo, s3, v20, vcc_lo
	v_add_co_u32 v21, vcc_lo, s2, v21
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v22, vcc_lo
	v_add_co_u32 v23, vcc_lo, s2, v23
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v24, vcc_lo
	v_add_co_u32 v25, vcc_lo, s2, v25
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_ashrrev_i32_e32 v34, 31, v33
	v_add_co_ci_u32_e32 v26, vcc_lo, s3, v26, vcc_lo
	v_add_co_u32 v27, vcc_lo, s2, v27
	v_lshlrev_b64 v[31:32], 1, v[31:32]
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_co_ci_u32_e32 v28, vcc_lo, s3, v28, vcc_lo
	v_add_co_u32 v29, vcc_lo, s2, v29
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v30, vcc_lo, s3, v30, vcc_lo
	v_add_co_u32 v31, vcc_lo, s2, v31
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_ashrrev_i32_e32 v40, 31, v39
	v_add_co_ci_u32_e32 v32, vcc_lo, s3, v32, vcc_lo
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_add_co_u32 v35, vcc_lo, s2, v35
	v_lshlrev_b64 v[39:40], 1, v[39:40]
	v_add_co_ci_u32_e32 v36, vcc_lo, s3, v36, vcc_lo
	v_add_co_u32 v37, vcc_lo, s2, v37
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v38, vcc_lo
	v_add_co_u32 v39, vcc_lo, s2, v39
	v_add_co_ci_u32_e32 v40, vcc_lo, s3, v40, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v14, v43, v14
	v_pk_add_f16 v13, v43, v13
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v12, v44, v12
	v_pk_add_f16 v11, v44, v11
	v_pk_add_f16 v15, v43, v15
	v_pk_add_f16 v9, v43, v9
	v_pk_add_f16 v7, v44, v7
	v_pk_add_f16 v8, v43, v8
	v_pk_add_f16 v10, v43, v10
	v_pk_add_f16 v5, v44, v5
	v_pk_add_f16 v6, v44, v6
	v_pk_add_f16 v3, v43, v3
	v_pk_add_f16 v4, v43, v4
	v_pk_add_f16 v2, v44, v2
	v_pk_add_f16 v1, v44, v1
	v_pk_add_f16 v16, v44, v16
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v11, v11, 0
	v_max_f16_e32 v43, 0, v15
	v_max_f16_sdwa v15, v15, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_pk_max_f16 v9, v9, 0
	v_max_f16_e32 v44, 0, v16
	v_max_f16_sdwa v0, v16, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v1, v1, 0
	global_store_dword v[17:18], v14, off
	global_store_dword v[41:42], v13, off offset:512
	global_store_dword v[17:18], v12, off offset:4
	global_store_dword v[19:20], v11, off
	global_store_short v[17:18], v43, off offset:128
	global_store_short v[17:18], v15, off offset:130
	global_store_dword v[21:22], v9, off
	global_store_short v[17:18], v44, off offset:132
	global_store_short v[17:18], v0, off offset:134
	global_store_dword v[23:24], v7, off
	global_store_dword v[25:26], v8, off
	global_store_dword v[27:28], v10, off
	global_store_dword v[29:30], v5, off
	global_store_dword v[31:32], v6, off
	global_store_dword v[33:34], v3, off
	global_store_dword v[35:36], v4, off
	global_store_dword v[37:38], v2, off
	global_store_dword v[39:40], v1, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0
		.amdhsa_group_segment_fixed_size 6912
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 64
		.amdhsa_next_free_sgpr 14
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end55:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0, .Lfunc_end55-tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0:
	v_lshrrev_b32_e32 v2, 3, v0
	s_mov_b32 s14, 0xcccccccd
	v_lshlrev_b32_e32 v11, 3, v0
	s_mul_hi_i32 s7, s6, 0x66666667
	s_movk_i32 s15, 0xa00
	v_add_nc_u32_e32 v3, 32, v2
	s_lshr_b32 s9, s7, 31
	v_add_nc_u32_e32 v5, 0x800, v11
	s_ashr_i32 s7, s7, 1
	v_add_nc_u32_e32 v6, 0xc00, v11
	v_mul_hi_u32 v1, v3, s14
	s_add_i32 s7, s7, s9
	v_mul_hi_u32 v5, v5, s14
	s_mul_i32 s9, s7, 5
	s_mov_b32 s16, 0xc800
	s_sub_i32 s6, s6, s9
	s_mov_b32 s0, 0x32000
	v_mul_hi_u32 v6, v6, s14
	v_lshrrev_b32_e32 v4, 5, v1
	v_and_b32_e32 v1, 56, v11
	v_lshrrev_b32_e32 v5, 11, v5
	s_mul_i32 s17, s7, s0
	s_mul_i32 s9, s6, 0x2800
	v_mul_u32_u24_e32 v4, 40, v4
	s_add_i32 s17, s17, s9
	v_mul_i32_i24_e32 v12, s16, v5
	s_movk_i32 s8, 0x1000
	v_or_b32_e32 v10, s17, v1
	v_sub_nc_u32_e32 v3, v3, v4
	v_add_nc_u32_e32 v4, 8, v2
	v_add_nc_u32_e32 v15, s8, v11
	s_movk_i32 s1, 0x2000
	v_lshl_add_u32 v9, v2, 8, s17
	v_lshlrev_b32_e32 v7, 6, v3
	v_lshlrev_b32_e32 v3, 8, v3
	v_lshlrev_b32_e32 v8, 6, v4
	v_lshrrev_b32_e32 v6, 11, v6
	s_movk_i32 s9, 0x1800
	v_mad_i32_i24 v5, v5, s15, v7
	v_add3_u32 v20, v10, v12, v3
	v_mul_hi_u32 v12, v15, s14
	v_or_b32_e32 v19, v9, v1
	v_mad_i32_i24 v9, v6, s15, v8
	v_or_b32_e32 v5, v5, v1
	v_add_nc_u32_e32 v15, 24, v2
	v_lshl_add_u32 v4, v4, 8, v10
	v_add_nc_u32_e32 v17, 0x1c00, v11
	v_or_b32_e32 v9, v9, v1
	v_lshl_add_u32 v21, v5, 1, s1
	v_add_nc_u32_e32 v5, s9, v11
	v_lshlrev_b32_e32 v16, 6, v15
	v_mad_i32_i24 v24, v6, s16, v4
	v_add_nc_u32_e32 v6, 16, v2
	v_lshrrev_b32_e32 v12, 11, v12
	v_mul_hi_u32 v5, v5, s14
	v_lshl_add_u32 v15, v15, 8, v10
	v_or_b32_e32 v22, s1, v11
	v_add_nc_u32_e32 v23, 0x2400, v11
	v_lshl_add_u32 v26, v9, 1, s1
	v_mad_i32_i24 v9, v12, s15, v16
	v_lshlrev_b32_e32 v18, 6, v6
	v_mad_i32_i24 v32, v12, s16, v15
	v_lshrrev_b32_e32 v5, 11, v5
	v_mul_hi_u32 v12, v22, s14
	v_mul_hi_u32 v22, v23, s14
	v_mul_hi_u32 v17, v17, s14
	v_or_b32_e32 v9, v9, v1
	v_mad_i32_i24 v18, v5, s15, v18
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshlrev_b32_e32 v6, 8, v6
	v_mul_i32_i24_e32 v5, s16, v5
	v_lshl_add_u32 v33, v9, 1, s1
	v_lshrrev_b32_e32 v12, 11, v12
	v_lshrrev_b32_e32 v9, 11, v17
	v_or_b32_e32 v17, v18, v1
	v_lshrrev_b32_e32 v18, 11, v22
	v_add3_u32 v34, v10, v6, v5
	v_mad_i32_i24 v6, v12, s15, v8
	v_mad_i32_i24 v7, v9, s15, v7
	v_mul_i32_i24_e32 v5, s16, v9
	v_mad_i32_i24 v8, v18, s15, v16
	v_lshlrev_b32_e32 v13, 4, v0
	v_mul_u32_u24_e32 v2, 0x280, v2
	v_or_b32_e32 v7, v7, v1
	v_add3_u32 v38, v10, v5, v3
	v_or_b32_e32 v3, v6, v1
	v_or_b32_e32 v5, v8, v1
	v_mad_i32_i24 v42, v12, s16, v4
	v_mad_i32_i24 v44, v18, s16, v15
	v_lshl_add_u32 v36, v17, 1, s1
	v_lshl_add_u32 v39, v7, 1, s1
	v_lshl_add_u32 v43, v3, 1, s1
	v_lshl_add_u32 v45, v5, 1, s1
	v_lshl_add_u32 v46, v2, 1, s1
	v_add_nc_u32_e32 v14, s1, v13
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v41, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v49, 0
	v_mov_b32_e32 v47, 0
	v_mov_b32_e32 v40, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v52, 0
	v_mov_b32_e32 v51, 0
	v_mov_b32_e32 v50, 0
	v_mov_b32_e32 v48, 0
	v_mov_b32_e32 v57, 0
	v_mov_b32_e32 v58, 0
	v_mov_b32_e32 v55, 0
	v_mov_b32_e32 v56, 0
	v_mov_b32_e32 v53, 0
	v_mov_b32_e32 v54, 0
	v_mov_b32_e32 v59, 0
	v_mov_b32_e32 v60, 0
	s_mov_b32 s14, 0
BB56_1:
	v_lshl_add_u32 v61, s14, 12, v11
	s_lshl_b32 s15, s14, 6
	v_add_nc_u32_e32 v63, s15, v19
	v_add_nc_u32_e32 v78, s15, v20
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_nc_u32_e32 v80, s15, v24
	v_add_nc_u32_e32 v86, s15, v32
	v_ashrrev_i32_e32 v64, 31, v63
	v_ashrrev_i32_e32 v79, 31, v78
	v_lshlrev_b64 v[61:62], 1, v[61:62]
	v_ashrrev_i32_e32 v81, 31, v80
	v_add_nc_u32_e32 v88, s15, v34
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_ashrrev_i32_e32 v87, 31, v86
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v82, vcc_lo, s12, v61
	v_add_nc_u32_e32 v90, s15, v38
	v_add_co_ci_u32_e32 v83, vcc_lo, s13, v62, vcc_lo
	v_add_co_u32 v84, vcc_lo, s10, v63
	v_lshlrev_b64 v[80:81], 1, v[80:81]
	v_add_co_ci_u32_e32 v85, vcc_lo, s11, v64, vcc_lo
	v_add_co_u32 v74, vcc_lo, v82, s8
	v_ashrrev_i32_e32 v89, 31, v88
	v_add_co_ci_u32_e32 v75, vcc_lo, 0, v83, vcc_lo
	v_add_nc_u32_e32 v92, s15, v42
	v_add_co_u32 v96, vcc_lo, s10, v78
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_ashrrev_i32_e32 v91, 31, v90
	v_add_nc_u32_e32 v94, s15, v44
	v_add_co_ci_u32_e32 v97, vcc_lo, s11, v79, vcc_lo
	v_add_co_u32 v98, vcc_lo, s10, v80
	v_lshlrev_b64 v[88:89], 1, v[88:89]
	v_ashrrev_i32_e32 v93, 31, v92
	v_add_co_ci_u32_e32 v99, vcc_lo, s11, v81, vcc_lo
	v_add_co_u32 v100, vcc_lo, s10, v86
	v_lshlrev_b64 v[90:91], 1, v[90:91]
	v_ashrrev_i32_e32 v95, 31, v94
	v_add_co_ci_u32_e32 v101, vcc_lo, s11, v87, vcc_lo
	v_add_co_u32 v102, vcc_lo, s10, v88
	v_lshlrev_b64 v[92:93], 1, v[92:93]
	v_add_co_ci_u32_e32 v103, vcc_lo, s11, v89, vcc_lo
	v_add_co_u32 v106, vcc_lo, s10, v90
	v_lshlrev_b64 v[94:95], 1, v[94:95]
	v_add_co_ci_u32_e32 v107, vcc_lo, s11, v91, vcc_lo
	global_load_dwordx4 v[62:65], v[82:83], off
	global_load_dwordx4 v[66:69], v[84:85], off
	s_clause 0x1
	global_load_dwordx4 v[70:73], v[74:75], off offset:-2048
	global_load_dwordx4 v[74:77], v[74:75], off
	v_add_co_u32 v110, vcc_lo, s10, v92
	v_mov_b32_e32 v61, v46
	v_add_co_ci_u32_e32 v111, vcc_lo, s11, v93, vcc_lo
	v_add_co_u32 v114, vcc_lo, s10, v94
	s_mov_b32 s15, 0
	v_add_co_ci_u32_e32 v115, vcc_lo, s11, v95, vcc_lo
	v_add_co_u32 v78, vcc_lo, s9, v82
	v_add_co_ci_u32_e32 v79, vcc_lo, 0, v83, vcc_lo
	v_add_co_u32 v82, vcc_lo, s1, v84
	v_add_co_ci_u32_e32 v83, vcc_lo, 0, v85, vcc_lo
	v_add_co_u32 v104, vcc_lo, s0, v84
	v_add_co_ci_u32_e32 v105, vcc_lo, 0, v85, vcc_lo
	global_load_dwordx4 v[78:81], v[78:79], off
	s_clause 0x8
	global_load_dwordx4 v[82:85], v[82:83], off
	global_load_dwordx4 v[86:89], v[96:97], off
	global_load_dwordx4 v[90:93], v[98:99], off
	global_load_dwordx4 v[94:97], v[100:101], off
	global_load_dwordx4 v[98:101], v[104:105], off
	global_load_dwordx4 v[102:105], v[102:103], off
	global_load_dwordx4 v[106:109], v[106:107], off
	global_load_dwordx4 v[110:113], v[110:111], off
	global_load_dwordx4 v[114:117], v[114:115], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b128 v13, v[62:65]
	ds_write_b128 v14, v[66:69]
	ds_write_b128 v13, v[70:73] offset:2048
	ds_write_b128 v13, v[74:77] offset:4096
	ds_write_b128 v13, v[78:81] offset:6144
	ds_write_b128 v14, v[82:85] offset:2048
	ds_write_b128 v21, v[86:89]
	ds_write_b128 v26, v[90:93]
	ds_write_b128 v33, v[94:97]
	ds_write_b128 v14, v[98:101] offset:10240
	ds_write_b128 v36, v[102:105]
	ds_write_b128 v39, v[106:109]
	ds_write_b128 v43, v[110:113]
	ds_write_b128 v45, v[114:117]
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB56_2:
	v_or_b32_e32 v82, s15, v1
	ds_read2_b64 v[62:65], v61 offset1:16
	ds_read2_b64 v[66:69], v61 offset0:32 offset1:48
	ds_read2_b64 v[70:73], v61 offset0:64 offset1:80
	ds_read2_b64 v[74:77], v61 offset0:96 offset1:112
	ds_read2_b64 v[78:81], v61 offset0:128 offset1:144
	v_add_nc_u32_e32 v61, 8, v61
	s_addk_i32 s15, 0x100
	v_lshlrev_b32_e32 v90, 1, v82
	s_cmp_lg_u32 s15, s8
	ds_read2_b32 v[94:95], v90 offset1:1
	ds_read2_b32 v[96:97], v90 offset0:2 offset1:3
	ds_read_b128 v[82:85], v90 offset:128
	ds_read_b128 v[86:89], v90 offset:256
	ds_read_b128 v[90:93], v90 offset:384
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v57, v62, v94, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v62, v95, v58 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v60, v64, v94, v60 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v59, v64, v95, v59 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v66, v94, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v66, v95, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v68, v94, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v68, v95, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v70, v94, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v70, v95, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v72, v94, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v72, v95, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v74, v94, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v74, v95, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v76, v94, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v76, v95, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v78, v94, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v78, v95, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v80, v94, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v80, v95, v5 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v55, v62, v96, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v62, v97, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v64, v96, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v64, v97, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v66, v96, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v66, v97, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v68, v96, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v68, v97, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v70, v96, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v70, v97, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v72, v96, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v72, v97, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v74, v96, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v74, v97, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v76, v96, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v76, v97, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v78, v96, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v78, v97, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v80, v96, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v80, v97, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v57, v62, v82, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v58, v62, v83, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v62, v84, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v62, v85, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v60, v64, v82, v60 op_sel:[1,0,0]
	v_pk_fma_f16 v59, v64, v83, v59 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v64, v84, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v64, v85, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v66, v82, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v66, v83, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v66, v84, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v66, v85, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v68, v82, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v68, v83, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v68, v84, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v68, v85, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v70, v82, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v70, v83, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v70, v84, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v70, v85, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v72, v82, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v72, v83, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v72, v84, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v72, v85, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v74, v82, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v74, v83, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v74, v84, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v74, v85, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v76, v82, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v76, v83, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v76, v84, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v76, v85, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v78, v82, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v78, v83, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v78, v84, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v78, v85, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v80, v82, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v80, v83, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v80, v84, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v80, v85, v2 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v57, v63, v86, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v63, v87, v58 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v63, v88, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v63, v89, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v60, v65, v86, v60 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v59, v65, v87, v59 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v65, v88, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v65, v89, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v67, v86, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v67, v87, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v67, v88, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v67, v89, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v69, v86, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v69, v87, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v69, v88, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v69, v89, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v71, v86, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v71, v87, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v71, v88, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v71, v89, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v73, v86, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v73, v87, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v73, v88, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v73, v89, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v75, v86, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v75, v87, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v75, v88, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v75, v89, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v77, v86, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v77, v87, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v77, v88, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v77, v89, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v79, v86, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v79, v87, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v79, v88, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v79, v89, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v81, v86, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v81, v87, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v81, v88, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v81, v89, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v57, v63, v90, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v58, v63, v91, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v63, v92, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v63, v93, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v60, v65, v90, v60 op_sel:[1,0,0]
	v_pk_fma_f16 v59, v65, v91, v59 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v65, v92, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v65, v93, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v67, v90, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v67, v91, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v67, v92, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v67, v93, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v69, v90, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v69, v91, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v69, v92, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v69, v93, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v71, v90, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v71, v91, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v71, v92, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v71, v93, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v73, v90, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v73, v91, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v73, v92, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v73, v93, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v75, v90, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v75, v91, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v75, v92, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v75, v93, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v77, v90, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v77, v91, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v77, v92, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v77, v93, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v79, v90, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v79, v91, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v79, v92, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v79, v93, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v81, v90, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v81, v91, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v81, v92, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v81, v93, v2 op_sel:[1,0,0]
	s_cbranch_scc1 BB56_2
	s_add_i32 s14, s14, 1
	s_cmp_eq_u32 s14, 4
	s_cbranch_scc0 BB56_1
	v_lshlrev_b32_e32 v11, 1, v1
	v_lshrrev_b32_e32 v20, 5, v0
	s_mulk_i32 s6, 0xa00
	s_mul_i32 s7, s7, 0xc800
	v_bfe_u32 v0, v0, 3, 2
	s_clause 0x3
	global_load_dword v13, v11, s[4:5]
	global_load_dword v14, v11, s[4:5] offset:4
	global_load_dword v19, v11, s[4:5] offset:8
	global_load_dword v11, v11, s[4:5] offset:12
	v_mul_u32_u24_e32 v20, 0x3200, v20
	v_add3_u32 v20, s6, s7, v20
	v_or_b32_e32 v1, v20, v1
	v_mov_b32_e32 v20, 0
	v_mad_u32_u24 v0, 0x280, v0, v1
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(3)
	v_pk_add_f16 v21, v13, v57
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v24, v14, v58
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v26, v19, v55
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v32, v11, v56
	v_pk_add_f16 v33, v13, v60
	v_pk_add_f16 v40, v19, v40
	v_pk_add_f16 v35, v11, v35
	v_pk_add_f16 v41, v13, v41
	v_pk_add_f16 v37, v14, v37
	v_pk_add_f16 v30, v19, v30
	v_pk_add_f16 v28, v11, v28
	v_pk_add_f16 v31, v13, v31
	v_pk_add_f16 v29, v14, v29
	v_pk_add_f16 v25, v19, v25
	v_pk_add_f16 v22, v11, v22
	v_pk_add_f16 v27, v13, v27
	v_pk_add_f16 v23, v14, v23
	v_pk_add_f16 v17, v19, v17
	v_pk_add_f16 v15, v11, v15
	v_pk_add_f16 v18, v13, v18
	v_pk_add_f16 v16, v14, v16
	v_pk_add_f16 v10, v19, v10
	v_pk_add_f16 v8, v11, v8
	v_pk_add_f16 v12, v13, v12
	v_pk_add_f16 v9, v14, v9
	v_pk_add_f16 v7, v19, v7
	v_pk_add_f16 v4, v11, v4
	v_pk_add_f16 v6, v13, v6
	v_pk_add_f16 v5, v14, v5
	v_pk_add_f16 v3, v19, v3
	v_pk_add_f16 v2, v11, v2
	v_pk_add_f16 v34, v14, v59
	v_pk_add_f16 v36, v19, v54
	v_pk_add_f16 v43, v19, v50
	v_pk_add_f16 v38, v11, v53
	v_pk_add_f16 v44, v11, v48
	v_pk_max_f16 v11, v21, 0
	v_pk_add_f16 v39, v13, v52
	v_pk_add_f16 v45, v13, v49
	v_pk_add_f16 v42, v14, v51
	v_pk_add_f16 v46, v14, v47
	v_pk_max_f16 v13, v24, 0
	v_pk_max_f16 v14, v26, 0
	v_pk_max_f16 v19, v32, 0
	v_max_f16_e32 v21, 0, v33
	v_max_f16_sdwa v24, v33, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_max_f16_e32 v26, 0, v34
	v_max_f16_sdwa v32, v34, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_max_f16_sdwa v34, v36, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_max_f16_e32 v33, 0, v36
	v_max_f16_e32 v36, 0, v38
	v_max_f16_sdwa v20, v38, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_pk_max_f16 v38, v39, 0
	v_pk_max_f16 v39, v42, 0
	v_pk_max_f16 v42, v43, 0
	v_pk_max_f16 v43, v44, 0
	v_pk_max_f16 v44, v45, 0
	v_pk_max_f16 v45, v46, 0
	v_pk_max_f16 v40, v40, 0
	v_pk_max_f16 v35, v35, 0
	v_pk_max_f16 v41, v41, 0
	v_pk_max_f16 v37, v37, 0
	v_pk_max_f16 v30, v30, 0
	v_pk_max_f16 v28, v28, 0
	v_pk_max_f16 v31, v31, 0
	v_pk_max_f16 v29, v29, 0
	v_pk_max_f16 v25, v25, 0
	v_pk_max_f16 v22, v22, 0
	v_pk_max_f16 v27, v27, 0
	v_pk_max_f16 v23, v23, 0
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v18, v18, 0
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v2, v2, 0
	global_store_dword v[0:1], v11, off
	global_store_dword v[0:1], v13, off offset:4
	global_store_dword v[0:1], v14, off offset:8
	global_store_dword v[0:1], v19, off offset:12
	global_store_short v[0:1], v21, off offset:128
	global_store_short v[0:1], v24, off offset:130
	global_store_short v[0:1], v26, off offset:132
	global_store_short v[0:1], v32, off offset:134
	global_store_short v[0:1], v33, off offset:136
	global_store_short v[0:1], v34, off offset:138
	global_store_short v[0:1], v36, off offset:140
	global_store_short v[0:1], v20, off offset:142
	global_store_dword v[0:1], v38, off offset:256
	global_store_dword v[0:1], v39, off offset:260
	global_store_dword v[0:1], v42, off offset:264
	global_store_dword v[0:1], v43, off offset:268
	global_store_dword v[0:1], v44, off offset:384
	global_store_dword v[0:1], v45, off offset:388
	global_store_dword v[0:1], v40, off offset:392
	global_store_dword v[0:1], v35, off offset:396
	global_store_dword v[0:1], v41, off offset:512
	global_store_dword v[0:1], v37, off offset:516
	global_store_dword v[0:1], v30, off offset:520
	global_store_dword v[0:1], v28, off offset:524
	global_store_dword v[0:1], v31, off offset:640
	global_store_dword v[0:1], v29, off offset:644
	global_store_dword v[0:1], v25, off offset:648
	global_store_dword v[0:1], v22, off offset:652
	global_store_dword v[0:1], v27, off offset:768
	global_store_dword v[0:1], v23, off offset:772
	global_store_dword v[0:1], v17, off offset:776
	global_store_dword v[0:1], v15, off offset:780
	global_store_dword v[0:1], v18, off offset:896
	global_store_dword v[0:1], v16, off offset:900
	global_store_dword v[0:1], v10, off offset:904
	global_store_dword v[0:1], v8, off offset:908
	global_store_dword v[0:1], v12, off offset:1024
	global_store_dword v[0:1], v9, off offset:1028
	global_store_dword v[0:1], v7, off offset:1032
	global_store_dword v[0:1], v4, off offset:1036
	global_store_dword v[0:1], v6, off offset:1152
	global_store_dword v[0:1], v5, off offset:1156
	global_store_dword v[0:1], v3, off offset:1160
	global_store_dword v[0:1], v2, off offset:1164
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0
		.amdhsa_group_segment_fixed_size 28672
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 118
		.amdhsa_next_free_sgpr 18
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end56:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0, .Lfunc_end56-tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0:
	v_lshrrev_b32_e32 v1, 4, v0
	s_mov_b32 s12, 0xcccccccd
	v_lshlrev_b32_e32 v21, 2, v0
	s_mul_hi_i32 s15, s6, 0x66666667
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	v_add_nc_u32_e32 v2, 16, v1
	v_add_nc_u32_e32 v4, 12, v1
	v_add_nc_u32_e32 v5, 0x400, v21
	v_add_nc_u32_e32 v8, 8, v1
	s_lshr_b32 s4, s15, 31
	v_mul_hi_u32 v3, v2, s12
	v_mul_hi_u32 v7, v4, s12
	v_mul_hi_u32 v5, v5, s12
	s_ashr_i32 s5, s15, 2
	s_movk_i32 s13, 0x500
	s_add_i32 s4, s5, s4
	v_add_nc_u32_e32 v9, 0x800, v21
	s_mul_i32 s5, s4, 10
	v_lshrrev_b32_e32 v3, 4, v3
	v_lshrrev_b32_e32 v7, 4, v7
	v_lshrrev_b32_e32 v5, 10, v5
	v_and_b32_e32 v6, 60, v21
	s_sub_i32 s5, s6, s5
	v_mul_u32_u24_e32 v3, 20, v3
	v_mul_u32_u24_e32 v7, 20, v7
	s_mul_i32 s15, s4, 0x32000
	s_mul_i32 s6, s5, 0x1400
	v_mul_hi_u32 v9, v9, s12
	v_sub_nc_u32_e32 v2, v2, v3
	v_mul_hi_u32 v3, v8, s12
	v_sub_nc_u32_e32 v4, v4, v7
	s_add_i32 s15, s15, s6
	s_movk_i32 s6, 0x1000
	v_lshlrev_b32_e32 v10, 6, v2
	v_lshl_add_u32 v11, v1, 8, s15
	s_mov_b32 s14, 0xc800
	v_lshlrev_b32_e32 v12, 6, v4
	v_lshrrev_b32_e32 v3, 4, v3
	v_mad_i32_i24 v10, v5, s13, v10
	v_or_b32_e32 v24, v11, v6
	s_movk_i32 s7, 0x4000
	v_lshlrev_b32_e32 v2, 8, v2
	v_mul_u32_u24_e32 v3, 20, v3
	v_or_b32_e32 v7, v10, v6
	v_add_nc_u32_e32 v10, 0xc00, v21
	v_mul_i32_i24_e32 v5, s14, v5
	v_or_b32_e32 v11, s15, v6
	v_sub_nc_u32_e32 v3, v8, v3
	v_or_b32_e32 v8, s6, v21
	v_mul_hi_u32 v10, v10, s12
	v_lshrrev_b32_e32 v9, 10, v9
	v_lshl_add_u32 v27, v7, 1, s7
	v_add3_u32 v26, v11, v5, v2
	v_mul_hi_u32 v7, v8, s12
	v_lshlrev_b32_e32 v5, 6, v3
	v_mad_i32_i24 v2, v9, s13, v12
	v_add_nc_u32_e32 v1, 4, v1
	v_lshrrev_b32_e32 v8, 10, v10
	v_lshlrev_b32_e32 v4, 8, v4
	v_mul_i32_i24_e32 v9, s14, v9
	v_or_b32_e32 v2, v2, v6
	v_lshlrev_b32_e32 v10, 6, v1
	v_mad_i32_i24 v5, v8, s13, v5
	v_lshrrev_b32_e32 v7, 10, v7
	v_add3_u32 v28, v11, v9, v4
	v_lshl_add_u32 v29, v2, 1, s7
	v_lshlrev_b32_e32 v3, 8, v3
	v_or_b32_e32 v2, v5, v6
	v_mad_i32_i24 v4, v7, s13, v10
	v_mul_i32_i24_e32 v5, s14, v8
	v_lshrrev_b32_e32 v8, 5, v0
	v_lshlrev_b32_e32 v22, 3, v0
	v_lshlrev_b32_e32 v1, 8, v1
	v_or_b32_e32 v4, v4, v6
	v_add3_u32 v30, v11, v5, v3
	v_mul_u32_u24_e32 v3, 0x280, v8
	v_mul_i32_i24_e32 v7, s14, v7
	v_lshl_add_u32 v31, v2, 1, s7
	v_lshl_add_u32 v33, v4, 1, s7
	v_or_b32_e32 v23, s7, v22
	v_lshl_add_u32 v34, v3, 1, s7
	v_add3_u32 v32, v11, v1, v7
	v_and_b32_e32 v25, 0x7c, v21
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	s_mov_b32 s7, 0
	s_movk_i32 s12, 0x2000
BB57_1:
	s_lshl_b32 s13, s7, 6
	v_lshl_or_b32 v43, s7, 13, v21
	v_add_nc_u32_e32 v35, s13, v24
	v_add_nc_u32_e32 v37, s13, v26
	v_add_nc_u32_e32 v39, s13, v28
	v_add_nc_u32_e32 v41, s13, v30
	v_add_nc_u32_e32 v45, s13, v32
	v_ashrrev_i32_e32 v36, 31, v35
	v_ashrrev_i32_e32 v38, 31, v37
	v_ashrrev_i32_e32 v40, 31, v39
	v_ashrrev_i32_e32 v42, 31, v41
	v_ashrrev_i32_e32 v44, 31, v43
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_lshlrev_b64 v[39:40], 1, v[39:40]
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_ashrrev_i32_e32 v46, 31, v45
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v35, vcc_lo, s8, v35
	s_mov_b32 s13, 0
	v_add_co_ci_u32_e32 v36, vcc_lo, s9, v36, vcc_lo
	v_add_co_u32 v37, vcc_lo, s8, v37
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_add_co_ci_u32_e32 v38, vcc_lo, s9, v38, vcc_lo
	v_add_co_u32 v39, vcc_lo, s8, v39
	v_add_co_ci_u32_e32 v40, vcc_lo, s9, v40, vcc_lo
	v_add_co_u32 v41, vcc_lo, s8, v41
	v_add_co_ci_u32_e32 v42, vcc_lo, s9, v42, vcc_lo
	v_add_co_u32 v43, vcc_lo, s10, v43
	v_add_co_ci_u32_e32 v44, vcc_lo, s11, v44, vcc_lo
	v_add_co_u32 v45, vcc_lo, s8, v45
	v_add_co_ci_u32_e32 v46, vcc_lo, s9, v46, vcc_lo
	v_add_co_u32 v47, vcc_lo, v43, s6
	v_add_co_ci_u32_e32 v48, vcc_lo, 0, v44, vcc_lo
	v_add_co_u32 v55, vcc_lo, v43, s12
	s_clause 0x4
	global_load_dwordx2 v[49:50], v[35:36], off
	global_load_dwordx2 v[36:37], v[37:38], off
	global_load_dwordx2 v[38:39], v[39:40], off
	global_load_dwordx2 v[40:41], v[41:42], off
	global_load_dwordx2 v[45:46], v[45:46], off
	s_clause 0x2
	global_load_dwordx2 v[51:52], v[43:44], off
	global_load_dwordx2 v[53:54], v[47:48], off offset:-2048
	global_load_dwordx2 v[47:48], v[47:48], off
	v_add_co_ci_u32_e32 v56, vcc_lo, 0, v44, vcc_lo
	v_add_co_u32 v57, vcc_lo, v43, 0x3000
	v_mov_b32_e32 v35, v34
	v_add_co_ci_u32_e32 v58, vcc_lo, 0, v44, vcc_lo
	v_add_co_u32 v42, vcc_lo, 0x3800, v43
	v_add_co_ci_u32_e32 v43, vcc_lo, 0, v44, vcc_lo
	s_clause 0x4
	global_load_dwordx2 v[59:60], v[55:56], off offset:-2048
	global_load_dwordx2 v[55:56], v[55:56], off
	global_load_dwordx2 v[61:62], v[57:58], off offset:-2048
	global_load_dwordx2 v[57:58], v[57:58], off
	global_load_dwordx2 v[42:43], v[42:43], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b64 v23, v[49:50]
	ds_write_b64 v27, v[36:37]
	ds_write_b64 v29, v[38:39]
	ds_write_b64 v31, v[40:41]
	ds_write_b64 v33, v[45:46]
	ds_write2st64_b64 v22, v[51:52], v[53:54] offset1:4
	ds_write2st64_b64 v22, v[47:48], v[59:60] offset0:8 offset1:12
	ds_write2st64_b64 v22, v[55:56], v[61:62] offset0:16 offset1:20
	ds_write2st64_b64 v22, v[57:58], v[42:43] offset0:24 offset1:28
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB57_2:
	v_or_b32_e32 v56, s13, v25
	ds_read2_b64 v[36:39], v35 offset1:16
	ds_read2_b64 v[40:43], v35 offset0:32 offset1:48
	ds_read2_b64 v[44:47], v35 offset0:64 offset1:80
	ds_read2_b64 v[48:51], v35 offset0:96 offset1:112
	ds_read2_b64 v[52:55], v35 offset0:128 offset1:144
	v_add_nc_u32_e32 v35, 8, v35
	s_addk_i32 s13, 0x200
	v_lshlrev_b32_e32 v56, 1, v56
	s_cmp_lg_u32 s13, s12
	ds_read2_b32 v[60:61], v56 offset1:1
	ds_read_b64 v[62:63], v56 offset:768
	ds_read2_b64 v[56:59], v56 offset0:32 offset1:64
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v17, v36, v60, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v36, v61, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v38, v60, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v38, v61, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v40, v60, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v40, v61, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v42, v60, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v42, v61, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v44, v60, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v44, v61, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v46, v60, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v46, v61, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v48, v60, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v48, v61, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v50, v60, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v50, v61, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v52, v60, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v52, v61, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v54, v60, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v54, v61, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v17, v36, v56, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v36, v57, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v38, v56, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v38, v57, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v40, v56, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v40, v57, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v42, v56, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v42, v57, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v44, v56, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v44, v57, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v46, v56, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v46, v57, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v48, v56, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v48, v57, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v50, v56, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v50, v57, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v52, v56, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v52, v57, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v54, v56, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v54, v57, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v37, v58, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v37, v59, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v39, v58, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v39, v59, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v41, v58, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v41, v59, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v43, v58, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v43, v59, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v45, v58, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v45, v59, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v47, v58, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v47, v59, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v49, v58, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v49, v59, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v51, v58, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v51, v59, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v53, v58, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v53, v59, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v55, v58, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v55, v59, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v37, v62, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v37, v63, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v39, v62, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v39, v63, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v41, v62, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v41, v63, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v43, v62, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v43, v63, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v45, v62, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v45, v63, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v47, v62, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v47, v63, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v49, v62, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v49, v63, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v51, v62, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v51, v63, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v53, v62, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v53, v63, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v55, v62, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v55, v63, v2 op_sel:[1,0,0]
	s_cbranch_scc1 BB57_2
	s_add_i32 s7, s7, 1
	s_cmp_eq_u32 s7, 4
	s_cbranch_scc0 BB57_1
	v_lshlrev_b32_e32 v21, 1, v25
	s_mulk_i32 s5, 0xa00
	s_mul_i32 s4, s4, 0x19000
	s_clause 0x1
	global_load_dword v31, v21, s[2:3]
	global_load_dword v32, v21, s[2:3] offset:4
	v_lshrrev_b32_e32 v21, 6, v0
	v_bfe_u32 v0, v0, 5, 1
	v_mul_u32_u24_e32 v21, 0x6400, v21
	v_add3_u32 v21, s5, s4, v21
	v_or_b32_e32 v21, v21, v25
	v_mad_u32_u24 v21, 0x500, v0, v21
	v_mov_b32_e32 v0, 0
	v_add_nc_u32_e32 v23, 0x400, v21
	v_ashrrev_i32_e32 v22, 31, v21
	v_add_nc_u32_e32 v25, 0x402, v21
	v_add_nc_u32_e32 v27, 0x480, v21
	v_add_nc_u32_e32 v29, 0x482, v21
	v_ashrrev_i32_e32 v24, 31, v23
	v_lshlrev_b64 v[21:22], 1, v[21:22]
	v_ashrrev_i32_e32 v26, 31, v25
	v_ashrrev_i32_e32 v28, 31, v27
	v_ashrrev_i32_e32 v30, 31, v29
	v_lshlrev_b64 v[23:24], 1, v[23:24]
	v_add_co_u32 v21, vcc_lo, s0, v21
	v_lshlrev_b64 v[25:26], 1, v[25:26]
	v_add_co_ci_u32_e32 v22, vcc_lo, s1, v22, vcc_lo
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_add_co_u32 v23, vcc_lo, s0, v23
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_ci_u32_e32 v24, vcc_lo, s1, v24, vcc_lo
	v_add_co_u32 v25, vcc_lo, s0, v25
	v_add_co_ci_u32_e32 v26, vcc_lo, s1, v26, vcc_lo
	v_add_co_u32 v27, vcc_lo, s0, v27
	v_add_co_ci_u32_e32 v28, vcc_lo, s1, v28, vcc_lo
	v_add_co_u32 v29, vcc_lo, s0, v29
	v_add_co_ci_u32_e32 v30, vcc_lo, s1, v30, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v17, v31, v17
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v18, v32, v18
	v_pk_add_f16 v19, v31, v19
	v_pk_add_f16 v20, v32, v20
	v_pk_add_f16 v15, v31, v15
	v_pk_add_f16 v16, v32, v16
	v_pk_add_f16 v13, v31, v13
	v_pk_add_f16 v14, v32, v14
	v_pk_add_f16 v11, v31, v11
	v_pk_add_f16 v12, v32, v12
	v_pk_add_f16 v9, v31, v9
	v_pk_add_f16 v10, v32, v10
	v_pk_add_f16 v7, v31, v7
	v_pk_add_f16 v8, v32, v8
	v_pk_add_f16 v5, v31, v5
	v_pk_add_f16 v6, v32, v6
	v_pk_add_f16 v3, v31, v3
	v_pk_add_f16 v1, v31, v1
	v_pk_add_f16 v4, v32, v4
	v_pk_add_f16 v2, v32, v2
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v18, v18, 0
	v_max_f16_e32 v31, 0, v19
	v_max_f16_sdwa v19, v19, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_max_f16_e32 v32, 0, v20
	v_max_f16_sdwa v0, v20, v0 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v1, v1, 0
	v_pk_max_f16 v2, v2, 0
	global_store_dword v[21:22], v17, off
	global_store_dword v[21:22], v18, off offset:4
	global_store_short v[21:22], v31, off offset:256
	global_store_short v[21:22], v19, off offset:258
	global_store_short v[21:22], v32, off offset:260
	global_store_short v[21:22], v0, off offset:262
	global_store_dword v[21:22], v15, off offset:512
	global_store_dword v[21:22], v16, off offset:516
	global_store_dword v[21:22], v13, off offset:768
	global_store_dword v[21:22], v14, off offset:772
	global_store_dword v[21:22], v11, off offset:1024
	global_store_dword v[21:22], v12, off offset:1028
	global_store_dword v[21:22], v9, off offset:1280
	global_store_dword v[21:22], v10, off offset:1284
	global_store_dword v[21:22], v7, off offset:1536
	global_store_dword v[21:22], v8, off offset:1540
	global_store_dword v[21:22], v5, off offset:1792
	global_store_dword v[21:22], v6, off offset:1796
	global_store_dword v[23:24], v3, off
	global_store_dword v[25:26], v4, off
	global_store_dword v[27:28], v1, off
	global_store_dword v[29:30], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0
		.amdhsa_group_segment_fixed_size 26624
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 64
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end57:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0, .Lfunc_end57-tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0:
	v_mul_hi_i32 v1, 0x30c30c31, v0
	s_mul_hi_i32 s0, s6, 0x66666667
	v_lshlrev_b32_e32 v5, 2, v0
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s7, s0, 2
	s_movk_i32 s13, 0x1c00
	s_add_i32 s7, s7, s1
	v_add_nc_u32_e32 v11, 0x500, v5
	v_lshrrev_b32_e32 v3, 31, v1
	v_ashrrev_i32_e32 v1, 2, v1
	s_mul_i32 s1, s7, 10
	v_add_nc_u32_e32 v13, 0x600, v5
	s_sub_i32 s6, s6, s1
	s_movk_i32 s12, 0xa00
	v_add_nc_u32_e32 v3, v1, v3
	v_lshrrev_b32_e32 v1, 5, v0
	s_mul_i32 s15, s6, 20
	v_and_b32_e32 v7, 31, v0
	v_and_b32_e32 v15, s13, v11
	v_mul_lo_u32 v8, v3, 21
	v_lshlrev_b32_e32 v9, 7, v1
	v_and_b32_e32 v16, s13, v13
	v_lshlrev_b32_e32 v11, 4, v11
	s_mul_i32 s14, s7, 0x19000
	s_mul_i32 s1, s6, s12
	s_mov_b32 s13, 0x1c000
	s_add_i32 s14, s14, s1
	v_sub_nc_u32_e32 v8, v0, v8
	v_add_nc_u32_e32 v18, v16, v9
	v_lshlrev_b32_e32 v6, 2, v7
	v_add_nc_u32_e32 v15, v15, v9
	v_and_b32_e32 v16, s13, v11
	v_add_nc_u32_e32 v12, s15, v8
	v_lshlrev_b32_e32 v14, 7, v8
	v_lshlrev_b32_e32 v11, 4, v13
	v_add_nc_u32_e32 v13, 0x700, v5
	v_or_b32_e32 v15, v15, v6
	v_cmp_lt_i32_e64 s1, 0, v12
	v_add3_u32 v12, s14, v14, 0xffff9b80
	v_mov_b32_e32 v14, 0x1c00
	v_or_b32_e32 v18, v18, v6
	v_and_b32_e32 v21, s13, v11
	v_mov_b32_e32 v17, 0x1c000
	v_lshlrev_b32_e32 v19, 1, v15
	v_and_b32_e32 v11, v14, v13
	v_lshlrev_b32_e32 v13, 4, v13
	v_lshlrev_b32_e32 v22, 1, v18
	v_add_nc_u32_e32 v18, s12, v5
	v_add_nc_u32_e32 v15, 0x900, v5
	v_add_nc_u32_e32 v11, v11, v9
	v_and_b32_e32 v24, v17, v13
	v_add_nc_u32_e32 v13, 0xb00, v5
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_and_b32_e32 v25, v14, v15
	v_or_b32_e32 v11, v11, v6
	v_and_b32_e32 v26, v14, v18
	v_and_b32_e32 v14, v14, v13
	v_lshlrev_b32_e32 v15, 4, v15
	v_add_nc_u32_e32 v8, 0x100, v9
	v_lshlrev_b32_e32 v33, 1, v11
	v_add_nc_u32_e32 v11, v26, v9
	v_add_nc_u32_e32 v20, 0x200, v9
	v_add_nc_u32_e32 v23, 0x300, v9
	v_add_nc_u32_e32 v25, v25, v9
	v_add_nc_u32_e32 v9, v14, v9
	v_and_b32_e32 v35, v17, v15
	v_lshlrev_b32_e32 v15, 4, v18
	v_or_b32_e32 v11, v11, v6
	v_or_b32_e32 v14, v25, v6
	v_lshlrev_b32_e32 v13, 4, v13
	v_or_b32_e32 v9, v9, v6
	v_and_b32_e32 v39, v17, v15
	v_lshlrev_b32_e32 v40, 1, v11
	v_lshlrev_b32_e32 v38, 1, v14
	v_and_b32_e32 v41, v17, v13
	v_lshlrev_b32_e32 v42, 1, v9
	v_lshlrev_b32_e32 v45, 1, v7
	v_cmp_gt_i32_e64 s0, 63, v0
	v_lshlrev_b32_e32 v2, 3, v0
	v_lshl_add_u32 v4, v0, 4, 0x1800
	v_lshl_add_u32 v10, s7, 2, v3
	v_mul_u32_u24_e32 v43, 0x150, v1
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v44, 0
	s_mov_b32 s12, 0
	s_mov_b32 s14, 0
BB58_1:
	v_add_nc_u32_e32 v46, s14, v3
	v_add_nc_u32_e32 v47, s14, v10
	s_mul_i32 s16, s14, 0xc000
	s_mov_b32 s17, 0
	v_mul_lo_u32 v46, 0x6400, v46
	v_cmp_lt_i32_e32 vcc_lo, 0, v47
	s_and_b32 s15, s1, vcc_lo
	v_add_nc_u32_e32 v46, v12, v46
BB58_2:
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s18, s0
	s_cbranch_execz BB58_6
	s_mov_b32 s13, s12
	v_mov_b32_e32 v48, s13
	v_mov_b32_e32 v50, s13
	v_mov_b32_e32 v47, s12
	v_mov_b32_e32 v49, s12
	s_and_saveexec_b32 s13, s15
	s_cbranch_execz BB58_5
	v_lshl_add_u32 v47, s17, 3, v46
	v_ashrrev_i32_e32 v48, 31, v47
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_co_u32 v47, vcc_lo, s8, v47
	v_add_co_ci_u32_e32 v48, vcc_lo, s9, v48, vcc_lo
	global_load_dwordx4 v[47:50], v[47:48], off
BB58_5:
	s_or_b32 exec_lo, exec_lo, s13
	s_waitcnt vmcnt(0)
	ds_write_b128 v4, v[47:50]
BB58_6:
	s_or_b32 exec_lo, exec_lo, s18
	s_lshl_b32 s13, s17, 10
	s_mov_b32 s18, 0
	s_add_i32 s13, s13, s16
	v_or_b32_e32 v49, s13, v6
	v_add_nc_u32_e32 v47, s13, v5
	s_mov_b32 s13, -1
	v_add_nc_u32_e32 v65, v49, v8
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_nc_u32_e32 v67, v49, v20
	v_add_nc_u32_e32 v69, v49, v23
	v_add_nc_u32_e32 v49, v65, v16
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_add_nc_u32_e32 v51, v67, v21
	v_add_nc_u32_e32 v53, v69, v24
	v_add_nc_u32_e32 v65, v65, v35
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_nc_u32_e32 v67, v67, v39
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_co_u32 v47, vcc_lo, s10, v47
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v48, vcc_lo, s11, v48, vcc_lo
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_add_co_u32 v63, vcc_lo, 0x8000, v47
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_add_co_ci_u32_e32 v64, vcc_lo, 0, v48, vcc_lo
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_co_u32 v49, vcc_lo, s10, v49
	v_add_nc_u32_e32 v69, v69, v41
	v_add_co_ci_u32_e32 v50, vcc_lo, s11, v50, vcc_lo
	v_add_co_u32 v51, vcc_lo, s10, v51
	v_ashrrev_i32_e32 v68, 31, v67
	v_add_co_ci_u32_e32 v52, vcc_lo, s11, v52, vcc_lo
	v_add_co_u32 v53, vcc_lo, s10, v53
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_ashrrev_i32_e32 v70, 31, v69
	v_add_co_ci_u32_e32 v54, vcc_lo, s11, v54, vcc_lo
	s_clause 0x3
	global_load_dwordx2 v[55:56], v[47:48], off
	global_load_dwordx2 v[57:58], v[47:48], off offset:512
	global_load_dwordx2 v[59:60], v[47:48], off offset:1024
	global_load_dwordx2 v[61:62], v[47:48], off offset:1536
	v_add_co_u32 v47, vcc_lo, 0x10000, v47
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_ci_u32_e32 v48, vcc_lo, 0, v48, vcc_lo
	v_add_co_u32 v65, vcc_lo, s10, v65
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_add_co_ci_u32_e32 v66, vcc_lo, s11, v66, vcc_lo
	v_add_co_u32 v67, vcc_lo, s10, v67
	v_add_co_ci_u32_e32 v68, vcc_lo, s11, v68, vcc_lo
	v_add_co_u32 v69, vcc_lo, s10, v69
	v_add_co_ci_u32_e32 v70, vcc_lo, s11, v70, vcc_lo
	s_clause 0x7
	global_load_dwordx2 v[63:64], v[63:64], off
	global_load_dwordx2 v[49:50], v[49:50], off
	global_load_dwordx2 v[51:52], v[51:52], off
	global_load_dwordx2 v[53:54], v[53:54], off
	global_load_dwordx2 v[47:48], v[47:48], off
	global_load_dwordx2 v[65:66], v[65:66], off
	global_load_dwordx2 v[67:68], v[67:68], off
	global_load_dwordx2 v[69:70], v[69:70], off
	s_waitcnt vmcnt(10)
	ds_write2st64_b64 v2, v[55:56], v[57:58] offset1:1
	s_waitcnt vmcnt(8)
	ds_write2st64_b64 v2, v[59:60], v[61:62] offset0:2 offset1:3
	s_waitcnt vmcnt(7)
	ds_write_b64 v2, v[63:64] offset:2048
	s_waitcnt vmcnt(6)
	ds_write_b64 v19, v[49:50] offset:512
	s_waitcnt vmcnt(5)
	ds_write_b64 v22, v[51:52] offset:1024
	s_waitcnt vmcnt(4)
	ds_write_b64 v33, v[53:54] offset:1536
	s_waitcnt vmcnt(3)
	ds_write_b64 v2, v[47:48] offset:4096
	s_waitcnt vmcnt(2)
	ds_write_b64 v38, v[65:66] offset:512
	s_waitcnt vmcnt(1)
	ds_write_b64 v40, v[67:68] offset:1024
	s_waitcnt vmcnt(0)
	ds_write_b64 v42, v[69:70] offset:1536
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB58_7:
	v_lshlrev_b32_e32 v47, 1, v43
	v_lshlrev_b32_e32 v48, 1, v45
	s_and_b32 vcc_lo, exec_lo, s13
	s_mov_b32 s13, 0
	v_lshl_or_b32 v47, s18, 3, v47
	v_lshl_or_b32 v48, s18, 10, v48
	s_mov_b32 s18, 1
	v_add_nc_u32_e32 v83, 0x1800, v47
	v_add_nc_u32_e32 v71, 0x800, v48
	v_add_nc_u32_e32 v111, 0x1000, v48
	ds_read2_b32 v[87:88], v48 offset1:32
	ds_read2_b32 v[89:90], v48 offset0:64 offset1:96
	ds_read2_b32 v[91:92], v48 offset0:128 offset1:160
	ds_read2_b32 v[93:94], v48 offset0:192 offset1:224
	ds_read_b64 v[95:96], v47 offset:6464
	ds_read2_b64 v[47:50], v83 offset1:2
	ds_read2_b64 v[51:54], v83 offset0:4 offset1:6
	ds_read2_b64 v[55:58], v83 offset0:8 offset1:10
	ds_read2_b32 v[97:98], v71 offset1:32
	ds_read2_b64 v[59:62], v83 offset0:12 offset1:14
	ds_read2_b32 v[99:100], v71 offset0:64 offset1:96
	ds_read2_b64 v[63:66], v83 offset0:16 offset1:18
	ds_read2_b32 v[101:102], v71 offset0:128 offset1:160
	ds_read2_b64 v[67:70], v83 offset0:20 offset1:22
	ds_read2_b32 v[103:104], v71 offset0:192 offset1:224
	ds_read2_b64 v[71:74], v83 offset0:24 offset1:26
	ds_read2_b32 v[105:106], v111 offset1:32
	ds_read2_b64 v[75:78], v83 offset0:28 offset1:30
	ds_read2_b32 v[107:108], v111 offset0:64 offset1:96
	ds_read2_b64 v[79:82], v83 offset0:32 offset1:34
	ds_read2_b32 v[109:110], v111 offset0:128 offset1:160
	ds_read2_b64 v[83:86], v83 offset0:36 offset1:38
	ds_read2_b32 v[111:112], v111 offset0:192 offset1:224
	s_waitcnt lgkmcnt(17)
	v_pk_fma_f16 v44, v47, v87, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v47, v88, v29 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(16)
	v_pk_fma_f16 v27, v51, v87, v27 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v25, v51, v88, v25 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(15)
	v_pk_fma_f16 v37, v55, v87, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v55, v88, v18 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(13)
	v_pk_fma_f16 v36, v59, v87, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v59, v88, v17 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(11)
	v_pk_fma_f16 v34, v63, v87, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v63, v88, v15 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v32, v67, v87, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v67, v88, v14 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v31, v71, v87, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v71, v88, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v30, v75, v87, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v75, v88, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v28, v79, v87, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v79, v88, v9 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v26, v83, v87, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v83, v88, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v47, v89, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v47, v90, v29 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v27, v51, v89, v27 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v25, v51, v90, v25 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v37, v55, v89, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v55, v90, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v59, v89, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v59, v90, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v63, v89, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v63, v90, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v67, v89, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v67, v90, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v71, v89, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v71, v90, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v75, v89, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v75, v90, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v79, v89, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v79, v90, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v83, v89, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v83, v90, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v48, v91, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v48, v92, v29 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v27, v52, v91, v27 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v25, v52, v92, v25 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v37, v56, v91, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v56, v92, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v60, v91, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v60, v92, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v64, v91, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v64, v92, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v68, v91, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v68, v92, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v72, v91, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v72, v92, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v76, v91, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v76, v92, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v80, v91, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v80, v92, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v84, v91, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v84, v92, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v48, v93, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v48, v94, v29 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v27, v52, v93, v27 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v25, v52, v94, v25 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v37, v56, v93, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v56, v94, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v60, v93, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v60, v94, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v64, v93, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v64, v94, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v68, v93, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v68, v94, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v72, v93, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v72, v94, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v76, v93, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v76, v94, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v80, v93, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v80, v94, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v84, v93, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v84, v94, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v49, v97, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v49, v98, v29 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v27, v53, v97, v27 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v25, v53, v98, v25 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v37, v57, v97, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v57, v98, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v61, v97, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v61, v98, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v65, v97, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v65, v98, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v69, v97, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v69, v98, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v73, v97, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v73, v98, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v77, v97, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v77, v98, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v81, v97, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v81, v98, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v85, v97, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v85, v98, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v49, v99, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v49, v100, v29 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v27, v53, v99, v27 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v25, v53, v100, v25 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v37, v57, v99, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v57, v100, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v61, v99, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v61, v100, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v65, v99, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v65, v100, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v69, v99, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v69, v100, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v73, v99, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v73, v100, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v77, v99, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v77, v100, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v81, v99, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v81, v100, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v85, v99, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v85, v100, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v50, v101, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v50, v102, v29 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v27, v54, v101, v27 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v25, v54, v102, v25 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v37, v58, v101, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v58, v102, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v62, v101, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v62, v102, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v66, v101, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v66, v102, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v70, v101, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v70, v102, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v74, v101, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v74, v102, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v78, v101, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v78, v102, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v82, v101, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v82, v102, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v86, v101, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v86, v102, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v50, v103, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v50, v104, v29 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v27, v54, v103, v27 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v25, v54, v104, v25 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v37, v58, v103, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v58, v104, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v62, v103, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v62, v104, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v66, v103, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v66, v104, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v70, v103, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v70, v104, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v74, v103, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v74, v104, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v78, v103, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v78, v104, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v82, v103, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v82, v104, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v86, v103, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v86, v104, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v51, v105, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v51, v106, v29 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v27, v55, v105, v27 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v25, v55, v106, v25 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v37, v59, v105, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v59, v106, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v63, v105, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v63, v106, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v67, v105, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v67, v106, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v71, v105, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v71, v106, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v75, v105, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v75, v106, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v79, v105, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v79, v106, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v83, v105, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v83, v106, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v95, v105, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v95, v106, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v51, v107, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v51, v108, v29 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v27, v55, v107, v27 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v25, v55, v108, v25 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v37, v59, v107, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v59, v108, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v63, v107, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v63, v108, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v67, v107, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v67, v108, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v71, v107, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v71, v108, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v75, v107, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v75, v108, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v79, v107, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v79, v108, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v83, v107, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v83, v108, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v95, v107, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v95, v108, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v52, v109, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v52, v110, v29 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v27, v56, v109, v27 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v25, v56, v110, v25 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v37, v60, v109, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v60, v110, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v64, v109, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v64, v110, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v68, v109, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v68, v110, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v72, v109, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v72, v110, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v76, v109, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v76, v110, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v80, v109, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v80, v110, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v84, v109, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v84, v110, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v96, v109, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v96, v110, v7 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v44, v52, v111, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v52, v112, v29 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v27, v56, v111, v27 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v25, v56, v112, v25 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v37, v60, v111, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v60, v112, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v64, v111, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v64, v112, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v68, v111, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v68, v112, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v72, v111, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v72, v112, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v76, v111, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v76, v112, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v80, v111, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v80, v112, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v84, v111, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v84, v112, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v96, v111, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v96, v112, v7 op_sel:[1,0,0]
	s_cbranch_vccnz BB58_7
	s_add_i32 s17, s17, 1
	s_cmp_eq_u32 s17, 16
	s_cbranch_scc0 BB58_2
	s_add_i32 s14, s14, 1
	s_cmp_eq_u32 s14, 3
	s_cbranch_scc0 BB58_1
	v_lshlrev_b32_e32 v0, 1, v0
	v_mul_u32_u24_e32 v1, 0x3200, v1
	s_mulk_i32 s6, 0x500
	s_mulk_i32 s7, 0x6400
	v_and_b32_e32 v0, 62, v0
	v_add3_u32 v1, s6, s7, v1
	v_lshlrev_b32_e32 v2, 1, v0
	v_or_b32_e32 v0, v1, v0
	s_clause 0x2
	global_load_ushort v6, v2, s[4:5] offset:130
	global_load_ushort v8, v2, s[4:5] offset:128
	global_load_dword v10, v2, s[4:5]
	v_add_nc_u32_e32 v2, 0x400, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_nc_u32_e32 v4, 0x440, v0
	v_add_nc_u32_e32 v19, 0x480, v0
	v_add_nc_u32_e32 v21, 0x4c0, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v20, 31, v19
	v_ashrrev_i32_e32 v22, 31, v21
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	v_lshlrev_b64 v[19:20], 1, v[19:20]
	v_add_co_u32 v2, vcc_lo, s2, v2
	v_lshlrev_b64 v[21:22], 1, v[21:22]
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	v_add_co_u32 v19, vcc_lo, s2, v19
	v_add_co_ci_u32_e32 v20, vcc_lo, s3, v20, vcc_lo
	v_add_co_u32 v21, vcc_lo, s2, v21
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v22, vcc_lo
	s_waitcnt vmcnt(2)
	v_add_f16_e32 v23, v6, v29
	s_waitcnt vmcnt(1)
	v_add_f16_sdwa v12, v8, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_sdwa v29, v8, v25 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v8, 0xffff, v8
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v16, v10, v44
	v_pk_add_f16 v35, v10, v36
	v_add_f16_sdwa v24, v10, v27 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_e32 v25, v6, v25
	v_lshl_or_b32 v6, v6, 16, v8
	v_add_f16_sdwa v27, v10, v27 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	v_pk_add_f16 v28, v10, v28
	v_pk_add_f16 v33, v10, v37
	v_max_f16_e32 v12, 0, v12
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v8, v35, 0
	v_max_f16_e32 v23, 0, v23
	v_max_f16_e32 v24, 0, v24
	v_pk_add_f16 v32, v10, v32
	v_pk_add_f16 v31, v10, v31
	v_pk_add_f16 v30, v10, v30
	v_pk_add_f16 v34, v10, v34
	v_pk_add_f16 v10, v10, v26
	v_max_f16_e32 v26, 0, v29
	v_pk_max_f16 v29, v33, 0
	v_max_f16_e32 v27, 0, v27
	v_max_f16_e32 v25, 0, v25
	global_store_short v[0:1], v12, off offset:128
	global_store_dword v[0:1], v16, off
	global_store_short v[0:1], v23, off offset:130
	global_store_short v[0:1], v24, off offset:256
	global_store_short v[0:1], v26, off offset:384
	global_store_short v[0:1], v27, off offset:258
	global_store_short v[0:1], v25, off offset:386
	global_store_dword v[0:1], v29, off offset:512
	v_pk_max_f16 v28, v28, 0
	v_pk_add_f16 v12, v6, v18
	global_store_dword v[0:1], v8, off offset:768
	v_pk_add_f16 v8, v6, v17
	v_pk_add_f16 v15, v6, v15
	v_pk_add_f16 v14, v6, v14
	v_pk_max_f16 v10, v10, 0
	v_pk_add_f16 v13, v6, v13
	v_pk_add_f16 v11, v6, v11
	global_store_dword v[2:3], v28, off
	v_pk_add_f16 v2, v6, v9
	v_pk_add_f16 v3, v6, v7
	v_pk_max_f16 v33, v34, 0
	v_pk_max_f16 v32, v32, 0
	v_pk_max_f16 v31, v31, 0
	v_pk_max_f16 v30, v30, 0
	v_pk_max_f16 v6, v12, 0
	v_pk_max_f16 v7, v8, 0
	v_pk_max_f16 v8, v15, 0
	v_pk_max_f16 v9, v14, 0
	global_store_dword v[19:20], v10, off
	v_pk_max_f16 v10, v13, 0
	global_store_dword v[0:1], v33, off offset:1024
	global_store_dword v[0:1], v32, off offset:1280
	global_store_dword v[0:1], v31, off offset:1536
	global_store_dword v[0:1], v30, off offset:1792
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v3, v3, 0
	global_store_dword v[0:1], v6, off offset:640
	global_store_dword v[0:1], v7, off offset:896
	global_store_dword v[0:1], v8, off offset:1152
	global_store_dword v[0:1], v9, off offset:1408
	global_store_dword v[0:1], v10, off offset:1664
	global_store_dword v[0:1], v11, off offset:1920
	global_store_dword v[4:5], v2, off
	global_store_dword v[21:22], v3, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0
		.amdhsa_group_segment_fixed_size 7152
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 113
		.amdhsa_next_free_sgpr 19
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end58:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0, .Lfunc_end58-tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0:
	s_mul_hi_i32 s0, s6, 0x66666667
	v_lshrrev_b32_e32 v4, 4, v0
	v_add_nc_u32_e32 v1, 0x100, v0
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s2, s0, 2
	s_mov_b32 s15, 0xcccccccd
	s_add_i32 s2, s2, s1
	v_mul_hi_u32 v6, v1, s15
	v_add_nc_u32_e32 v7, 16, v4
	s_mul_i32 s3, s2, 10
	s_movk_i32 s7, 0x200
	s_sub_i32 s3, s6, s3
	v_add_nc_u32_e32 v2, 0x180, v0
	v_add_nc_u32_e32 v3, s7, v0
	v_mul_hi_u32 v7, v7, s15
	s_ashr_i32 s3, s3, 1
	s_movk_i32 s13, 0x2800
	v_and_b32_e32 v5, 15, v0
	s_mul_i32 s12, s3, s13
	s_mul_i32 s14, s2, 0x19000
	v_lshrrev_b32_e32 v6, 8, v6
	s_add_i32 s14, s12, s14
	v_mul_hi_u32 v2, v2, s15
	v_mul_hi_u32 v3, v3, s15
	v_or_b32_e32 v11, s14, v5
	s_mov_b32 s14, 0xc800
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshrrev_b32_e32 v7, 4, v7
	v_lshlrev_b32_e32 v10, 9, v4
	v_mul_i32_i24_e32 v6, s14, v6
	v_lshrrev_b32_e32 v2, 8, v2
	v_lshrrev_b32_e32 v3, 8, v3
	v_mul_u32_u24_e32 v7, s13, v7
	v_lshlrev_b32_e32 v8, 3, v0
	v_add3_u32 v6, v6, v11, v10
	v_mad_i32_i24 v9, v2, s14, v11
	v_mad_i32_i24 v12, v3, s14, v11
	v_lshlrev_b32_e32 v3, 4, v0
	v_and_b32_e32 v2, 56, v8
	v_mul_u32_u24_e32 v8, 0x50, v4
	v_sub_nc_u32_e32 v13, v6, v7
	v_lshlrev_b32_e32 v5, 3, v5
	s_movk_i32 s12, 0x800
	s_movk_i32 s13, 0x2000
	v_lshl_add_u32 v6, v8, 1, s12
	v_add3_u32 v7, v12, v10, 0x1800
	v_add3_u32 v8, v9, v10, s12
	v_add_nc_u32_e32 v9, s13, v13
	v_add_nc_u32_e32 v10, v11, v10
	v_lshl_or_b32 v1, v0, 1, s12
	v_and_b32_e32 v4, 0x3f80, v3
	v_mov_b32_e32 v13, 0
	v_add_nc_u32_e32 v11, 0x400, v5
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	s_lshl_b32 s6, s6, 6
	s_mov_b32 s14, 0
	s_and_b32 s6, s6, 64
BB59_1:
	v_add_nc_u32_e32 v22, s14, v10
	v_add_nc_u32_e32 v24, s14, v9
	v_add_nc_u32_e32 v26, s14, v8
	v_add_nc_u32_e32 v28, s14, v7
	v_or3_b32 v30, v4, s6, v2
	v_ashrrev_i32_e32 v23, 31, v22
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v27, 31, v26
	v_ashrrev_i32_e32 v29, 31, v28
	v_ashrrev_i32_e32 v31, 31, v30
	v_lshlrev_b64 v[22:23], 1, v[22:23]
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_add_nc_u32_e32 v4, s12, v4
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v22, vcc_lo, s8, v22
	s_add_i32 s14, s14, 16
	v_add_co_ci_u32_e32 v23, vcc_lo, s9, v23, vcc_lo
	v_add_co_u32 v32, vcc_lo, s8, v24
	s_cmp_eq_u32 s14, s7
	v_add_co_ci_u32_e32 v33, vcc_lo, s9, v25, vcc_lo
	v_add_co_u32 v26, vcc_lo, s8, v26
	v_add_co_ci_u32_e32 v27, vcc_lo, s9, v27, vcc_lo
	v_add_co_u32 v28, vcc_lo, s8, v28
	v_add_co_ci_u32_e32 v29, vcc_lo, s9, v29, vcc_lo
	v_add_co_u32 v24, vcc_lo, s10, v30
	v_add_co_ci_u32_e32 v25, vcc_lo, s11, v31, vcc_lo
	v_add_co_u32 v30, vcc_lo, s13, v22
	v_add_co_ci_u32_e32 v31, vcc_lo, 0, v23, vcc_lo
	global_load_ushort v34, v[22:23], off
	global_load_dwordx4 v[22:25], v[24:25], off
	s_clause 0x3
	global_load_ushort v30, v[30:31], off
	global_load_ushort v31, v[32:33], off
	global_load_ushort v26, v[26:27], off
	global_load_ushort v27, v[28:29], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v1, v34
	ds_write_b128 v3, v[22:25]
	ds_write_b16 v1, v30 offset:256
	ds_write_b16 v1, v31 offset:512
	ds_write_b16 v1, v26 offset:768
	ds_write_b16 v1, v27 offset:1024
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read2_b32 v[66:67], v5 offset1:1
	ds_read_b128 v[22:25], v6
	ds_read_b128 v[26:29], v6 offset:32
	ds_read_b128 v[30:33], v6 offset:64
	ds_read_b128 v[34:37], v6 offset:96
	ds_read_b128 v[38:41], v6 offset:128
	ds_read2_b64 v[42:45], v5 offset0:16 offset1:32
	ds_read_b128 v[46:49], v6 offset:16
	ds_read2_b64 v[50:53], v6 offset0:6 offset1:7
	ds_read2_b64 v[54:57], v6 offset0:10 offset1:11
	ds_read2_b64 v[58:61], v6 offset0:14 offset1:15
	ds_read2_b64 v[62:65], v6 offset0:18 offset1:19
	ds_read_b64 v[68:69], v5 offset:896
	ds_read2_b32 v[70:71], v5 offset0:128 offset1:129
	ds_read_b64 v[72:73], v5 offset:384
	s_waitcnt lgkmcnt(13)
	v_pk_fma_f16 v20, v22, v66, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v22, v67, v21 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(12)
	v_pk_fma_f16 v19, v26, v66, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v26, v67, v18 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(11)
	v_pk_fma_f16 v17, v30, v66, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v30, v67, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(10)
	v_pk_fma_f16 v74, v34, v66, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v75, v34, v67, v14 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(9)
	v_pk_fma_f16 v66, v38, v66, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v67, v38, v67, v12 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v19, v26, v42, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v26, v43, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v30, v42, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v30, v43, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v34, v43, v75 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v38, v42, v66 op_sel:[1,0,0]
	ds_read2_b64 v[12:15], v5 offset0:80 offset1:96
	v_pk_fma_f16 v20, v22, v42, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v22, v43, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v34, v42, v74 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v38, v43, v67 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v35, v45, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v23, v44, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v39, v44, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v35, v44, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v39, v45, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v23, v45, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v31, v44, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v27, v44, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v27, v45, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v31, v45, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v22, v35, v72, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v35, v73, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v23, v72, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v23, v73, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v39, v72, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v39, v73, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v31, v72, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v31, v73, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v27, v72, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v27, v73, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v24, v70, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v24, v71, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v32, v71, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v36, v70, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v28, v71, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v36, v71, v26 op_sel_hi:[0,1,1]
	ds_read2_b32 v[20:21], v11 offset1:1
	v_pk_fma_f16 v38, v28, v70, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v32, v70, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v40, v70, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v40, v71, v34 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v31, v32, v13, v31 op_sel:[1,0,0]
	ds_read2_b64 v[16:19], v5 offset0:144 offset1:160
	v_pk_fma_f16 v35, v24, v12, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v24, v13, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v28, v12, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v28, v13, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v32, v12, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v36, v13, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v36, v12, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v40, v12, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v40, v13, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v25, v14, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v25, v15, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v29, v14, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v33, v14, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v33, v15, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v29, v15, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v37, v14, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v37, v15, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v41, v14, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v41, v15, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v29, v68, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v29, v69, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v25, v68, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v25, v69, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v33, v68, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v33, v69, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v37, v68, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v37, v69, v38 op_sel:[1,0,0]
	ds_read2_b64 v[12:15], v5 offset0:208 offset1:224
	ds_read_b64 v[22:23], v5 offset:1408
	v_pk_fma_f16 v36, v41, v68, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v41, v69, v40 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v30, v46, v20, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v46, v21, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v50, v20, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v50, v21, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v54, v20, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v58, v20, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v54, v21, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v58, v21, v35 op_sel_hi:[0,1,1]
	ds_read_b64 v[24:25], v5 offset:1920
	ds_read2_b32 v[26:27], v11 offset0:128 offset1:129
	v_pk_fma_f16 v20, v62, v20, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v62, v21, v37 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v29, v50, v17, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v54, v16, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v54, v17, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v46, v16, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v46, v17, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v58, v17, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v62, v17, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v50, v16, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v58, v16, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v62, v16, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v55, v18, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v63, v19, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v47, v18, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v47, v19, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v63, v18, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v59, v18, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v51, v18, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v51, v19, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v55, v19, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v59, v19, v35 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v18, v47, v22, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v47, v23, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v51, v22, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v51, v23, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v63, v22, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v63, v23, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v55, v23, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v59, v23, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v55, v22, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v59, v22, v32 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v18, v48, v26, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v56, v27, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v48, v27, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v56, v26, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v52, v26, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v52, v27, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v60, v26, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v64, v26, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v60, v27, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v64, v27, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v56, v12, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v56, v13, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v60, v12, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v60, v13, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v52, v13, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v48, v13, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v64, v13, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v48, v12, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v52, v12, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v64, v12, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v49, v15, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v53, v15, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v49, v14, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v53, v14, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v57, v14, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v57, v15, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v61, v14, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v61, v15, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v65, v14, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v65, v15, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v49, v24, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v49, v25, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v53, v24, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v65, v24, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v53, v25, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v57, v24, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v57, v25, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v61, v24, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v61, v25, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v65, v25, v29 op_sel:[1,0,0]
	s_cbranch_scc0 BB59_1
	v_lshlrev_b32_e32 v1, 2, v0
	v_lshrrev_b32_e32 v4, 6, v0
	s_mulk_i32 s2, 0x6400
	v_bfe_u32 v0, v0, 4, 2
	s_mulk_i32 s3, 0xa00
	v_and_b32_e32 v1, 60, v1
	v_mad_u32_u24 v4, 0x3200, v4, s2
	v_mul_u32_u24_e32 v0, 0x280, v0
	v_or_b32_e32 v2, s6, v1
	v_or3_b32 v1, v4, s6, v1
	v_lshlrev_b32_e32 v2, 1, v2
	v_add3_u32 v0, v1, s3, v0
	s_clause 0x1
	global_load_dword v3, v2, s[4:5]
	global_load_dword v2, v2, s[4:5] offset:4
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v4, v3, v20
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v5, v2, v21
	v_pk_add_f16 v6, v3, v19
	v_pk_add_f16 v7, v2, v18
	v_pk_add_f16 v8, v3, v17
	v_pk_add_f16 v10, v3, v15
	v_pk_add_f16 v9, v2, v16
	v_pk_add_f16 v11, v2, v14
	v_pk_add_f16 v3, v3, v13
	v_pk_add_f16 v2, v2, v12
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v2, v2, 0
	global_store_dword v[0:1], v4, off
	global_store_dword v[0:1], v5, off offset:4
	global_store_dword v[0:1], v6, off offset:256
	global_store_dword v[0:1], v7, off offset:260
	global_store_dword v[0:1], v8, off offset:512
	global_store_dword v[0:1], v9, off offset:516
	global_store_dword v[0:1], v10, off offset:768
	global_store_dword v[0:1], v11, off offset:772
	global_store_dword v[0:1], v3, off offset:1024
	global_store_dword v[0:1], v2, off offset:1028
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0
		.amdhsa_group_segment_fixed_size 3328
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 76
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end59:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0, .Lfunc_end59-tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0:
	v_lshrrev_b32_e32 v1, 4, v0
	s_mov_b32 s9, 0xcccccccd
	v_add_nc_u32_e32 v4, 0x100, v0
	s_mul_hi_i32 s15, s6, 0x66666667
	v_add_nc_u32_e32 v5, 0x180, v0
	v_add_nc_u32_e32 v2, 16, v1
	v_add_nc_u32_e32 v6, 0x200, v0
	v_mul_hi_u32 v4, v4, s9
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[0:1], s[4:5], 0x18
	s_lshr_b32 s4, s15, 31
	v_mul_hi_u32 v3, v2, s9
	s_ashr_i32 s5, s15, 1
	v_mul_hi_u32 v5, v5, s9
	s_add_i32 s4, s5, s4
	v_mul_hi_u32 v6, v6, s9
	s_mul_i32 s5, s4, 5
	v_lshrrev_b32_e32 v4, 8, v4
	s_sub_i32 s5, s6, s5
	v_lshrrev_b32_e32 v3, 4, v3
	s_mul_i32 s15, s4, 0x19000
	s_mul_i32 s6, s5, 0x2800
	s_mov_b32 s14, 0xc800
	s_add_i32 s15, s15, s6
	v_mul_u32_u24_e32 v3, 20, v3
	v_lshrrev_b32_e32 v41, 5, v0
	v_lshrrev_b32_e32 v5, 8, v5
	v_mul_i32_i24_e32 v4, s14, v4
	v_lshrrev_b32_e32 v6, 8, v6
	v_sub_nc_u32_e32 v2, v2, v3
	v_and_or_b32 v3, v0, 15, s15
	v_lshlrev_b32_e32 v43, 1, v0
	s_movk_i32 s7, 0x2000
	s_movk_i32 s8, 0x800
	v_lshlrev_b32_e32 v2, 9, v2
	v_lshl_add_u32 v45, v1, 9, v3
	v_mul_i32_i24_e32 v1, s14, v5
	s_movk_i32 s6, 0x1800
	v_or_b32_e32 v44, s7, v43
	v_add3_u32 v46, v3, v4, v2
	v_mul_i32_i24_e32 v2, s14, v6
	v_lshlrev_b32_e32 v3, 2, v0
	v_mul_u32_u24_e32 v4, 0x50, v41
	v_add3_u32 v47, v45, v1, s8
	v_mov_b32_e32 v1, 0
	v_add3_u32 v48, v45, v2, s6
	v_and_b32_e32 v42, 0x7c, v3
	v_lshl_or_b32 v49, v4, 1, s7
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v40, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v22, 0
	s_mov_b32 s9, 0
	s_movk_i32 s14, 0x1000
BB60_1:
	s_lshl_b32 s15, s9, 4
	v_lshl_or_b32 v56, s9, 12, v0
	v_add_nc_u32_e32 v50, s15, v45
	v_add_nc_u32_e32 v52, s15, v46
	v_add_nc_u32_e32 v54, s15, v47
	v_add_nc_u32_e32 v58, s15, v48
	v_ashrrev_i32_e32 v57, 31, v56
	v_ashrrev_i32_e32 v51, 31, v50
	v_ashrrev_i32_e32 v53, 31, v52
	v_ashrrev_i32_e32 v55, 31, v54
	v_ashrrev_i32_e32 v59, 31, v58
	v_lshlrev_b64 v[56:57], 1, v[56:57]
	v_lshlrev_b64 v[50:51], 1, v[50:51]
	v_lshlrev_b64 v[52:53], 1, v[52:53]
	v_lshlrev_b64 v[54:55], 1, v[54:55]
	v_lshlrev_b64 v[58:59], 1, v[58:59]
	s_mov_b32 s15, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v50, vcc_lo, s10, v50
	v_add_co_ci_u32_e32 v51, vcc_lo, s11, v51, vcc_lo
	global_load_ushort v64, v[50:51], off
	v_add_co_u32 v50, vcc_lo, s7, v50
	v_add_co_ci_u32_e32 v51, vcc_lo, 0, v51, vcc_lo
	v_add_co_u32 v52, vcc_lo, s10, v52
	v_add_co_ci_u32_e32 v53, vcc_lo, s11, v53, vcc_lo
	v_add_co_u32 v54, vcc_lo, s10, v54
	v_add_co_ci_u32_e32 v55, vcc_lo, s11, v55, vcc_lo
	v_add_co_u32 v56, vcc_lo, s12, v56
	v_add_co_ci_u32_e32 v57, vcc_lo, s13, v57, vcc_lo
	v_add_co_u32 v58, vcc_lo, s10, v58
	v_add_co_ci_u32_e32 v59, vcc_lo, s11, v59, vcc_lo
	v_add_co_u32 v60, vcc_lo, s8, v56
	v_add_co_ci_u32_e32 v61, vcc_lo, 0, v57, vcc_lo
	v_add_co_u32 v62, vcc_lo, v56, s14
	v_add_co_ci_u32_e32 v63, vcc_lo, 0, v57, vcc_lo
	s_clause 0xf
	global_load_ushort v65, v[56:57], off
	global_load_ushort v66, v[56:57], off offset:256
	global_load_ushort v67, v[56:57], off offset:512
	global_load_ushort v68, v[56:57], off offset:768
	global_load_ushort v69, v[56:57], off offset:1024
	global_load_ushort v70, v[56:57], off offset:1280
	global_load_ushort v71, v[56:57], off offset:1536
	global_load_ushort v72, v[56:57], off offset:1792
	global_load_ushort v73, v[62:63], off offset:-2048
	global_load_ushort v74, v[60:61], off offset:256
	global_load_ushort v75, v[60:61], off offset:512
	global_load_ushort v76, v[60:61], off offset:768
	global_load_ushort v77, v[60:61], off offset:1024
	global_load_ushort v78, v[60:61], off offset:1280
	global_load_ushort v79, v[60:61], off offset:1536
	global_load_ushort v60, v[60:61], off offset:1792
	v_add_co_u32 v56, vcc_lo, s6, v56
	v_add_co_ci_u32_e32 v57, vcc_lo, 0, v57, vcc_lo
	s_clause 0xf
	global_load_ushort v61, v[62:63], off
	global_load_ushort v80, v[62:63], off offset:256
	global_load_ushort v81, v[62:63], off offset:512
	global_load_ushort v82, v[62:63], off offset:768
	global_load_ushort v83, v[62:63], off offset:1024
	global_load_ushort v84, v[62:63], off offset:1280
	global_load_ushort v85, v[62:63], off offset:1536
	global_load_ushort v62, v[62:63], off offset:1792
	global_load_ushort v63, v[56:57], off
	global_load_ushort v86, v[56:57], off offset:256
	global_load_ushort v87, v[56:57], off offset:512
	global_load_ushort v88, v[56:57], off offset:768
	global_load_ushort v89, v[56:57], off offset:1024
	global_load_ushort v90, v[56:57], off offset:1280
	global_load_ushort v91, v[56:57], off offset:1536
	global_load_ushort v56, v[56:57], off offset:1792
	s_clause 0x3
	global_load_ushort v51, v[50:51], off
	global_load_ushort v52, v[52:53], off
	global_load_ushort v53, v[54:55], off
	global_load_ushort v54, v[58:59], off
	v_mov_b32_e32 v50, v49
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v43, v65
	ds_write_b16 v43, v66 offset:256
	ds_write_b16 v43, v67 offset:512
	ds_write_b16 v43, v68 offset:768
	ds_write_b16 v43, v69 offset:1024
	ds_write_b16 v43, v70 offset:1280
	ds_write_b16 v43, v71 offset:1536
	ds_write_b16 v43, v72 offset:1792
	ds_write_b16 v44, v64
	ds_write_b16 v43, v73 offset:2048
	ds_write_b16 v43, v74 offset:2304
	ds_write_b16 v43, v75 offset:2560
	ds_write_b16 v43, v76 offset:2816
	ds_write_b16 v43, v77 offset:3072
	ds_write_b16 v43, v78 offset:3328
	ds_write_b16 v43, v79 offset:3584
	ds_write_b16 v43, v60 offset:3840
	ds_write_b16 v43, v61 offset:4096
	ds_write_b16 v43, v80 offset:4352
	ds_write_b16 v43, v81 offset:4608
	ds_write_b16 v43, v82 offset:4864
	ds_write_b16 v43, v83 offset:5120
	ds_write_b16 v43, v84 offset:5376
	ds_write_b16 v43, v85 offset:5632
	ds_write_b16 v43, v62 offset:5888
	ds_write_b16 v43, v63 offset:6144
	ds_write_b16 v43, v86 offset:6400
	ds_write_b16 v43, v87 offset:6656
	ds_write_b16 v43, v88 offset:6912
	ds_write_b16 v43, v89 offset:7168
	ds_write_b16 v43, v90 offset:7424
	ds_write_b16 v43, v91 offset:7680
	ds_write_b16 v43, v56 offset:7936
	ds_write_b16 v44, v51 offset:256
	ds_write_b16 v44, v52 offset:512
	ds_write_b16 v44, v53 offset:768
	ds_write_b16 v44, v54 offset:1024
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB60_2:
	v_or_b32_e32 v71, s15, v42
	ds_read2_b64 v[51:54], v50 offset1:4
	ds_read2_b64 v[55:58], v50 offset0:8 offset1:12
	ds_read2_b64 v[59:62], v50 offset0:16 offset1:80
	ds_read2_b64 v[63:66], v50 offset0:84 offset1:88
	ds_read2_b64 v[67:70], v50 offset0:92 offset1:96
	v_add_nc_u32_e32 v50, 8, v50
	s_addk_i32 s15, 0x400
	v_lshlrev_b32_e32 v85, 1, v71
	s_cmp_lg_u32 s15, s14
	ds_read2_b32 v[83:84], v85 offset1:1
	ds_read2_b64 v[71:74], v85 offset0:32 offset1:64
	ds_read2_b64 v[75:78], v85 offset0:96 offset1:128
	ds_read2_b64 v[79:82], v85 offset0:160 offset1:192
	ds_read_b64 v[85:86], v85 offset:1792
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v39, v51, v83, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v51, v84, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v53, v83, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v53, v84, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v55, v83, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v55, v84, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v57, v83, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v57, v84, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v59, v83, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v59, v84, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v61, v83, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v61, v84, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v63, v83, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v63, v84, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v65, v83, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v65, v84, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v67, v83, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v67, v84, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v69, v83, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v69, v84, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v24, v51, v71, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v51, v72, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v53, v71, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v53, v72, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v55, v71, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v55, v72, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v57, v71, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v57, v72, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v59, v71, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v59, v72, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v61, v71, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v61, v72, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v63, v71, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v63, v72, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v65, v71, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v65, v72, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v67, v71, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v67, v72, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v69, v71, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v69, v72, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v51, v73, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v51, v74, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v53, v73, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v53, v74, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v55, v73, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v55, v74, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v57, v73, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v57, v74, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v59, v73, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v59, v74, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v61, v73, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v61, v74, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v63, v73, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v63, v74, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v65, v73, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v65, v74, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v67, v73, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v67, v74, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v69, v73, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v69, v74, v19 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v24, v51, v75, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v51, v76, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v53, v75, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v53, v76, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v55, v75, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v55, v76, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v57, v75, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v57, v76, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v59, v75, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v59, v76, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v61, v75, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v61, v76, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v63, v75, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v63, v76, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v65, v75, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v65, v76, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v67, v75, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v67, v76, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v69, v75, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v69, v76, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v52, v77, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v52, v78, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v54, v77, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v54, v78, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v56, v77, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v56, v78, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v58, v77, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v58, v78, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v60, v77, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v60, v78, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v62, v77, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v62, v78, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v64, v77, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v64, v78, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v66, v77, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v66, v78, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v68, v77, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v68, v78, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v70, v77, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v70, v78, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v24, v52, v79, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v52, v80, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v54, v79, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v54, v80, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v56, v79, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v56, v80, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v58, v79, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v58, v80, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v60, v79, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v60, v80, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v62, v79, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v62, v80, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v64, v79, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v64, v80, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v66, v79, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v66, v80, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v68, v79, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v68, v80, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v70, v79, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v70, v80, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v52, v81, v39 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v24, v52, v85, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v52, v82, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v52, v86, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v54, v81, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v54, v85, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v54, v82, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v54, v86, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v56, v81, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v56, v85, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v56, v82, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v56, v86, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v58, v81, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v58, v85, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v58, v82, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v58, v86, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v60, v81, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v60, v85, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v60, v82, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v60, v86, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v62, v81, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v62, v85, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v62, v82, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v62, v86, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v64, v81, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v64, v85, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v64, v82, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v64, v86, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v66, v81, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v66, v85, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v66, v82, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v66, v86, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v68, v81, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v68, v85, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v68, v82, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v68, v86, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v70, v81, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v70, v85, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v70, v82, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v70, v86, v2 op_sel:[1,0,0]
	s_cbranch_scc1 BB60_2
	s_add_i32 s9, s9, 1
	s_cmp_eq_u32 s9, 32
	s_cbranch_scc0 BB60_1
	v_mul_u32_u24_e32 v41, 0x500, v41
	s_mulk_i32 s5, 0x1400
	s_mul_i32 s4, s4, 0xc800
	v_lshlrev_b32_e32 v0, 1, v42
	v_add3_u32 v41, s5, s4, v41
	s_clause 0x2
	global_load_dword v89, v0, s[0:1]
	global_load_ushort v90, v0, s[0:1] offset:260
	global_load_ushort v91, v0, s[0:1] offset:262
	v_or_b32_e32 v41, v41, v42
	v_add_nc_u32_e32 v43, 0x400, v41
	v_ashrrev_i32_e32 v42, 31, v41
	v_add_nc_u32_e32 v45, 0x402, v41
	v_add_nc_u32_e32 v49, 0x6400, v41
	v_add_nc_u32_e32 v51, 0x6402, v41
	v_ashrrev_i32_e32 v44, 31, v43
	v_lshlrev_b64 v[85:86], 1, v[41:42]
	v_ashrrev_i32_e32 v46, 31, v45
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_nc_u32_e32 v47, 0x480, v41
	v_lshlrev_b64 v[42:43], 1, v[43:44]
	v_add_nc_u32_e32 v55, 0x6500, v41
	v_add_co_u32 v85, vcc_lo, s2, v85
	v_lshlrev_b64 v[44:45], 1, v[45:46]
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_co_ci_u32_e32 v86, vcc_lo, s3, v86, vcc_lo
	v_add_nc_u32_e32 v57, 0x6502, v41
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_ashrrev_i32_e32 v56, 31, v55
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_nc_u32_e32 v59, 0x6600, v41
	v_add_co_u32 v44, vcc_lo, s2, v44
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_ashrrev_i32_e32 v58, 31, v57
	v_add_nc_u32_e32 v61, 0x6602, v41
	v_add_co_ci_u32_e32 v45, vcc_lo, s3, v45, vcc_lo
	v_lshlrev_b64 v[46:47], 1, v[47:48]
	v_add_co_u32 v48, vcc_lo, s2, v49
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_co_ci_u32_e32 v49, vcc_lo, s3, v50, vcc_lo
	v_add_co_u32 v50, vcc_lo, s2, v51
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_co_ci_u32_e32 v51, vcc_lo, s3, v52, vcc_lo
	v_add_nc_u32_e32 v53, 0x482, v41
	v_add_co_u32 v55, vcc_lo, s2, v55
	v_lshlrev_b64 v[59:60], 1, v[59:60]
	v_add_co_ci_u32_e32 v56, vcc_lo, s3, v56, vcc_lo
	v_add_co_u32 v57, vcc_lo, s2, v57
	v_lshlrev_b64 v[61:62], 1, v[61:62]
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v58, vcc_lo, s3, v58, vcc_lo
	v_add_co_u32 v59, vcc_lo, s2, v59
	v_add_nc_u32_e32 v63, 0x6480, v41
	v_add_co_ci_u32_e32 v60, vcc_lo, s3, v60, vcc_lo
	v_add_co_u32 v61, vcc_lo, s2, v61
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v62, vcc_lo
	v_add_co_u32 v46, vcc_lo, s2, v46
	v_add_nc_u32_e32 v65, 0x6482, v41
	v_add_co_ci_u32_e32 v47, vcc_lo, s3, v47, vcc_lo
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_co_u32 v52, vcc_lo, s2, v53
	v_add_nc_u32_e32 v67, 0x6580, v41
	v_add_co_ci_u32_e32 v53, vcc_lo, s3, v54, vcc_lo
	s_clause 0x2
	global_load_dword v54, v0, s[0:1] offset:4
	global_load_ushort v92, v0, s[0:1] offset:256
	global_load_ushort v0, v0, s[0:1] offset:258
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_nc_u32_e32 v69, 0x6582, v41
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_ashrrev_i32_e32 v68, 31, v67
	v_add_nc_u32_e32 v71, 0x6680, v41
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_ashrrev_i32_e32 v70, 31, v69
	v_add_nc_u32_e32 v73, 0x6682, v41
	v_add_co_u32 v63, vcc_lo, s2, v63
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_ashrrev_i32_e32 v72, 31, v71
	v_add_co_ci_u32_e32 v64, vcc_lo, s3, v64, vcc_lo
	v_add_nc_u32_e32 v75, 0x6700, v41
	v_add_co_u32 v65, vcc_lo, s2, v65
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_ashrrev_i32_e32 v74, 31, v73
	v_add_co_ci_u32_e32 v66, vcc_lo, s3, v66, vcc_lo
	v_add_nc_u32_e32 v77, 0x6780, v41
	v_add_co_u32 v67, vcc_lo, s2, v67
	v_lshlrev_b64 v[71:72], 1, v[71:72]
	v_ashrrev_i32_e32 v76, 31, v75
	v_add_co_ci_u32_e32 v68, vcc_lo, s3, v68, vcc_lo
	v_add_nc_u32_e32 v79, 0x6702, v41
	v_add_co_u32 v69, vcc_lo, s2, v69
	v_lshlrev_b64 v[73:74], 1, v[73:74]
	v_ashrrev_i32_e32 v78, 31, v77
	v_add_co_ci_u32_e32 v70, vcc_lo, s3, v70, vcc_lo
	v_add_nc_u32_e32 v81, 0x6782, v41
	v_add_co_u32 v71, vcc_lo, s2, v71
	v_lshlrev_b64 v[75:76], 1, v[75:76]
	v_ashrrev_i32_e32 v80, 31, v79
	v_add_co_ci_u32_e32 v72, vcc_lo, s3, v72, vcc_lo
	v_add_nc_u32_e32 v83, 0x6800, v41
	v_add_co_u32 v73, vcc_lo, s2, v73
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_ashrrev_i32_e32 v82, 31, v81
	v_add_co_ci_u32_e32 v74, vcc_lo, s3, v74, vcc_lo
	v_add_co_u32 v75, vcc_lo, s2, v75
	v_lshlrev_b64 v[79:80], 1, v[79:80]
	v_ashrrev_i32_e32 v84, 31, v83
	v_add_co_ci_u32_e32 v76, vcc_lo, s3, v76, vcc_lo
	v_add_nc_u32_e32 v87, 0x6802, v41
	v_add_co_u32 v77, vcc_lo, s2, v77
	v_lshlrev_b64 v[81:82], 1, v[81:82]
	v_add_co_ci_u32_e32 v78, vcc_lo, s3, v78, vcc_lo
	v_add_co_u32 v79, vcc_lo, s2, v79
	v_lshlrev_b64 v[83:84], 1, v[83:84]
	v_ashrrev_i32_e32 v88, 31, v87
	v_add_co_ci_u32_e32 v80, vcc_lo, s3, v80, vcc_lo
	v_add_co_u32 v81, vcc_lo, s2, v81
	v_add_co_ci_u32_e32 v82, vcc_lo, s3, v82, vcc_lo
	v_add_co_u32 v83, vcc_lo, s2, v83
	v_lshlrev_b64 v[87:88], 1, v[87:88]
	v_add_co_ci_u32_e32 v84, vcc_lo, s3, v84, vcc_lo
	s_waitcnt vmcnt(5)
	v_pk_add_f16 v40, v89, v40
	v_pk_add_f16 v32, v89, v32
	v_pk_add_f16 v31, v89, v31
	v_pk_add_f16 v28, v89, v28
	v_pk_add_f16 v39, v89, v39
	v_pk_max_f16 v40, v40, 0
	v_pk_add_f16 v38, v89, v38
	v_pk_add_f16 v36, v89, v36
	v_pk_add_f16 v34, v89, v34
	v_pk_add_f16 v25, v89, v25
	global_store_dword v[42:43], v40, off
	v_add_nc_u32_e32 v42, 0x6880, v41
	v_pk_add_f16 v21, v89, v21
	v_add_nc_u32_e32 v40, 0x6882, v41
	v_pk_max_f16 v34, v34, 0
	v_pk_max_f16 v25, v25, 0
	v_ashrrev_i32_e32 v43, 31, v42
	v_pk_max_f16 v21, v21, 0
	v_ashrrev_i32_e32 v41, 31, v40
	v_pk_max_f16 v32, v32, 0
	v_pk_max_f16 v31, v31, 0
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_pk_max_f16 v28, v28, 0
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_pk_max_f16 v39, v39, 0
	v_pk_max_f16 v38, v38, 0
	v_pk_max_f16 v36, v36, 0
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_co_u32 v87, vcc_lo, s2, v87
	v_add_co_ci_u32_e32 v88, vcc_lo, s3, v88, vcc_lo
	v_add_co_u32 v40, vcc_lo, s2, v40
	v_add_co_ci_u32_e32 v41, vcc_lo, s3, v41, vcc_lo
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v30, v54, v30
	v_pk_add_f16 v27, v54, v27
	v_pk_add_f16 v26, v54, v26
	v_pk_add_f16 v23, v54, v23
	v_pk_add_f16 v37, v54, v37
	v_pk_add_f16 v35, v54, v35
	v_pk_add_f16 v33, v54, v33
	v_pk_add_f16 v29, v54, v29
	v_pk_add_f16 v20, v54, v20
	v_pk_add_f16 v19, v54, v19
	v_mov_b32_e32 v54, 0xffff
	v_pk_max_f16 v30, v30, 0
	v_pk_max_f16 v29, v29, 0
	v_pk_max_f16 v20, v20, 0
	v_pk_max_f16 v19, v19, 0
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v89, v54, v92
	v_and_b32_e32 v54, v54, v90
	v_add_f16_e32 v92, v92, v24
	s_waitcnt vmcnt(0)
	v_add_f16_sdwa v24, v0, v24 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_max_f16 v27, v27, 0
	v_lshl_or_b32 v0, v0, 16, v89
	v_lshl_or_b32 v54, v91, 16, v54
	v_add_f16_e32 v89, v90, v22
	v_add_f16_sdwa v22, v91, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_max_f16 v26, v26, 0
	v_pk_add_f16 v17, v0, v17
	v_pk_add_f16 v18, v54, v18
	v_pk_add_f16 v15, v0, v15
	v_pk_add_f16 v16, v54, v16
	v_pk_add_f16 v13, v0, v13
	v_pk_add_f16 v14, v54, v14
	v_pk_add_f16 v11, v0, v11
	v_pk_add_f16 v12, v54, v12
	v_pk_add_f16 v9, v0, v9
	v_pk_add_f16 v10, v54, v10
	v_pk_add_f16 v7, v0, v7
	v_pk_add_f16 v8, v54, v8
	v_pk_add_f16 v5, v0, v5
	v_pk_add_f16 v3, v0, v3
	v_pk_add_f16 v0, v0, v1
	v_pk_add_f16 v1, v54, v2
	v_pk_add_f16 v6, v54, v6
	v_pk_add_f16 v4, v54, v4
	v_pk_max_f16 v2, v17, 0
	v_pk_max_f16 v17, v18, 0
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v23, v23, 0
	v_max_f16_e32 v90, 0, v92
	v_max_f16_e32 v24, 0, v24
	v_max_f16_e32 v89, 0, v89
	v_pk_max_f16 v37, v37, 0
	v_max_f16_e32 v22, 0, v22
	v_pk_max_f16 v35, v35, 0
	v_pk_max_f16 v33, v33, 0
	global_store_dword v[44:45], v30, off
	global_store_dword v[48:49], v32, off
	global_store_dword v[50:51], v27, off
	global_store_dword v[55:56], v31, off
	global_store_dword v[57:58], v26, off
	global_store_dword v[59:60], v28, off
	global_store_dword v[61:62], v23, off
	global_store_short v[85:86], v90, off offset:256
	global_store_dword v[85:86], v39, off
	global_store_short v[85:86], v24, off offset:258
	global_store_short v[85:86], v89, off offset:260
	global_store_dword v[85:86], v37, off offset:4
	global_store_short v[85:86], v22, off offset:262
	global_store_dword v[85:86], v38, off offset:512
	global_store_dword v[85:86], v35, off offset:516
	global_store_dword v[85:86], v36, off offset:1024
	global_store_dword v[85:86], v33, off offset:1028
	global_store_dword v[85:86], v34, off offset:1536
	global_store_dword v[85:86], v29, off offset:1540
	global_store_dword v[75:76], v25, off
	global_store_dword v[79:80], v20, off
	global_store_dword v[83:84], v21, off
	global_store_dword v[87:88], v19, off
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v7, v7, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v0, v0, 0
	v_pk_max_f16 v1, v1, 0
	global_store_dword v[85:86], v2, off offset:768
	global_store_dword v[85:86], v17, off offset:772
	global_store_dword v[85:86], v15, off offset:1280
	global_store_dword v[85:86], v16, off offset:1284
	global_store_dword v[85:86], v13, off offset:1792
	global_store_dword v[85:86], v14, off offset:1796
	global_store_dword v[46:47], v11, off
	global_store_dword v[52:53], v12, off
	global_store_dword v[63:64], v9, off
	global_store_dword v[65:66], v10, off
	global_store_dword v[67:68], v7, off
	global_store_dword v[69:70], v8, off
	global_store_dword v[71:72], v5, off
	global_store_dword v[73:74], v6, off
	global_store_dword v[77:78], v3, off
	global_store_dword v[81:82], v4, off
	global_store_dword v[42:43], v0, off
	global_store_dword v[40:41], v1, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0
		.amdhsa_group_segment_fixed_size 9472
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 93
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end60:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0, .Lfunc_end60-tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0:
	v_lshrrev_b32_e32 v5, 2, v0
	s_mov_b32 s0, 0x30c30c31
	v_add_nc_u32_e32 v9, 0x80, v0
	v_mul_hi_i32 v7, v0, s0
	v_lshrrev_b32_e32 v1, 6, v0
	v_add_nc_u32_e32 v6, 11, v5
	v_lshlrev_b32_e32 v12, 2, v0
	v_lshrrev_b32_e32 v9, 2, v9
	s_mul_hi_i32 s3, s6, 0x66666667
	v_mul_u32_u24_e32 v13, 40, v1
	v_mul_hi_u32 v3, 0x86186187, v6
	v_lshrrev_b32_e32 v11, 31, v7
	v_ashrrev_i32_e32 v7, 4, v7
	v_mul_hi_u32 v9, v9, s0
	s_lshr_b32 s14, s3, 31
	s_ashr_i32 s3, s3, 1
	s_movk_i32 s1, 0x4800
	v_add_nc_u32_e32 v7, v7, v11
	v_sub_nc_u32_e32 v10, v6, v3
	s_add_i32 s3, s3, s14
	s_clause 0x3
	s_load_dwordx2 s[10:11], s[4:5], 0x0
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_load_dwordx2 s[8:9], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_and_or_b32 v8, v0, 3, 0xffff9b00
	v_lshrrev_b32_e32 v9, 2, v9
	v_lshrrev_b32_e32 v10, 1, v10
	v_lshl_or_b32 v2, v0, 1, s1
	v_cmp_gt_i32_e32 vcc_lo, 0x7c, v0
	v_lshlrev_b32_e32 v4, 4, v0
	s_movk_i32 s2, 0x6400
	v_add_nc_u32_e32 v3, v10, v3
	v_mul_lo_u32 v10, 0x54, v7
	v_lshlrev_b32_e32 v5, 8, v5
	v_mad_i32_i24 v9, v9, s2, v8
	s_mul_i32 s7, s6, 0x1400
	v_lshrrev_b32_e32 v11, 4, v3
	v_and_b32_e32 v3, 0xfc, v12
	s_mul_i32 s15, s3, s2
	s_mul_i32 s14, s3, 5
	v_sub_nc_u32_e32 v10, v0, v10
	v_mul_lo_u32 v12, v11, 21
	v_lshl_or_b32 v0, v13, 1, s1
	v_add_nc_u32_e32 v13, s3, v7
	s_add_i32 s0, s7, s15
	v_ashrrev_i32_e32 v10, 2, v10
	s_sub_i32 s14, s6, s14
	v_add3_u32 v9, s0, v9, v5
	v_mul_u32_u24_e32 v11, 0x1500, v11
	v_sub_nc_u32_e32 v6, v6, v12
	v_mul_lo_u32 v12, v13, s2
	s_mul_i32 s14, s14, 20
	v_lshl_add_u32 v7, s3, 1, v7
	v_add_nc_u32_e32 v13, s14, v10
	v_add_nc_u32_e32 v6, s14, v6
	v_sub_nc_u32_e32 v9, v9, v11
	v_lshlrev_b32_e32 v10, 8, v10
	v_cmp_lt_i32_e64 s1, 0, v7
	v_add_nc_u32_e32 v11, v8, v12
	v_cmp_lt_i32_e64 s2, 0, v13
	v_cmp_lt_i32_e64 s0, 0, v6
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s3, s12, v4
	v_lshlrev_b32_e32 v5, 1, v3
	v_add_co_ci_u32_e64 v7, s3, s13, 0, s3
	v_add_nc_u32_e32 v8, 0xb00, v9
	v_add3_u32 v10, v11, s7, v10
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	s_and_b32 s2, s1, s2
	s_mov_b64 s[12:13], 0
	s_mov_b32 s3, 0x20000
	s_branch BB61_3
BB61_1:
	s_or_b32 exec_lo, exec_lo, s14
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v9 offset:256
BB61_2:
	s_or_b32 exec_lo, exec_lo, s7
	v_add_co_u32 v38, s1, v6, s12
	v_add_nc_u32_e32 v8, 4, v8
	v_add_co_ci_u32_e64 v39, s1, s13, v7, s1
	v_add_nc_u32_e32 v10, 4, v10
	s_add_u32 s12, s12, 0x800
	v_add_co_u32 v26, s1, s3, v38
	s_addc_u32 s13, s13, 0
	v_add_co_ci_u32_e64 v27, s1, 0, v39, s1
	v_add_co_u32 v30, s1, 0x40000, v38
	s_cmp_eq_u32 s12, s3
	v_add_co_ci_u32_e64 v31, s1, 0, v39, s1
	v_add_co_u32 v34, s1, 0x60000, v38
	v_add_co_ci_u32_e64 v35, s1, 0, v39, s1
	v_add_co_u32 v40, s1, 0x80000, v38
	s_clause 0x3
	global_load_dwordx4 v[22:25], v[38:39], off
	global_load_dwordx4 v[26:29], v[26:27], off
	global_load_dwordx4 v[30:33], v[30:31], off
	global_load_dwordx4 v[34:37], v[34:35], off
	v_add_co_ci_u32_e64 v41, s1, 0, v39, s1
	v_add_co_u32 v42, s1, 0xa0000, v38
	v_add_co_ci_u32_e64 v43, s1, 0, v39, s1
	v_add_co_u32 v46, s1, 0xc0000, v38
	v_add_co_ci_u32_e64 v47, s1, 0, v39, s1
	v_add_co_u32 v50, s1, 0xe0000, v38
	v_add_co_ci_u32_e64 v51, s1, 0, v39, s1
	v_add_co_u32 v54, s1, 0x100000, v38
	v_add_co_ci_u32_e64 v55, s1, 0, v39, s1
	s_clause 0x4
	global_load_dwordx4 v[38:41], v[40:41], off
	global_load_dwordx4 v[42:45], v[42:43], off
	global_load_dwordx4 v[46:49], v[46:47], off
	global_load_dwordx4 v[50:53], v[50:51], off
	global_load_dwordx4 v[54:57], v[54:55], off
	s_waitcnt vmcnt(8)
	ds_write_b128 v4, v[22:25]
	s_waitcnt vmcnt(7)
	ds_write_b128 v4, v[26:29] offset:2048
	s_waitcnt vmcnt(6)
	ds_write_b128 v4, v[30:33] offset:4096
	s_waitcnt vmcnt(5)
	ds_write_b128 v4, v[34:37] offset:6144
	s_waitcnt vmcnt(4)
	ds_write_b128 v4, v[38:41] offset:8192
	s_waitcnt vmcnt(3)
	ds_write_b128 v4, v[42:45] offset:10240
	s_waitcnt vmcnt(2)
	ds_write_b128 v4, v[46:49] offset:12288
	s_waitcnt vmcnt(1)
	ds_write_b128 v4, v[50:53] offset:14336
	s_waitcnt vmcnt(0)
	ds_write_b128 v4, v[54:57] offset:16384
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read2_b32 v[58:59], v5 offset1:1
	ds_read_b128 v[22:25], v0
	ds_read_b128 v[26:29], v0 offset:16
	ds_read_b128 v[30:33], v0 offset:32
	ds_read_b128 v[34:37], v0 offset:48
	ds_read_b128 v[38:41], v0 offset:64
	ds_read2st64_b64 v[42:45], v5 offset0:1 offset1:2
	ds_read2st64_b64 v[46:49], v5 offset0:3 offset1:4
	ds_read2st64_b64 v[50:53], v5 offset0:5 offset1:6
	ds_read2_b64 v[54:57], v0 offset0:22 offset1:23
	s_waitcnt lgkmcnt(8)
	v_pk_fma_f16 v9, v22, v58, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v22, v59, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v19, v26, v58, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v26, v59, v18 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v17, v30, v58, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v30, v59, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v15, v34, v58, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v34, v59, v14 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v13, v38, v58, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v38, v59, v12 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v9, v22, v42, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v26, v42, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v22, v43, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v26, v43, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v30, v42, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v34, v43, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v30, v43, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v34, v42, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v38, v42, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v38, v43, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v23, v44, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v23, v45, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v27, v44, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v27, v45, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v31, v44, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v35, v44, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v39, v44, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v31, v45, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v35, v45, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v39, v45, v12 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v9, v23, v46, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v39, v46, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v23, v47, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v31, v47, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v35, v46, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v35, v47, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v45, v39, v47, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v27, v47, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v27, v46, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v31, v46, v22 op_sel:[1,0,0]
	ds_read2st64_b64 v[11:14], v5 offset0:7 offset1:8
	ds_read2st64_b64 v[15:18], v5 offset0:9 offset1:10
	v_pk_fma_f16 v9, v24, v48, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v32, v49, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v24, v49, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v28, v48, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v28, v49, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v59, v32, v48, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v36, v48, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v36, v49, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v40, v48, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v40, v49, v45 op_sel_hi:[0,1,1]
	ds_read2_b64 v[19:22], v0 offset0:10 offset1:21
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v9, v24, v50, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v24, v51, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v28, v50, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v28, v51, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v32, v51, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v32, v50, v59 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v36, v50, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v36, v51, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v40, v50, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v40, v51, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v25, v52, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v25, v53, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v29, v53, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v33, v53, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v37, v52, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v29, v52, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v33, v52, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v41, v52, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v37, v53, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v41, v53, v40 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v9, v25, v11, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v25, v12, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v29, v11, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v29, v12, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v33, v11, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v33, v12, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v37, v11, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v37, v12, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v41, v11, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v41, v12, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v26, v13, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v34, v14, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v26, v14, v24 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v11, v19, v13, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v19, v14, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v30, v13, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v30, v14, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v38, v14, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v34, v13, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v38, v13, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v26, v15, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v26, v16, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v30, v15, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v30, v16, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v34, v15, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v38, v15, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v34, v16, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v38, v16, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v19, v15, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v19, v16, v12 op_sel:[1,0,0]
	ds_read2st64_b64 v[42:45], v5 offset0:11 offset1:12
	ds_read2st64_b64 v[46:49], v5 offset0:13 offset1:14
	v_pk_fma_f16 v9, v27, v17, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v27, v18, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v20, v17, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v31, v17, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v31, v18, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v35, v17, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v35, v18, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v39, v17, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v39, v18, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v20, v18, v12 op_sel_hi:[0,1,1]
	ds_read2_b64 v[11:14], v0 offset0:24 offset1:25
	ds_read2_b64 v[15:18], v0 offset0:26 offset1:27
	ds_read2_b64 v[23:26], v0 offset0:28 offset1:29
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v40, v20, v42, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v27, v42, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v27, v43, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v20, v43, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v31, v42, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v31, v43, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v58, v39, v42, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v39, v43, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v35, v42, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v35, v43, v33 op_sel:[1,0,0]
	ds_read_b128 v[27:30], v0 offset:240
	ds_read2st64_b64 v[31:34], v5 offset0:15 offset1:16
	ds_read2st64_b64 v[35:38], v5 offset0:17 offset1:18
	v_pk_fma_f16 v9, v21, v44, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v21, v45, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v39, v17, v45, v39 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v40, v25, v44, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v25, v45, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v56, v44, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v56, v45, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v13, v44, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v17, v44, v58 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v13, v45, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v21, v46, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v21, v47, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v56, v46, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v25, v47, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v56, v47, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v13, v46, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v13, v47, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v17, v46, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v17, v47, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v25, v46, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v22, v48, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v22, v49, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v57, v48, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v26, v49, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v57, v49, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v14, v48, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v18, v48, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v14, v49, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v18, v49, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v26, v48, v40 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v9, v22, v31, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v22, v32, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v14, v32, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v18, v32, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v57, v32, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v14, v31, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v18, v31, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v57, v31, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v26, v31, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v26, v32, v20 op_sel:[1,0,0]
	ds_read2st64_b64 v[39:42], v5 offset0:19 offset1:20
	ds_read2st64_b64 v[43:46], v5 offset0:21 offset1:22
	v_pk_fma_f16 v9, v54, v33, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v54, v34, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v11, v33, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v15, v33, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v11, v34, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v15, v34, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v23, v33, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v23, v34, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v27, v33, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v59, v27, v34, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v47, v15, v35, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v15, v36, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v23, v35, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v54, v35, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v11, v35, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v27, v35, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v11, v36, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v23, v36, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v27, v36, v59 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v54, v36, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v55, v37, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v12, v38, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v16, v38, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v24, v38, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v55, v38, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v28, v38, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v12, v37, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v16, v37, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v24, v37, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v28, v37, v35 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v9, v55, v39, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v12, v40, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v16, v40, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v24, v40, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v28, v40, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v12, v39, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v16, v39, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v24, v39, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v28, v39, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v55, v40, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v56, v41, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v13, v41, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v13, v42, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v17, v41, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v56, v42, v36 op_sel_hi:[0,1,1]
	ds_read_b128 v[19:22], v0 offset:336
	ds_read_b128 v[31:34], v0 offset:352
	v_pk_fma_f16 v15, v17, v42, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v25, v41, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v25, v42, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v29, v41, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v29, v42, v27 op_sel_hi:[0,1,1]
	ds_read2st64_b64 v[35:38], v5 offset0:23 offset1:24
	ds_read2st64_b64 v[39:42], v5 offset0:25 offset1:26
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v11, v13, v44, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v13, v43, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v56, v43, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v17, v44, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v25, v43, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v25, v44, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v17, v43, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v29, v44, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v29, v43, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v56, v44, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v14, v45, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v14, v46, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v57, v45, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v18, v45, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v57, v46, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v18, v46, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v30, v45, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v26, v45, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v26, v46, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v30, v46, v23 op_sel_hi:[0,1,1]
	ds_read_b128 v[43:46], v0 offset:368
	ds_read_b128 v[47:50], v0 offset:384
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v54, v14, v35, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v14, v36, v11 op_sel:[1,0,0]
	ds_read_b128 v[11:14], v0 offset:400
	v_pk_fma_f16 v29, v30, v35, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v57, v35, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v18, v35, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v18, v36, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v30, v36, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v57, v36, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v26, v35, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v57, v26, v36, v16 op_sel:[1,0,0]
	ds_read2st64_b64 v[15:18], v5 offset0:27 offset1:28
	ds_read2st64_b64 v[23:26], v5 offset0:29 offset1:30
	v_pk_fma_f16 v9, v19, v37, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v19, v38, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v31, v37, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v31, v38, v55 op_sel_hi:[0,1,1]
	ds_read_b64 v[51:52], v0 offset:416
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v9, v19, v39, v9 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v27, v43, v37, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v43, v38, v28 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v54, v47, v37, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v47, v38, v57 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v29, v11, v37, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v11, v38, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v19, v40, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v31, v39, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v31, v40, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v47, v39, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v43, v40, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v47, v40, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v43, v39, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v11, v39, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v11, v40, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v20, v41, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v20, v42, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v32, v41, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v32, v42, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v44, v41, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v57, v48, v41, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v44, v42, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v48, v42, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v12, v41, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v12, v42, v30 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v9, v20, v15, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v20, v16, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v32, v15, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v32, v16, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v44, v15, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v44, v16, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v48, v15, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v12, v15, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v57, v48, v16, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v12, v16, v42 op_sel:[1,0,0]
	ds_read2st64_b64 v[27:30], v5 offset0:31 offset1:32
	ds_read2st64_b64 v[35:38], v5 offset0:33 offset1:34
	ds_read_b64 v[39:40], v5 offset:17920
	v_pk_fma_f16 v9, v21, v17, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v13, v17, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v33, v18, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v45, v17, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v45, v18, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v21, v18, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v33, v17, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v49, v17, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v49, v18, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v13, v18, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v15, v13, v23, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v21, v23, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v21, v24, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v33, v23, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v13, v24, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v33, v24, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v45, v23, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v45, v24, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v49, v23, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v49, v24, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v22, v26, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v34, v25, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v34, v26, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v46, v25, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v46, v26, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v22, v25, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v50, v25, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v14, v25, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v14, v26, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v50, v26, v41 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v9, v22, v27, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v22, v28, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v14, v27, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v14, v28, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v34, v27, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v34, v28, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v46, v27, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v46, v28, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v50, v27, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v50, v28, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v31, v30, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v43, v29, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v43, v30, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v47, v29, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v47, v30, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v11, v29, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v31, v29, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v51, v29, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v51, v30, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v11, v30, v22 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v14, v31, v36, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v31, v35, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v43, v35, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v43, v36, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v11, v35, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v11, v36, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v47, v35, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v47, v36, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v51, v35, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v51, v36, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v32, v37, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v32, v38, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v12, v37, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v52, v37, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v52, v38, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v44, v37, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v48, v38, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v44, v38, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v48, v37, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v12, v38, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v20, v32, v40, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v44, v39, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v44, v40, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v32, v39, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v48, v39, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v48, v40, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v12, v39, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v12, v40, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v52, v39, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v52, v40, v26 op_sel:[1,0,0]
	s_cbranch_scc1 BB61_8
BB61_3:
	v_mov_b32_e32 v9, 0
	s_barrier 
	s_and_saveexec_b32 s7, s2
	s_cbranch_execz BB61_5
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[22:23], 1, v[10:11]
	v_add_co_u32 v22, s1, s10, v22
	v_add_co_ci_u32_e64 v23, s1, s11, v23, s1
	global_load_ushort v9, v[22:23], off
BB61_5:
	s_or_b32 exec_lo, exec_lo, s7
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v9
	s_and_saveexec_b32 s7, vcc_lo
	s_cbranch_execz BB61_2
	v_mov_b32_e32 v9, 0
	s_and_saveexec_b32 s14, s0
	s_cbranch_execz BB61_1
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[22:23], 1, v[8:9]
	v_add_co_u32 v22, s1, s10, v22
	v_add_co_ci_u32_e64 v23, s1, s11, v23, s1
	global_load_ushort v9, v[22:23], off
	s_branch BB61_1
BB61_8:
	v_lshlrev_b32_e32 v0, 1, v3
	s_mulk_i32 s6, 0xa00
	s_clause 0x1
	global_load_dword v6, v0, s[4:5]
	global_load_dword v7, v0, s[4:5] offset:4
	v_mad_u32_u24 v0, 0x500, v1, s6
	v_or_b32_e32 v0, v0, v3
	v_add_nc_u32_e32 v2, 0x400, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_nc_u32_e32 v4, 0x402, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_u32 v0, vcc_lo, s8, v0
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s8, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v8, v6, v21
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v9, v7, v20
	v_pk_add_f16 v10, v6, v19
	v_pk_add_f16 v11, v7, v18
	v_pk_add_f16 v17, v6, v17
	v_pk_add_f16 v15, v6, v15
	v_pk_add_f16 v14, v7, v14
	v_pk_add_f16 v6, v6, v13
	v_pk_add_f16 v16, v7, v16
	v_pk_add_f16 v7, v7, v12
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v10, v10, 0
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v12, v17, 0
	v_pk_max_f16 v13, v16, 0
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v7, v7, 0
	global_store_dword v[0:1], v8, off
	global_store_dword v[0:1], v9, off offset:4
	global_store_dword v[0:1], v10, off offset:512
	global_store_dword v[0:1], v11, off offset:516
	global_store_dword v[0:1], v12, off offset:1024
	global_store_dword v[0:1], v13, off offset:1028
	global_store_dword v[0:1], v15, off offset:1536
	global_store_dword v[0:1], v14, off offset:1540
	global_store_dword v[2:3], v6, off
	global_store_dword v[4:5], v7, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0
		.amdhsa_group_segment_fixed_size 18936
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 60
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end61:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0, .Lfunc_end61-tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshlrev_b32_e32 v22, 1, v0
	v_lshrrev_b32_e32 v20, 5, v0
	s_mul_i32 s1, s6, 0xc800
	v_lshlrev_b32_e32 v23, 2, v0
	s_mov_b32 s0, 0x8000
	v_and_b32_e32 v21, 62, v22
	v_lshl_add_u32 v1, v20, 10, s1
	v_mul_u32_u24_e32 v2, 0x140, v20
	v_cmp_gt_i32_e32 vcc_lo, 0xc0, v0
	v_or_b32_e32 v25, s0, v23
	v_mov_b32_e32 v0, 0
	v_or_b32_e32 v24, v1, v21
	v_lshl_or_b32 v26, v2, 1, s0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	s_mov_b32 s1, 0
	s_movk_i32 s7, 0x5000
	s_movk_i32 s12, 0x4000
	s_movk_i32 s13, 0x7800
BB62_1:
	v_lshl_add_u32 v27, s1, 6, v24
	v_lshl_or_b32 v29, s1, 14, v22
	v_ashrrev_i32_e32 v28, 31, v27
	v_ashrrev_i32_e32 v30, 31, v29
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v31, s0, s8, v27
	v_add_co_ci_u32_e64 v32, s0, s9, v28, s0
	v_lshlrev_b64 v[27:28], 1, v[29:30]
	v_add_co_u32 v29, s0, s7, v31
	v_add_co_ci_u32_e64 v30, s0, 0, v32, s0
	v_add_co_u32 v33, s0, 0xa000, v31
	v_add_co_ci_u32_e64 v34, s0, 0, v32, s0
	v_add_co_u32 v35, s0, 0xf000, v31
	v_add_co_ci_u32_e64 v36, s0, 0, v32, s0
	v_add_co_u32 v37, s0, 0x14000, v31
	v_add_co_ci_u32_e64 v38, s0, 0, v32, s0
	v_add_co_u32 v27, s0, s10, v27
	v_add_co_ci_u32_e64 v28, s0, s11, v28, s0
	s_clause 0x4
	global_load_dword v39, v[31:32], off
	global_load_dword v40, v[29:30], off
	global_load_dword v41, v[33:34], off
	global_load_dword v42, v[35:36], off
	global_load_dword v43, v[37:38], off
	s_clause 0x1
	global_load_dword v44, v[27:28], off
	global_load_dword v45, v[27:28], off offset:1280
	v_add_co_u32 v29, s0, 0x800, v27
	v_add_co_ci_u32_e64 v30, s0, 0, v28, s0
	v_add_co_u32 v31, s0, 0x1000, v27
	v_add_co_ci_u32_e64 v32, s0, 0, v28, s0
	v_add_co_u32 v33, s0, 0x1800, v27
	v_add_co_ci_u32_e64 v34, s0, 0, v28, s0
	v_add_co_u32 v35, s0, 0x2000, v27
	v_add_co_ci_u32_e64 v36, s0, 0, v28, s0
	v_add_co_u32 v37, s0, 0x2800, v27
	v_add_co_ci_u32_e64 v38, s0, 0, v28, s0
	s_clause 0x7
	global_load_dword v46, v[29:30], off offset:512
	global_load_dword v47, v[29:30], off offset:1792
	global_load_dword v48, v[31:32], off offset:1024
	global_load_dword v49, v[33:34], off offset:256
	global_load_dword v50, v[33:34], off offset:1536
	global_load_dword v51, v[35:36], off offset:768
	global_load_dword v52, v[37:38], off
	global_load_dword v53, v[37:38], off offset:1280
	v_add_co_u32 v29, s0, 0x3000, v27
	v_add_co_ci_u32_e64 v30, s0, 0, v28, s0
	v_add_co_u32 v31, s0, 0x3800, v27
	v_add_co_ci_u32_e64 v32, s0, 0, v28, s0
	v_add_co_u32 v33, s0, s12, v27
	v_add_co_ci_u32_e64 v34, s0, 0, v28, s0
	v_add_co_u32 v35, s0, 0x4800, v27
	v_add_co_ci_u32_e64 v36, s0, 0, v28, s0
	v_add_co_u32 v37, s0, s7, v27
	v_add_co_ci_u32_e64 v38, s0, 0, v28, s0
	s_clause 0x7
	global_load_dword v54, v[29:30], off offset:512
	global_load_dword v55, v[29:30], off offset:1792
	global_load_dword v56, v[31:32], off offset:1024
	global_load_dword v57, v[33:34], off offset:256
	global_load_dword v58, v[33:34], off offset:1536
	global_load_dword v59, v[35:36], off offset:768
	global_load_dword v60, v[37:38], off
	global_load_dword v61, v[37:38], off offset:1280
	v_add_co_u32 v29, s0, 0x5800, v27
	v_add_co_ci_u32_e64 v30, s0, 0, v28, s0
	v_add_co_u32 v31, s0, 0x6000, v27
	v_add_co_ci_u32_e64 v32, s0, 0, v28, s0
	v_add_co_u32 v33, s0, 0x6800, v27
	v_add_co_ci_u32_e64 v34, s0, 0, v28, s0
	v_add_co_u32 v35, s0, 0x7000, v27
	v_add_co_ci_u32_e64 v36, s0, 0, v28, s0
	v_add_co_u32 v37, s0, s13, v27
	v_add_co_ci_u32_e64 v38, s0, 0, v28, s0
	s_clause 0x6
	global_load_dword v62, v[29:30], off offset:512
	global_load_dword v29, v[29:30], off offset:1792
	global_load_dword v30, v[31:32], off offset:1024
	global_load_dword v31, v[33:34], off offset:256
	global_load_dword v32, v[33:34], off offset:1536
	global_load_dword v33, v[35:36], off offset:768
	global_load_dword v34, v[37:38], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2st64_b32 v23, v44, v45 offset1:5
	ds_write2st64_b32 v25, v39, v40 offset1:5
	ds_write2st64_b32 v25, v41, v42 offset0:10 offset1:15
	ds_write_b32 v25, v43 offset:5120
	ds_write2st64_b32 v23, v46, v47 offset0:10 offset1:15
	ds_write2st64_b32 v23, v48, v49 offset0:20 offset1:25
	ds_write2st64_b32 v23, v50, v51 offset0:30 offset1:35
	ds_write2st64_b32 v23, v52, v53 offset0:40 offset1:45
	ds_write2st64_b32 v23, v54, v55 offset0:50 offset1:55
	ds_write2st64_b32 v23, v56, v57 offset0:60 offset1:65
	ds_write2st64_b32 v23, v58, v59 offset0:70 offset1:75
	ds_write2st64_b32 v23, v60, v61 offset0:80 offset1:85
	ds_write2st64_b32 v23, v62, v29 offset0:90 offset1:95
	ds_write2st64_b32 v23, v30, v31 offset0:100 offset1:105
	ds_write2st64_b32 v23, v32, v33 offset0:110 offset1:115
	ds_write_b32 v23, v34 offset:30720
	s_and_saveexec_b32 s14, vcc_lo
	s_cbranch_execz BB62_3
	v_add_co_u32 v27, s0, s13, v27
	v_add_co_ci_u32_e64 v28, s0, 0, v28, s0
	global_load_ushort v29, v[27:28], off offset:1280
	s_waitcnt vmcnt(0)
	global_load_short_d16_hi v29, v[27:28], off offset:1282
	s_waitcnt vmcnt(0)
	ds_write_b32 v23, v29 offset:32000
BB62_3:
	s_or_b32 exec_lo, exec_lo, s14
	v_mov_b32_e32 v27, v26
	s_mov_b32 s0, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB62_4:
	v_or_b32_e32 v38, s0, v21
	ds_read2_b64 v[28:31], v27 offset1:16
	ds_read2_b64 v[32:35], v27 offset0:32 offset1:48
	ds_read_b64 v[36:37], v27 offset:512
	v_add_nc_u32_e32 v27, 8, v27
	s_addk_i32 s0, 0x400
	v_lshlrev_b32_e32 v44, 1, v38
	s_cmp_lg_u32 s0, s12
	ds_read2_b32 v[38:39], v44 offset1:32
	ds_read2_b32 v[40:41], v44 offset0:64 offset1:96
	v_add_nc_u32_e32 v52, 0x400, v44
	ds_read2_b32 v[42:43], v44 offset0:128 offset1:160
	ds_read2_b32 v[44:45], v44 offset0:192 offset1:224
	ds_read2_b32 v[46:47], v52 offset1:32
	ds_read2_b32 v[48:49], v52 offset0:64 offset1:96
	ds_read2_b32 v[50:51], v52 offset0:128 offset1:160
	ds_read2_b32 v[52:53], v52 offset0:192 offset1:224
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v17, v28, v38, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v28, v39, v19 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v18, v28, v40, v18 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v16, v28, v41, v16 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v15, v30, v38, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v30, v39, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v30, v40, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v30, v41, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v32, v38, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v32, v39, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v32, v40, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v32, v41, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v34, v38, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v34, v39, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v34, v40, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v34, v41, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v36, v38, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v36, v39, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v36, v40, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v36, v41, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v17, v28, v42, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v28, v43, v19 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v18, v28, v44, v18 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v16, v28, v45, v16 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v15, v30, v42, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v30, v43, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v30, v44, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v30, v45, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v32, v42, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v32, v43, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v32, v44, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v32, v45, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v34, v42, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v34, v43, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v34, v44, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v34, v45, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v36, v42, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v36, v43, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v36, v44, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v36, v45, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v17, v29, v46, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v29, v47, v19 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v18, v29, v48, v18 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v16, v29, v49, v16 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v15, v31, v46, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v31, v47, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v31, v48, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v31, v49, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v33, v46, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v33, v47, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v33, v48, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v33, v49, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v35, v46, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v35, v47, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v35, v48, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v35, v49, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v37, v46, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v37, v47, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v37, v48, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v37, v49, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v17, v29, v50, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v29, v51, v19 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v18, v29, v52, v18 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v16, v29, v53, v16 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v15, v31, v50, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v31, v51, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v31, v52, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v31, v53, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v33, v50, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v33, v51, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v33, v52, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v33, v53, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v35, v50, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v35, v51, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v35, v52, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v35, v53, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v37, v50, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v37, v51, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v37, v52, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v37, v53, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB62_4
	s_add_i32 s1, s1, 1
	s_cmp_eq_u32 s1, 16
	s_cbranch_scc0 BB62_1
	v_lshlrev_b32_e32 v22, 1, v21
	s_mulk_i32 s6, 0x3200
	v_mov_b32_e32 v37, 0xffff
	v_mad_u32_u24 v20, 0x500, v20, s6
	s_clause 0x6
	global_load_dword v30, v22, s[4:5]
	global_load_ushort v31, v22, s[4:5] offset:128
	global_load_ushort v32, v22, s[4:5] offset:256
	global_load_ushort v33, v22, s[4:5] offset:386
	global_load_ushort v34, v22, s[4:5] offset:384
	global_load_ushort v35, v22, s[4:5] offset:258
	global_load_ushort v36, v22, s[4:5] offset:130
	v_or_b32_e32 v20, v20, v21
	v_add_nc_u32_e32 v22, 0x400, v20
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_nc_u32_e32 v24, 0x440, v20
	v_add_nc_u32_e32 v26, 0x480, v20
	v_add_nc_u32_e32 v28, 0x4c0, v20
	v_ashrrev_i32_e32 v23, 31, v22
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v27, 31, v26
	v_ashrrev_i32_e32 v29, 31, v28
	v_lshlrev_b64 v[22:23], 1, v[22:23]
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_add_co_u32 v22, vcc_lo, s2, v22
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_add_co_ci_u32_e32 v23, vcc_lo, s3, v23, vcc_lo
	v_add_co_u32 v24, vcc_lo, s2, v24
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v25, vcc_lo
	v_add_co_u32 v26, vcc_lo, s2, v26
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v27, vcc_lo
	v_add_co_u32 v28, vcc_lo, s2, v28
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	s_waitcnt vmcnt(6)
	v_pk_add_f16 v14, v30, v14
	s_waitcnt vmcnt(5)
	v_add_f16_sdwa v38, v31, v19 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v31, v37, v31
	s_waitcnt vmcnt(4)
	v_add_f16_sdwa v39, v32, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v32, v37, v32
	s_waitcnt vmcnt(2)
	v_add_f16_sdwa v40, v34, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v34, v37, v34
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v31, v36, 16, v31
	v_add_f16_e32 v16, v33, v16
	v_lshl_or_b32 v32, v35, 16, v32
	v_pk_add_f16 v13, v30, v13
	v_lshl_or_b32 v33, v33, 16, v34
	v_pk_add_f16 v12, v30, v12
	v_pk_add_f16 v11, v31, v11
	v_pk_add_f16 v10, v32, v10
	v_pk_add_f16 v17, v30, v17
	v_pk_add_f16 v9, v33, v9
	v_pk_add_f16 v8, v31, v8
	v_add_f16_e32 v19, v36, v19
	v_pk_add_f16 v7, v32, v7
	v_pk_add_f16 v15, v30, v15
	v_add_f16_e32 v18, v35, v18
	v_pk_add_f16 v6, v33, v6
	v_pk_add_f16 v5, v31, v5
	v_pk_add_f16 v4, v32, v4
	v_pk_add_f16 v3, v33, v3
	v_pk_add_f16 v2, v31, v2
	v_pk_add_f16 v1, v32, v1
	v_pk_add_f16 v0, v33, v0
	v_max_f16_e32 v30, 0, v38
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v11, v11, 0
	v_max_f16_e32 v37, 0, v39
	v_pk_max_f16 v10, v10, 0
	v_max_f16_e32 v38, 0, v40
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v8, v8, 0
	v_max_f16_e32 v19, 0, v19
	v_pk_max_f16 v7, v7, 0
	v_max_f16_e32 v18, 0, v18
	v_max_f16_e32 v16, 0, v16
	v_pk_max_f16 v15, v15, 0
	global_store_short v[20:21], v30, off offset:128
	global_store_short v[20:21], v37, off offset:256
	global_store_short v[20:21], v38, off offset:384
	global_store_dword v[20:21], v17, off
	global_store_short v[20:21], v19, off offset:130
	global_store_short v[20:21], v18, off offset:258
	global_store_short v[20:21], v16, off offset:386
	global_store_dword v[20:21], v15, off offset:512
	global_store_dword v[20:21], v14, off offset:1024
	global_store_dword v[20:21], v13, off offset:1536
	global_store_dword v[22:23], v12, off
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v1, v1, 0
	v_pk_max_f16 v0, v0, 0
	global_store_dword v[20:21], v11, off offset:640
	global_store_dword v[20:21], v10, off offset:768
	global_store_dword v[20:21], v9, off offset:896
	global_store_dword v[20:21], v8, off offset:1152
	global_store_dword v[20:21], v7, off offset:1280
	global_store_dword v[20:21], v6, off offset:1408
	global_store_dword v[20:21], v5, off offset:1664
	global_store_dword v[20:21], v4, off offset:1792
	global_store_dword v[20:21], v3, off offset:1920
	global_store_dword v[24:25], v2, off
	global_store_dword v[26:27], v1, off
	global_store_dword v[28:29], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0
		.amdhsa_group_segment_fixed_size 39168
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 63
		.amdhsa_next_free_sgpr 15
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end62:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0, .Lfunc_end62-tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshlrev_b32_e32 v1, 1, v0
	v_lshrrev_b32_e32 v20, 5, v0
	s_ashr_i32 s1, s6, 1
	s_mov_b32 s7, 0xc800
	v_lshlrev_b32_e32 v2, 2, v0
	s_mul_i32 s0, s1, s7
	v_and_b32_e32 v21, 62, v1
	v_lshl_add_u32 v1, v20, 10, s0
	v_lshlrev_b32_e32 v25, 3, v0
	v_or_b32_e32 v3, 2, v2
	v_mul_u32_u24_e32 v4, 0x140, v20
	s_mov_b32 s0, 0x8000
	v_or_b32_e32 v22, v1, v21
	v_or_b32_e32 v1, 1, v2
	s_movk_i32 s12, 0x100
	v_and_b32_e32 v28, 0xfe, v3
	v_cmp_gt_i32_e32 vcc_lo, s12, v0
	v_lshl_or_b32 v30, v4, 1, s0
	v_and_b32_e32 v27, 0xfd, v1
	v_or_b32_e32 v23, s0, v2
	v_and_b32_e32 v24, 0xfc, v2
	v_or_b32_e32 v29, 3, v2
	v_and_b32_e32 v26, 0x1e00, v25
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	s_lshl_b32 s6, s6, 8
	s_movk_i32 s13, 0x5000
	s_and_b32 s6, s6, s12
	s_mov_b32 s12, 0
	s_mov_b32 s14, 0xa000
	s_mov_b32 s15, 0xf000
	s_movk_i32 s16, 0x1000
	s_movk_i32 s17, 0x2800
	s_movk_i32 s18, 0x3800
	s_movk_i32 s19, 0x6000
	s_movk_i32 s20, 0x7800
	s_mov_b32 s21, 0x8800
	s_mov_b32 s22, 0xb000
	s_mov_b32 s23, 0xd800
BB63_1:
	s_lshl_b32 s0, s12, 15
	v_or3_b32 v67, s0, v26, s6
	v_or_b32_e32 v31, v67, v24
	v_or_b32_e32 v33, v67, v28
	v_ashrrev_i32_e32 v32, 31, v31
	v_ashrrev_i32_e32 v34, 31, v33
	v_lshlrev_b64 v[31:32], 1, v[31:32]
	v_lshlrev_b64 v[35:36], 1, v[33:34]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v33, s0, s10, v31
	v_add_co_ci_u32_e64 v34, s0, s11, v32, s0
	v_add_co_u32 v31, s0, s10, v35
	v_add_co_ci_u32_e64 v32, s0, s11, v36, s0
	v_add_co_u32 v35, s0, s16, v33
	v_add_co_ci_u32_e64 v36, s0, 0, v34, s0
	v_add_co_u32 v37, s0, s16, v31
	s_clause 0x1
	global_load_ushort v43, v[33:34], off
	global_load_ushort v44, v[31:32], off
	v_add_co_ci_u32_e64 v38, s0, 0, v32, s0
	v_add_co_u32 v39, s0, s17, v33
	v_add_co_ci_u32_e64 v40, s0, 0, v34, s0
	v_add_co_u32 v41, s0, s17, v31
	v_add_co_ci_u32_e64 v42, s0, 0, v32, s0
	v_add_co_u32 v45, s0, s18, v33
	v_add_co_ci_u32_e64 v46, s0, 0, v34, s0
	v_add_co_u32 v47, s0, s18, v31
	v_add_co_ci_u32_e64 v48, s0, 0, v32, s0
	v_add_co_u32 v49, s0, s13, v33
	v_add_co_ci_u32_e64 v50, s0, 0, v34, s0
	v_add_co_u32 v51, s0, s13, v31
	v_add_co_ci_u32_e64 v52, s0, 0, v32, s0
	v_add_co_u32 v53, s0, s19, v33
	s_clause 0x7
	global_load_ushort v57, v[35:36], off offset:1024
	global_load_ushort v58, v[37:38], off offset:1024
	global_load_ushort v39, v[39:40], off
	global_load_ushort v40, v[41:42], off
	global_load_ushort v41, v[45:46], off offset:1024
	global_load_ushort v42, v[47:48], off offset:1024
	global_load_ushort v45, v[49:50], off
	global_load_ushort v46, v[51:52], off
	v_add_co_ci_u32_e64 v54, s0, 0, v34, s0
	v_add_co_u32 v55, s0, s19, v31
	v_add_co_ci_u32_e64 v56, s0, 0, v32, s0
	v_add_co_u32 v35, s0, s20, v33
	v_add_co_ci_u32_e64 v36, s0, 0, v34, s0
	v_add_co_u32 v37, s0, s20, v31
	v_add_co_ci_u32_e64 v38, s0, 0, v32, s0
	v_add_co_u32 v47, s0, s21, v33
	v_add_co_ci_u32_e64 v48, s0, 0, v34, s0
	v_add_co_u32 v49, s0, s21, v31
	v_add_co_ci_u32_e64 v50, s0, 0, v32, s0
	v_add_co_u32 v51, s0, s14, v33
	v_add_co_ci_u32_e64 v52, s0, 0, v34, s0
	v_add_co_u32 v59, s0, s14, v31
	v_add_co_ci_u32_e64 v60, s0, 0, v32, s0
	s_clause 0x7
	global_load_ushort v53, v[53:54], off offset:1024
	global_load_ushort v54, v[55:56], off offset:1024
	global_load_ushort v55, v[35:36], off
	global_load_ushort v56, v[37:38], off
	global_load_ushort v47, v[47:48], off offset:1024
	global_load_ushort v48, v[49:50], off offset:1024
	global_load_ushort v49, v[51:52], off
	global_load_ushort v50, v[59:60], off
	v_add_co_u32 v35, s0, s22, v33
	v_add_co_ci_u32_e64 v36, s0, 0, v34, s0
	v_add_co_u32 v37, s0, s22, v31
	v_add_co_ci_u32_e64 v38, s0, 0, v32, s0
	v_add_co_u32 v51, s0, s7, v33
	v_add_co_ci_u32_e64 v52, s0, 0, v34, s0
	v_add_co_u32 v59, s0, s7, v31
	v_add_co_ci_u32_e64 v60, s0, 0, v32, s0
	v_add_co_u32 v61, s0, s23, v33
	v_add_co_ci_u32_e64 v62, s0, 0, v34, s0
	v_add_co_u32 v63, s0, s23, v31
	v_add_co_ci_u32_e64 v64, s0, 0, v32, s0
	s_clause 0x5
	global_load_ushort v65, v[35:36], off offset:1024
	global_load_ushort v66, v[37:38], off offset:1024
	global_load_ushort v51, v[51:52], off
	global_load_ushort v52, v[59:60], off
	global_load_ushort v59, v[61:62], off offset:1024
	global_load_ushort v60, v[63:64], off offset:1024
	v_lshl_add_u32 v35, s12, 6, v22
	v_or_b32_e32 v37, v67, v27
	v_or_b32_sdwa v61, v67, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:BYTE_0
	v_ashrrev_i32_e32 v36, 31, v35
	v_ashrrev_i32_e32 v38, 31, v37
	v_ashrrev_i32_e32 v62, 31, v61
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_add_co_u32 v63, s0, s8, v35
	v_add_co_ci_u32_e64 v64, s0, s9, v36, s0
	v_lshlrev_b64 v[35:36], 1, v[37:38]
	v_lshlrev_b64 v[37:38], 1, v[61:62]
	v_add_co_u32 v61, s0, s13, v63
	v_add_co_ci_u32_e64 v62, s0, 0, v64, s0
	v_add_co_u32 v67, s0, s14, v63
	v_add_co_ci_u32_e64 v68, s0, 0, v64, s0
	v_add_co_u32 v69, s0, s15, v63
	v_add_co_ci_u32_e64 v70, s0, 0, v64, s0
	v_add_co_u32 v71, s0, 0x14000, v63
	v_add_co_ci_u32_e64 v72, s0, 0, v64, s0
	v_add_co_u32 v35, s0, s10, v35
	s_clause 0x4
	global_load_dword v107, v[63:64], off
	global_load_dword v108, v[61:62], off
	global_load_dword v109, v[67:68], off
	global_load_dword v110, v[69:70], off
	global_load_dword v111, v[71:72], off
	v_add_co_ci_u32_e64 v36, s0, s11, v36, s0
	v_add_co_u32 v37, s0, s10, v37
	v_add_co_ci_u32_e64 v38, s0, s11, v38, s0
	v_add_co_u32 v61, s0, s16, v35
	v_add_co_ci_u32_e64 v62, s0, 0, v36, s0
	v_add_co_u32 v63, s0, s16, v37
	v_add_co_ci_u32_e64 v64, s0, 0, v38, s0
	v_add_co_u32 v67, s0, s17, v35
	v_add_co_ci_u32_e64 v68, s0, 0, v36, s0
	v_add_co_u32 v69, s0, s17, v37
	v_add_co_ci_u32_e64 v70, s0, 0, v38, s0
	v_add_co_u32 v71, s0, s18, v35
	v_add_co_ci_u32_e64 v72, s0, 0, v36, s0
	v_add_co_u32 v73, s0, s18, v37
	v_add_co_ci_u32_e64 v74, s0, 0, v38, s0
	v_add_co_u32 v75, s0, s13, v35
	v_add_co_ci_u32_e64 v76, s0, 0, v36, s0
	v_add_co_u32 v77, s0, s13, v37
	v_add_co_ci_u32_e64 v78, s0, 0, v38, s0
	v_add_co_u32 v79, s0, s19, v35
	v_add_co_ci_u32_e64 v80, s0, 0, v36, s0
	v_add_co_u32 v81, s0, s19, v37
	v_add_co_ci_u32_e64 v82, s0, 0, v38, s0
	v_add_co_u32 v83, s0, s20, v35
	v_add_co_ci_u32_e64 v84, s0, 0, v36, s0
	v_add_co_u32 v85, s0, s20, v37
	v_add_co_ci_u32_e64 v86, s0, 0, v38, s0
	v_add_co_u32 v87, s0, s21, v35
	v_add_co_ci_u32_e64 v88, s0, 0, v36, s0
	v_add_co_u32 v89, s0, s21, v37
	v_add_co_ci_u32_e64 v90, s0, 0, v38, s0
	v_add_co_u32 v91, s0, s14, v35
	v_add_co_ci_u32_e64 v92, s0, 0, v36, s0
	v_add_co_u32 v93, s0, s14, v37
	v_add_co_ci_u32_e64 v94, s0, 0, v38, s0
	v_add_co_u32 v95, s0, s22, v35
	v_add_co_ci_u32_e64 v96, s0, 0, v36, s0
	v_add_co_u32 v97, s0, s22, v37
	v_add_co_ci_u32_e64 v98, s0, 0, v38, s0
	v_add_co_u32 v99, s0, s7, v35
	v_add_co_ci_u32_e64 v100, s0, 0, v36, s0
	v_add_co_u32 v101, s0, s7, v37
	v_add_co_ci_u32_e64 v102, s0, 0, v38, s0
	v_add_co_u32 v103, s0, s23, v35
	v_add_co_ci_u32_e64 v104, s0, 0, v36, s0
	v_add_co_u32 v105, s0, s23, v37
	v_add_co_ci_u32_e64 v106, s0, 0, v38, s0
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v43, v[35:36], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v44, v[37:38], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v57, v[61:62], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v58, v[63:64], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v39, v[67:68], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v40, v[69:70], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v41, v[71:72], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v42, v[73:74], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v45, v[75:76], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v46, v[77:78], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v53, v[79:80], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v54, v[81:82], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v55, v[83:84], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v56, v[85:86], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v47, v[87:88], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v48, v[89:90], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v49, v[91:92], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v50, v[93:94], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v65, v[95:96], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v66, v[97:98], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v51, v[99:100], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v52, v[101:102], off
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v59, v[103:104], off offset:1024
	s_waitcnt vmcnt(28)
	global_load_short_d16_hi v60, v[105:106], off offset:1024
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2st64_b32 v23, v107, v108 offset1:5
	ds_write2st64_b32 v23, v109, v110 offset0:10 offset1:15
	ds_write_b32 v23, v111 offset:5120
	ds_write2st64_b64 v25, v[43:44], v[57:58] offset1:5
	ds_write2st64_b64 v25, v[39:40], v[41:42] offset0:10 offset1:15
	ds_write2st64_b64 v25, v[45:46], v[53:54] offset0:20 offset1:25
	ds_write2st64_b64 v25, v[55:56], v[47:48] offset0:30 offset1:35
	ds_write2st64_b64 v25, v[49:50], v[65:66] offset0:40 offset1:45
	ds_write2st64_b64 v25, v[51:52], v[59:60] offset0:50 offset1:55
	s_and_saveexec_b32 s24, vcc_lo
	s_cbranch_execz BB63_3
	v_add_co_u32 v33, s0, s15, v33
	v_add_co_ci_u32_e64 v34, s0, 0, v34, s0
	v_add_co_u32 v31, s0, s15, v31
	v_add_co_ci_u32_e64 v32, s0, 0, v32, s0
	s_clause 0x1
	global_load_ushort v33, v[33:34], off
	global_load_ushort v34, v[31:32], off
	v_add_co_u32 v31, s0, s15, v35
	v_add_co_ci_u32_e64 v32, s0, 0, v36, s0
	v_add_co_u32 v35, s0, s15, v37
	v_add_co_ci_u32_e64 v36, s0, 0, v38, s0
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v33, v[31:32], off
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v34, v[35:36], off
	s_waitcnt vmcnt(0)
	ds_write_b64 v25, v[33:34] offset:30720
BB63_3:
	s_or_b32 exec_lo, exec_lo, s24
	v_mov_b32_e32 v31, v30
	s_mov_b32 s0, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB63_4:
	v_or_b32_e32 v42, s0, v21
	ds_read2_b64 v[32:35], v31 offset1:16
	ds_read2_b64 v[36:39], v31 offset0:32 offset1:48
	ds_read_b64 v[40:41], v31 offset:512
	v_add_nc_u32_e32 v31, 8, v31
	s_addk_i32 s0, 0x400
	v_lshlrev_b32_e32 v48, 1, v42
	s_cmpk_lg_i32 s0, 0x4000
	ds_read2_b32 v[42:43], v48 offset1:32
	ds_read2_b32 v[44:45], v48 offset0:64 offset1:96
	v_add_nc_u32_e32 v56, 0x400, v48
	ds_read2_b32 v[46:47], v48 offset0:128 offset1:160
	ds_read2_b32 v[48:49], v48 offset0:192 offset1:224
	ds_read2_b32 v[50:51], v56 offset1:32
	ds_read2_b32 v[52:53], v56 offset0:64 offset1:96
	ds_read2_b32 v[54:55], v56 offset0:128 offset1:160
	ds_read2_b32 v[56:57], v56 offset0:192 offset1:224
	s_waitcnt lgkmcnt(7)
	v_pk_fma_f16 v17, v32, v42, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v32, v43, v19 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v18, v32, v44, v18 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v16, v32, v45, v16 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v15, v34, v42, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v34, v43, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v34, v44, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v34, v45, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v36, v42, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v36, v43, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v36, v44, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v36, v45, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v38, v42, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v38, v43, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v38, v44, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v38, v45, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v40, v42, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v40, v43, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v40, v44, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v40, v45, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v17, v32, v46, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v32, v47, v19 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v18, v32, v48, v18 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v16, v32, v49, v16 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v15, v34, v46, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v34, v47, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v34, v48, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v34, v49, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v36, v46, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v36, v47, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v36, v48, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v36, v49, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v38, v46, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v38, v47, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v38, v48, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v38, v49, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v40, v46, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v40, v47, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v40, v48, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v40, v49, v0 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v17, v33, v50, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v33, v51, v19 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v18, v33, v52, v18 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v16, v33, v53, v16 op_sel:[0,1,0] op_sel_hi:[0,0,1]
	v_pk_fma_f16 v15, v35, v50, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v35, v51, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v35, v52, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v35, v53, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v37, v50, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v37, v51, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v37, v52, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v37, v53, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v39, v50, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v39, v51, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v39, v52, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v39, v53, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v41, v50, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v41, v51, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v41, v52, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v41, v53, v0 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v17, v33, v54, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v33, v55, v19 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v18, v33, v56, v18 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v16, v33, v57, v16 op_sel:[1,1,0] op_sel_hi:[1,0,1]
	v_pk_fma_f16 v15, v35, v54, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v35, v55, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v35, v56, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v35, v57, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v37, v54, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v37, v55, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v37, v56, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v37, v57, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v39, v54, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v39, v55, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v39, v56, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v39, v57, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v41, v54, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v41, v55, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v41, v56, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v41, v57, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB63_4
	s_add_i32 s12, s12, 1
	s_cmp_eq_u32 s12, 16
	s_cbranch_scc0 BB63_1
	v_or_b32_e32 v22, s6, v21
	s_mulk_i32 s1, 0x6400
	v_mov_b32_e32 v53, 0xffff
	v_mad_u32_u24 v20, 0xa00, v20, s1
	v_lshlrev_b32_e32 v22, 1, v22
	v_or3_b32 v20, v20, s6, v21
	s_clause 0x6
	global_load_dword v46, v22, s[4:5]
	global_load_ushort v47, v22, s[4:5] offset:128
	global_load_ushort v48, v22, s[4:5] offset:256
	global_load_ushort v49, v22, s[4:5] offset:384
	global_load_ushort v50, v22, s[4:5] offset:258
	global_load_ushort v51, v22, s[4:5] offset:130
	global_load_ushort v52, v22, s[4:5] offset:386
	v_add_nc_u32_e32 v22, 0x400, v20
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_nc_u32_e32 v24, 0x440, v20
	v_add_nc_u32_e32 v26, 0x480, v20
	v_add_nc_u32_e32 v28, 0x4c0, v20
	v_ashrrev_i32_e32 v23, 31, v22
	v_add_nc_u32_e32 v30, 0x600, v20
	v_add_nc_u32_e32 v32, 0x640, v20
	v_add_nc_u32_e32 v34, 0x680, v20
	v_add_nc_u32_e32 v36, 0x6c0, v20
	v_add_nc_u32_e32 v38, 0x800, v20
	v_add_nc_u32_e32 v40, 0x840, v20
	v_add_nc_u32_e32 v42, 0x880, v20
	v_add_nc_u32_e32 v44, 0x8c0, v20
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_ashrrev_i32_e32 v25, 31, v24
	v_lshlrev_b64 v[22:23], 1, v[22:23]
	v_ashrrev_i32_e32 v27, 31, v26
	v_ashrrev_i32_e32 v29, 31, v28
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_add_co_u32 v22, vcc_lo, s2, v22
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_add_co_ci_u32_e32 v23, vcc_lo, s3, v23, vcc_lo
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_add_co_u32 v24, vcc_lo, s2, v24
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v25, vcc_lo, s3, v25, vcc_lo
	v_add_co_u32 v26, vcc_lo, s2, v26
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_ashrrev_i32_e32 v35, 31, v34
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v27, vcc_lo
	v_add_co_u32 v28, vcc_lo, s2, v28
	v_lshlrev_b64 v[32:33], 1, v[32:33]
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	v_add_co_u32 v30, vcc_lo, s2, v30
	v_lshlrev_b64 v[34:35], 1, v[34:35]
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_ci_u32_e32 v31, vcc_lo, s3, v31, vcc_lo
	v_add_co_u32 v32, vcc_lo, s2, v32
	v_lshlrev_b64 v[36:37], 1, v[36:37]
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_co_ci_u32_e32 v33, vcc_lo, s3, v33, vcc_lo
	v_add_co_u32 v34, vcc_lo, s2, v34
	v_lshlrev_b64 v[38:39], 1, v[38:39]
	v_ashrrev_i32_e32 v43, 31, v42
	v_add_co_ci_u32_e32 v35, vcc_lo, s3, v35, vcc_lo
	v_add_co_u32 v36, vcc_lo, s2, v36
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_ashrrev_i32_e32 v45, 31, v44
	v_add_co_ci_u32_e32 v37, vcc_lo, s3, v37, vcc_lo
	v_add_co_u32 v38, vcc_lo, s2, v38
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v39, vcc_lo
	v_add_co_u32 v40, vcc_lo, s2, v40
	v_lshlrev_b64 v[44:45], 1, v[44:45]
	v_add_co_ci_u32_e32 v41, vcc_lo, s3, v41, vcc_lo
	v_add_co_u32 v42, vcc_lo, s2, v42
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v43, vcc_lo
	v_add_co_u32 v44, vcc_lo, s2, v44
	v_add_co_ci_u32_e32 v45, vcc_lo, s3, v45, vcc_lo
	s_waitcnt vmcnt(6)
	v_pk_add_f16 v14, v46, v14
	s_waitcnt vmcnt(5)
	v_add_f16_sdwa v54, v47, v19 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v47, v53, v47
	s_waitcnt vmcnt(4)
	v_add_f16_sdwa v55, v48, v18 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v48, v53, v48
	s_waitcnt vmcnt(3)
	v_add_f16_sdwa v56, v49, v16 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v49, v53, v49
	s_waitcnt vmcnt(1)
	v_lshl_or_b32 v47, v51, 16, v47
	v_pk_add_f16 v13, v46, v13
	v_lshl_or_b32 v48, v50, 16, v48
	v_pk_add_f16 v12, v46, v12
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v49, v52, 16, v49
	v_pk_add_f16 v11, v47, v11
	v_pk_add_f16 v17, v46, v17
	v_pk_add_f16 v10, v48, v10
	v_pk_add_f16 v8, v47, v8
	v_pk_add_f16 v9, v49, v9
	v_add_f16_e32 v19, v51, v19
	v_pk_add_f16 v7, v48, v7
	v_pk_add_f16 v15, v46, v15
	v_add_f16_e32 v18, v50, v18
	v_add_f16_e32 v16, v52, v16
	v_pk_add_f16 v6, v49, v6
	v_pk_add_f16 v5, v47, v5
	v_pk_add_f16 v4, v48, v4
	v_pk_add_f16 v3, v49, v3
	v_pk_add_f16 v2, v47, v2
	v_pk_add_f16 v1, v48, v1
	v_pk_add_f16 v0, v49, v0
	v_max_f16_e32 v46, 0, v54
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v11, v11, 0
	v_max_f16_e32 v53, 0, v55
	v_pk_max_f16 v10, v10, 0
	v_max_f16_e32 v54, 0, v56
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v8, v8, 0
	v_max_f16_e32 v19, 0, v19
	v_pk_max_f16 v7, v7, 0
	v_max_f16_e32 v18, 0, v18
	v_max_f16_e32 v16, 0, v16
	v_pk_max_f16 v15, v15, 0
	global_store_short v[20:21], v46, off offset:128
	global_store_short v[20:21], v53, off offset:256
	global_store_short v[20:21], v54, off offset:384
	global_store_dword v[20:21], v17, off
	global_store_short v[20:21], v19, off offset:130
	global_store_short v[20:21], v18, off offset:258
	global_store_short v[20:21], v16, off offset:386
	global_store_dword v[20:21], v15, off offset:1024
	global_store_dword v[22:23], v14, off
	global_store_dword v[30:31], v13, off
	global_store_dword v[38:39], v12, off
	v_pk_max_f16 v6, v6, 0
	v_pk_max_f16 v5, v5, 0
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v3, v3, 0
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v1, v1, 0
	v_pk_max_f16 v0, v0, 0
	global_store_dword v[20:21], v11, off offset:1152
	global_store_dword v[20:21], v10, off offset:1280
	global_store_dword v[20:21], v9, off offset:1408
	global_store_dword v[24:25], v8, off
	global_store_dword v[26:27], v7, off
	global_store_dword v[28:29], v6, off
	global_store_dword v[32:33], v5, off
	global_store_dword v[34:35], v4, off
	global_store_dword v[36:37], v3, off
	global_store_dword v[40:41], v2, off
	global_store_dword v[42:43], v1, off
	global_store_dword v[44:45], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0
		.amdhsa_group_segment_fixed_size 39168
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 112
		.amdhsa_next_free_sgpr 25
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end63:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0, .Lfunc_end63-tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0

	.globl	tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0,@function
tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0:
	v_mul_hi_i32 v1, 0x60606061, v0
	s_mul_hi_i32 s0, s6, 0x66666667
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_lshr_b32 s1, s0, 31
	s_ashr_i32 s0, s0, 2
	v_mov_b32_e32 v5, 0
	s_add_i32 s1, s0, s1
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 5, v1
	s_mul_i32 s0, s1, 10
	s_mul_i32 s11, s1, 30
	s_sub_i32 s2, s6, s0
	s_mul_i32 s10, s1, 0x11940
	v_add_nc_u32_e32 v3, v1, v2
	s_mul_i32 s12, s2, 0x50
	s_mul_i32 s3, s2, 0xf0
	s_add_i32 s12, s12, -3
	v_mul_lo_u32 v1, 0x55, v3
	v_sub_nc_u32_e32 v4, v0, v1
	v_add_nc_u32_e32 v1, s11, v3
	v_add_nc_u32_e32 v2, s12, v4
	v_cmp_lt_i32_e32 vcc_lo, 2, v1
	v_cmp_gt_u32_e64 s0, 0x320, v2
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s6, s0
	s_cbranch_execz BB64_2
	v_mul_lo_u32 v1, 0x960, v3
	v_mul_lo_u32 v2, v4, 3
	v_add3_u32 v1, s3, s10, v1
	v_add3_u32 v1, v1, v2, 0xffffe3d7
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	global_load_ushort v5, v[1:2], off
BB64_2:
	s_or_b32 exec_lo, exec_lo, s6
	v_mul_u32_u24_e32 v1, 3, v0
	v_mov_b32_e32 v6, 0
	v_lshlrev_b32_e32 v2, 1, v1
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5
	s_and_saveexec_b32 s6, s0
	s_cbranch_execz BB64_4
	v_mul_lo_u32 v5, 0x960, v3
	v_mul_lo_u32 v6, v4, 3
	v_add3_u32 v5, s3, s10, v5
	v_add3_u32 v5, v5, v6, 0xffffe3d8
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_ushort v6, v[5:6], off
BB64_4:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v5, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v6 offset:2
	s_and_saveexec_b32 s6, s0
	s_cbranch_execz BB64_6
	v_mul_lo_u32 v3, 0x960, v3
	v_mul_lo_u32 v4, v4, 3
	v_add3_u32 v3, s3, s10, v3
	v_add3_u32 v3, v3, v4, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v5, v[3:4], off
BB64_6:
	s_or_b32 exec_lo, exec_lo, s6
	v_add_nc_u32_e32 v3, 55, v0
	s_mov_b32 s0, 0xc0c0c0c1
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:4
	v_mul_hi_u32 v4, v3, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_u32_u24_e32 v4, 0x55, v4
	v_sub_nc_u32_e32 v3, v3, v4
	v_add_nc_u32_e32 v4, s12, v3
	v_cmp_gt_u32_e32 vcc_lo, 0x320, v4
	v_mov_b32_e32 v4, 0
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_8
	v_add_nc_u32_e32 v4, 0x1e0, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, v4, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d7
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v4, v[4:5], off
BB64_8:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v5, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v4 offset:2880
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_10
	v_add_nc_u32_e32 v4, 0x1e0, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d8
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v5, v[4:5], off
BB64_10:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v4, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:2882
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB64_12
	v_add_nc_u32_e32 v4, 0x1e0, v0
	v_mul_u32_u24_e32 v3, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v3, v4, v3, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v4, v[3:4], off
BB64_12:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v3, 25, v0
	s_mov_b32 s0, 0xc0c0c0c1
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v4 offset:2884
	v_mul_hi_u32 v5, v3, s0
	v_lshrrev_b32_e32 v5, 6, v5
	v_mul_u32_u24_e32 v5, 0x55, v5
	v_sub_nc_u32_e32 v3, v3, v5
	v_add_nc_u32_e32 v5, s12, v3
	v_cmp_gt_u32_e32 vcc_lo, 0x320, v5
	v_mov_b32_e32 v5, 0
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_14
	v_add_nc_u32_e32 v4, 0x3c0, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, v4, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d7
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v5, v[4:5], off
BB64_14:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v6, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:5760
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_16
	v_add_nc_u32_e32 v4, 0x3c0, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d8
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v6, v[4:5], off
BB64_16:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v4, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v6 offset:5762
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB64_18
	v_add_nc_u32_e32 v4, 0x3c0, v0
	v_mul_u32_u24_e32 v3, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v3, v4, v3, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v4, v[3:4], off
BB64_18:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v3, 0x50, v0
	s_mov_b32 s0, 0xc0c0c0c1
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v4 offset:5764
	v_mul_hi_u32 v5, v3, s0
	v_lshrrev_b32_e32 v5, 6, v5
	v_mul_u32_u24_e32 v5, 0x55, v5
	v_sub_nc_u32_e32 v3, v3, v5
	v_add_nc_u32_e32 v5, s12, v3
	v_cmp_gt_u32_e32 vcc_lo, 0x320, v5
	v_mov_b32_e32 v5, 0
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_20
	v_add_nc_u32_e32 v4, 0x5a0, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, v4, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d7
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v5, v[4:5], off
BB64_20:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v6, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:8640
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_22
	v_add_nc_u32_e32 v4, 0x5a0, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d8
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v6, v[4:5], off
BB64_22:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v4, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v6 offset:8642
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB64_24
	v_add_nc_u32_e32 v4, 0x5a0, v0
	v_mul_u32_u24_e32 v3, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v3, v4, v3, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v4, v[3:4], off
BB64_24:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v3, 50, v0
	s_mov_b32 s0, 0xc0c0c0c1
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v4 offset:8644
	v_mul_hi_u32 v5, v3, s0
	v_lshrrev_b32_e32 v5, 6, v5
	v_mul_u32_u24_e32 v5, 0x55, v5
	v_sub_nc_u32_e32 v3, v3, v5
	v_add_nc_u32_e32 v5, s12, v3
	v_cmp_gt_u32_e32 vcc_lo, 0x320, v5
	v_mov_b32_e32 v5, 0
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_26
	v_add_nc_u32_e32 v4, 0x780, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, v4, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d7
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v5, v[4:5], off
BB64_26:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v4, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:11520
	s_and_saveexec_b32 s6, vcc_lo
	s_cbranch_execz BB64_28
	v_add_nc_u32_e32 v4, 0x780, v0
	v_mul_u32_u24_e32 v5, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v4, v4, v5, 0xffffe3d8
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v4, v[4:5], off
BB64_28:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v5, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v4 offset:11522
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB64_30
	v_add_nc_u32_e32 v4, 0x780, v0
	v_mul_u32_u24_e32 v3, 3, v3
	v_mul_hi_u32 v4, 0xc0c0c0c1, v4
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v3, v4, v3, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v5, v[3:4], off
BB64_30:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v3, 20, v0
	s_mov_b32 s0, 0xc0c0c0c1
	s_movk_i32 s7, 0x960
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:11524
	v_add_nc_u32_e32 v6, s7, v0
	v_mul_hi_u32 v4, v3, s0
	v_mul_hi_u32 v6, v6, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_u32_u24_e32 v7, 0x55, v4
	v_lshrrev_b32_e32 v4, 6, v6
	v_sub_nc_u32_e32 v3, v3, v7
	v_add_nc_u32_e32 v6, s11, v4
	v_add_nc_u32_e32 v7, s12, v3
	v_cmp_gt_i32_e32 vcc_lo, 0x2f1, v6
	v_mov_b32_e32 v6, 0
	v_cmp_gt_u32_e64 s0, 0x320, v7
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s6, s0
	s_cbranch_execz BB64_32
	v_mul_i32_i24_e32 v5, s7, v4
	v_mul_u32_u24_e32 v6, 3, v3
	v_add3_u32 v5, s10, s3, v5
	v_add3_u32 v5, v5, v6, 0xffffe3d7
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_ushort v6, v[5:6], off
BB64_32:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v7, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v6 offset:14400
	s_and_saveexec_b32 s6, s0
	s_cbranch_execz BB64_34
	v_mul_i32_i24_e32 v5, 0x960, v4
	v_mul_u32_u24_e32 v6, 3, v3
	v_add3_u32 v5, s10, s3, v5
	v_add3_u32 v5, v5, v6, 0xffffe3d8
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_ushort v7, v[5:6], off
BB64_34:
	s_or_b32 exec_lo, exec_lo, s6
	v_mov_b32_e32 v5, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v7 offset:14402
	s_and_saveexec_b32 s6, s0
	s_cbranch_execz BB64_36
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_mul_u32_u24_e32 v3, 3, v3
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v3, v4, v3, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v5, v[3:4], off
BB64_36:
	s_or_b32 exec_lo, exec_lo, s6
	s_clause 0x1
	s_load_dwordx2 s[14:15], s[4:5], 0x8
	s_load_dwordx2 s[6:7], s[4:5], 0x10
	v_cmp_gt_i32_e32 vcc_lo, 0x5f, v0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:14404
	s_and_saveexec_b32 s13, vcc_lo
	s_cbranch_execz BB64_44
	v_add_nc_u32_e32 v3, 0x4b, v0
	s_mov_b32 s0, 0xc0c0c0c1
	v_add_nc_u32_e32 v5, 0xb40, v0
	v_mul_hi_u32 v4, v3, s0
	v_mul_hi_u32 v5, v5, s0
	v_lshrrev_b32_e32 v4, 6, v4
	v_mul_u32_u24_e32 v6, 0x55, v4
	v_lshrrev_b32_e32 v4, 6, v5
	v_sub_nc_u32_e32 v3, v3, v6
	v_add_nc_u32_e32 v5, s11, v4
	v_add_nc_u32_e32 v6, s12, v3
	v_cmp_gt_i32_e32 vcc_lo, 0x2f1, v5
	v_mov_b32_e32 v5, 0
	v_cmp_gt_u32_e64 s0, 0x320, v6
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s11, s0
	s_cbranch_execz BB64_39
	v_mul_i32_i24_e32 v5, 0x960, v4
	v_mul_u32_u24_e32 v6, 3, v3
	v_add3_u32 v5, s10, s3, v5
	v_add3_u32 v5, v5, v6, 0xffffe3d7
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_ushort v5, v[5:6], off
BB64_39:
	s_or_b32 exec_lo, exec_lo, s11
	v_mov_b32_e32 v6, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:17280
	s_and_saveexec_b32 s11, s0
	s_cbranch_execz BB64_41
	v_mul_i32_i24_e32 v5, 0x960, v4
	v_mul_u32_u24_e32 v6, 3, v3
	v_add3_u32 v5, s10, s3, v5
	v_add3_u32 v5, v5, v6, 0xffffe3d8
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_ushort v6, v[5:6], off
BB64_41:
	s_or_b32 exec_lo, exec_lo, s11
	v_mov_b32_e32 v5, 0
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v6 offset:17282
	s_and_saveexec_b32 s11, s0
	s_cbranch_execz BB64_43
	v_mul_i32_i24_e32 v4, 0x960, v4
	v_mul_u32_u24_e32 v3, 3, v3
	v_add3_u32 v4, s10, s3, v4
	v_add3_u32 v3, v4, v3, 0xffffe3d9
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v5, v[3:4], off
BB64_43:
	s_or_b32 exec_lo, exec_lo, s11
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v5 offset:17284
BB64_44:
	s_or_b32 exec_lo, exec_lo, s13
	v_lshlrev_b32_e32 v11, 1, v1
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, s0, s14, v11
	v_add_co_ci_u32_e64 v2, s0, s15, 0, s0
	v_add_co_u32 v3, vcc_lo, 0x800, v1
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v5, vcc_lo, 0x1000, v1
	v_add_co_ci_u32_e32 v6, vcc_lo, 0, v2, vcc_lo
	s_clause 0x7
	global_load_ushort v12, v11, s[14:15]
	global_load_ushort v13, v11, s[14:15] offset:2
	global_load_ushort v14, v11, s[14:15] offset:4
	global_load_ushort v15, v[3:4], off offset:832
	global_load_ushort v16, v[3:4], off offset:834
	global_load_ushort v17, v[3:4], off offset:836
	global_load_ushort v18, v[5:6], off offset:1664
	global_load_ushort v19, v[5:6], off offset:1666
	v_add_co_u32 v3, vcc_lo, 0x2000, v1
	v_add_co_ci_u32_e32 v4, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v7, vcc_lo, 0x2800, v1
	v_add_co_ci_u32_e32 v8, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v9, vcc_lo, 0x3800, v1
	v_add_co_ci_u32_e32 v10, vcc_lo, 0, v2, vcc_lo
	s_clause 0x9
	global_load_ushort v5, v[5:6], off offset:1668
	global_load_ushort v6, v[3:4], off offset:448
	global_load_ushort v20, v[3:4], off offset:450
	global_load_ushort v4, v[3:4], off offset:452
	global_load_ushort v21, v[7:8], off offset:1280
	global_load_ushort v22, v[7:8], off offset:1282
	global_load_ushort v7, v[7:8], off offset:1284
	global_load_ushort v8, v[9:10], off offset:64
	global_load_ushort v23, v[9:10], off offset:66
	global_load_ushort v9, v[9:10], off offset:68
	v_cmp_gt_i32_e32 vcc_lo, 0x100, v0
	v_add_nc_u32_e32 v3, 0x45c0, v11
	s_waitcnt vmcnt(17)
	ds_write_b16 v11, v12 offset:17856
	s_waitcnt vmcnt(16)
	ds_write_b16 v11, v13 offset:17858
	s_waitcnt vmcnt(15)
	ds_write_b16 v11, v14 offset:17860
	s_waitcnt vmcnt(14)
	ds_write_b16 v11, v15 offset:20736
	s_waitcnt vmcnt(13)
	ds_write_b16 v11, v16 offset:20738
	s_waitcnt vmcnt(12)
	ds_write_b16 v11, v17 offset:20740
	s_waitcnt vmcnt(11)
	ds_write_b16 v11, v18 offset:23616
	s_waitcnt vmcnt(10)
	ds_write_b16 v11, v19 offset:23618
	s_waitcnt vmcnt(9)
	ds_write_b16 v11, v5 offset:23620
	s_waitcnt vmcnt(8)
	ds_write_b16 v11, v6 offset:26496
	s_waitcnt vmcnt(7)
	ds_write_b16 v11, v20 offset:26498
	s_waitcnt vmcnt(6)
	ds_write_b16 v11, v4 offset:26500
	s_waitcnt vmcnt(5)
	ds_write_b16 v11, v21 offset:29376
	s_waitcnt vmcnt(4)
	ds_write_b16 v11, v22 offset:29378
	s_waitcnt vmcnt(3)
	ds_write_b16 v11, v7 offset:29380
	s_waitcnt vmcnt(2)
	ds_write_b16 v11, v8 offset:32256
	s_waitcnt vmcnt(1)
	ds_write_b16 v11, v23 offset:32258
	s_waitcnt vmcnt(0)
	ds_write_b16 v11, v9 offset:32260
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB64_46
	v_add_co_u32 v1, vcc_lo, 0x4000, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v2, vcc_lo
	s_clause 0x2
	global_load_ushort v4, v[1:2], off offset:896
	global_load_ushort v5, v[1:2], off offset:898
	global_load_ushort v1, v[1:2], off offset:900
	s_waitcnt vmcnt(2)
	ds_write_b16 v3, v4 offset:17280
	s_waitcnt vmcnt(1)
	ds_write_b16 v3, v5 offset:17282
	s_waitcnt vmcnt(0)
	ds_write_b16 v3, v1 offset:17284
BB64_46:
	s_or_b32 exec_lo, exec_lo, s0
	v_mul_hi_i32 v1, 0x66666667, v0
	v_lshlrev_b32_e32 v2, 1, v0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v35, 0
	v_and_b32_e32 v42, 14, v2
	v_mov_b32_e32 v36, 0
	v_lshrrev_b32_e32 v3, 31, v1
	v_ashrrev_i32_e32 v1, 6, v1
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v32, 0
	v_add_nc_u32_e32 v40, v1, v3
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v28, 0
	v_mul_lo_u32 v1, 0xa0, v40
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	v_sub_nc_u32_e32 v41, v0, v1
	v_mul_lo_u32 v1, 0x9f6, v40
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v15, 0
	v_ashrrev_i32_e32 v0, 3, v41
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v13, 0
	v_mul_lo_u32 v0, v0, 12
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v23, 0
	v_add_lshl_u32 v43, v1, v0, 1
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v0, 0
	s_mov_b32 s0, 0
	s_mov_b32 s3, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB64_47:
	s_mov_b32 s8, s0
	s_mov_b32 s9, 0
BB64_48:
	v_or_b32_e32 v44, s8, v42
	v_add_nc_u32_e32 v45, s9, v43
	s_add_i32 s9, s9, 2
	s_add_i32 s8, s8, 64
	s_cmp_lg_u32 s9, 6
	v_lshlrev_b32_e32 v46, 1, v44
	ds_read_u16 v47, v45
	ds_read_u16 v48, v45 offset:12
	ds_read_u16 v49, v45 offset:510
	ds_read_u16 v50, v45 offset:2040
	ds_read_u16 v51, v45 offset:2052
	ds_read_u16 v52, v45 offset:1542
	ds_read_u16 v53, v45 offset:1530
	ds_read_u16 v54, v45 offset:1032
	ds_read_u16 v55, v45 offset:1020
	ds_read_u16 v56, v45 offset:522
	ds_read_u16 v57, v45 offset:4080
	ds_read_u16 v58, v45 offset:4092
	ds_read_u16 v59, v45 offset:3582
	ds_read_u16 v60, v45 offset:3570
	ds_read_u16 v61, v45 offset:3072
	ds_read_u16 v62, v45 offset:3060
	ds_read_u16 v63, v45 offset:2562
	ds_read_u16 v64, v45 offset:2550
	ds_read_u16 v65, v45 offset:5622
	ds_read_u16 v66, v45 offset:5610
	ds_read_u16 v67, v45 offset:5112
	ds_read_u16 v68, v45 offset:5100
	ds_read_u16 v69, v45 offset:4602
	ds_read_u16 v70, v45 offset:4590
	ds_read_u16 v71, v45 offset:6120
	ds_read_u16 v72, v45 offset:6132
	ds_read_u16 v73, v45 offset:7152
	ds_read_u16 v74, v45 offset:7140
	ds_read_u16 v75, v45 offset:6642
	ds_read_u16 v76, v45 offset:6630
	v_add_nc_u32_e32 v77, 0x4400, v46
	v_add_nc_u32_e32 v78, 0x5000, v46
	ds_read2_b32 v[44:45], v77 offset0:112 offset1:120
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v39, v47, v44, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v47, v45, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v55, v44, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v55, v45, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v50, v44, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v50, v45, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v62, v44, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v62, v45, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v57, v44, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v57, v45, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v48, v44, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v48, v45, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v54, v44, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v54, v45, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v51, v44, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v61, v44, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v51, v45, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v61, v45, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v58, v44, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v58, v45, v2 op_sel_hi:[0,1,1]
	ds_read2_b32 v[2:3], v77 offset0:128 offset1:136
	v_add_nc_u32_e32 v77, 0x6c00, v46
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v35, v47, v2, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v47, v3, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v48, v2, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v48, v3, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v55, v2, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v55, v3, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v50, v2, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v50, v3, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v62, v2, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v62, v3, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v57, v2, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v57, v3, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v54, v2, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v54, v3, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v51, v2, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v61, v2, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v51, v3, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v61, v3, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v58, v2, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v58, v3, v0 op_sel_hi:[0,1,1]
	ds_read2_b32 v[0:1], v78 offset0:16 offset1:24
	v_add_nc_u32_e32 v47, 0x5800, v46
	v_add_nc_u32_e32 v48, 0x6400, v46
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v39, v49, v0, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v49, v1, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v53, v0, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v53, v1, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v64, v0, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v64, v1, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v60, v0, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v60, v1, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v70, v0, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v70, v1, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v56, v0, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v56, v1, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v52, v0, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v52, v1, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v63, v0, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v63, v1, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v59, v0, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v59, v1, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v69, v0, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v69, v1, v45 op_sel_hi:[0,1,1]
	ds_read2_b32 v[0:1], v78 offset0:32 offset1:40
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v35, v49, v0, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v49, v1, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v56, v0, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v56, v1, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v53, v0, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v53, v1, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v64, v0, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v64, v1, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v60, v0, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v60, v1, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v78, v70, v0, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v79, v70, v1, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v52, v0, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v52, v1, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v63, v0, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v63, v1, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v59, v0, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v59, v1, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v80, v69, v0, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v81, v69, v1, v3 op_sel_hi:[0,1,1]
	ds_read2_b32 v[0:1], v47 offset0:176 offset1:184
	ds_read2_b32 v[2:3], v48 offset0:80 offset1:88
	ds_read2_b32 v[4:5], v48 offset0:96 offset1:104
	v_add_nc_u32_e32 v49, 0x7000, v46
	v_add_nc_u32_e32 v56, 0x7800, v46
	v_add_nc_u32_e32 v46, 0x8400, v46
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v39, v55, v0, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v55, v1, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v50, v0, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v50, v1, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v62, v0, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v62, v1, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v57, v0, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v57, v1, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v68, v0, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v68, v1, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v54, v0, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v54, v1, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v51, v0, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v51, v1, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v61, v0, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v61, v1, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v58, v0, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v58, v1, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v67, v0, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v67, v1, v45 op_sel_hi:[0,1,1]
	ds_read2_b32 v[0:1], v47 offset0:192 offset1:200
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v39, v53, v2, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v53, v3, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v64, v2, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v64, v3, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v60, v2, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v60, v3, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v70, v2, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v70, v3, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v66, v2, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v66, v3, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v52, v2, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v52, v3, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v63, v2, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v63, v3, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v59, v2, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v59, v3, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v69, v2, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v69, v3, v24 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v35, v55, v0, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v55, v1, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v54, v0, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v54, v1, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v50, v1, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v57, v0, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v57, v1, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v51, v0, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v51, v1, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v61, v0, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v61, v1, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v58, v0, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v58, v1, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v50, v0, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v62, v0, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v62, v1, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v78, v68, v0, v78 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v79, v68, v1, v79 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v80, v67, v0, v80 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v81, v67, v1, v81 op_sel_hi:[0,1,1]
	ds_read2_b32 v[0:1], v77 offset0:240 offset1:248
	ds_read2_b32 v[6:7], v49 offset1:8
	v_pk_fma_f16 v49, v65, v2, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v77, v65, v3, v45 op_sel_hi:[0,1,1]
	ds_read2_b32 v[2:3], v56 offset0:144 offset1:152
	ds_read2_b32 v[8:9], v56 offset0:160 offset1:168
	v_pk_fma_f16 v33, v52, v4, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v52, v5, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v64, v4, v47 op_sel_hi:[0,1,1]
	ds_read2_b32 v[44:45], v46 offset0:48 offset1:56
	ds_read2_b32 v[46:47], v46 offset0:64 offset1:72
	v_pk_fma_f16 v35, v53, v4, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v53, v5, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v64, v5, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v70, v4, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v70, v5, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v63, v4, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v63, v5, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v59, v4, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v59, v5, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v69, v4, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v69, v5, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v60, v4, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v60, v5, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v66, v4, v78 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v65, v4, v80 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v66, v5, v79 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v65, v5, v81 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(5)
	v_pk_fma_f16 v32, v62, v0, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v62, v1, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v57, v0, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v57, v1, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v68, v0, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v68, v1, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v71, v0, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v71, v1, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v51, v0, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v51, v1, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v61, v0, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v61, v1, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v58, v0, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v58, v1, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v67, v0, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v67, v1, v24 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(4)
	v_pk_fma_f16 v35, v50, v6, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v50, v7, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v51, v6, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v51, v7, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v62, v7, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v57, v7, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v68, v6, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v68, v7, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v61, v6, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v61, v7, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v67, v6, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v67, v7, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v50, v0, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v72, v0, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v62, v6, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v50, v1, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v57, v6, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v72, v1, v77 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v71, v6, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v71, v7, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v72, v6, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v58, v6, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v72, v7, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v58, v7, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(3)
	v_pk_fma_f16 v6, v64, v2, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v64, v3, v37 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v35, v64, v8, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v64, v9, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v60, v2, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v60, v3, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v70, v2, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v70, v3, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v66, v2, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v66, v3, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v66, v8, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v66, v9, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v76, v2, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v76, v3, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v63, v2, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v63, v3, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v63, v8, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v63, v9, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v59, v2, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v59, v3, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v59, v8, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v59, v9, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v69, v2, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v69, v3, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v65, v2, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v65, v3, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v65, v8, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v65, v9, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v75, v2, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v69, v8, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v75, v3, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v69, v9, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v60, v8, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v60, v9, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v70, v8, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v70, v9, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v76, v8, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v75, v8, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v76, v9, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v75, v9, v5 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v39, v62, v44, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v62, v45, v7 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v15, v67, v46, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v67, v47, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v73, v44, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v73, v45, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v62, v46, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v62, v47, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v57, v44, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v57, v45, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v57, v46, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v57, v47, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v68, v44, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v68, v45, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v68, v46, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v68, v47, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v71, v44, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v71, v45, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v71, v46, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v71, v47, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v74, v44, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v74, v45, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v74, v46, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v74, v47, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v61, v44, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v61, v45, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v61, v46, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v61, v47, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v58, v44, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v58, v45, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v58, v46, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v58, v47, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v67, v44, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v67, v45, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v72, v44, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v72, v45, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v72, v46, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v72, v47, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v73, v46, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v73, v47, v55 op_sel_hi:[0,1,1]
	s_cbranch_scc1 BB64_48
	v_add_nc_u32_e32 v43, 6, v43
	s_add_i32 s3, s3, 1
	s_addk_i32 s0, 0xc0
	s_cmp_eq_u32 s3, 7
	s_cbranch_scc0 BB64_47
	v_lshlrev_b32_e32 v43, 1, v42
	v_mul_lo_u32 v40, 0x1f400, v40
	s_mulk_i32 s2, 0xa00
	s_mul_i32 s1, s1, 0x5dc00
	v_lshlrev_b32_e32 v41, 4, v41
	s_clause 0x6
	global_load_ushort v73, v43, s[4:5] offset:32
	global_load_ushort v74, v43, s[4:5] offset:64
	global_load_ushort v75, v43, s[4:5] offset:96
	global_load_ushort v76, v43, s[4:5] offset:66
	global_load_ushort v77, v43, s[4:5] offset:34
	global_load_dword v78, v43, s[4:5]
	global_load_ushort v79, v43, s[4:5] offset:98
	v_mov_b32_e32 v45, 0
	v_add3_u32 v40, s2, s1, v40
	v_and_b32_e32 v41, 0xffffff80, v41
	v_or_b32_e32 v40, v40, v42
	v_add_nc_u32_e32 v40, v40, v41
	v_add_nc_u32_e32 v42, 0x6400, v40
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_nc_u32_e32 v49, 0x6440, v40
	v_add_nc_u32_e32 v54, 0xc840, v40
	v_add_nc_u32_e32 v44, 0x6410, v40
	v_ashrrev_i32_e32 v43, 31, v42
	v_lshlrev_b64 v[52:53], 1, v[40:41]
	v_add_nc_u32_e32 v41, 0xc800, v40
	v_add_nc_u32_e32 v46, 0x6420, v40
	v_add_nc_u32_e32 v48, 0x6430, v40
	v_lshlrev_b64 v[42:43], 1, v[42:43]
	v_add_nc_u32_e32 v51, 0x6450, v40
	v_add_co_u32 v52, vcc_lo, s6, v52
	v_add_nc_u32_e32 v56, 0x6460, v40
	v_add_co_ci_u32_e32 v53, vcc_lo, s7, v53, vcc_lo
	v_add_nc_u32_e32 v59, 0x6470, v40
	v_add_co_u32 v57, vcc_lo, s6, v42
	v_add_nc_u32_e32 v61, 0xc810, v40
	v_add_co_ci_u32_e32 v58, vcc_lo, s7, v43, vcc_lo
	v_add_nc_u32_e32 v63, 0xc820, v40
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_nc_u32_e32 v67, 0x12c60, v40
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_nc_u32_e32 v65, 0x12c50, v40
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_nc_u32_e32 v69, 0x12c70, v40
	v_ashrrev_i32_e32 v68, 31, v67
	v_add_nc_u32_e32 v71, 0x19030, v40
	v_ashrrev_i32_e32 v66, 31, v65
	v_ashrrev_i32_e32 v70, 31, v69
	v_ashrrev_i32_e32 v72, 31, v71
	v_lshlrev_b64 v[71:72], 1, v[71:72]
	s_waitcnt vmcnt(6)
	v_add_f16_e32 v47, v73, v37
	s_waitcnt vmcnt(5)
	v_add_f16_e32 v50, v74, v35
	s_waitcnt vmcnt(4)
	v_add_f16_e32 v55, v75, v34
	s_waitcnt vmcnt(3)
	v_add_f16_sdwa v35, v76, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt vmcnt(2)
	v_add_f16_sdwa v37, v77, v37 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v39, v78, v39
	v_max_f16_e32 v42, 0, v47
	s_waitcnt vmcnt(0)
	v_add_f16_sdwa v34, v79, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_max_f16_e32 v43, 0, v50
	v_pk_add_f16 v38, v78, v38
	v_pk_max_f16 v39, v39, 0
	v_max_f16_e32 v47, 0, v55
	v_max_f16_e32 v37, 0, v37
	v_max_f16_e32 v35, 0, v35
	global_store_short v[52:53], v42, off offset:32
	global_store_short v[52:53], v43, off offset:64
	global_store_short v[52:53], v47, off offset:96
	v_max_f16_sdwa v42, v38, v45 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1 src1_sel:DWORD
	global_store_dword v[52:53], v39, off
	v_add_f16_e32 v39, v73, v36
	v_max_f16_e32 v34, 0, v34
	v_max_f16_e32 v38, 0, v38
	global_store_short v[52:53], v37, off offset:34
	v_add_f16_e32 v37, v74, v33
	global_store_short v[52:53], v35, off offset:66
	global_store_short v[52:53], v34, off offset:98
	v_add_f16_e32 v35, v75, v31
	global_store_short v[52:53], v38, off offset:128
	v_max_f16_e32 v38, 0, v39
	v_max_f16_e32 v37, 0, v37
	v_add_f16_sdwa v36, v77, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_max_f16_e32 v35, 0, v35
	v_ashrrev_i32_e32 v50, 31, v49
	global_store_short v[52:53], v38, off offset:160
	global_store_short v[52:53], v37, off offset:192
	v_add_f16_sdwa v37, v79, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_add_f16_sdwa v39, v76, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	global_store_short v[52:53], v35, off offset:224
	global_store_short v[52:53], v42, off offset:130
	v_ashrrev_i32_e32 v42, 31, v41
	v_add_nc_u32_e32 v34, 0x12c00, v40
	v_max_f16_e32 v35, 0, v37
	v_max_f16_e32 v36, 0, v36
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_max_f16_e32 v38, 0, v39
	v_ashrrev_i32_e32 v55, 31, v54
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_pk_add_f16 v28, v78, v28
	global_store_short v[52:53], v36, off offset:162
	global_store_short v[52:53], v38, off offset:194
	global_store_short v[52:53], v35, off offset:226
	v_ashrrev_i32_e32 v35, 31, v34
	v_add_co_u32 v49, vcc_lo, s6, v49
	v_lshlrev_b64 v[54:55], 1, v[54:55]
	v_add_co_ci_u32_e32 v50, vcc_lo, s7, v50, vcc_lo
	v_add_co_u32 v41, vcc_lo, s6, v41
	v_lshlrev_b64 v[34:35], 1, v[34:35]
	v_add_co_ci_u32_e32 v42, vcc_lo, s7, v42, vcc_lo
	v_pk_max_f16 v28, v28, 0
	v_add_co_u32 v54, vcc_lo, s6, v54
	v_pk_add_f16 v37, v78, v29
	v_pk_add_f16 v30, v78, v30
	v_ashrrev_i32_e32 v45, 31, v44
	v_add_co_ci_u32_e32 v55, vcc_lo, s7, v55, vcc_lo
	v_add_co_u32 v34, vcc_lo, s6, v34
	v_ashrrev_i32_e32 v47, 31, v46
	global_store_dword v[49:50], v28, off
	v_pk_max_f16 v28, v30, 0
	v_add_nc_u32_e32 v33, 0x12c40, v40
	v_add_co_ci_u32_e32 v35, vcc_lo, s7, v35, vcc_lo
	v_pk_max_f16 v30, v37, 0
	v_lshlrev_b64 v[43:44], 1, v[44:45]
	v_pk_add_f16 v32, v78, v32
	v_ashrrev_i32_e32 v49, 31, v48
	v_lshlrev_b64 v[45:46], 1, v[46:47]
	global_store_dword v[34:35], v30, off
	v_ashrrev_i32_e32 v34, 31, v33
	v_pk_max_f16 v32, v32, 0
	v_add_co_u32 v43, vcc_lo, s6, v43
	v_lshlrev_b64 v[47:48], 1, v[48:49]
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_co_ci_u32_e32 v44, vcc_lo, s7, v44, vcc_lo
	v_add_co_u32 v45, vcc_lo, s6, v45
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	global_store_dword v[57:58], v32, off
	v_ashrrev_i32_e32 v57, 31, v56
	v_add_co_ci_u32_e32 v46, vcc_lo, s7, v46, vcc_lo
	v_pk_add_f16 v32, v78, v27
	v_add_co_u32 v47, vcc_lo, s6, v47
	v_lshlrev_b64 v[49:50], 1, v[51:52]
	v_add_co_ci_u32_e32 v48, vcc_lo, s7, v48, vcc_lo
	v_add_co_u32 v33, vcc_lo, s6, v33
	v_lshlrev_b64 v[51:52], 1, v[56:57]
	v_add_co_ci_u32_e32 v34, vcc_lo, s7, v34, vcc_lo
	v_pk_max_f16 v32, v32, 0
	v_add_nc_u32_e32 v31, 0xc830, v40
	v_add_co_u32 v49, vcc_lo, s6, v49
	global_store_dword v[54:55], v28, off
	v_lshlrev_b64 v[55:56], 1, v[59:60]
	v_add_co_ci_u32_e32 v50, vcc_lo, s7, v50, vcc_lo
	v_add_nc_u32_e32 v36, 0xc850, v40
	v_add_co_u32 v51, vcc_lo, s6, v51
	v_lshlrev_b64 v[57:58], 1, v[61:62]
	global_store_dword v[41:42], v32, off
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_co_ci_u32_e32 v52, vcc_lo, s7, v52, vcc_lo
	v_add_nc_u32_e32 v38, 0xc860, v40
	v_add_co_u32 v55, vcc_lo, s6, v55
	v_lshlrev_b64 v[59:60], 1, v[63:64]
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v56, vcc_lo, s7, v56, vcc_lo
	v_add_nc_u32_e32 v53, 0xc870, v40
	v_add_co_u32 v57, vcc_lo, s6, v57
	v_lshlrev_b64 v[31:32], 1, v[31:32]
	v_ashrrev_i32_e32 v39, 31, v38
	v_add_co_ci_u32_e32 v58, vcc_lo, s7, v58, vcc_lo
	v_add_nc_u32_e32 v27, 0x12c10, v40
	v_add_co_u32 v59, vcc_lo, s6, v59
	v_pk_add_f16 v26, v78, v26
	v_lshlrev_b64 v[35:36], 1, v[36:37]
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v60, vcc_lo, s7, v60, vcc_lo
	v_add_nc_u32_e32 v29, 0x12c20, v40
	v_add_co_u32 v31, vcc_lo, s6, v31
	v_lshlrev_b64 v[37:38], 1, v[38:39]
	v_ashrrev_i32_e32 v28, 31, v27
	v_add_co_ci_u32_e32 v32, vcc_lo, s7, v32, vcc_lo
	v_add_nc_u32_e32 v41, 0x12c30, v40
	v_pk_max_f16 v26, v26, 0
	v_add_co_u32 v35, vcc_lo, s6, v35
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_co_ci_u32_e32 v36, vcc_lo, s7, v36, vcc_lo
	v_add_co_u32 v37, vcc_lo, s6, v37
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_ashrrev_i32_e32 v42, 31, v41
	global_store_dword v[33:34], v26, off
	v_mov_b32_e32 v26, 0xffff
	v_add_co_ci_u32_e32 v38, vcc_lo, s7, v38, vcc_lo
	v_add_co_u32 v53, vcc_lo, s6, v53
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_ci_u32_e32 v54, vcc_lo, s7, v54, vcc_lo
	v_and_b32_e32 v39, v26, v73
	v_add_co_u32 v27, vcc_lo, s6, v27
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_and_b32_e32 v73, v26, v74
	v_add_co_ci_u32_e32 v28, vcc_lo, s7, v28, vcc_lo
	v_and_b32_e32 v26, v26, v75
	v_lshlrev_b64 v[63:64], 1, v[67:68]
	v_add_nc_u32_e32 v67, 0x19000, v40
	v_add_co_u32 v29, vcc_lo, s6, v29
	v_lshlrev_b64 v[61:62], 1, v[65:66]
	v_lshl_or_b32 v39, v77, 16, v39
	v_add_co_ci_u32_e32 v30, vcc_lo, s7, v30, vcc_lo
	v_add_nc_u32_e32 v33, 0x19010, v40
	v_lshl_or_b32 v73, v76, 16, v73
	v_add_co_u32 v41, vcc_lo, s6, v41
	v_lshl_or_b32 v26, v79, 16, v26
	v_ashrrev_i32_e32 v68, 31, v67
	v_add_co_ci_u32_e32 v42, vcc_lo, s7, v42, vcc_lo
	v_lshlrev_b64 v[65:66], 1, v[69:70]
	v_add_nc_u32_e32 v69, 0x19020, v40
	v_add_co_u32 v61, vcc_lo, s6, v61
	v_ashrrev_i32_e32 v34, 31, v33
	v_pk_add_f16 v12, v39, v12
	v_add_co_ci_u32_e32 v62, vcc_lo, s7, v62, vcc_lo
	v_pk_add_f16 v6, v73, v6
	v_add_co_u32 v63, vcc_lo, s6, v63
	v_pk_add_f16 v7, v26, v7
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_ashrrev_i32_e32 v70, 31, v69
	v_pk_add_f16 v18, v39, v18
	v_add_co_ci_u32_e32 v64, vcc_lo, s7, v64, vcc_lo
	v_pk_add_f16 v10, v73, v10
	v_add_co_u32 v65, vcc_lo, s6, v65
	v_pk_add_f16 v11, v26, v11
	v_pk_add_f16 v17, v39, v17
	v_pk_add_f16 v8, v73, v8
	v_pk_add_f16 v9, v26, v9
	v_pk_add_f16 v22, v39, v22
	v_pk_add_f16 v15, v73, v15
	v_pk_add_f16 v16, v26, v16
	v_pk_add_f16 v21, v39, v21
	v_pk_add_f16 v13, v73, v13
	v_pk_add_f16 v14, v26, v14
	v_pk_add_f16 v24, v39, v24
	v_pk_add_f16 v19, v73, v19
	v_pk_add_f16 v20, v26, v20
	v_lshlrev_b64 v[33:34], 1, v[33:34]
	v_pk_max_f16 v12, v12, 0
	v_pk_max_f16 v6, v6, 0
	v_add_co_ci_u32_e32 v66, vcc_lo, s7, v66, vcc_lo
	v_pk_max_f16 v7, v7, 0
	v_add_co_u32 v67, vcc_lo, s6, v67
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_pk_max_f16 v18, v18, 0
	v_pk_max_f16 v10, v10, 0
	v_add_co_ci_u32_e32 v68, vcc_lo, s7, v68, vcc_lo
	v_pk_max_f16 v11, v11, 0
	v_pk_max_f16 v17, v17, 0
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v9, v9, 0
	v_pk_max_f16 v22, v22, 0
	v_pk_max_f16 v15, v15, 0
	v_pk_max_f16 v16, v16, 0
	v_pk_max_f16 v21, v21, 0
	v_pk_max_f16 v13, v13, 0
	v_pk_max_f16 v14, v14, 0
	v_pk_max_f16 v24, v24, 0
	v_pk_max_f16 v19, v19, 0
	v_pk_max_f16 v20, v20, 0
	global_store_dword v[43:44], v12, off
	global_store_dword v[45:46], v6, off
	global_store_dword v[47:48], v7, off
	global_store_dword v[49:50], v18, off
	global_store_dword v[51:52], v10, off
	global_store_dword v[55:56], v11, off
	global_store_dword v[57:58], v17, off
	global_store_dword v[59:60], v8, off
	global_store_dword v[31:32], v9, off
	global_store_dword v[35:36], v22, off
	global_store_dword v[37:38], v15, off
	global_store_dword v[53:54], v16, off
	global_store_dword v[27:28], v21, off
	global_store_dword v[29:30], v13, off
	global_store_dword v[41:42], v14, off
	global_store_dword v[61:62], v24, off
	global_store_dword v[63:64], v19, off
	global_store_dword v[65:66], v20, off
	v_add_nc_u32_e32 v6, 0x19040, v40
	v_add_co_u32 v33, vcc_lo, s6, v33
	v_pk_add_f16 v5, v73, v5
	v_add_co_ci_u32_e32 v34, vcc_lo, s7, v34, vcc_lo
	v_add_nc_u32_e32 v8, 0x19050, v40
	v_add_co_u32 v69, vcc_lo, s6, v69
	v_pk_add_f16 v10, v26, v4
	v_ashrrev_i32_e32 v7, 31, v6
	v_add_co_ci_u32_e32 v70, vcc_lo, s7, v70, vcc_lo
	v_pk_max_f16 v5, v5, 0
	v_add_nc_u32_e32 v4, 0x19060, v40
	v_ashrrev_i32_e32 v9, 31, v8
	v_pk_max_f16 v12, v10, 0
	v_add_nc_u32_e32 v10, 0x19070, v40
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	global_store_dword v[69:70], v5, off
	v_ashrrev_i32_e32 v5, 31, v4
	v_add_co_u32 v71, vcc_lo, s6, v71
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_ashrrev_i32_e32 v11, 31, v10
	v_add_co_ci_u32_e32 v72, vcc_lo, s7, v72, vcc_lo
	v_add_co_u32 v6, vcc_lo, s6, v6
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_pk_add_f16 v25, v78, v25
	v_pk_add_f16 v23, v39, v23
	v_add_co_ci_u32_e32 v7, vcc_lo, s7, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s6, v8
	v_pk_add_f16 v3, v78, v3
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_pk_add_f16 v2, v39, v2
	v_add_co_ci_u32_e32 v9, vcc_lo, s7, v9, vcc_lo
	v_pk_add_f16 v13, v73, v1
	v_add_co_u32 v4, vcc_lo, s6, v4
	v_pk_add_f16 v14, v26, v0
	v_pk_max_f16 v25, v25, 0
	v_pk_max_f16 v23, v23, 0
	v_add_co_ci_u32_e32 v5, vcc_lo, s7, v5, vcc_lo
	v_pk_max_f16 v3, v3, 0
	v_add_co_u32 v0, vcc_lo, s6, v10
	v_pk_max_f16 v2, v2, 0
	v_pk_max_f16 v10, v13, 0
	v_add_co_ci_u32_e32 v1, vcc_lo, s7, v11, vcc_lo
	v_pk_max_f16 v11, v14, 0
	global_store_dword v[67:68], v25, off
	global_store_dword v[33:34], v23, off
	global_store_dword v[71:72], v12, off
	global_store_dword v[6:7], v3, off
	global_store_dword v[8:9], v2, off
	global_store_dword v[4:5], v10, off
	global_store_dword v[0:1], v11, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0
		.amdhsa_group_segment_fixed_size 36672
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 82
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end64:
	.size	tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0, .Lfunc_end64-tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0

	.globl	tvmgen_default_fused_nn_dense_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_1_kernel0,@function
tvmgen_default_fused_nn_dense_1_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_lshlrev_b32_e32 v3, 6, v0
	v_and_b32_e32 v1, 31, v0
	v_lshlrev_b32_e32 v2, 3, v0
	s_ashr_i32 s1, s6, 2
	s_mov_b32 s7, 0x8000
	v_lshl_or_b32 v3, s6, 17, v3
	s_mul_i32 s0, s1, 0x1e00
	v_and_or_b32 v1, 0x1f00, v2, v1
	v_and_b32_e32 v2, 24, v2
	v_lshl_or_b32 v59, v0, 1, s7
	v_cmp_gt_i32_e32 vcc_lo, 64, v0
	v_lshlrev_b32_e32 v61, 4, v0
	v_add_nc_u32_e32 v58, s0, v1
	v_and_or_b32 v60, 0x6ff00, v3, v2
	v_lshlrev_b32_e32 v62, 7, v0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v3, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v31, 0
	v_mov_b32_e32 v32, 0
	v_mov_b32_e32 v33, 0
	v_mov_b32_e32 v34, 0
	v_mov_b32_e32 v36, 0
	v_mov_b32_e32 v35, 0
	v_mov_b32_e32 v38, 0
	v_mov_b32_e32 v37, 0
	v_mov_b32_e32 v39, 0
	v_mov_b32_e32 v40, 0
	v_mov_b32_e32 v41, 0
	v_mov_b32_e32 v42, 0
	v_mov_b32_e32 v43, 0
	v_mov_b32_e32 v44, 0
	v_mov_b32_e32 v46, 0
	v_mov_b32_e32 v45, 0
	v_mov_b32_e32 v48, 0
	v_mov_b32_e32 v47, 0
	v_mov_b32_e32 v49, 0
	v_mov_b32_e32 v50, 0
	v_mov_b32_e32 v51, 0
	v_mov_b32_e32 v52, 0
	v_mov_b32_e32 v53, 0
	v_mov_b32_e32 v54, 0
	v_mov_b32_e32 v56, 0
	v_mov_b32_e32 v55, 0
	v_mov_b32_e32 v63, 0
	v_mov_b32_e32 v57, 0
	v_mov_b32_e32 v64, 0
	v_mov_b32_e32 v65, 0
	s_mov_b32 s4, 0
BB65_1:
	s_lshl_b32 s5, s4, 5
	v_add_nc_u32_e32 v66, s5, v58
	v_ashrrev_i32_e32 v67, 31, v66
	v_lshlrev_b64 v[66:67], 1, v[66:67]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v66, s0, s8, v66
	v_add_co_ci_u32_e64 v67, s0, s9, v67, s0
	v_add_co_u32 v68, s0, v66, 0x1000
	v_add_co_ci_u32_e64 v69, s0, 0, v67, s0
	v_add_co_u32 v70, s0, v66, 0x2000
	v_add_co_ci_u32_e64 v71, s0, 0, v67, s0
	v_add_co_u32 v72, s0, v66, 0x3000
	v_add_co_ci_u32_e64 v73, s0, 0, v67, s0
	s_clause 0x6
	global_load_ushort v74, v[66:67], off
	global_load_ushort v75, v[68:69], off offset:-2048
	global_load_ushort v68, v[68:69], off
	global_load_ushort v69, v[70:71], off offset:-2048
	global_load_ushort v70, v[70:71], off
	global_load_ushort v71, v[72:73], off offset:-2048
	global_load_ushort v72, v[72:73], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v59, v74
	ds_write_b16 v59, v75 offset:256
	ds_write_b16 v59, v68 offset:512
	ds_write_b16 v59, v69 offset:768
	ds_write_b16 v59, v70 offset:1024
	ds_write_b16 v59, v71 offset:1280
	ds_write_b16 v59, v72 offset:1536
	s_and_saveexec_b32 s12, vcc_lo
	s_cbranch_execz BB65_3
	v_add_co_u32 v66, s0, 0x3800, v66
	v_add_co_ci_u32_e64 v67, s0, 0, v67, s0
	global_load_ushort v66, v[66:67], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v59, v66 offset:1792
BB65_3:
	s_or_b32 exec_lo, exec_lo, s12
	v_add_nc_u32_e32 v66, s5, v60
	v_ashrrev_i32_e32 v67, 31, v66
	v_lshlrev_b64 v[66:67], 1, v[66:67]
	v_add_co_u32 v74, s0, s10, v66
	v_add_co_ci_u32_e64 v75, s0, s11, v67, s0
	v_add_co_u32 v70, s0, 0x4000, v74
	v_add_co_ci_u32_e64 v71, s0, 0, v75, s0
	v_add_co_u32 v76, s0, s7, v74
	v_add_co_ci_u32_e64 v77, s0, 0, v75, s0
	s_clause 0x1
	global_load_dwordx4 v[66:69], v[74:75], off
	global_load_dwordx4 v[70:73], v[70:71], off
	v_add_co_u32 v78, s0, 0xc000, v74
	v_add_co_ci_u32_e64 v79, s0, 0, v75, s0
	v_add_co_u32 v82, s0, 0x10000, v74
	v_add_co_ci_u32_e64 v83, s0, 0, v75, s0
	v_add_co_u32 v86, s0, 0x14000, v74
	v_add_co_ci_u32_e64 v87, s0, 0, v75, s0
	v_add_co_u32 v90, s0, 0x18000, v74
	v_add_co_ci_u32_e64 v91, s0, 0, v75, s0
	v_add_co_u32 v94, s0, 0x1c000, v74
	v_add_co_ci_u32_e64 v95, s0, 0, v75, s0
	v_add_co_u32 v98, s0, 0x20000, v74
	v_add_co_ci_u32_e64 v99, s0, 0, v75, s0
	v_add_co_u32 v102, s0, 0x24000, v74
	v_add_co_ci_u32_e64 v103, s0, 0, v75, s0
	v_add_co_u32 v106, s0, 0x28000, v74
	v_add_co_ci_u32_e64 v107, s0, 0, v75, s0
	v_add_co_u32 v110, s0, 0x2c000, v74
	v_add_co_ci_u32_e64 v111, s0, 0, v75, s0
	v_add_co_u32 v114, s0, 0x30000, v74
	v_add_co_ci_u32_e64 v115, s0, 0, v75, s0
	v_add_co_u32 v116, s0, 0x34000, v74
	v_add_co_ci_u32_e64 v117, s0, 0, v75, s0
	v_add_co_u32 v118, s0, 0x38000, v74
	v_add_co_ci_u32_e64 v119, s0, 0, v75, s0
	v_add_co_u32 v120, s0, 0x3c000, v74
	v_add_co_ci_u32_e64 v121, s0, 0, v75, s0
	s_clause 0x9
	global_load_dwordx4 v[74:77], v[76:77], off
	global_load_dwordx4 v[78:81], v[78:79], off
	global_load_dwordx4 v[82:85], v[82:83], off
	global_load_dwordx4 v[86:89], v[86:87], off
	global_load_dwordx4 v[90:93], v[90:91], off
	global_load_dwordx4 v[94:97], v[94:95], off
	global_load_dwordx4 v[98:101], v[98:99], off
	global_load_dwordx4 v[102:105], v[102:103], off
	global_load_dwordx4 v[106:109], v[106:107], off
	global_load_dwordx4 v[110:113], v[110:111], off
	s_mov_b32 s0, 0
	s_waitcnt vmcnt(11)
	ds_write_b128 v61, v[66:69]
	s_clause 0x1
	global_load_dwordx4 v[66:69], v[114:115], off
	global_load_dwordx4 v[114:117], v[116:117], off
	s_waitcnt vmcnt(12)
	ds_write_b128 v61, v[70:73] offset:2048
	s_clause 0x1
	global_load_dwordx4 v[70:73], v[118:119], off
	global_load_dwordx4 v[118:121], v[120:121], off
	s_waitcnt vmcnt(13)
	ds_write_b128 v61, v[74:77] offset:4096
	s_waitcnt vmcnt(12)
	ds_write_b128 v61, v[78:81] offset:6144
	s_waitcnt vmcnt(11)
	ds_write_b128 v61, v[82:85] offset:8192
	s_waitcnt vmcnt(10)
	ds_write_b128 v61, v[86:89] offset:10240
	s_waitcnt vmcnt(9)
	ds_write_b128 v61, v[90:93] offset:12288
	s_waitcnt vmcnt(8)
	ds_write_b128 v61, v[94:97] offset:14336
	s_waitcnt vmcnt(7)
	ds_write_b128 v61, v[98:101] offset:16384
	s_waitcnt vmcnt(6)
	ds_write_b128 v61, v[102:105] offset:18432
	s_waitcnt vmcnt(5)
	ds_write_b128 v61, v[106:109] offset:20480
	s_waitcnt vmcnt(4)
	ds_write_b128 v61, v[110:113] offset:22528
	s_waitcnt vmcnt(3)
	ds_write_b128 v61, v[66:69] offset:24576
	s_waitcnt vmcnt(2)
	ds_write_b128 v61, v[114:117] offset:26624
	s_waitcnt vmcnt(1)
	ds_write_b128 v61, v[70:73] offset:28672
	s_waitcnt vmcnt(0)
	ds_write_b128 v61, v[118:121] offset:30720
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB65_4:
	s_lshl_b32 s5, s0, 3
	v_mov_b32_e32 v70, 0xffff
	v_add_lshl_u32 v71, s5, v62, 1
	s_lshl_b32 s5, s0, 4
	s_add_i32 s0, s0, 1
	s_cmp_lg_u32 s0, 4
	ds_read_b128 v[66:69], v71
	ds_read_b128 v[82:85], v71 offset:64
	s_waitcnt lgkmcnt(1)
	v_and_b32_e32 v72, v70, v66
	v_and_b32_e32 v73, v70, v67
	v_and_b32_sdwa v74, v70, v66 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v75, v70, v67 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v76, v70, v68
	v_and_b32_sdwa v78, v70, v68 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v79, v70, v69
	v_and_b32_sdwa v90, v70, v69 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	ds_read_b128 v[66:69], v71 offset:128
	ds_read_b128 v[86:89], v71 offset:192
	s_waitcnt lgkmcnt(2)
	v_lshl_or_b32 v81, v82, 16, v72
	v_lshl_or_b32 v77, v83, 16, v73
	v_lshl_or_b32 v73, v84, 16, v76
	s_waitcnt lgkmcnt(1)
	v_and_b32_e32 v71, v70, v66
	v_and_b32_sdwa v91, v70, v66 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v92, v70, v67
	v_and_b32_sdwa v93, v70, v67 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v67, v70, v68
	v_and_b32_sdwa v94, v70, v68 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v68, v70, v69
	v_and_b32_sdwa v69, v70, v69 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v70, 16, v82
	v_lshrrev_b32_e32 v82, 16, v83
	v_lshl_or_b32 v66, v85, 16, v79
	v_lshrrev_b32_e32 v83, 16, v84
	v_lshrrev_b32_e32 v84, 16, v85
	s_waitcnt lgkmcnt(0)
	v_lshl_or_b32 v80, v86, 16, v71
	v_lshl_or_b32 v72, v88, 16, v67
	v_lshrrev_b32_e32 v85, 16, v86
	v_lshl_or_b32 v75, v82, 16, v75
	v_lshl_or_b32 v76, v87, 16, v92
	v_lshrrev_b32_e32 v86, 16, v87
	v_lshrrev_b32_e32 v87, 16, v88
	v_lshrrev_b32_e32 v88, 16, v89
	v_mov_b32_e32 v82, s5
	v_lshl_or_b32 v79, v70, 16, v74
	v_lshl_or_b32 v67, v89, 16, v68
	v_lshl_or_b32 v71, v83, 16, v78
	v_lshl_or_b32 v68, v84, 16, v90
	v_lshl_or_b32 v78, v85, 16, v91
	v_lshl_or_b32 v74, v86, 16, v93
	v_lshl_or_b32 v70, v87, 16, v94
	v_lshl_or_b32 v69, v88, 16, v69
	ds_read_b128 v[83:86], v82 offset:32768
	ds_read_b128 v[87:90], v82 offset:32832
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v64, v83, v81, v64 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v83, v80, v65 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v63, v87, v81, v63 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v57, v87, v80, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v64, v83, v79, v64 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v83, v78, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v63, v87, v79, v63 op_sel:[1,0,0]
	v_pk_fma_f16 v57, v87, v78, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v64, v84, v77, v64 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v84, v76, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v63, v88, v77, v63 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v57, v88, v76, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v64, v84, v75, v64 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v84, v74, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v63, v88, v75, v63 op_sel:[1,0,0]
	v_pk_fma_f16 v57, v88, v74, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v64, v85, v73, v64 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v85, v72, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v63, v89, v73, v63 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v57, v89, v72, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v64, v85, v71, v64 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v85, v70, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v63, v89, v71, v63 op_sel:[1,0,0]
	v_pk_fma_f16 v57, v89, v70, v57 op_sel:[1,0,0]
	v_pk_fma_f16 v64, v86, v66, v64 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v65, v86, v67, v65 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v63, v90, v66, v63 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v57, v90, v67, v57 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v64, v86, v68, v64 op_sel:[1,0,0]
	v_pk_fma_f16 v65, v86, v69, v65 op_sel:[1,0,0]
	v_pk_fma_f16 v63, v90, v68, v63 op_sel:[1,0,0]
	v_pk_fma_f16 v57, v90, v69, v57 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:32896
	ds_read_b128 v[87:90], v82 offset:32960
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v56, v83, v81, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v83, v80, v55 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v53, v87, v81, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v87, v80, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v83, v79, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v83, v78, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v87, v79, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v87, v78, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v84, v77, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v84, v76, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v88, v77, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v88, v76, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v84, v75, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v84, v74, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v88, v75, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v88, v74, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v85, v73, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v85, v72, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v89, v73, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v89, v72, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v85, v71, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v85, v70, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v89, v71, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v89, v70, v54 op_sel:[1,0,0]
	v_pk_fma_f16 v56, v86, v66, v56 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v55, v86, v67, v55 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v53, v90, v66, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v54, v90, v67, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v56, v86, v68, v56 op_sel:[1,0,0]
	v_pk_fma_f16 v55, v86, v69, v55 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v90, v68, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v90, v69, v54 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33024
	ds_read_b128 v[87:90], v82 offset:33088
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v51, v83, v81, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v83, v80, v52 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v49, v87, v81, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v87, v80, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v83, v79, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v83, v78, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v87, v79, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v87, v78, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v84, v77, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v84, v76, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v88, v77, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v88, v76, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v84, v75, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v84, v74, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v88, v75, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v88, v74, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v85, v73, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v85, v72, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v89, v73, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v89, v72, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v85, v71, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v85, v70, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v89, v71, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v89, v70, v50 op_sel:[1,0,0]
	v_pk_fma_f16 v51, v86, v66, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v52, v86, v67, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v90, v66, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v50, v90, v67, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v86, v68, v51 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v86, v69, v52 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v90, v68, v49 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v90, v69, v50 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33152
	ds_read_b128 v[87:90], v82 offset:33216
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v48, v83, v81, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v83, v80, v47 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v46, v87, v81, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v87, v80, v45 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v83, v79, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v83, v78, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v87, v79, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v45, v87, v78, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v84, v77, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v84, v76, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v88, v77, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v88, v76, v45 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v84, v75, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v84, v74, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v88, v75, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v45, v88, v74, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v85, v73, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v85, v72, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v89, v73, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v89, v72, v45 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v85, v71, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v85, v70, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v89, v71, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v45, v89, v70, v45 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v86, v66, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v86, v67, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v90, v66, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v45, v90, v67, v45 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v48, v86, v68, v48 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v86, v69, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v90, v68, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v45, v90, v69, v45 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33280
	ds_read_b128 v[87:90], v82 offset:33344
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v43, v83, v81, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v83, v80, v44 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v41, v87, v81, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v87, v80, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v83, v79, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v83, v78, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v87, v79, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v87, v78, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v84, v77, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v84, v76, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v88, v77, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v88, v76, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v84, v75, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v84, v74, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v88, v75, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v88, v74, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v85, v73, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v85, v72, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v89, v73, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v89, v72, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v85, v71, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v85, v70, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v89, v71, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v89, v70, v42 op_sel:[1,0,0]
	v_pk_fma_f16 v43, v86, v66, v43 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v44, v86, v67, v44 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v90, v66, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v42, v90, v67, v42 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v43, v86, v68, v43 op_sel:[1,0,0]
	v_pk_fma_f16 v44, v86, v69, v44 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v90, v68, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v42, v90, v69, v42 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33408
	ds_read_b128 v[87:90], v82 offset:33472
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v39, v83, v81, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v83, v80, v40 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v38, v87, v81, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v87, v80, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v83, v79, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v83, v78, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v87, v79, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v87, v78, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v84, v77, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v84, v76, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v88, v77, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v88, v76, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v84, v75, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v84, v74, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v88, v75, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v88, v74, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v85, v73, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v85, v72, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v89, v73, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v89, v72, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v85, v71, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v85, v70, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v89, v71, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v89, v70, v37 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v86, v66, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v86, v67, v40 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v90, v66, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v90, v67, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v86, v68, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v86, v69, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v90, v68, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v37, v90, v69, v37 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33536
	ds_read_b128 v[87:90], v82 offset:33600
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v36, v83, v81, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v83, v80, v35 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v33, v87, v81, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v87, v80, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v83, v79, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v83, v78, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v87, v79, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v87, v78, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v84, v77, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v84, v76, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v88, v77, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v88, v76, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v84, v75, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v84, v74, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v88, v75, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v88, v74, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v85, v73, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v85, v72, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v89, v73, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v89, v72, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v85, v71, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v85, v70, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v89, v71, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v89, v70, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v36, v86, v66, v36 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v35, v86, v67, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v90, v66, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v90, v67, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v36, v86, v68, v36 op_sel:[1,0,0]
	v_pk_fma_f16 v35, v86, v69, v35 op_sel:[1,0,0]
	v_pk_fma_f16 v33, v90, v68, v33 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v90, v69, v34 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33664
	ds_read_b128 v[87:90], v82 offset:33728
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v31, v83, v81, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v83, v80, v32 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v29, v87, v81, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v87, v80, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v83, v79, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v83, v78, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v87, v79, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v87, v78, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v84, v77, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v84, v76, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v88, v77, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v88, v76, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v84, v75, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v84, v74, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v88, v75, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v88, v74, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v85, v73, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v85, v72, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v89, v73, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v89, v72, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v85, v71, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v85, v70, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v89, v71, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v89, v70, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v86, v66, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v86, v67, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v90, v66, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v90, v67, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v86, v68, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v32, v86, v69, v32 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v90, v68, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v90, v69, v30 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33792
	ds_read_b128 v[87:90], v82 offset:33856
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v28, v83, v81, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v83, v80, v27 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v26, v87, v81, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v87, v80, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v83, v79, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v83, v78, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v87, v79, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v87, v78, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v84, v77, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v84, v76, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v88, v77, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v88, v76, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v84, v75, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v84, v74, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v88, v75, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v88, v74, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v85, v73, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v85, v72, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v89, v73, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v89, v72, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v85, v71, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v85, v70, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v89, v71, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v89, v70, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v86, v66, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v86, v67, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v90, v66, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v90, v67, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v86, v68, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v86, v69, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v90, v68, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v90, v69, v25 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:33920
	ds_read_b128 v[87:90], v82 offset:33984
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v23, v83, v81, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v83, v80, v24 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v21, v87, v81, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v87, v80, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v83, v79, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v83, v78, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v87, v79, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v87, v78, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v84, v77, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v84, v76, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v88, v77, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v88, v76, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v84, v75, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v84, v74, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v88, v75, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v88, v74, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v85, v73, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v85, v72, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v89, v73, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v89, v72, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v85, v71, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v85, v70, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v89, v71, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v89, v70, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v86, v66, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v86, v67, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v90, v66, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v90, v67, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v86, v68, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v86, v69, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v90, v68, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v90, v69, v22 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:34048
	ds_read_b128 v[87:90], v82 offset:34112
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v19, v83, v81, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v83, v80, v20 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v18, v87, v81, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v87, v80, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v83, v79, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v83, v78, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v87, v79, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v87, v78, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v84, v77, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v84, v76, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v88, v77, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v88, v76, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v84, v75, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v84, v74, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v88, v75, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v88, v74, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v85, v73, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v85, v72, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v89, v73, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v89, v72, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v85, v71, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v85, v70, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v89, v71, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v89, v70, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v86, v66, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v20, v86, v67, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v90, v66, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v90, v67, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v86, v68, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v86, v69, v20 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v90, v68, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v90, v69, v17 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:34176
	ds_read_b128 v[87:90], v82 offset:34240
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v16, v83, v81, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v83, v80, v15 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v13, v87, v81, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v87, v80, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v83, v79, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v83, v78, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v87, v79, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v87, v78, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v84, v77, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v84, v76, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v88, v77, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v88, v76, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v84, v75, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v84, v74, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v88, v75, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v88, v74, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v85, v73, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v85, v72, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v89, v73, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v89, v72, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v85, v71, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v85, v70, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v89, v71, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v89, v70, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v86, v66, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v86, v67, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v90, v66, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v90, v67, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v86, v68, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v86, v69, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v90, v68, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v90, v69, v14 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:34304
	ds_read_b128 v[87:90], v82 offset:34368
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v10, v83, v81, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v83, v80, v12 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v7, v87, v81, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v87, v80, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v83, v79, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v83, v78, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v87, v79, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v87, v78, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v84, v77, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v84, v76, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v88, v77, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v88, v76, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v84, v75, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v84, v74, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v88, v75, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v88, v74, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v85, v73, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v85, v72, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v89, v73, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v89, v72, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v85, v71, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v85, v70, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v89, v71, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v89, v70, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v86, v66, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v86, v67, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v90, v66, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v90, v67, v8 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v86, v68, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v86, v69, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v90, v68, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v8, v90, v69, v8 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:34432
	ds_read_b128 v[87:90], v82 offset:34496
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v6, v83, v81, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v83, v80, v5 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v4, v87, v81, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v87, v80, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v83, v79, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v83, v78, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v87, v79, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v87, v78, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v84, v77, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v84, v76, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v88, v77, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v88, v76, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v84, v75, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v84, v74, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v88, v75, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v88, v74, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v85, v73, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v85, v72, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v89, v73, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v89, v72, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v85, v71, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v85, v70, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v89, v71, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v89, v70, v3 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v86, v66, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v86, v67, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v90, v66, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v3, v90, v67, v3 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v86, v68, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v86, v69, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v90, v68, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v3, v90, v69, v3 op_sel:[1,0,0]
	ds_read_b128 v[83:86], v82 offset:34560
	ds_read_b128 v[87:90], v82 offset:34624
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v1, v83, v81, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v83, v80, v2 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v11, v87, v81, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v87, v80, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v83, v79, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v83, v78, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v87, v79, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v87, v78, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v84, v77, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v84, v76, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v88, v77, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v88, v76, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v84, v75, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v84, v74, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v88, v75, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v88, v74, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v85, v73, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v85, v72, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v89, v73, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v89, v72, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v85, v71, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v85, v70, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v89, v71, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v89, v70, v9 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v86, v66, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v86, v67, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v90, v66, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v9, v90, v67, v9 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v86, v68, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v86, v69, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v90, v68, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v9, v90, v69, v9 op_sel:[1,0,0]
	s_cbranch_scc1 BB65_4
	s_add_i32 s4, s4, 1
	s_cmp_eq_u32 s4, 8
	s_cbranch_scc0 BB65_1
	s_lshl_b32 s0, s6, 9
	s_mul_i32 s1, s1, 0xf000
	s_and_b32 s0, s0, 0x600
	s_or_b32 s0, s0, s1
	v_lshl_add_u32 v58, v0, 2, s0
	v_add_nc_u32_e32 v60, 0x800, v58
	v_ashrrev_i32_e32 v59, 31, v58
	v_add_nc_u32_e32 v66, 0x802, v58
	v_add_nc_u32_e32 v68, 0x1000, v58
	v_add_nc_u32_e32 v72, 0x1002, v58
	v_ashrrev_i32_e32 v61, 31, v60
	v_lshlrev_b64 v[70:71], 1, v[58:59]
	v_ashrrev_i32_e32 v67, 31, v66
	v_ashrrev_i32_e32 v69, 31, v68
	v_ashrrev_i32_e32 v73, 31, v72
	v_lshlrev_b64 v[59:60], 1, v[60:61]
	v_add_co_u32 v70, vcc_lo, s2, v70
	v_lshlrev_b64 v[61:62], 1, v[66:67]
	v_add_co_ci_u32_e32 v71, vcc_lo, s3, v71, vcc_lo
	v_lshlrev_b64 v[66:67], 1, v[68:69]
	v_add_co_u32 v59, vcc_lo, s2, v59
	v_add_co_ci_u32_e32 v60, vcc_lo, s3, v60, vcc_lo
	global_store_dword v[70:71], v64, off
	global_store_dword v[70:71], v65, off offset:4
	v_add_co_u32 v61, vcc_lo, s2, v61
	v_add_nc_u32_e32 v65, 0x1802, v58
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v62, vcc_lo
	global_store_dword v[59:60], v63, off
	v_add_nc_u32_e32 v59, 0x1800, v58
	v_add_co_u32 v63, vcc_lo, s2, v66
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_co_ci_u32_e32 v64, vcc_lo, s3, v67, vcc_lo
	v_lshlrev_b64 v[67:68], 1, v[72:73]
	v_ashrrev_i32_e32 v60, 31, v59
	global_store_dword v[61:62], v57, off
	global_store_dword v[63:64], v56, off
	v_lshlrev_b64 v[61:62], 1, v[65:66]
	v_add_nc_u32_e32 v63, 0x2000, v58
	v_lshlrev_b64 v[56:57], 1, v[59:60]
	v_add_co_u32 v59, vcc_lo, s2, v67
	v_add_nc_u32_e32 v65, 0x2002, v58
	v_add_co_ci_u32_e32 v60, vcc_lo, s3, v68, vcc_lo
	v_ashrrev_i32_e32 v64, 31, v63
	v_add_co_u32 v56, vcc_lo, s2, v56
	v_ashrrev_i32_e32 v66, 31, v65
	v_add_co_ci_u32_e32 v57, vcc_lo, s3, v57, vcc_lo
	v_add_co_u32 v61, vcc_lo, s2, v61
	global_store_dword v[59:60], v55, off
	v_add_co_ci_u32_e32 v62, vcc_lo, s3, v62, vcc_lo
	v_lshlrev_b64 v[59:60], 1, v[63:64]
	v_add_nc_u32_e32 v63, 0x3000, v58
	global_store_dword v[56:57], v53, off
	global_store_dword v[61:62], v54, off
	v_add_nc_u32_e32 v53, 0x2800, v58
	v_lshlrev_b64 v[55:56], 1, v[65:66]
	v_add_nc_u32_e32 v61, 0x2802, v58
	v_add_co_u32 v59, vcc_lo, s2, v59
	v_ashrrev_i32_e32 v64, 31, v63
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v60, vcc_lo, s3, v60, vcc_lo
	v_add_co_u32 v55, vcc_lo, s2, v55
	v_ashrrev_i32_e32 v62, 31, v61
	v_add_co_ci_u32_e32 v56, vcc_lo, s3, v56, vcc_lo
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	global_store_dword v[59:60], v51, off
	global_store_dword v[55:56], v52, off
	v_lshlrev_b64 v[51:52], 1, v[61:62]
	v_add_nc_u32_e32 v59, 0x3002, v58
	v_add_co_u32 v53, vcc_lo, s2, v53
	v_lshlrev_b64 v[55:56], 1, v[63:64]
	v_add_co_ci_u32_e32 v54, vcc_lo, s3, v54, vcc_lo
	v_add_nc_u32_e32 v61, 0x3800, v58
	v_add_co_u32 v51, vcc_lo, s2, v51
	v_ashrrev_i32_e32 v60, 31, v59
	v_add_co_ci_u32_e32 v52, vcc_lo, s3, v52, vcc_lo
	v_add_co_u32 v55, vcc_lo, s2, v55
	global_store_dword v[53:54], v49, off
	v_add_co_ci_u32_e32 v56, vcc_lo, s3, v56, vcc_lo
	v_ashrrev_i32_e32 v62, 31, v61
	v_lshlrev_b64 v[53:54], 1, v[59:60]
	global_store_dword v[51:52], v50, off
	global_store_dword v[55:56], v48, off
	v_add_nc_u32_e32 v50, 0x3802, v58
	v_lshlrev_b64 v[48:49], 1, v[61:62]
	v_add_nc_u32_e32 v56, 0x4002, v58
	v_add_co_u32 v52, vcc_lo, s2, v53
	v_add_co_ci_u32_e32 v53, vcc_lo, s3, v54, vcc_lo
	v_ashrrev_i32_e32 v51, 31, v50
	v_add_nc_u32_e32 v54, 0x4000, v58
	v_add_co_u32 v48, vcc_lo, s2, v48
	v_ashrrev_i32_e32 v57, 31, v56
	v_add_co_ci_u32_e32 v49, vcc_lo, s3, v49, vcc_lo
	v_lshlrev_b64 v[50:51], 1, v[50:51]
	v_ashrrev_i32_e32 v55, 31, v54
	global_store_dword v[52:53], v47, off
	global_store_dword v[48:49], v46, off
	v_add_nc_u32_e32 v52, 0x4800, v58
	v_lshlrev_b64 v[46:47], 1, v[54:55]
	v_add_co_u32 v48, vcc_lo, s2, v50
	v_add_nc_u32_e32 v54, 0x4802, v58
	v_add_co_ci_u32_e32 v49, vcc_lo, s3, v51, vcc_lo
	v_lshlrev_b64 v[50:51], 1, v[56:57]
	v_ashrrev_i32_e32 v53, 31, v52
	v_add_co_u32 v46, vcc_lo, s2, v46
	v_ashrrev_i32_e32 v55, 31, v54
	v_add_co_ci_u32_e32 v47, vcc_lo, s3, v47, vcc_lo
	global_store_dword v[48:49], v45, off
	v_add_co_u32 v50, vcc_lo, s2, v50
	v_lshlrev_b64 v[48:49], 1, v[52:53]
	v_add_co_ci_u32_e32 v51, vcc_lo, s3, v51, vcc_lo
	v_add_nc_u32_e32 v45, 0x5000, v58
	global_store_dword v[46:47], v43, off
	global_store_dword v[50:51], v44, off
	v_add_co_u32 v47, vcc_lo, s2, v48
	v_lshlrev_b64 v[43:44], 1, v[54:55]
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v49, vcc_lo
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_nc_u32_e32 v49, 0x5002, v58
	v_add_nc_u32_e32 v51, 0x5800, v58
	v_add_co_u32 v43, vcc_lo, s2, v43
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v44, vcc_lo
	v_ashrrev_i32_e32 v52, 31, v51
	global_store_dword v[47:48], v41, off
	global_store_dword v[43:44], v42, off
	v_lshlrev_b64 v[41:42], 1, v[49:50]
	v_add_co_u32 v43, vcc_lo, s2, v45
	v_add_nc_u32_e32 v47, 0x5802, v58
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v46, vcc_lo
	v_lshlrev_b64 v[45:46], 1, v[51:52]
	v_add_nc_u32_e32 v49, 0x6000, v58
	v_add_co_u32 v41, vcc_lo, s2, v41
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v42, vcc_lo
	global_store_dword v[43:44], v39, off
	v_add_co_u32 v45, vcc_lo, s2, v45
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_ci_u32_e32 v46, vcc_lo, s3, v46, vcc_lo
	v_lshlrev_b64 v[43:44], 1, v[47:48]
	global_store_dword v[41:42], v40, off
	global_store_dword v[45:46], v38, off
	v_add_nc_u32_e32 v40, 0x6002, v58
	v_lshlrev_b64 v[38:39], 1, v[49:50]
	v_add_co_u32 v42, vcc_lo, s2, v43
	v_add_nc_u32_e32 v46, 0x6802, v58
	v_add_co_ci_u32_e32 v43, vcc_lo, s3, v44, vcc_lo
	v_ashrrev_i32_e32 v41, 31, v40
	v_add_nc_u32_e32 v44, 0x6800, v58
	v_add_co_u32 v38, vcc_lo, s2, v38
	v_ashrrev_i32_e32 v47, 31, v46
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v39, vcc_lo
	v_lshlrev_b64 v[40:41], 1, v[40:41]
	v_ashrrev_i32_e32 v45, 31, v44
	global_store_dword v[42:43], v37, off
	global_store_dword v[38:39], v36, off
	v_add_nc_u32_e32 v42, 0x7000, v58
	v_lshlrev_b64 v[36:37], 1, v[44:45]
	v_add_co_u32 v38, vcc_lo, s2, v40
	v_add_nc_u32_e32 v44, 0x7002, v58
	v_add_co_ci_u32_e32 v39, vcc_lo, s3, v41, vcc_lo
	v_lshlrev_b64 v[40:41], 1, v[46:47]
	v_ashrrev_i32_e32 v43, 31, v42
	v_add_co_u32 v36, vcc_lo, s2, v36
	v_ashrrev_i32_e32 v45, 31, v44
	v_add_co_ci_u32_e32 v37, vcc_lo, s3, v37, vcc_lo
	global_store_dword v[38:39], v35, off
	v_add_co_u32 v40, vcc_lo, s2, v40
	v_lshlrev_b64 v[38:39], 1, v[42:43]
	v_add_co_ci_u32_e32 v41, vcc_lo, s3, v41, vcc_lo
	v_add_nc_u32_e32 v35, 0x7800, v58
	global_store_dword v[36:37], v33, off
	global_store_dword v[40:41], v34, off
	v_add_co_u32 v37, vcc_lo, s2, v38
	v_lshlrev_b64 v[33:34], 1, v[44:45]
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v39, vcc_lo
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_nc_u32_e32 v39, 0x7802, v58
	v_add_nc_u32_e32 v41, 0x8000, v58
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_ashrrev_i32_e32 v40, 31, v39
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_ashrrev_i32_e32 v42, 31, v41
	global_store_dword v[37:38], v31, off
	global_store_dword v[33:34], v32, off
	v_lshlrev_b64 v[31:32], 1, v[39:40]
	v_add_co_u32 v33, vcc_lo, s2, v35
	v_add_nc_u32_e32 v37, 0x8002, v58
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v36, vcc_lo
	v_lshlrev_b64 v[35:36], 1, v[41:42]
	v_add_nc_u32_e32 v39, 0x8800, v58
	v_add_co_u32 v31, vcc_lo, s2, v31
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v32, vcc_lo, s3, v32, vcc_lo
	global_store_dword v[33:34], v29, off
	v_add_co_u32 v35, vcc_lo, s2, v35
	v_ashrrev_i32_e32 v40, 31, v39
	v_add_co_ci_u32_e32 v36, vcc_lo, s3, v36, vcc_lo
	v_lshlrev_b64 v[33:34], 1, v[37:38]
	global_store_dword v[31:32], v30, off
	global_store_dword v[35:36], v28, off
	v_add_nc_u32_e32 v30, 0x8802, v58
	v_lshlrev_b64 v[28:29], 1, v[39:40]
	v_add_co_u32 v32, vcc_lo, s2, v33
	v_add_nc_u32_e32 v36, 0x9002, v58
	v_add_co_ci_u32_e32 v33, vcc_lo, s3, v34, vcc_lo
	v_ashrrev_i32_e32 v31, 31, v30
	v_add_nc_u32_e32 v34, 0x9000, v58
	v_add_co_u32 v28, vcc_lo, s2, v28
	v_ashrrev_i32_e32 v37, 31, v36
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v29, vcc_lo
	v_lshlrev_b64 v[30:31], 1, v[30:31]
	v_ashrrev_i32_e32 v35, 31, v34
	global_store_dword v[32:33], v27, off
	global_store_dword v[28:29], v26, off
	v_add_nc_u32_e32 v32, 0x9800, v58
	v_lshlrev_b64 v[26:27], 1, v[34:35]
	v_add_co_u32 v28, vcc_lo, s2, v30
	v_add_nc_u32_e32 v34, 0x9802, v58
	v_add_co_ci_u32_e32 v29, vcc_lo, s3, v31, vcc_lo
	v_lshlrev_b64 v[30:31], 1, v[36:37]
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_u32 v26, vcc_lo, s2, v26
	v_ashrrev_i32_e32 v35, 31, v34
	v_add_co_ci_u32_e32 v27, vcc_lo, s3, v27, vcc_lo
	global_store_dword v[28:29], v25, off
	v_add_co_u32 v30, vcc_lo, s2, v30
	v_lshlrev_b64 v[28:29], 1, v[32:33]
	v_add_co_ci_u32_e32 v31, vcc_lo, s3, v31, vcc_lo
	v_add_nc_u32_e32 v25, 0xa000, v58
	global_store_dword v[26:27], v23, off
	global_store_dword v[30:31], v24, off
	v_add_co_u32 v27, vcc_lo, s2, v28
	v_lshlrev_b64 v[23:24], 1, v[34:35]
	v_add_co_ci_u32_e32 v28, vcc_lo, s3, v29, vcc_lo
	v_ashrrev_i32_e32 v26, 31, v25
	v_add_nc_u32_e32 v29, 0xa002, v58
	v_add_nc_u32_e32 v31, 0xa800, v58
	v_add_co_u32 v23, vcc_lo, s2, v23
	v_lshlrev_b64 v[25:26], 1, v[25:26]
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v24, vcc_lo
	v_ashrrev_i32_e32 v32, 31, v31
	global_store_dword v[27:28], v21, off
	global_store_dword v[23:24], v22, off
	v_lshlrev_b64 v[21:22], 1, v[29:30]
	v_add_co_u32 v23, vcc_lo, s2, v25
	v_add_nc_u32_e32 v27, 0xa802, v58
	v_add_co_ci_u32_e32 v24, vcc_lo, s3, v26, vcc_lo
	v_lshlrev_b64 v[25:26], 1, v[31:32]
	v_add_nc_u32_e32 v29, 0xb000, v58
	v_add_co_u32 v21, vcc_lo, s2, v21
	v_ashrrev_i32_e32 v28, 31, v27
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v22, vcc_lo
	global_store_dword v[23:24], v19, off
	v_add_co_u32 v25, vcc_lo, s2, v25
	v_ashrrev_i32_e32 v30, 31, v29
	v_add_co_ci_u32_e32 v26, vcc_lo, s3, v26, vcc_lo
	v_lshlrev_b64 v[23:24], 1, v[27:28]
	global_store_dword v[21:22], v20, off
	global_store_dword v[25:26], v18, off
	v_add_nc_u32_e32 v20, 0xb002, v58
	v_lshlrev_b64 v[18:19], 1, v[29:30]
	v_add_co_u32 v22, vcc_lo, s2, v23
	v_add_nc_u32_e32 v26, 0xb802, v58
	v_add_co_ci_u32_e32 v23, vcc_lo, s3, v24, vcc_lo
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_nc_u32_e32 v24, 0xb800, v58
	v_add_co_u32 v18, vcc_lo, s2, v18
	v_ashrrev_i32_e32 v27, 31, v26
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v19, vcc_lo
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_ashrrev_i32_e32 v25, 31, v24
	global_store_dword v[22:23], v17, off
	global_store_dword v[18:19], v16, off
	v_add_nc_u32_e32 v22, 0xc000, v58
	v_lshlrev_b64 v[16:17], 1, v[24:25]
	v_add_co_u32 v18, vcc_lo, s2, v20
	v_add_nc_u32_e32 v24, 0xc002, v58
	v_add_co_ci_u32_e32 v19, vcc_lo, s3, v21, vcc_lo
	v_lshlrev_b64 v[20:21], 1, v[26:27]
	v_ashrrev_i32_e32 v23, 31, v22
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	global_store_dword v[18:19], v15, off
	v_add_co_u32 v20, vcc_lo, s2, v20
	v_lshlrev_b64 v[18:19], 1, v[22:23]
	v_add_co_ci_u32_e32 v21, vcc_lo, s3, v21, vcc_lo
	v_add_nc_u32_e32 v15, 0xc800, v58
	global_store_dword v[16:17], v13, off
	global_store_dword v[20:21], v14, off
	v_add_co_u32 v17, vcc_lo, s2, v18
	v_lshlrev_b64 v[13:14], 1, v[24:25]
	v_add_co_ci_u32_e32 v18, vcc_lo, s3, v19, vcc_lo
	v_ashrrev_i32_e32 v16, 31, v15
	v_add_nc_u32_e32 v19, 0xc802, v58
	v_add_nc_u32_e32 v21, 0xd000, v58
	v_add_co_u32 v13, vcc_lo, s2, v13
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_ashrrev_i32_e32 v20, 31, v19
	v_add_co_ci_u32_e32 v14, vcc_lo, s3, v14, vcc_lo
	v_ashrrev_i32_e32 v22, 31, v21
	global_store_dword v[17:18], v10, off
	global_store_dword v[13:14], v12, off
	v_lshlrev_b64 v[12:13], 1, v[19:20]
	v_add_co_u32 v14, vcc_lo, s2, v15
	v_add_nc_u32_e32 v18, 0xd002, v58
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v16, vcc_lo
	v_lshlrev_b64 v[16:17], 1, v[21:22]
	v_add_nc_u32_e32 v20, 0xd800, v58
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	global_store_dword v[14:15], v7, off
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	v_lshlrev_b64 v[14:15], 1, v[18:19]
	v_add_nc_u32_e32 v18, 0xe002, v58
	global_store_dword v[12:13], v8, off
	global_store_dword v[16:17], v6, off
	v_lshlrev_b64 v[6:7], 1, v[20:21]
	v_add_nc_u32_e32 v12, 0xd802, v58
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_add_nc_u32_e32 v16, 0xe000, v58
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_ashrrev_i32_e32 v17, 31, v16
	global_store_dword v[14:15], v5, off
	v_lshlrev_b64 v[14:15], 1, v[18:19]
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	global_store_dword v[6:7], v4, off
	v_add_nc_u32_e32 v6, 0xe800, v58
	v_lshlrev_b64 v[4:5], 1, v[16:17]
	v_add_nc_u32_e32 v16, 0xe802, v58
	v_add_co_u32 v12, vcc_lo, s2, v12
	v_ashrrev_i32_e32 v7, 31, v6
	v_add_co_ci_u32_e32 v13, vcc_lo, s3, v13, vcc_lo
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v16, vcc_lo, s2, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s3, v17, vcc_lo
	global_store_dword v[12:13], v3, off
	global_store_dword v[4:5], v1, off
	global_store_dword v[14:15], v2, off
	global_store_dword v[6:7], v11, off
	global_store_dword v[16:17], v9, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_1_kernel0
		.amdhsa_group_segment_fixed_size 34688
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 122
		.amdhsa_next_free_sgpr 13
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end65:
	.size	tvmgen_default_fused_nn_dense_1_kernel0, .Lfunc_end65-tvmgen_default_fused_nn_dense_1_kernel0

	.globl	tvmgen_default_fused_nn_dense_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_2_kernel0,@function
tvmgen_default_fused_nn_dense_2_kernel0:
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	v_lshrrev_b32_e32 v3, 3, v0
	s_mov_b32 s7, 0x14000
	s_ashr_i32 s1, s6, 3
	v_lshlrev_b32_e32 v5, 12, v0
	s_mul_i32 s2, s1, s7
	s_lshl_b32 s10, s6, 16
	v_lshl_add_u32 v2, v3, 11, s2
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x0
	s_and_b32 s10, s10, 0x70000
	v_and_b32_e32 v1, 7, v0
	v_add_lshl_u32 v8, s10, v5, 1
	s_movk_i32 s0, 0x400
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	v_lshl_add_u32 v4, v0, 2, s0
	v_lshl_add_u32 v6, v3, 8, s0
	v_lshl_or_b32 v2, v1, 1, v2
	v_lshlrev_b32_e32 v5, 6, v0
	v_lshlrev_b32_e32 v7, 5, v1
	v_mov_b32_e32 v10, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, s0, s8, v8
	v_mov_b32_e32 v12, 0
	v_add_co_ci_u32_e64 v9, s0, s9, 0, s0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v14, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	s_mov_b64 s[8:9], 0
	s_movk_i32 s10, 0x1000
	s_branch BB66_2
BB66_1:
	s_or_b32 exec_lo, exec_lo, s11
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[26:29], v7 offset:256
	ds_read_b128 v[30:33], v7
	ds_read_b128 v[34:37], v7 offset:512
	ds_read_b128 v[38:41], v7 offset:16
	ds_read_b128 v[42:45], v7 offset:768
	v_mov_b32_e32 v3, 0xffff
	ds_read_b128 v[46:49], v7 offset:272
	ds_read_b128 v[50:53], v7 offset:528
	ds_read_b128 v[54:57], v6 offset:224
	ds_read_b128 v[70:73], v6 offset:96
	v_add_nc_u32_e32 v2, 16, v2
	s_add_u32 s8, s8, 32
	s_addc_u32 s9, s9, 0
	s_cmp_eq_u32 s8, s10
	s_waitcnt lgkmcnt(8)
	v_lshrrev_b32_e32 v58, 16, v26
	s_waitcnt lgkmcnt(7)
	v_and_b32_e32 v59, v3, v30
	s_waitcnt lgkmcnt(6)
	v_and_b32_e32 v60, v3, v34
	v_and_b32_e32 v65, v3, v35
	v_and_b32_sdwa v30, v3, v30 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v61, v3, v31
	v_and_b32_e32 v68, v3, v36
	s_waitcnt lgkmcnt(4)
	v_lshl_or_b32 v82, v42, 16, v60
	v_lshl_or_b32 v83, v43, 16, v65
	v_lshl_or_b32 v87, v58, 16, v30
	v_and_b32_sdwa v30, v3, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v65, 16, v43
	v_lshrrev_b32_e32 v62, 16, v27
	v_and_b32_sdwa v31, v3, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v42, 16, v42
	v_and_b32_sdwa v34, v3, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v66, v3, v32
	v_and_b32_e32 v67, v3, v33
	v_lshl_or_b32 v84, v44, 16, v68
	v_and_b32_sdwa v68, v3, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v86, v42, 16, v34
	v_and_b32_sdwa v34, v3, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v88, v65, 16, v30
	v_lshl_or_b32 v89, v62, 16, v31
	ds_read_b128 v[30:33], v6 offset:160
	v_lshl_or_b32 v78, v26, 16, v59
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v19, v54, v82, v19 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v79, v27, 16, v61
	ds_read_b128 v[58:61], v6 offset:192
	v_lshrrev_b32_e32 v64, 16, v29
	v_pk_fma_f16 v18, v54, v78, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v54, v86, v19 op_sel:[1,0,0]
	v_and_b32_e32 v69, v3, v37
	v_lshl_or_b32 v80, v28, 16, v66
	v_lshl_or_b32 v81, v29, 16, v67
	v_pk_fma_f16 v18, v54, v87, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v55, v83, v19 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v66, 16, v44
	v_and_b32_sdwa v35, v3, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v67, 16, v45
	v_and_b32_sdwa v54, v3, v37 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v18, v55, v79, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v55, v88, v19 op_sel:[1,0,0]
	v_lshl_or_b32 v85, v45, 16, v69
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v22, v30, v82, v22 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v91, v66, 16, v35
	v_lshl_or_b32 v92, v64, 16, v68
	v_lshl_or_b32 v93, v67, 16, v54
	ds_read_b128 v[66:69], v6 offset:128
	v_lshrrev_b32_e32 v63, 16, v28
	v_pk_fma_f16 v18, v55, v89, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v56, v84, v19 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v14, v58, v82, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v58, v78, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v30, v78, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v30, v86, v22 op_sel:[1,0,0]
	v_lshl_or_b32 v90, v63, 16, v34
	v_pk_fma_f16 v18, v56, v80, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v56, v91, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v58, v86, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v58, v87, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v30, v87, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v31, v83, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v56, v90, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v59, v83, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v59, v79, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v31, v79, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v57, v85, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v31, v88, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v59, v88, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v59, v89, v17 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v21, v66, v82, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v70, v82, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v70, v78, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v31, v89, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v66, v78, v20 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v94, v57, v93, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v32, v84, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v57, v81, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v32, v80, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v60, v84, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v60, v80, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v66, v86, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v57, v92, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v66, v87, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v70, v86, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v70, v87, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v32, v91, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v60, v91, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v60, v90, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v67, v83, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v71, v79, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v33, v85, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v67, v79, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v71, v83, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v61, v85, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v59, v71, v89, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v61, v81, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v96, v33, v93, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v67, v89, v31 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v67, v88, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v71, v88, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v59, v72, v80, v59 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v95, v61, v92, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v60, v68, v80, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v68, v84, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v61, v93, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v61, v72, v84, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v32, v90, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v60, v68, v90, v60 op_sel:[1,0,0]
	v_pk_fma_f16 v58, v68, v91, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v59, v72, v90, v59 op_sel:[1,0,0]
	v_pk_fma_f16 v61, v72, v91, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v33, v81, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v60, v69, v81, v60 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v58, v69, v85, v58 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v59, v73, v81, v59 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v61, v73, v85, v61 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v97, v33, v92, v22 op_sel:[1,0,0]
	ds_read_b128 v[21:24], v6 offset:64
	ds_read_b128 v[30:33], v6 offset:32
	ds_read_b128 v[26:29], v7 offset:784
	ds_read_b128 v[42:45], v6 offset:240
	ds_read_b128 v[34:37], v6 offset:208
	ds_read_b128 v[62:65], v6 offset:176
	ds_read_b128 v[54:57], v6 offset:144
	ds_read_b128 v[17:20], v6 offset:112
	v_pk_fma_f16 v98, v69, v93, v58 op_sel:[1,0,0]
	v_pk_fma_f16 v99, v69, v92, v60 op_sel:[1,0,0]
	v_pk_fma_f16 v100, v73, v93, v61 op_sel:[1,0,0]
	v_pk_fma_f16 v101, v73, v92, v59 op_sel:[1,0,0]
	ds_read_b128 v[58:61], v6 offset:80
	ds_read_b128 v[66:69], v6 offset:48
	ds_read_b128 v[70:73], v6
	ds_read_b128 v[74:77], v6 offset:16
	s_waitcnt lgkmcnt(11)
	v_pk_fma_f16 v16, v21, v82, v16 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(10)
	v_pk_fma_f16 v15, v30, v82, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v21, v78, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v30, v78, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v21, v86, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v30, v86, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v21, v87, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v30, v87, v11 op_sel:[1,0,0]
	v_and_b32_e32 v21, v3, v38
	v_pk_fma_f16 v16, v22, v83, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v31, v83, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v22, v79, v13 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v12, v70, v82, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v70, v78, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v31, v79, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v22, v88, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v22, v89, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v70, v86, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v70, v87, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v31, v88, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v31, v89, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v23, v84, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v71, v83, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v23, v80, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v71, v79, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v32, v84, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v32, v80, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v71, v88, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v23, v91, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v23, v90, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v71, v89, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v32, v91, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v72, v84, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v32, v90, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v24, v85, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v72, v80, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v24, v81, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v72, v91, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v33, v85, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v33, v81, v11 op_sel_hi:[0,1,1]
	v_and_b32_e32 v23, v3, v39
	v_and_b32_e32 v30, v3, v40
	v_pk_fma_f16 v12, v73, v85, v12 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v22, v3, v38 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v38, v3, v50
	v_and_b32_sdwa v31, v3, v40 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v40, v3, v51
	v_pk_fma_f16 v10, v72, v90, v10 op_sel:[1,0,0]
	v_and_b32_e32 v32, v3, v41
	v_lshl_or_b32 v21, v46, 16, v21
	v_pk_fma_f16 v13, v24, v92, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v33, v92, v11 op_sel:[1,0,0]
	v_lshl_or_b32 v38, v26, 16, v38
	v_pk_fma_f16 v16, v24, v93, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v33, v93, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v73, v93, v12 op_sel:[1,0,0]
	v_and_b32_sdwa v24, v3, v39 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v33, v3, v41 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v39, v3, v50 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v26, 16, v26
	v_and_b32_sdwa v41, v3, v51 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v23, v47, 16, v23
	v_lshrrev_b32_e32 v46, 16, v46
	v_lshrrev_b32_e32 v47, 16, v47
	v_lshl_or_b32 v40, v27, 16, v40
	v_lshrrev_b32_e32 v27, 16, v27
	v_pk_fma_f16 v10, v73, v81, v10 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v22, v46, 16, v22
	v_lshl_or_b32 v26, v26, 16, v39
	v_pk_fma_f16 v14, v34, v38, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v58, v38, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v66, v38, v15 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v12, v74, v38, v12 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v24, v47, 16, v24
	v_lshl_or_b32 v27, v27, 16, v41
	v_pk_fma_f16 v39, v42, v38, v94 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v62, v38, v96 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v54, v38, v98 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v17, v38, v100 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v73, v92, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v34, v26, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v58, v26, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v66, v26, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v74, v26, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v38, v42, v26, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v39, v62, v26, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v41, v54, v26, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v17, v26, v47 op_sel:[1,0,0]
	v_and_b32_e32 v50, v3, v52
	v_pk_fma_f16 v14, v35, v40, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v59, v40, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v67, v40, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v75, v40, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v58, v21, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v66, v21, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v74, v21, v10 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v51, v3, v52 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v52, v3, v53
	v_and_b32_sdwa v3, v3, v53 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v53, v17, v21, v101 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v43, v40, v38 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v38, v63, v40, v39 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v39, v55, v40, v41 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v41, v18, v40, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v42, v21, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v40, v34, v21, v95 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v46, v62, v21, v97 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v54, v21, v99 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v17, v22, v53 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v42, v22, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v34, v22, v40 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v58, v22, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v66, v22, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v74, v22, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v62, v22, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v40, v54, v22, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v35, v23, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v43, v23, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v18, v23, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v59, v23, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v67, v23, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v75, v23, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v63, v23, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v55, v23, v40 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v30, v48, 16, v30
	v_pk_fma_f16 v17, v18, v24, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v43, v24, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v63, v24, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v55, v24, v34 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v35, v24, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v59, v24, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v67, v24, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v75, v24, v10 op_sel:[1,0,0]
	v_lshl_or_b32 v50, v28, 16, v50
	v_pk_fma_f16 v24, v43, v27, v26 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v28, 16, v28
	v_pk_fma_f16 v14, v35, v27, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v63, v27, v38 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v18, v27, v41 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v59, v27, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v67, v27, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v75, v27, v12 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v48, 16, v48
	v_pk_fma_f16 v34, v55, v27, v39 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v76, v30, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v68, v30, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v60, v30, v13 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v27, v48, 16, v31
	v_pk_fma_f16 v17, v19, v30, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v64, v30, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v36, v30, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v44, v30, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v56, v30, v25 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v28, v28, 16, v51
	v_pk_fma_f16 v12, v76, v50, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v68, v50, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v60, v50, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v19, v50, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v64, v50, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v36, v50, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v44, v50, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v56, v50, v34 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v32, v49, 16, v32
	v_pk_fma_f16 v10, v76, v27, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v68, v27, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v60, v27, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v19, v27, v17 op_sel:[1,0,0]
	v_lshl_or_b32 v52, v29, 16, v52
	v_pk_fma_f16 v18, v19, v28, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v56, v27, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v76, v28, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v68, v28, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v60, v28, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v56, v28, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v26, v64, v28, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v36, v28, v14 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v49, 16, v49
	v_lshrrev_b32_e32 v29, 16, v29
	v_pk_fma_f16 v24, v44, v28, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v36, v27, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v64, v27, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v44, v27, v21 op_sel:[1,0,0]
	v_lshl_or_b32 v3, v29, 16, v3
	v_pk_fma_f16 v12, v77, v52, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v69, v52, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v61, v52, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v37, v52, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v77, v32, v10 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v30, v49, 16, v33
	v_pk_fma_f16 v11, v69, v32, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v61, v32, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v17, v20, v32, v17 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v65, v32, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v18, v20, v52, v18 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v45, v52, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v19, v57, v32, v19 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v57, v52, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v45, v32, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v65, v52, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v37, v32, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v20, v30, v17 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v20, v3, v18 op_sel:[1,0,0]
	v_pk_fma_f16 v20, v57, v30, v19 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v57, v3, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v77, v30, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v77, v3, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v69, v30, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v69, v3, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v61, v30, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v61, v3, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v25, v65, v30, v27 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v65, v3, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v17, v37, v30, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v37, v3, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v18, v45, v30, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v19, v45, v3, v31 op_sel:[1,0,0]
	s_cbranch_scc1 BB66_4
BB66_2:
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[26:27], 1, v[2:3]
	v_add_co_u32 v26, s0, s4, v26
	v_add_co_ci_u32_e64 v27, s0, s5, v27, s0
	v_add_co_u32 v28, s0, 0x5000, v26
	v_add_co_ci_u32_e64 v29, s0, 0, v27, s0
	v_add_co_u32 v30, s0, 0xa000, v26
	v_add_co_ci_u32_e64 v31, s0, 0, v27, s0
	v_add_co_u32 v32, s0, 0xf000, v26
	v_add_co_ci_u32_e64 v33, s0, 0, v27, s0
	v_add_co_u32 v34, s0, s7, v26
	v_add_co_ci_u32_e64 v35, s0, 0, v27, s0
	v_add_co_u32 v36, s0, 0x19000, v26
	v_add_co_ci_u32_e64 v37, s0, 0, v27, s0
	v_add_co_u32 v38, s0, 0x1e000, v26
	v_add_co_ci_u32_e64 v39, s0, 0, v27, s0
	v_add_co_u32 v40, s0, 0x23000, v26
	v_add_co_ci_u32_e64 v41, s0, 0, v27, s0
	s_clause 0x7
	global_load_dword v3, v[26:27], off
	global_load_dword v26, v[28:29], off
	global_load_dword v27, v[30:31], off
	global_load_dword v28, v[32:33], off
	global_load_dword v29, v[34:35], off
	global_load_dword v30, v[36:37], off
	global_load_dword v31, v[38:39], off
	global_load_dword v32, v[40:41], off
	v_add_nc_u32_e32 v33, 0x200, v4
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2_b32 v4, v3, v26 offset1:40
	ds_write2_b32 v4, v27, v28 offset0:80 offset1:120
	ds_write2_b32 v4, v29, v30 offset0:160 offset1:200
	ds_write2_b32 v33, v31, v32 offset0:112 offset1:152
	s_and_saveexec_b32 s11, vcc_lo
	s_cbranch_execz BB66_1
	v_add_co_u32 v33, s0, v8, s8
	v_add_co_ci_u32_e64 v34, s0, s9, v9, s0
	v_add_co_u32 v41, s0, s10, v33
	v_add_co_ci_u32_e64 v42, s0, 0, v34, s0
	s_clause 0xf
	global_load_dword v26, v[33:34], off
	global_load_dword v27, v[33:34], off offset:4
	global_load_dword v28, v[33:34], off offset:8
	global_load_dword v29, v[33:34], off offset:12
	global_load_dword v30, v[33:34], off offset:16
	global_load_dword v31, v[33:34], off offset:20
	global_load_dword v32, v[33:34], off offset:24
	global_load_dword v33, v[33:34], off offset:28
	global_load_dword v34, v[41:42], off
	global_load_dword v35, v[41:42], off offset:4
	global_load_dword v36, v[41:42], off offset:8
	global_load_dword v37, v[41:42], off offset:12
	global_load_dword v38, v[41:42], off offset:16
	global_load_dword v39, v[41:42], off offset:20
	global_load_dword v40, v[41:42], off offset:24
	global_load_dword v41, v[41:42], off offset:28
	s_waitcnt vmcnt(12)
	ds_write_b128 v5, v[26:29]
	s_waitcnt vmcnt(8)
	ds_write_b128 v5, v[30:33] offset:16
	s_waitcnt vmcnt(4)
	ds_write_b128 v5, v[34:37] offset:32
	s_waitcnt vmcnt(0)
	ds_write_b128 v5, v[38:41] offset:48
	s_branch BB66_1
BB66_4:
	v_lshlrev_b32_e32 v0, 8, v0
	s_mulk_i32 s1, 0x2800
	s_lshl_b32 s0, s6, 5
	v_and_or_b32 v0, 0x3f800, v0, v1
	v_add_nc_u32_e32 v0, s1, v0
	v_and_or_b32 v0, 0xe0, s0, v0
	v_or_b32_e32 v2, 0x400, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_or_b32_e32 v4, 0x408, v0
	v_or_b32_e32 v8, 0x410, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[6:7], 1, v[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_or_b32_e32 v1, 0x418, v0
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v2, vcc_lo, s2, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s3, v3, vcc_lo
	global_store_short v[6:7], v10, off
	global_store_short_d16_hi v[6:7], v10, off offset:16
	global_store_short v[6:7], v12, off offset:32
	global_store_short_d16_hi v[6:7], v12, off offset:48
	global_store_short v[6:7], v11, off offset:512
	global_store_short_d16_hi v[6:7], v11, off offset:528
	global_store_short v[6:7], v15, off offset:544
	global_store_short_d16_hi v[6:7], v15, off offset:560
	global_store_short v[6:7], v13, off offset:1024
	global_store_short_d16_hi v[6:7], v13, off offset:1040
	global_store_short v[6:7], v16, off offset:1056
	global_store_short_d16_hi v[6:7], v16, off offset:1072
	global_store_short v[6:7], v23, off offset:1536
	global_store_short_d16_hi v[6:7], v23, off offset:1552
	global_store_short v[6:7], v24, off offset:1568
	global_store_short_d16_hi v[6:7], v24, off offset:1584
	global_store_short v[2:3], v20, off
	v_ashrrev_i32_e32 v2, 31, v1
	v_add_co_u32 v3, vcc_lo, s2, v4
	v_lshlrev_b64 v[6:7], 1, v[8:9]
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v5, vcc_lo
	v_or_b32_e32 v5, 0x500, v0
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_or_b32_e32 v10, 0x508, v0
	v_add_co_u32 v8, vcc_lo, s2, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v1, vcc_lo, s2, v1
	v_ashrrev_i32_e32 v11, 31, v10
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v2, vcc_lo
	global_store_short_d16_hi v[3:4], v20, off
	v_lshlrev_b64 v[3:4], 1, v[5:6]
	v_or_b32_e32 v5, 0x510, v0
	global_store_short v[8:9], v21, off
	global_store_short_d16_hi v[1:2], v21, off
	v_lshlrev_b64 v[1:2], 1, v[10:11]
	v_or_b32_e32 v7, 0x518, v0
	v_or_b32_e32 v9, 0x600, v0
	v_ashrrev_i32_e32 v6, 31, v5
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	v_add_co_u32 v1, vcc_lo, s2, v1
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v2, vcc_lo
	v_ashrrev_i32_e32 v10, 31, v9
	global_store_short v[3:4], v25, off
	global_store_short_d16_hi v[1:2], v25, off
	v_lshlrev_b64 v[1:2], 1, v[7:8]
	v_add_co_u32 v3, vcc_lo, s2, v5
	v_or_b32_e32 v7, 0x608, v0
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v6, vcc_lo
	v_lshlrev_b64 v[5:6], 1, v[9:10]
	v_or_b32_e32 v9, 0x610, v0
	v_add_co_u32 v1, vcc_lo, s2, v1
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v2, vcc_lo
	global_store_short v[3:4], v22, off
	v_add_co_u32 v5, vcc_lo, s2, v5
	v_ashrrev_i32_e32 v10, 31, v9
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo
	v_lshlrev_b64 v[3:4], 1, v[7:8]
	v_or_b32_e32 v7, 0x700, v0
	global_store_short_d16_hi v[1:2], v22, off
	global_store_short v[5:6], v17, off
	v_lshlrev_b64 v[1:2], 1, v[9:10]
	v_or_b32_e32 v5, 0x618, v0
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_or_b32_e32 v9, 0x708, v0
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	v_ashrrev_i32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v6, 31, v5
	v_add_co_u32 v1, vcc_lo, s2, v1
	v_ashrrev_i32_e32 v10, 31, v9
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v2, vcc_lo
	global_store_short_d16_hi v[3:4], v17, off
	v_lshlrev_b64 v[3:4], 1, v[5:6]
	v_or_b32_e32 v5, 0x710, v0
	v_or_b32_e32 v0, 0x718, v0
	global_store_short v[1:2], v14, off
	v_lshlrev_b64 v[1:2], 1, v[7:8]
	v_lshlrev_b64 v[7:8], 1, v[9:10]
	v_ashrrev_i32_e32 v6, 31, v5
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	v_add_co_u32 v9, vcc_lo, s2, v1
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v2, vcc_lo
	v_add_co_u32 v7, vcc_lo, s2, v7
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v8, vcc_lo
	v_add_co_u32 v5, vcc_lo, s2, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short_d16_hi v[3:4], v14, off
	global_store_short v[9:10], v18, off
	global_store_short_d16_hi v[7:8], v18, off
	global_store_short v[5:6], v19, off
	global_store_short_d16_hi v[0:1], v19, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_2_kernel0
		.amdhsa_group_segment_fixed_size 2304
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 102
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end66:
	.size	tvmgen_default_fused_nn_dense_2_kernel0, .Lfunc_end66-tvmgen_default_fused_nn_dense_2_kernel0

	.globl	tvmgen_default_fused_nn_dense_3_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_3_kernel0,@function
tvmgen_default_fused_nn_dense_3_kernel0:
	v_lshlrev_b32_e32 v1, 7, v0
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_lshl_b32 s4, s6, 12
	v_lshlrev_b32_e32 v3, 2, v0
	s_and_b32 s4, s4, 0xf000
	v_and_b32_e32 v1, 0x1ff00, v1
	v_and_b32_e32 v7, 0x3f0, v0
	v_and_b32_e32 v5, 7, v0
	v_lshlrev_b32_e32 v6, 1, v0
	v_lshlrev_b32_e32 v8, 4, v0
	v_add_nc_u32_e32 v4, s4, v1
	v_lshlrev_b32_e32 v1, 5, v0
	s_movk_i32 s0, 0x100
	s_lshl_b32 s1, s6, 6
	v_mov_b32_e32 v11, 0
	v_and_or_b32 v4, v3, 4, v4
	v_and_or_b32 v9, 0x7f00, v1, v5
	v_add_nc_u32_e32 v3, s0, v6
	v_or_b32_e32 v6, 30, v6
	v_and_b32_e32 v5, 0xf0, v8
	v_lshlrev_b32_e32 v10, 1, v4
	v_lshl_add_u32 v4, v7, 1, s0
	s_and_b32 s1, s1, 0xfffffc00
	v_lshlrev_b32_e32 v2, 3, v0
	v_add_nc_u32_e32 v6, s0, v6
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, s4, v10, s10
	v_add_nc_u32_e32 v9, s1, v9
	v_add_co_ci_u32_e64 v8, s4, 0, s11, s4
	v_mov_b32_e32 v10, 0xffff
	s_mov_b32 s4, 0
	v_add_co_u32 v7, vcc_lo, v7, 16
	v_add_co_ci_u32_e32 v8, vcc_lo, 0, v8, vcc_lo
BB67_1:
	v_add_nc_u32_e32 v12, s4, v9
	s_barrier 
	global_load_dwordx2 v[14:15], v[7:8], off offset:-16
	s_add_i32 s4, s4, 16
	v_ashrrev_i32_e32 v13, 31, v12
	s_cmp_eq_u32 s4, s0
	v_lshlrev_b64 v[16:17], 1, v[12:13]
	v_add_nc_u32_e32 v12, 8, v12
	v_add_co_u32 v16, vcc_lo, s8, v16
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v17, vcc_lo, s9, v17, vcc_lo
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	global_load_ushort v16, v[16:17], off
	v_add_co_u32 v12, vcc_lo, s8, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s9, v13, vcc_lo
	global_load_ushort v26, v[12:13], off
	s_waitcnt vmcnt(2)
	ds_write_b64 v2, v[14:15]
	s_waitcnt vmcnt(1)
	ds_write_b16 v3, v16
	s_waitcnt vmcnt(0) lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[12:15], v4
	ds_read2_b64 v[16:19], v4 offset0:2 offset1:3
	ds_read_b128 v[20:23], v5
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v28, 16, v15
	v_and_b32_e32 v31, v10, v12
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v27, 16, v16
	v_and_b32_sdwa v12, v10, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_e32 v33, v10, v14
	ds_read_u16_d16_hi v28, v6
	s_waitcnt lgkmcnt(0)
	s_barrier 
	global_load_dwordx2 v[24:25], v[7:8], off
	v_and_b32_sdwa v34, v10, v14 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v14, v16, 16, v31
	v_and_b32_e32 v32, v10, v13
	v_lshl_or_b32 v12, v27, 16, v12
	v_and_b32_e32 v35, v10, v15
	v_lshrrev_b32_e32 v29, 16, v17
	v_pk_fma_f16 v11, v14, v20, v11 op_sel_hi:[1,0,1]
	v_and_b32_sdwa v13, v10, v13 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v15, v17, 16, v32
	ds_write_b16 v3, v26
	v_lshrrev_b32_e32 v30, 16, v18
	v_pk_fma_f16 v11, v12, v20, v11 op_sel:[0,1,0]
	v_lshl_or_b32 v16, v29, 16, v13
	v_lshl_or_b32 v20, v18, 16, v33
	v_lshl_or_b32 v19, v19, 16, v35
	v_lshl_or_b32 v29, v30, 16, v34
	v_pk_fma_f16 v15, v15, v21, v11 op_sel_hi:[1,0,1]
	v_add_co_u32 v7, vcc_lo, v7, 32
	v_add_co_ci_u32_e32 v8, vcc_lo, 0, v8, vcc_lo
	v_pk_fma_f16 v21, v16, v21, v15 op_sel:[0,1,0]
	v_pk_fma_f16 v20, v20, v22, v21 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v20, v29, v22, v20 op_sel:[0,1,0]
	v_pk_fma_f16 v19, v19, v23, v20 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v19, v28, v23, v19 op_sel:[0,1,0]
	s_waitcnt vmcnt(0)
	ds_write_b64 v2, v[24:25]
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[11:14], v4
	ds_read2_b64 v[15:18], v4 offset0:2 offset1:3
	ds_read_b128 v[24:27], v5
	s_waitcnt lgkmcnt(2)
	v_and_b32_e32 v20, v10, v11
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v21, 16, v15
	v_and_b32_sdwa v11, v10, v11 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v15, v15, 16, v20
	v_and_b32_e32 v20, v10, v12
	v_lshl_or_b32 v11, v21, 16, v11
	v_and_b32_sdwa v12, v10, v12 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v15, v15, v24, v19 op_sel_hi:[1,0,1]
	v_lshrrev_b32_e32 v19, 16, v16
	v_lshl_or_b32 v16, v16, 16, v20
	v_and_b32_e32 v20, v10, v13
	v_and_b32_sdwa v13, v10, v13 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v11, v11, v24, v15 op_sel:[0,1,0]
	v_lshrrev_b32_e32 v15, 16, v14
	v_lshl_or_b32 v12, v19, 16, v12
	v_pk_fma_f16 v11, v16, v25, v11 op_sel_hi:[1,0,1]
	v_lshrrev_b32_e32 v16, 16, v17
	v_lshl_or_b32 v17, v17, 16, v20
	ds_read_u16_d16_hi v15, v6
	v_pk_fma_f16 v11, v12, v25, v11 op_sel:[0,1,0]
	v_and_b32_e32 v12, v10, v14
	v_lshl_or_b32 v13, v16, 16, v13
	v_pk_fma_f16 v11, v17, v26, v11 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v12, v18, 16, v12
	v_pk_fma_f16 v11, v13, v26, v11 op_sel:[0,1,0]
	v_pk_fma_f16 v11, v12, v27, v11 op_sel_hi:[1,0,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v11, v15, v27, v11 op_sel:[0,1,0]
	s_cbranch_scc0 BB67_1
	v_and_b32_e32 v0, 15, v0
	s_lshl_b32 s0, s6, 4
	v_and_or_b32 v0, 0x7e00, v1, v0
	v_add_nc_u32_e32 v0, s1, v0
	v_and_or_b32 v0, 0xf0, s0, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v11, off
	global_store_short_d16_hi v[0:1], v11, off offset:512
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_3_kernel0
		.amdhsa_group_segment_fixed_size 320
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 36
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end67:
	.size	tvmgen_default_fused_nn_dense_3_kernel0, .Lfunc_end67-tvmgen_default_fused_nn_dense_3_kernel0

	.globl	tvmgen_default_fused_nn_dense_4_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_4_kernel0,@function
tvmgen_default_fused_nn_dense_4_kernel0:
	v_lshlrev_b32_e32 v3, 8, v0
	s_clause 0x2
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x0
	v_lshlrev_b32_e32 v5, 5, v0
	v_and_b32_e32 v4, 7, v0
	v_lshl_add_u32 v1, s6, 14, v3
	v_and_b32_e32 v6, 0x3f0, v0
	v_lshlrev_b32_e32 v9, 1, v0
	v_and_b32_e32 v7, 0x1e0, v5
	v_and_or_b32 v4, 0x7f00, v5, v4
	v_ashrrev_i32_e32 v2, 31, v1
	s_movk_i32 s7, 0x640
	v_lshlrev_b32_e32 v12, 1, v6
	v_add_nc_u32_e32 v15, s7, v7
	v_lshlrev_b32_e32 v4, 1, v4
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_cmp_gt_i32_e32 vcc_lo, 64, v0
	v_lshl_add_u32 v8, v0, 4, s7
	v_or_b32_e32 v14, 30, v9
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v17, s0, s0, v1
	v_mov_b32_e32 v1, 0
	v_add_co_ci_u32_e64 v18, s0, s1, v2, s0
	v_add_co_u32 v19, s0, s4, v4
	v_mov_b32_e32 v2, 0
	v_add_co_ci_u32_e64 v20, s0, s5, 0, s0
	v_mov_b32_e32 v25, 0
	v_mov_b32_e32 v26, 0
	v_mov_b32_e32 v27, 0
	v_mov_b32_e32 v28, 0
	v_mov_b32_e32 v29, 0
	v_mov_b32_e32 v30, 0
	v_mov_b32_e32 v4, 0
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v13, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v22, 0
	s_mov_b64 s[4:5], 0
	s_branch BB68_2
BB68_1:
	s_or_b32 exec_lo, exec_lo, s1
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[31:34], v15 offset:16
	ds_read_b128 v[35:38], v15
	ds_read_b128 v[39:42], v15 offset:528
	ds_read_b128 v[43:46], v15 offset:512
	ds_read2_b64 v[47:50], v12 offset0:2 offset1:42
	ds_read2_b64 v[51:54], v12 offset0:82 offset1:122
	ds_read_b128 v[55:58], v12 offset:320
	v_mov_b32_e32 v59, 0xffff
	s_add_u32 s4, s4, 16
	s_addc_u32 s5, s5, 0
	s_cmpk_eq_i32 s4, 0x200
	s_waitcnt lgkmcnt(6)
	v_lshrrev_b32_e32 v60, 16, v31
	s_waitcnt lgkmcnt(5)
	v_and_b32_e32 v62, v59, v35
	v_and_b32_sdwa v35, v59, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(3)
	v_and_b32_e32 v65, v59, v43
	v_lshrrev_b32_e32 v63, 16, v39
	v_and_b32_sdwa v43, v59, v43 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v62, v31, 16, v62
	v_and_b32_e32 v66, v59, v36
	v_lshl_or_b32 v65, v39, 16, v65
	v_and_b32_e32 v67, v59, v44
	v_lshl_or_b32 v60, v60, 16, v35
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v26, v51, v62, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v53, v62, v24 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v43, v63, 16, v43
	v_pk_fma_f16 v25, v51, v65, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v53, v65, v23 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v64, 16, v40
	v_and_b32_sdwa v44, v59, v44 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v61, 16, v32
	v_and_b32_sdwa v36, v59, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v63, v32, 16, v66
	v_pk_fma_f16 v26, v51, v60, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v53, v60, v24 op_sel:[1,0,0]
	v_lshl_or_b32 v44, v64, 16, v44
	v_lshl_or_b32 v64, v40, 16, v67
	v_pk_fma_f16 v25, v51, v43, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v53, v43, v23 op_sel:[1,0,0]
	v_lshl_or_b32 v61, v61, 16, v36
	v_pk_fma_f16 v26, v52, v63, v26 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v54, v63, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v52, v64, v25 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v54, v64, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v49, v62, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v49, v65, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v51, v52, v61, v26 op_sel:[1,0,0]
	v_pk_fma_f16 v53, v54, v61, v24 op_sel:[1,0,0]
	v_pk_fma_f16 v52, v52, v44, v25 op_sel:[1,0,0]
	v_pk_fma_f16 v54, v54, v44, v23 op_sel:[1,0,0]
	ds_read_b128 v[23:26], v12
	v_pk_fma_f16 v30, v47, v62, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v47, v65, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v28, v49, v60, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v27, v49, v43, v27 op_sel:[1,0,0]
	v_lshrrev_b32_e32 v31, 16, v33
	v_pk_fma_f16 v30, v47, v60, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v29, v47, v43, v29 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v50, v63, v28 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v50, v64, v27 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v35, v59, v37 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v30, v48, v63, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v48, v64, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v49, v50, v61, v28 op_sel:[1,0,0]
	v_pk_fma_f16 v50, v50, v44, v27 op_sel:[1,0,0]
	v_and_b32_e32 v27, v59, v37
	v_and_b32_e32 v28, v59, v38
	v_pk_fma_f16 v47, v48, v61, v30 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v48, v44, v29 op_sel:[1,0,0]
	v_and_b32_e32 v29, v59, v46
	v_lshl_or_b32 v66, v33, 16, v27
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v21, v23, v62, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v23, v65, v22 op_sel_hi:[0,1,1]
	v_and_b32_e32 v27, v59, v45
	v_and_b32_sdwa v36, v59, v38 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v32, 16, v34
	v_lshl_or_b32 v67, v34, 16, v28
	v_lshrrev_b32_e32 v33, 16, v41
	v_lshrrev_b32_e32 v34, 16, v42
	v_and_b32_sdwa v38, v59, v46 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v37, v59, v45 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v21, v23, v60, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v23, v43, v22 op_sel:[1,0,0]
	v_lshl_or_b32 v68, v41, 16, v27
	v_lshl_or_b32 v69, v42, 16, v29
	ds_read_b128 v[27:30], v12 offset:640
	ds_read_u16 v45, v12 offset:24
	ds_read_u16 v46, v12 offset:26
	ds_read_u16 v59, v12 offset:28
	ds_read_u16 v71, v12 offset:344
	ds_read_u16 v72, v12 offset:346
	ds_read_u16 v73, v12 offset:348
	ds_read_u16 v76, v12 offset:664
	ds_read_u16 v77, v12 offset:666
	ds_read_u16 v78, v12 offset:350
	v_lshl_or_b32 v70, v31, 16, v35
	v_lshl_or_b32 v23, v33, 16, v37
	v_lshl_or_b32 v74, v32, 16, v36
	v_lshl_or_b32 v75, v34, 16, v38
	ds_read_b128 v[31:34], v12 offset:960
	ds_read_b128 v[35:38], v12 offset:1280
	ds_read2_b64 v[39:42], v12 offset0:162 offset1:163
	v_pk_fma_f16 v21, v24, v63, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v24, v64, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v55, v62, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v55, v65, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v24, v61, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v24, v44, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v55, v60, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v55, v43, v10 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(12)
	v_pk_fma_f16 v13, v27, v62, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v27, v65, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v21, v25, v66, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v25, v68, v22 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v56, v63, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v27, v60, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v27, v43, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v25, v70, v21 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v7, v31, v62, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v31, v65, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v28, v63, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v28, v64, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v25, v23, v22 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v31, v60, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v31, v43, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v28, v61, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v28, v44, v16 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v5, v35, v62, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v32, v63, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v32, v64, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v35, v65, v4 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v2, v39, v62, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v39, v65, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v32, v61, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v32, v44, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v26, v67, v21 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v22, v26, v69, v22 op_sel_hi:[0,1,1]
	ds_read_u16 v24, v12 offset:984
	ds_read_u16 v25, v12 offset:670
	v_pk_fma_f16 v13, v29, v66, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v29, v68, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v35, v60, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v35, v43, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v33, v66, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v33, v68, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v39, v60, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v39, v43, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v21, v26, v74, v21 op_sel:[1,0,0]
	v_pk_fma_f16 v22, v26, v75, v22 op_sel:[1,0,0]
	ds_read_u16 v55, v12 offset:990
	ds_read_u16 v26, v12 offset:668
	ds_read_u16 v27, v12 offset:986
	ds_read_u16 v28, v12 offset:988
	v_pk_fma_f16 v10, v56, v64, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v29, v70, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v29, v23, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v36, v63, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v36, v64, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v33, v70, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v33, v23, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v40, v63, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v40, v64, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v56, v61, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v56, v44, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v30, v67, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v16, v30, v69, v16 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v36, v61, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v36, v44, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v7, v34, v67, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v34, v69, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v40, v61, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v40, v44, v1 op_sel:[1,0,0]
	ds_read_u16 v36, v14
	s_waitcnt lgkmcnt(6)
	v_pk_fma_f16 v35, v24, v66, v53 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v57, v66, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v57, v68, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v37, v66, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v37, v68, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v45, v66, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v71, v66, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v71, v68, v50 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v76, v66, v51 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v24, v68, v54 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v41, v66, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v41, v68, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v30, v74, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v16, v30, v75, v16 op_sel:[1,0,0]
	v_pk_fma_f16 v30, v45, v68, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v34, v74, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v34, v75, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v34, v76, v68, v52 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v57, v70, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v57, v23, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v37, v70, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v37, v23, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v31, v72, v70, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v72, v23, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v77, v70, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v77, v23, v34 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(2)
	v_pk_fma_f16 v35, v27, v70, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v41, v70, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v41, v23, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v24, v27, v23, v24 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v30, v46, v23, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v46, v70, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v58, v67, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v58, v69, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v38, v67, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v4, v38, v69, v4 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v42, v67, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v42, v69, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v59, v67, v29 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v59, v69, v30 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v31, v73, v67, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v32, v73, v69, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v33, v26, v67, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v34, v26, v69, v34 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v35, v28, v67, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v37, v28, v69, v24 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v30, v36, v74, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v29, v36, v75, v27 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v26, v25, v74, v33 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v58, v74, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v58, v75, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v38, v74, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v4, v38, v75, v4 op_sel:[1,0,0]
	v_pk_fma_f16 v28, v78, v74, v31 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v27, v78, v75, v32 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v25, v25, v75, v34 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v24, v55, v74, v35 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v55, v75, v37 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v42, v74, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v1, v42, v75, v1 op_sel:[1,0,0]
	s_cbranch_scc1 BB68_4
BB68_2:
	v_add_co_u32 v31, s0, v19, s4
	v_add_co_ci_u32_e64 v32, s0, s5, v20, s0
	v_add_co_u32 v33, s0, 0x2800, v31
	v_add_co_ci_u32_e64 v34, s0, 0, v32, s0
	v_add_co_u32 v35, s0, 0x5000, v31
	v_add_co_ci_u32_e64 v36, s0, 0, v32, s0
	v_add_co_u32 v37, s0, 0x7800, v31
	v_add_co_ci_u32_e64 v38, s0, 0, v32, s0
	v_add_co_u32 v39, s0, 0xa000, v31
	v_add_co_ci_u32_e64 v40, s0, 0, v32, s0
	s_clause 0x4
	global_load_ushort v31, v[31:32], off
	global_load_ushort v32, v[33:34], off
	global_load_ushort v33, v[35:36], off
	global_load_ushort v34, v[37:38], off
	global_load_ushort v35, v[39:40], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write_b16 v9, v31
	ds_write_b16 v9, v32 offset:320
	ds_write_b16 v9, v33 offset:640
	ds_write_b16 v9, v34 offset:960
	ds_write_b16 v9, v35 offset:1280
	s_and_saveexec_b32 s1, vcc_lo
	s_cbranch_execz BB68_1
	v_add_co_u32 v31, s0, v17, s4
	v_add_co_ci_u32_e64 v32, s0, s5, v18, s0
	global_load_dwordx4 v[31:34], v[31:32], off
	s_waitcnt vmcnt(0)
	ds_write_b128 v8, v[31:34]
	s_branch BB68_1
BB68_4:
	v_and_b32_e32 v3, 0x3f000, v3
	v_lshlrev_b32_e32 v0, 1, v0
	v_lshl_add_u32 v3, s6, 6, v3
	v_and_or_b32 v8, v0, 30, v3
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_nc_u32_e32 v17, 0x800, v8
	v_add_nc_u32_e32 v3, 0x820, v8
	v_lshlrev_b64 v[14:15], 1, v[8:9]
	v_ashrrev_i32_e32 v18, 31, v17
	v_add_co_u32 v14, vcc_lo, s2, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s3, v15, vcc_lo
	v_add_co_u32 v19, vcc_lo, 0x50000, v14
	v_add_co_ci_u32_e32 v20, vcc_lo, 0, v15, vcc_lo
	global_store_short v[14:15], v22, off offset:64
	global_store_dword v[14:15], v21, off
	global_store_short_d16_hi v[14:15], v22, off offset:66
	v_add_co_u32 v21, vcc_lo, 0x3c000, v14
	v_add_co_ci_u32_e32 v22, vcc_lo, 0, v15, vcc_lo
	v_add_co_u32 v31, vcc_lo, 0x28000, v14
	v_add_co_ci_u32_e32 v32, vcc_lo, 0, v15, vcc_lo
	v_add_co_u32 v14, vcc_lo, 0x14000, v14
	global_store_dword v[19:20], v4, off offset:64
	global_store_dword v[19:20], v5, off
	global_store_dword v[21:22], v6, off offset:64
	global_store_dword v[21:22], v7, off
	global_store_dword v[31:32], v16, off offset:64
	global_store_dword v[31:32], v13, off
	v_add_co_ci_u32_e32 v15, vcc_lo, 0, v15, vcc_lo
	v_add_nc_u32_e32 v5, 0xa800, v8
	v_ashrrev_i32_e32 v4, 31, v3
	v_add_nc_u32_e32 v13, 0x14800, v8
	v_add_nc_u32_e32 v19, 0x1e820, v8
	global_store_dword v[14:15], v11, off
	v_add_nc_u32_e32 v11, 0xa820, v8
	global_store_dword v[14:15], v10, off offset:64
	v_lshlrev_b64 v[9:10], 1, v[17:18]
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_ashrrev_i32_e32 v12, 31, v11
	v_add_nc_u32_e32 v15, 0x14820, v8
	v_ashrrev_i32_e32 v14, 31, v13
	v_add_co_u32 v9, vcc_lo, s2, v9
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v10, vcc_lo
	v_add_nc_u32_e32 v17, 0x1e800, v8
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_lshlrev_b64 v[11:12], 1, v[11:12]
	v_ashrrev_i32_e32 v16, 31, v15
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	v_add_co_u32 v5, vcc_lo, s2, v5
	v_lshlrev_b64 v[13:14], 1, v[13:14]
	v_ashrrev_i32_e32 v18, 31, v17
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo
	v_add_nc_u32_e32 v21, 0x28800, v8
	v_add_co_u32 v11, vcc_lo, s2, v11
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_ashrrev_i32_e32 v20, 31, v19
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v12, vcc_lo
	v_add_nc_u32_e32 v7, 0x28820, v8
	v_add_co_u32 v13, vcc_lo, s2, v13
	v_lshlrev_b64 v[17:18], 1, v[17:18]
	v_ashrrev_i32_e32 v22, 31, v21
	v_add_co_ci_u32_e32 v14, vcc_lo, s3, v14, vcc_lo
	v_add_co_u32 v15, vcc_lo, s2, v15
	v_lshlrev_b64 v[19:20], 1, v[19:20]
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_co_ci_u32_e32 v16, vcc_lo, s3, v16, vcc_lo
	v_add_co_u32 v17, vcc_lo, s2, v17
	v_lshlrev_b64 v[21:22], 1, v[21:22]
	v_add_co_ci_u32_e32 v18, vcc_lo, s3, v18, vcc_lo
	v_add_co_u32 v19, vcc_lo, s2, v19
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_ci_u32_e32 v20, vcc_lo, s3, v20, vcc_lo
	v_add_co_u32 v21, vcc_lo, s2, v21
	v_add_co_ci_u32_e32 v22, vcc_lo, s3, v22, vcc_lo
	v_add_co_u32 v7, vcc_lo, s2, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s3, v8, vcc_lo
	global_store_dword v[9:10], v30, off
	global_store_dword v[3:4], v29, off
	global_store_dword v[5:6], v28, off
	global_store_dword v[11:12], v27, off
	global_store_dword v[13:14], v26, off
	global_store_dword v[15:16], v25, off
	global_store_dword v[17:18], v24, off
	global_store_dword v[19:20], v23, off
	global_store_dword v[21:22], v2, off
	global_store_dword v[7:8], v1, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_4_kernel0
		.amdhsa_group_segment_fixed_size 2624
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 79
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end68:
	.size	tvmgen_default_fused_nn_dense_4_kernel0, .Lfunc_end68-tvmgen_default_fused_nn_dense_4_kernel0

	.globl	tvmgen_default_fused_nn_dense_5_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_5_kernel0,@function
tvmgen_default_fused_nn_dense_5_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_lshrrev_b32_e32 v7, 3, v0
	s_ashr_i32 s1, s6, 4
	s_mov_b32 s4, 0xa000
	v_lshlrev_b32_e32 v6, 7, v0
	s_mul_i32 s0, s1, s4
	v_and_b32_e32 v1, 7, v0
	v_lshl_add_u32 v3, v7, 11, s0
	s_lshl_b32 s0, s6, 15
	s_movk_i32 s7, 0x200
	s_and_b32 s5, s0, 0x78000
	v_lshlrev_b32_e32 v2, 1, v0
	v_or_b32_e32 v8, s5, v0
	v_lshl_or_b32 v3, v1, 1, v3
	v_lshl_add_u32 v4, v0, 2, s7
	v_lshl_add_u32 v7, v7, 5, s7
	v_and_b32_e32 v5, 15, v0
	v_lshl_or_b32 v9, v8, 1, 0xf000
	v_and_b32_e32 v6, 0x1f800, v6
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	v_lshlrev_b32_e32 v8, 5, v1
	v_mov_b32_e32 v11, 0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, s0, s10, v9
	v_mov_b32_e32 v12, 0
	v_add_co_ci_u32_e64 v10, s0, s11, 0, s0
	s_mov_b32 s7, 0
	s_branch BB69_2
BB69_1:
	s_or_b32 exec_lo, exec_lo, s0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[13:16], v7
	ds_read_b128 v[17:20], v8
	ds_read_b128 v[21:24], v8 offset:256
	ds_read_b128 v[25:28], v7 offset:320
	ds_read_b128 v[29:32], v7 offset:16
	ds_read_b128 v[33:36], v8 offset:16
	v_lshrrev_b32_e32 v45, 16, v11
	v_lshrrev_b32_e32 v46, 16, v12
	v_mov_b32_e32 v47, 0xffff
	ds_read_b128 v[37:40], v8 offset:272
	ds_read_b128 v[41:44], v7 offset:336
	v_add_co_u32 v9, s0, v9, 32
	s_add_i32 s7, s7, 16
	v_add_co_ci_u32_e64 v10, s0, 0, v10, s0
	s_cmpk_eq_i32 s7, 0x800
	s_waitcnt lgkmcnt(7)
	v_lshrrev_b32_e32 v48, 16, v13
	s_waitcnt lgkmcnt(6)
	v_lshrrev_b32_e32 v50, 16, v17
	v_fmac_f16_e32 v11, v13, v17
	s_waitcnt lgkmcnt(5)
	v_fmac_f16_e32 v45, v13, v21
	v_lshrrev_b32_e32 v52, 16, v21
	s_waitcnt lgkmcnt(4)
	v_fmac_f16_e32 v12, v25, v17
	v_lshrrev_b32_e32 v13, 16, v25
	v_fmac_f16_e32 v46, v25, v21
	v_fmac_f16_e32 v11, v48, v50
	v_fmac_f16_e32 v45, v48, v52
	v_lshrrev_b32_e32 v49, 16, v14
	v_fmac_f16_e32 v12, v13, v50
	v_fmac_f16_e32 v46, v13, v52
	v_lshrrev_b32_e32 v51, 16, v18
	v_fmac_f16_e32 v11, v14, v18
	v_fmac_f16_e32 v45, v14, v22
	v_lshrrev_b32_e32 v17, 16, v22
	v_fmac_f16_e32 v12, v26, v18
	v_lshrrev_b32_e32 v13, 16, v26
	v_fmac_f16_e32 v46, v26, v22
	v_fmac_f16_e32 v11, v49, v51
	v_fmac_f16_e32 v45, v49, v17
	v_lshrrev_b32_e32 v14, 16, v23
	v_fmac_f16_e32 v12, v13, v51
	v_fmac_f16_e32 v46, v13, v17
	v_and_b32_sdwa v13, v47, v19 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_fmac_f16_e32 v11, v15, v19
	v_fmac_f16_e32 v45, v15, v23
	v_fmac_f16_e32 v12, v27, v19
	v_fmac_f16_e32 v46, v27, v23
	v_and_b32_e32 v17, v47, v20
	v_lshl_or_b32 v13, v14, 16, v13
	v_pack_b32_f16 v11, v11, v45
	v_lshrrev_b32_e32 v14, 16, v24
	v_pack_b32_f16 v12, v12, v46
	v_and_b32_sdwa v18, v47, v20 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v17, v24, 16, v17
	v_pk_fma_f16 v11, v15, v13, v11 op_sel:[1,0,0]
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v15, 16, v37
	v_pk_fma_f16 v12, v27, v13, v12 op_sel:[1,0,0]
	v_and_b32_e32 v13, v47, v33
	v_lshl_or_b32 v14, v14, 16, v18
	v_pk_fma_f16 v11, v16, v17, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v28, v17, v12 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v17, v47, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v13, v37, 16, v13
	v_pk_fma_f16 v11, v16, v14, v11 op_sel:[1,0,0]
	v_and_b32_sdwa v16, v47, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v12, v28, v14, v12 op_sel:[1,0,0]
	v_and_b32_e32 v14, v47, v34
	v_lshl_or_b32 v15, v15, 16, v17
	v_pk_fma_f16 v11, v29, v13, v11 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v12, v41, v13, v12 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v13, 16, v38
	v_lshl_or_b32 v14, v38, 16, v14
	v_pk_fma_f16 v11, v29, v15, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v41, v15, v12 op_sel:[1,0,0]
	v_and_b32_e32 v15, v47, v35
	v_lshl_or_b32 v13, v13, 16, v16
	v_pk_fma_f16 v11, v30, v14, v11 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v16, v47, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v12, v42, v14, v12 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v14, 16, v39
	v_lshl_or_b32 v15, v39, 16, v15
	v_pk_fma_f16 v11, v30, v13, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v42, v13, v12 op_sel:[1,0,0]
	v_and_b32_e32 v13, v47, v36
	v_lshl_or_b32 v14, v14, 16, v16
	v_pk_fma_f16 v11, v31, v15, v11 op_sel_hi:[0,1,1]
	v_and_b32_sdwa v16, v47, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_pk_fma_f16 v12, v43, v15, v12 op_sel_hi:[0,1,1]
	v_lshrrev_b32_e32 v15, 16, v40
	v_lshl_or_b32 v13, v40, 16, v13
	v_pk_fma_f16 v11, v31, v14, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v43, v14, v12 op_sel:[1,0,0]
	v_lshl_or_b32 v14, v15, 16, v16
	v_pk_fma_f16 v11, v32, v13, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v44, v13, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v32, v14, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v44, v14, v12 op_sel:[1,0,0]
	s_cbranch_scc1 BB69_4
BB69_2:
	s_add_i32 s0, s5, s7
	v_add_nc_u32_e32 v13, s7, v3
	v_or_b32_e32 v14, s0, v5
	v_add_nc_u32_e32 v15, v14, v6
	v_ashrrev_i32_e32 v14, 31, v13
	v_ashrrev_i32_e32 v16, 31, v15
	v_lshlrev_b64 v[13:14], 1, v[13:14]
	v_lshlrev_b64 v[15:16], 1, v[15:16]
	v_add_co_u32 v13, s0, s8, v13
	v_add_co_ci_u32_e64 v14, s0, s9, v14, s0
	v_add_co_u32 v15, s0, s10, v15
	v_add_co_ci_u32_e64 v16, s0, s11, v16, s0
	v_add_co_u32 v17, s0, s4, v13
	v_add_co_ci_u32_e64 v18, s0, 0, v14, s0
	v_add_co_u32 v19, s0, 0x5000, v15
	v_add_co_ci_u32_e64 v20, s0, 0, v16, s0
	v_add_co_u32 v21, s0, s4, v15
	v_add_co_ci_u32_e64 v22, s0, 0, v16, s0
	s_clause 0x1
	global_load_dword v13, v[13:14], off
	global_load_dword v14, v[17:18], off
	s_clause 0x2
	global_load_ushort v15, v[15:16], off
	global_load_ushort v16, v[19:20], off
	global_load_ushort v17, v[21:22], off
	s_waitcnt vmcnt(0)
	s_barrier 
	ds_write2_b32 v4, v13, v14 offset1:80
	ds_write_b16 v2, v15
	ds_write_b16 v2, v16 offset:160
	ds_write_b16 v2, v17 offset:320
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB69_1
	global_load_ushort v13, v[9:10], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v2, v13 offset:480
	s_branch BB69_1
BB69_4:
	v_lshlrev_b32_e32 v0, 5, v0
	s_mulk_i32 s1, 0x1400
	s_lshl_b32 s0, s6, 4
	s_and_b32 s0, s0, 0xf0
	v_and_b32_e32 v0, 0x7f00, v0
	v_add_nc_u32_e32 v0, s1, v0
	v_or3_b32 v0, v0, s0, v1
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	v_add_co_u32 v2, vcc_lo, 0x1000, v0
	v_add_co_ci_u32_e32 v3, vcc_lo, 0, v1, vcc_lo
	global_store_short v[0:1], v11, off
	global_store_short_d16_hi v[0:1], v11, off offset:16
	global_store_short v[2:3], v12, off offset:1024
	global_store_short_d16_hi v[2:3], v12, off offset:1040
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_5_kernel0
		.amdhsa_group_segment_fixed_size 1152
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 53
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end69:
	.size	tvmgen_default_fused_nn_dense_5_kernel0, .Lfunc_end69-tvmgen_default_fused_nn_dense_5_kernel0

	.globl	tvmgen_default_fused_nn_dense_6_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_6_kernel0,@function
tvmgen_default_fused_nn_dense_6_kernel0:
	v_lshlrev_b32_e32 v1, 1, v0
	s_mov_b64 s[18:19], s[2:3]
	v_add_nc_u32_e32 v5, 50, v0
	s_mov_b64 s[16:17], s[0:1]
	s_movk_i32 s0, 0xf00
	v_add_nc_u32_e32 v4, 0x2b2, v1
	v_add_nc_u32_e32 v6, 0x564, v1
	s_add_u32 s16, s16, s7
	s_movk_i32 s7, 0x7f
	v_add_nc_u32_e32 v3, 0x59, v0
	v_and_b32_e32 v38, s0, v4
	v_add_nc_u32_e32 v4, 0x816, v1
	v_and_b32_e32 v127, s7, v5
	v_mov_b32_e32 v2, 0x7f
	v_add_nc_u32_e32 v5, 0x64, v0
	v_and_b32_e32 v34, s0, v6
	s_movk_i32 s0, 0x1f00
	v_and_b32_e32 v15, s7, v3
	v_and_b32_e32 v21, s0, v4
	v_add_nc_u32_e32 v4, 0xac8, v1
	v_add_nc_u32_e32 v3, 11, v0
	v_and_b32_e32 v22, v2, v5
	v_add_nc_u32_e32 v5, 61, v0
	v_add_nc_u32_e32 v7, 22, v0
	v_add_nc_u32_e32 v6, 0xd7a, v1
	v_and_b32_e32 v23, s0, v4
	v_add_nc_u32_e32 v4, 0x6f, v0
	v_and_b32_e32 v88, v2, v3
	v_and_b32_e32 v24, v2, v5
	v_and_b32_e32 v26, v2, v7
	v_mov_b32_e32 v3, 0x1f00
	v_add_nc_u32_e32 v5, 0x12de, v1
	v_add_nc_u32_e32 v7, 0x1590, v1
	v_add_nc_u32_e32 v8, 0x102c, v1
	v_and_b32_e32 v25, s0, v6
	v_add_nc_u32_e32 v6, 0x48, v0
	v_and_b32_e32 v28, v2, v4
	v_add_nc_u32_e32 v4, 0x7a, v0
	v_and_b32_e32 v29, v3, v5
	v_and_b32_e32 v30, v3, v7
	v_add_nc_u32_e32 v3, 0x1842, v1
	v_and_b32_e32 v27, s0, v8
	v_and_b32_e32 v31, v2, v6
	s_movk_i32 s0, 0x3f00
	v_add_nc_u32_e32 v6, 0x1af4, v1
	v_and_b32_e32 v73, v2, v4
	v_add_nc_u32_e32 v4, 0x1da6, v1
	v_and_b32_e32 v33, s0, v3
	v_add_nc_u32_e32 v3, 0x53, v0
	v_add_nc_u32_e32 v7, 0x2058, v1
	v_and_b32_e32 v110, s0, v6
	v_and_b32_e32 v16, s0, v4
	s_movk_i32 s0, 0x2f00
	v_add_nc_u32_e32 v8, 33, v0
	v_and_b32_e32 v17, v2, v3
	v_and_b32_e32 v18, s0, v7
	v_add_nc_u32_e32 v3, 5, v0
	v_add_nc_u32_e32 v7, 0x25bc, v1
	v_and_b32_e32 v32, v2, v8
	v_add_nc_u32_e32 v8, 55, v0
	v_mov_b32_e32 v5, 0x3f00
	v_and_b32_e32 v44, v2, v3
	v_and_b32_e32 v49, s0, v7
	v_add_nc_u32_e32 v3, 0x286e, v1
	v_add_nc_u32_e32 v7, 0x2dd2, v1
	v_and_b32_e32 v50, v2, v8
	v_add_nc_u32_e32 v8, 0x42, v0
	s_addc_u32 s17, s17, 0
	v_and_b32_e32 v51, v5, v3
	v_and_b32_e32 v3, v5, v7
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_add_nc_u32_e32 v6, 44, v0
	v_add_nc_u32_e32 v4, 0x230a, v1
	v_add_nc_u32_e32 v7, 0x74, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:4
	v_and_b32_e32 v3, v2, v8
	v_and_b32_e32 v19, v2, v6
	v_and_b32_e32 v47, s0, v4
	v_add_nc_u32_e32 v6, 0x5e, v0
	v_add_nc_u32_e32 v4, 16, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:8
	v_add_nc_u32_e32 v3, 0x3084, v1
	v_add_nc_u32_e32 v8, 0x35e8, v1
	v_and_b32_e32 v48, v2, v6
	v_add_nc_u32_e32 v6, 0x2b20, v1
	v_and_b32_e32 v54, v2, v4
	v_and_b32_e32 v3, v5, v3
	v_add_nc_u32_e32 v4, 27, v0
	v_add_nc_u32_e32 v10, 0x58f2, v1
	v_and_b32_e32 v53, v5, v6
	v_add_nc_u32_e32 v6, 0x3336, v1
	buffer_store_dword v3, off, s[16:19], 0 offset:12
	v_and_b32_e32 v3, v2, v4
	v_mov_b32_e32 v4, 0x7f00
	v_add_nc_u32_e32 v12, 0x6bd0, v1
	v_add_nc_u32_e32 v9, 38, v0
	v_add_nc_u32_e32 v11, -1, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:16
	v_and_b32_e32 v3, v5, v6
	v_mul_hi_i32 v6, 0xb21642c9, v0
	v_and_b32_e32 v52, s7, v0
	v_cmp_gt_i32_e64 s0, 0xb4, v0
	v_cmp_gt_i32_e64 s1, 23, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:20
	v_and_b32_e32 v3, v2, v7
	v_add_nc_u32_e32 v7, 0x538e, v1
	s_movk_i32 s7, 0x7f00
	s_movk_i32 s12, 0x4f00
	s_movk_i32 s13, 0x2e00
	buffer_store_dword v3, off, s[16:19], 0 offset:24
	v_and_b32_e32 v3, v5, v8
	v_mov_b32_e32 v5, 0x5f00
	v_add_nc_u32_e32 v8, 0x5640, v1
	v_and_b32_e32 v55, 0x700, v1
	v_add_nc_u32_e32 v111, s13, v1
	buffer_store_dword v3, off, s[16:19], 0 offset:28
	v_and_b32_e32 v7, v5, v7
	v_and_b32_e32 v5, v5, v8
	v_add_nc_u32_e32 v8, 0x691e, v1
	v_add_nc_u32_e32 v3, 0x4d, v0
	v_mov_b32_e32 v89, 0
	buffer_store_dword v7, off, s[16:19], 0 offset:32
	buffer_store_dword v5, off, s[16:19], 0 offset:36
	v_add_nc_u32_e32 v5, v6, v0
	v_and_b32_e32 v6, v4, v10
	v_add_nc_u32_e32 v7, 0x5e56, v1
	v_and_b32_e32 v3, v2, v3
	v_mov_b32_e32 v90, 0
	v_lshrrev_b32_e32 v10, 31, v5
	buffer_store_dword v6, off, s[16:19], 0 offset:40
	v_add_nc_u32_e32 v6, 0x5ba4, v1
	v_ashrrev_i32_e32 v5, 4, v5
	buffer_store_dword v3, off, s[16:19], 0 offset:72
	v_and_b32_e32 v3, v2, v9
	v_mov_b32_e32 v91, 0
	v_and_b32_e32 v6, v4, v6
	v_add_nc_u32_e32 v13, v5, v10
	v_and_b32_e32 v5, v4, v12
	v_add_nc_u32_e32 v10, 0x7698, v1
	buffer_store_dword v3, off, s[16:19], 0 offset:76
	buffer_store_dword v6, off, s[16:19], 0 offset:44
	v_and_b32_e32 v6, v4, v7
	buffer_store_dword v5, off, s[16:19], 0 offset:56
	v_add_nc_u32_e32 v5, 0x6e82, v1
	v_add_nc_u32_e32 v7, 0x73e6, v1
	v_and_b32_e32 v3, v2, v11
	buffer_store_dword v6, off, s[16:19], 0 offset:48
	v_and_b32_e32 v6, v4, v8
	v_and_b32_e32 v5, v4, v5
	v_mul_lo_u32 v8, 0xb80, v13
	buffer_store_dword v3, off, s[16:19], 0 offset:80
	v_mul_lo_u32 v9, v13, 23
	buffer_store_dword v6, off, s[16:19], 0 offset:52
	v_add_nc_u32_e32 v6, 0x7134, v1
	buffer_store_dword v5, off, s[16:19], 0 offset:60
	v_lshlrev_b32_e32 v5, 7, v0
	v_lshl_add_u32 v112, v13, 11, s13
	v_mov_b32_e32 v92, 0
	v_and_b32_e32 v6, v4, v6
	v_mov_b32_e32 v93, 0
	v_sub_nc_u32_e32 v5, v5, v8
	v_add_nc_u32_e32 v8, 21, v0
	v_mov_b32_e32 v94, 0
	buffer_store_dword v6, off, s[16:19], 0 offset:64
	v_and_b32_e32 v6, v4, v7
	v_and_b32_e32 v4, v4, v10
	v_add_nc_u32_e32 v7, 60, v0
	v_lshlrev_b32_e32 v109, 1, v5
	v_mov_b32_e32 v95, 0
	buffer_store_dword v6, off, s[16:19], 0 offset:68
	buffer_store_dword v4, off, s[16:19], 0 offset:276
	v_add_nc_u32_e32 v4, 0x58, v0
	v_add_nc_u32_e32 v6, 49, v0
	v_mov_b32_e32 v96, 0
	v_mov_b32_e32 v97, 0
	v_mov_b32_e32 v98, 0
	v_and_b32_e32 v3, v2, v4
	v_add_nc_u32_e32 v4, 0x63, v0
	v_and_b32_e32 v6, v2, v6
	v_mov_b32_e32 v99, 0
	v_mov_b32_e32 v100, 0
	buffer_store_dword v3, off, s[16:19], 0 offset:84
	v_add_nc_u32_e32 v3, 10, v0
	buffer_store_dword v6, off, s[16:19], 0 offset:88
	v_add_nc_u32_e32 v6, 32, v0
	v_mov_b32_e32 v101, 0
	v_mov_b32_e32 v102, 0
	v_and_b32_e32 v3, v2, v3
	v_mov_b32_e32 v103, 0
	v_mov_b32_e32 v104, 0
	s_ashr_i32 s4, s6, 1
	s_and_b32 s6, s6, 1
	buffer_store_dword v3, off, s[16:19], 0 offset:92
	v_and_b32_e32 v3, v2, v4
	v_add_nc_u32_e32 v4, 0x47, v0
	s_mul_i32 s5, s4, 0x7800
	buffer_store_dword v3, off, s[16:19], 0 offset:96
	v_and_b32_e32 v3, v2, v7
	v_add_nc_u32_e32 v7, 0x79, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:100
	v_and_b32_e32 v3, v2, v8
	v_add_nc_u32_e32 v8, 0x52, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:104
	v_add_nc_u32_e32 v3, 0x6e, v0
	v_and_b32_e32 v3, v2, v3
	buffer_store_dword v3, off, s[16:19], 0 offset:108
	v_and_b32_e32 v3, v2, v4
	v_add_nc_u32_e32 v4, 4, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:112
	v_and_b32_e32 v3, v2, v6
	v_add_nc_u32_e32 v6, 0x5d, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:116
	v_and_b32_e32 v3, v2, v7
	v_add_nc_u32_e32 v7, 54, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:120
	v_and_b32_e32 v3, v2, v8
	v_add_nc_u32_e32 v8, 15, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:124
	v_add_nc_u32_e32 v3, 43, v0
	v_and_b32_e32 v3, v2, v3
	buffer_store_dword v3, off, s[16:19], 0 offset:128
	v_and_b32_e32 v3, v2, v4
	v_add_nc_u32_e32 v4, 0x41, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:132
	v_and_b32_e32 v3, v2, v6
	v_add_nc_u32_e32 v6, 26, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:136
	v_and_b32_e32 v3, v2, v7
	v_add_nc_u32_e32 v7, 0x73, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:140
	v_and_b32_e32 v3, v2, v8
	v_add_nc_u32_e32 v8, 0x69, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:144
	v_sub_nc_u32_e32 v3, v0, v9
	buffer_store_dword v3, off, s[16:19], 0 offset:292
	v_add_nc_u32_e32 v3, 0x68, v0
	v_add_nc_u32_e32 v0, 0x4c, v0
	v_and_b32_e32 v3, v2, v3
	v_and_b32_e32 v0, v2, v0
	buffer_store_dword v3, off, s[16:19], 0 offset:148
	v_and_b32_e32 v3, v2, v4
	v_add_nc_u32_e32 v4, 0x4362, v1
	buffer_store_dword v3, off, s[16:19], 0 offset:152
	v_and_b32_e32 v3, v2, v6
	buffer_store_dword v3, off, s[16:19], 0 offset:156
	v_and_b32_e32 v3, v2, v7
	buffer_store_dword v3, off, s[16:19], 0 offset:160
	buffer_store_dword v0, off, s[16:19], 0 offset:284
	buffer_store_dword v8, off, s[16:19], 0 offset:280
	v_and_b32_e32 v0, v2, v8
	v_add_nc_u32_e32 v3, 0x389a, v1
	buffer_store_dword v13, off, s[16:19], 0 offset:288
	buffer_store_dword v0, off, s[16:19], 0 offset:164
	v_add_nc_u32_e32 v0, 0x3b4c, v1
	v_and_b32_e32 v2, s7, v3
	v_add_nc_u32_e32 v3, 0x40b0, v1
	v_and_b32_e32 v0, s7, v0
	buffer_store_dword v2, off, s[16:19], 0 offset:168
	v_add_nc_u32_e32 v2, 0x3dfe, v1
	buffer_store_dword v0, off, s[16:19], 0 offset:172
	v_and_b32_e32 v0, s7, v2
	v_add_nc_u32_e32 v2, 0x48c6, v1
	s_movk_i32 s7, 0x5f00
	buffer_store_dword v0, off, s[16:19], 0 offset:176
	v_and_b32_e32 v0, s12, v3
	v_add_nc_u32_e32 v3, 0x4b78, v1
	buffer_store_dword v0, off, s[16:19], 0 offset:180
	v_and_b32_e32 v0, s12, v4
	v_add_nc_u32_e32 v4, 0x4e2a, v1
	buffer_store_dword v0, off, s[16:19], 0 offset:184
	v_add_nc_u32_e32 v0, 0x4614, v1
	v_and_b32_e32 v0, s12, v0
	s_movk_i32 s12, 0x6f00
	buffer_store_dword v0, off, s[16:19], 0 offset:188
	v_and_b32_e32 v0, s7, v2
	v_add_nc_u32_e32 v2, 0x6108, v1
	buffer_store_dword v0, off, s[16:19], 0 offset:192
	v_and_b32_e32 v0, s7, v3
	v_add_nc_u32_e32 v3, 0x63ba, v1
	buffer_store_dword v0, off, s[16:19], 0 offset:196
	v_and_b32_e32 v0, s7, v4
	v_add_nc_u32_e32 v4, 0x666c, v1
	buffer_store_dword v0, off, s[16:19], 0 offset:200
	v_add_nc_u32_e32 v0, 0x50dc, v1
	v_and_b32_e32 v0, s7, v0
	s_mul_i32 s7, s6, s13
	s_mov_b32 s13, 0
	buffer_store_dword v0, off, s[16:19], 0 offset:204
	v_and_b32_e32 v0, s12, v2
	buffer_store_dword v0, off, s[16:19], 0 offset:208
	v_and_b32_e32 v0, s12, v3
	buffer_store_dword v0, off, s[16:19], 0 offset:212
	v_and_b32_e32 v0, s12, v4
	s_mov_b32 s12, -1
	buffer_store_dword v0, off, s[16:19], 0 offset:216
	buffer_store_dword v44, off, s[16:19], 0 offset:220
	buffer_store_dword v15, off, s[16:19], 0 offset:224
	buffer_store_dword v16, off, s[16:19], 0 offset:228
	buffer_store_dword v17, off, s[16:19], 0 offset:232
	buffer_store_dword v18, off, s[16:19], 0 offset:236
	buffer_store_dword v19, off, s[16:19], 0 offset:240
	buffer_store_dword v47, off, s[16:19], 0 offset:244
	buffer_store_dword v48, off, s[16:19], 0 offset:248
	buffer_store_dword v49, off, s[16:19], 0 offset:252
	buffer_store_dword v50, off, s[16:19], 0 offset:256
	buffer_store_dword v34, off, s[16:19], 0 offset:260
	buffer_store_dword v54, off, s[16:19], 0 offset:264
	buffer_store_dword v51, off, s[16:19], 0 offset:268
	buffer_store_dword v38, off, s[16:19], 0 offset:272
BB70_1:
	s_or_b32 s14, s13, s5
	v_mov_b32_e32 v0, v53
	v_or_b32_e32 v2, s14, v52
	v_or_b32_e32 v3, s14, v15
	v_or_b32_e32 v4, s14, v88
	v_or_b32_e32 v5, s14, v24
	buffer_load_dword v6, off, s[16:19], 0 offset:136
	v_add_nc_u32_e32 v113, v2, v55
	v_or_b32_e32 v2, s14, v127
	v_add_nc_u32_e32 v115, v3, v38
	v_or_b32_e32 v3, s14, v22
	v_add_nc_u32_e32 v119, v4, v21
	buffer_load_dword v4, off, s[16:19], 0 offset:132
	v_add_nc_u32_e32 v117, v2, v34
	v_or_b32_e32 v2, s14, v26
	v_add_nc_u32_e32 v121, v3, v23
	v_or_b32_e32 v3, s14, v19
	v_mov_b32_e32 v34, v55
	v_add_nc_u32_e32 v123, v5, v25
	v_add_nc_u32_e32 v125, v2, v27
	v_or_b32_e32 v2, s14, v28
	v_add_nc_u32_e32 v45, v3, v18
	s_clause 0x2
	buffer_load_dword v3, off, s[16:19], 0 offset:4
	buffer_load_dword v5, off, s[16:19], 0 offset:208
	buffer_load_dword v8, off, s[16:19], 0 offset:140
	v_add_nc_u32_e32 v35, v2, v29
	v_or_b32_e32 v2, s14, v31
	s_clause 0x3
	buffer_load_dword v7, off, s[16:19], 0 offset:212
	buffer_load_dword v10, off, s[16:19], 0 offset:144
	buffer_load_dword v9, off, s[16:19], 0 offset:216
	buffer_load_dword v12, off, s[16:19], 0 offset:148
	v_add_nc_u32_e32 v37, v2, v30
	v_or_b32_e32 v2, s14, v32
	s_clause 0x3
	buffer_load_dword v11, off, s[16:19], 0 offset:52
	buffer_load_dword v14, off, s[16:19], 0 offset:152
	buffer_load_dword v13, off, s[16:19], 0 offset:56
	buffer_load_dword v15, off, s[16:19], 0 offset:60
	v_add_nc_u32_e32 v39, v2, v33
	v_or_b32_e32 v2, s14, v73
	s_clause 0x1
	buffer_load_dword v18, off, s[16:19], 0 offset:160
	buffer_load_dword v19, off, s[16:19], 0 offset:68
	v_ashrrev_i32_e32 v114, 31, v113
	v_ashrrev_i32_e32 v116, 31, v115
	v_add_nc_u32_e32 v41, v2, v110
	v_or_b32_e32 v2, s14, v17
	buffer_load_dword v17, off, s[16:19], 0 offset:64
	v_lshlrev_b64 v[113:114], 1, v[113:114]
	v_ashrrev_i32_e32 v118, 31, v117
	v_lshlrev_b64 v[115:116], 1, v[115:116]
	v_add_nc_u32_e32 v43, v2, v16
	v_or_b32_e32 v2, s14, v44
	buffer_load_dword v16, off, s[16:19], 0 offset:156
	v_ashrrev_i32_e32 v120, 31, v119
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v113, vcc_lo, s8, v113
	v_lshlrev_b64 v[117:118], 1, v[117:118]
	v_add_nc_u32_e32 v47, v2, v47
	v_or_b32_e32 v2, s14, v48
	v_ashrrev_i32_e32 v122, 31, v121
	v_add_co_ci_u32_e32 v114, vcc_lo, s9, v114, vcc_lo
	v_add_co_u32 v115, vcc_lo, s8, v115
	v_lshlrev_b64 v[119:120], 1, v[119:120]
	v_add_nc_u32_e32 v49, v2, v49
	v_or_b32_e32 v2, s14, v50
	v_ashrrev_i32_e32 v124, 31, v123
	v_add_co_ci_u32_e32 v116, vcc_lo, s9, v116, vcc_lo
	v_add_co_u32 v117, vcc_lo, s8, v117
	v_lshlrev_b64 v[121:122], 1, v[121:122]
	v_add_nc_u32_e32 v51, v2, v51
	v_or_b32_e32 v2, s14, v54
	v_ashrrev_i32_e32 v126, 31, v125
	v_add_co_ci_u32_e32 v118, vcc_lo, s9, v118, vcc_lo
	v_add_co_u32 v119, vcc_lo, s8, v119
	v_lshlrev_b64 v[123:124], 1, v[123:124]
	v_add_nc_u32_e32 v53, v2, v0
	buffer_load_dword v2, off, s[16:19], 0 offset:164
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_co_ci_u32_e32 v120, vcc_lo, s9, v120, vcc_lo
	v_add_co_u32 v121, vcc_lo, s8, v121
	v_lshlrev_b64 v[125:126], 1, v[125:126]
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v122, vcc_lo, s9, v122, vcc_lo
	v_add_co_u32 v123, vcc_lo, s8, v123
	v_lshlrev_b64 v[35:36], 1, v[35:36]
	v_ashrrev_i32_e32 v40, 31, v39
	v_add_co_ci_u32_e32 v124, vcc_lo, s9, v124, vcc_lo
	v_add_co_u32 v125, vcc_lo, s8, v125
	v_lshlrev_b64 v[37:38], 1, v[37:38]
	v_ashrrev_i32_e32 v42, 31, v41
	v_add_co_ci_u32_e32 v126, vcc_lo, s9, v126, vcc_lo
	v_add_co_u32 v35, vcc_lo, s8, v35
	v_lshlrev_b64 v[39:40], 1, v[39:40]
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_co_ci_u32_e32 v36, vcc_lo, s9, v36, vcc_lo
	v_add_co_u32 v37, vcc_lo, s8, v37
	v_lshlrev_b64 v[41:42], 1, v[41:42]
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_co_ci_u32_e32 v38, vcc_lo, s9, v38, vcc_lo
	v_add_co_u32 v39, vcc_lo, s8, v39
	v_lshlrev_b64 v[43:44], 1, v[43:44]
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_co_ci_u32_e32 v40, vcc_lo, s9, v40, vcc_lo
	v_add_co_u32 v41, vcc_lo, s8, v41
	v_lshlrev_b64 v[45:46], 1, v[45:46]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_ci_u32_e32 v42, vcc_lo, s9, v42, vcc_lo
	v_add_co_u32 v43, vcc_lo, s8, v43
	v_lshlrev_b64 v[47:48], 1, v[47:48]
	v_mov_b32_e32 v20, v52
	v_ashrrev_i32_e32 v52, 31, v51
	v_add_co_ci_u32_e32 v44, vcc_lo, s9, v44, vcc_lo
	v_add_co_u32 v45, vcc_lo, s8, v45
	v_lshlrev_b64 v[49:50], 1, v[49:50]
	v_ashrrev_i32_e32 v54, 31, v53
	v_add_co_ci_u32_e32 v46, vcc_lo, s9, v46, vcc_lo
	v_add_co_u32 v47, vcc_lo, s8, v47
	v_lshlrev_b64 v[51:52], 1, v[51:52]
	v_add_co_ci_u32_e32 v48, vcc_lo, s9, v48, vcc_lo
	v_add_co_u32 v49, vcc_lo, s8, v49
	v_lshlrev_b64 v[53:54], 1, v[53:54]
	v_add_co_ci_u32_e32 v50, vcc_lo, s9, v50, vcc_lo
	v_add_co_u32 v51, vcc_lo, s8, v51
	v_add_co_ci_u32_e32 v52, vcc_lo, s9, v52, vcc_lo
	v_add_co_u32 v53, vcc_lo, s8, v53
	v_add_co_ci_u32_e32 v54, vcc_lo, s9, v54, vcc_lo
	s_waitcnt vmcnt(17)
	v_or_b32_e32 v6, s14, v6
	s_waitcnt vmcnt(16)
	v_or_b32_e32 v4, s14, v4
	s_waitcnt vmcnt(14)
	v_add_nc_u32_e32 v4, v4, v5
	s_waitcnt vmcnt(13)
	v_or_b32_e32 v8, s14, v8
	s_waitcnt vmcnt(12)
	v_add_nc_u32_e32 v6, v6, v7
	s_waitcnt vmcnt(11)
	v_or_b32_e32 v10, s14, v10
	v_ashrrev_i32_e32 v5, 31, v4
	s_waitcnt vmcnt(10)
	v_add_nc_u32_e32 v8, v8, v9
	s_waitcnt vmcnt(9)
	v_or_b32_e32 v12, s14, v12
	v_ashrrev_i32_e32 v7, 31, v6
	s_waitcnt vmcnt(8)
	v_add_nc_u32_e32 v10, v10, v11
	s_waitcnt vmcnt(7)
	v_or_b32_e32 v14, s14, v14
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_ashrrev_i32_e32 v9, 31, v8
	s_waitcnt vmcnt(6)
	v_add_nc_u32_e32 v12, v12, v13
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v11, 31, v10
	s_waitcnt vmcnt(5)
	v_add_nc_u32_e32 v14, v14, v15
	s_waitcnt vmcnt(4)
	v_or_b32_e32 v18, s14, v18
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_ashrrev_i32_e32 v13, 31, v12
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_ashrrev_i32_e32 v15, 31, v14
	s_waitcnt vmcnt(3)
	v_add_nc_u32_e32 v18, v18, v19
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v16, s14, v16
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_nc_u32_e32 v16, v16, v17
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	v_ashrrev_i32_e32 v17, 31, v16
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v2, s14, v2
	v_add_nc_u32_e32 v55, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:8
	buffer_load_dword v3, off, s[16:19], 0 offset:12
	v_ashrrev_i32_e32 v56, 31, v55
	v_lshlrev_b64 v[55:56], 1, v[55:56]
	v_add_co_u32 v55, vcc_lo, s8, v55
	v_add_co_ci_u32_e32 v56, vcc_lo, s9, v56, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v57, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:16
	buffer_load_dword v3, off, s[16:19], 0 offset:20
	v_ashrrev_i32_e32 v58, 31, v57
	v_lshlrev_b64 v[57:58], 1, v[57:58]
	v_add_co_u32 v57, vcc_lo, s8, v57
	v_add_co_ci_u32_e32 v58, vcc_lo, s9, v58, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v59, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:24
	buffer_load_dword v3, off, s[16:19], 0 offset:28
	v_ashrrev_i32_e32 v60, 31, v59
	v_lshlrev_b64 v[59:60], 1, v[59:60]
	v_add_co_u32 v59, vcc_lo, s8, v59
	v_add_co_ci_u32_e32 v60, vcc_lo, s9, v60, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v61, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:72
	buffer_load_dword v3, off, s[16:19], 0 offset:168
	v_ashrrev_i32_e32 v62, 31, v61
	v_lshlrev_b64 v[61:62], 1, v[61:62]
	v_add_co_u32 v61, vcc_lo, s8, v61
	v_add_co_ci_u32_e32 v62, vcc_lo, s9, v62, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v63, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:76
	buffer_load_dword v3, off, s[16:19], 0 offset:172
	v_ashrrev_i32_e32 v64, 31, v63
	v_lshlrev_b64 v[63:64], 1, v[63:64]
	v_add_co_u32 v63, vcc_lo, s8, v63
	v_add_co_ci_u32_e32 v64, vcc_lo, s9, v64, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v65, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:80
	buffer_load_dword v3, off, s[16:19], 0 offset:176
	v_ashrrev_i32_e32 v66, 31, v65
	v_lshlrev_b64 v[65:66], 1, v[65:66]
	v_add_co_u32 v65, vcc_lo, s8, v65
	v_add_co_ci_u32_e32 v66, vcc_lo, s9, v66, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v67, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:84
	buffer_load_dword v3, off, s[16:19], 0 offset:180
	v_ashrrev_i32_e32 v68, 31, v67
	v_lshlrev_b64 v[67:68], 1, v[67:68]
	v_add_co_u32 v67, vcc_lo, s8, v67
	v_add_co_ci_u32_e32 v68, vcc_lo, s9, v68, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v69, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:88
	buffer_load_dword v3, off, s[16:19], 0 offset:184
	v_ashrrev_i32_e32 v70, 31, v69
	v_lshlrev_b64 v[69:70], 1, v[69:70]
	v_add_co_u32 v69, vcc_lo, s8, v69
	v_add_co_ci_u32_e32 v70, vcc_lo, s9, v70, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v71, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:92
	buffer_load_dword v3, off, s[16:19], 0 offset:188
	v_ashrrev_i32_e32 v72, 31, v71
	v_lshlrev_b64 v[71:72], 1, v[71:72]
	v_add_co_u32 v71, vcc_lo, s8, v71
	v_add_co_ci_u32_e32 v72, vcc_lo, s9, v72, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v74, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:96
	buffer_load_dword v3, off, s[16:19], 0 offset:192
	v_ashrrev_i32_e32 v75, 31, v74
	v_lshlrev_b64 v[74:75], 1, v[74:75]
	v_add_co_u32 v74, vcc_lo, s8, v74
	v_add_co_ci_u32_e32 v75, vcc_lo, s9, v75, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v76, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:100
	buffer_load_dword v3, off, s[16:19], 0 offset:196
	v_ashrrev_i32_e32 v77, 31, v76
	v_lshlrev_b64 v[76:77], 1, v[76:77]
	v_add_co_u32 v76, vcc_lo, s8, v76
	v_add_co_ci_u32_e32 v77, vcc_lo, s9, v77, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v78, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:104
	buffer_load_dword v3, off, s[16:19], 0 offset:200
	v_ashrrev_i32_e32 v79, 31, v78
	v_lshlrev_b64 v[78:79], 1, v[78:79]
	v_add_co_u32 v78, vcc_lo, s8, v78
	v_add_co_ci_u32_e32 v79, vcc_lo, s9, v79, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v80, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:108
	buffer_load_dword v3, off, s[16:19], 0 offset:204
	v_ashrrev_i32_e32 v81, 31, v80
	v_lshlrev_b64 v[80:81], 1, v[80:81]
	v_add_co_u32 v80, vcc_lo, s8, v80
	v_add_co_ci_u32_e32 v81, vcc_lo, s9, v81, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v82, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:112
	buffer_load_dword v3, off, s[16:19], 0 offset:32
	v_ashrrev_i32_e32 v83, 31, v82
	v_lshlrev_b64 v[82:83], 1, v[82:83]
	v_add_co_u32 v82, vcc_lo, s8, v82
	v_add_co_ci_u32_e32 v83, vcc_lo, s9, v83, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v84, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:116
	buffer_load_dword v3, off, s[16:19], 0 offset:36
	v_ashrrev_i32_e32 v85, 31, v84
	v_lshlrev_b64 v[84:85], 1, v[84:85]
	v_add_co_u32 v84, vcc_lo, s8, v84
	v_add_co_ci_u32_e32 v85, vcc_lo, s9, v85, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v86, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:120
	buffer_load_dword v3, off, s[16:19], 0 offset:40
	v_ashrrev_i32_e32 v87, 31, v86
	v_lshlrev_b64 v[86:87], 1, v[86:87]
	v_add_co_u32 v86, vcc_lo, s8, v86
	v_add_co_ci_u32_e32 v87, vcc_lo, s9, v87, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v105, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:124
	buffer_load_dword v3, off, s[16:19], 0 offset:44
	v_ashrrev_i32_e32 v106, 31, v105
	v_lshlrev_b64 v[105:106], 1, v[105:106]
	v_add_co_u32 v105, vcc_lo, s8, v105
	v_add_co_ci_u32_e32 v106, vcc_lo, s9, v106, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v107, v2, v3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:128
	buffer_load_dword v3, off, s[16:19], 0 offset:48
	v_ashrrev_i32_e32 v108, 31, v107
	v_lshlrev_b64 v[107:108], 1, v[107:108]
	v_add_co_u32 v107, vcc_lo, s8, v107
	v_add_co_ci_u32_e32 v108, vcc_lo, s9, v108, vcc_lo
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v2, v2, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s8, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo
	v_add_co_u32 v6, vcc_lo, s8, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s9, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s8, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s9, v11, vcc_lo
	v_add_co_u32 v12, vcc_lo, s8, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s9, v13, vcc_lo
	v_add_co_u32 v14, vcc_lo, s8, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s9, v15, vcc_lo
	v_add_co_u32 v16, vcc_lo, s8, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s9, v17, vcc_lo
	v_add_co_u32 v18, vcc_lo, s8, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s9, v19, vcc_lo
	s_clause 0x2b
	global_load_ushort v113, v[113:114], off
	global_load_ushort v114, v[115:116], off
	global_load_ushort v115, v[117:118], off
	global_load_ushort v116, v[119:120], off
	global_load_ushort v117, v[121:122], off
	global_load_ushort v118, v[123:124], off
	global_load_ushort v119, v[125:126], off
	global_load_ushort v35, v[35:36], off
	global_load_ushort v36, v[37:38], off
	global_load_ushort v37, v[39:40], off
	global_load_ushort v38, v[41:42], off
	global_load_ushort v39, v[43:44], off
	global_load_ushort v40, v[45:46], off
	global_load_ushort v41, v[47:48], off
	global_load_ushort v42, v[49:50], off
	global_load_ushort v43, v[51:52], off
	global_load_ushort v44, v[53:54], off
	global_load_ushort v45, v[55:56], off
	global_load_ushort v46, v[57:58], off
	global_load_ushort v47, v[59:60], off
	global_load_ushort v48, v[61:62], off
	global_load_ushort v49, v[63:64], off
	global_load_ushort v50, v[65:66], off
	global_load_ushort v51, v[67:68], off
	global_load_ushort v52, v[69:70], off
	global_load_ushort v53, v[71:72], off
	global_load_ushort v54, v[74:75], off
	global_load_ushort v55, v[76:77], off
	global_load_ushort v56, v[78:79], off
	global_load_ushort v57, v[80:81], off
	global_load_ushort v58, v[82:83], off
	global_load_ushort v59, v[84:85], off
	global_load_ushort v60, v[86:87], off
	global_load_ushort v61, v[105:106], off
	global_load_ushort v62, v[107:108], off
	global_load_ushort v2, v[2:3], off
	global_load_ushort v3, v[4:5], off
	global_load_ushort v4, v[6:7], off
	global_load_ushort v5, v[8:9], off
	global_load_ushort v6, v[10:11], off
	global_load_ushort v7, v[12:13], off
	global_load_ushort v8, v[14:15], off
	global_load_ushort v9, v[16:17], off
	global_load_ushort v10, v[18:19], off
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	s_barrier 
	ds_write_b16 v111, v113
	ds_write_b16 v111, v114 offset:690
	ds_write_b16 v111, v115 offset:1380
	ds_write_b16 v111, v116 offset:2070
	ds_write_b16 v111, v117 offset:2760
	ds_write_b16 v111, v118 offset:3450
	ds_write_b16 v111, v119 offset:4140
	ds_write_b16 v111, v35 offset:4830
	ds_write_b16 v111, v36 offset:5520
	ds_write_b16 v111, v37 offset:6210
	ds_write_b16 v111, v38 offset:6900
	ds_write_b16 v111, v39 offset:7590
	ds_write_b16 v111, v40 offset:8280
	ds_write_b16 v111, v41 offset:8970
	ds_write_b16 v111, v42 offset:9660
	ds_write_b16 v111, v43 offset:10350
	ds_write_b16 v111, v44 offset:11040
	ds_write_b16 v111, v45 offset:11730
	ds_write_b16 v111, v46 offset:12420
	ds_write_b16 v111, v47 offset:13110
	ds_write_b16 v111, v48 offset:13800
	ds_write_b16 v111, v49 offset:14490
	ds_write_b16 v111, v50 offset:15180
	ds_write_b16 v111, v51 offset:15870
	ds_write_b16 v111, v52 offset:16560
	ds_write_b16 v111, v53 offset:17250
	ds_write_b16 v111, v54 offset:17940
	ds_write_b16 v111, v55 offset:18630
	ds_write_b16 v111, v56 offset:19320
	ds_write_b16 v111, v57 offset:20010
	ds_write_b16 v111, v58 offset:20700
	ds_write_b16 v111, v59 offset:21390
	ds_write_b16 v111, v60 offset:22080
	ds_write_b16 v111, v61 offset:22770
	ds_write_b16 v111, v62 offset:23460
	ds_write_b16 v111, v2 offset:24150
	ds_write_b16 v111, v3 offset:24840
	ds_write_b16 v111, v4 offset:25530
	ds_write_b16 v111, v5 offset:26220
	ds_write_b16 v111, v6 offset:26910
	ds_write_b16 v111, v7 offset:27600
	ds_write_b16 v111, v8 offset:28290
	ds_write_b16 v111, v9 offset:28980
	ds_write_b16 v111, v10 offset:29670
	s_and_saveexec_b32 s15, s0
	s_cbranch_execz BB70_3
	s_clause 0x1
	buffer_load_dword v2, off, s[16:19], 0 offset:284
	buffer_load_dword v3, off, s[16:19], 0 offset:276
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v2, s14, v2
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v2, v2, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	global_load_ushort v2, v[2:3], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v111, v2 offset:30360
BB70_3:
	s_or_b32 exec_lo, exec_lo, s15
	s_clause 0x1
	buffer_load_dword v46, off, s[16:19], 0 offset:224
	buffer_load_dword v57, off, s[16:19], 0 offset:272
	v_mov_b32_e32 v56, v34
	buffer_load_dword v34, off, s[16:19], 0 offset:260
	v_mov_b32_e32 v55, v20
	s_or_b32 s13, s13, s7
	v_or_b32_e32 v5, s13, v127
	v_or_b32_e32 v7, s13, v88
	v_or_b32_e32 v2, s13, v55
	v_or_b32_e32 v9, s13, v22
	v_or_b32_e32 v12, s13, v24
	v_or_b32_e32 v14, s13, v26
	v_add_nc_u32_e32 v8, v7, v21
	v_add_nc_u32_e32 v2, v2, v56
	v_add_nc_u32_e32 v10, v9, v23
	v_add_nc_u32_e32 v12, v12, v25
	v_or_b32_e32 v16, s13, v28
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_nc_u32_e32 v14, v14, v27
	v_ashrrev_i32_e32 v11, 31, v10
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_nc_u32_e32 v16, v16, v29
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_ashrrev_i32_e32 v15, 31, v14
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_ashrrev_i32_e32 v17, 31, v16
	v_or_b32_e32 v35, s13, v32
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_or_b32_e32 v37, s13, v73
	v_or_b32_e32 v18, s13, v31
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_add_nc_u32_e32 v35, v35, v33
	v_add_nc_u32_e32 v18, v18, v30
	v_ashrrev_i32_e32 v36, 31, v35
	v_ashrrev_i32_e32 v19, 31, v18
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	s_waitcnt vmcnt(2)
	v_or_b32_e32 v3, s13, v46
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v6, v5, v34
	v_add_nc_u32_e32 v4, v3, v57
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_add_co_u32 v2, vcc_lo, s10, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s11, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s10, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s11, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v16, vcc_lo, s10, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s11, v17, vcc_lo
	s_clause 0x7
	global_load_ushort v38, v[2:3], off
	global_load_ushort v39, v[4:5], off
	global_load_ushort v40, v[6:7], off
	global_load_ushort v41, v[8:9], off
	global_load_ushort v42, v[10:11], off
	global_load_ushort v43, v[12:13], off
	global_load_ushort v44, v[14:15], off
	global_load_ushort v45, v[16:17], off
	v_add_nc_u32_e32 v2, v37, v110
	s_clause 0x1
	buffer_load_dword v37, off, s[16:19], 0 offset:232
	buffer_load_dword v48, off, s[16:19], 0 offset:240
	v_lshlrev_b64 v[6:7], 1, v[35:36]
	s_clause 0x8
	buffer_load_dword v36, off, s[16:19], 0 offset:228
	buffer_load_dword v35, off, s[16:19], 0 offset:220
	buffer_load_dword v47, off, s[16:19], 0 offset:236
	buffer_load_dword v50, off, s[16:19], 0 offset:248
	buffer_load_dword v49, off, s[16:19], 0 offset:244
	buffer_load_dword v52, off, s[16:19], 0 offset:256
	buffer_load_dword v51, off, s[16:19], 0 offset:252
	buffer_load_dword v54, off, s[16:19], 0 offset:264
	buffer_load_dword v53, off, s[16:19], 0 offset:268
	v_ashrrev_i32_e32 v3, 31, v2
	v_add_co_u32 v4, vcc_lo, s10, v18
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v19, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v2, vcc_lo, s10, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s11, v3, vcc_lo
	s_waitcnt vmcnt(10)
	v_or_b32_e32 v8, s13, v37
	s_waitcnt vmcnt(9)
	v_or_b32_e32 v10, s13, v48
	s_waitcnt vmcnt(7)
	v_or_b32_e32 v11, s13, v35
	v_add_nc_u32_e32 v8, v8, v36
	s_waitcnt vmcnt(6)
	v_add_nc_u32_e32 v10, v10, v47
	s_waitcnt vmcnt(5)
	v_or_b32_e32 v14, s13, v50
	s_waitcnt vmcnt(3)
	v_or_b32_e32 v16, s13, v52
	v_add_nc_u32_e32 v12, v11, v49
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	s_waitcnt vmcnt(2)
	v_add_nc_u32_e32 v14, v14, v51
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v18, s13, v54
	v_ashrrev_i32_e32 v13, 31, v12
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v16, v16, v53
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_nc_u32_e32 v18, v18, v0
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_add_co_u32 v8, vcc_lo, s10, v8
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_co_ci_u32_e32 v9, vcc_lo, s11, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_ashrrev_i32_e32 v19, 31, v18
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_lshlrev_b64 v[16:17], 1, v[16:17]
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_lshlrev_b64 v[18:19], 1, v[18:19]
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v16, vcc_lo, s10, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, s11, v17, vcc_lo
	v_add_co_u32 v18, vcc_lo, s10, v18
	v_add_co_ci_u32_e32 v19, vcc_lo, s11, v19, vcc_lo
	s_clause 0x8
	global_load_ushort v4, v[4:5], off
	global_load_ushort v5, v[6:7], off
	global_load_ushort v2, v[2:3], off
	global_load_ushort v3, v[8:9], off
	global_load_ushort v6, v[10:11], off
	global_load_ushort v7, v[12:13], off
	global_load_ushort v8, v[14:15], off
	global_load_ushort v9, v[16:17], off
	global_load_ushort v10, v[18:19], off
	ds_write_b16 v1, v38
	ds_write_b16 v1, v39 offset:690
	ds_write_b16 v1, v40 offset:1380
	ds_write_b16 v1, v41 offset:2070
	ds_write_b16 v1, v42 offset:2760
	ds_write_b16 v1, v43 offset:3450
	ds_write_b16 v1, v44 offset:4140
	ds_write_b16 v1, v45 offset:4830
	s_waitcnt vmcnt(8)
	ds_write_b16 v1, v4 offset:5520
	s_waitcnt vmcnt(7)
	ds_write_b16 v1, v5 offset:6210
	s_waitcnt vmcnt(6)
	ds_write_b16 v1, v2 offset:6900
	s_waitcnt vmcnt(5)
	ds_write_b16 v1, v3 offset:7590
	s_waitcnt vmcnt(4)
	ds_write_b16 v1, v6 offset:8280
	s_waitcnt vmcnt(3)
	ds_write_b16 v1, v7 offset:8970
	s_waitcnt vmcnt(2)
	ds_write_b16 v1, v8 offset:9660
	s_waitcnt vmcnt(1)
	ds_write_b16 v1, v9 offset:10350
	s_waitcnt vmcnt(0)
	ds_write_b16 v1, v10 offset:11040
	s_mov_b32 s14, exec_lo
	v_mov_b32_e32 v18, v47
	v_mov_b32_e32 v19, v48
	v_mov_b32_e32 v47, v49
	v_mov_b32_e32 v49, v51
	v_mov_b32_e32 v48, v50
	v_mov_b32_e32 v50, v52
	v_mov_b32_e32 v51, v53
	v_mov_b32_e32 v15, v46
	v_mov_b32_e32 v38, v57
	v_mov_b32_e32 v16, v36
	v_mov_b32_e32 v17, v37
	v_mov_b32_e32 v44, v35
	v_mov_b32_e32 v53, v0
	v_mov_b32_e32 v52, v20
	v_mov_b32_e32 v55, v56
	s_and_b32 s15, s14, s1
	s_mov_b32 exec_lo, s15
	s_cbranch_execz BB70_5
	s_clause 0x1
	buffer_load_dword v0, off, s[16:19], 0 offset:4
	buffer_load_dword v2, off, s[16:19], 0 offset:280
	s_waitcnt vmcnt(0)
	v_add3_u32 v2, s13, v2, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_u32 v2, vcc_lo, s10, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s11, v3, vcc_lo
	global_load_ushort v2, v[2:3], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v1, v2 offset:11730
BB70_5:
	s_or_b32 exec_lo, exec_lo, s14
	s_xor_b32 s12, s12, -1
	s_mov_b32 s13, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB70_6:
	v_add_nc_u32_e32 v2, s13, v109
	v_add_nc_u32_e32 v10, s13, v112
	s_add_i32 s13, s13, 4
	s_cmpk_lg_i32 s13, 0x100
	ds_read2st64_b32 v[2:3], v2 offset1:23
	ds_read2st64_b32 v[4:5], v10 offset1:1
	ds_read2st64_b32 v[6:7], v10 offset0:2 offset1:3
	ds_read2st64_b32 v[8:9], v10 offset0:4 offset1:5
	ds_read2st64_b32 v[10:11], v10 offset0:6 offset1:7
	s_waitcnt lgkmcnt(4)
	v_lshrrev_b32_e32 v12, 16, v2
	v_lshrrev_b32_e32 v13, 16, v3
	s_waitcnt lgkmcnt(3)
	v_lshrrev_b32_e32 v14, 16, v4
	v_fmac_f16_e32 v89, v4, v2
	v_fmac_f16_e32 v90, v4, v3
	v_lshrrev_b32_e32 v4, 16, v5
	v_fmac_f16_e32 v91, v5, v2
	v_fmac_f16_e32 v92, v5, v3
	s_waitcnt lgkmcnt(2)
	v_lshrrev_b32_e32 v5, 16, v6
	v_fmac_f16_e32 v93, v6, v2
	v_fmac_f16_e32 v94, v6, v3
	v_lshrrev_b32_e32 v6, 16, v7
	v_fmac_f16_e32 v95, v7, v2
	v_fmac_f16_e32 v96, v7, v3
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v7, 16, v8
	v_fmac_f16_e32 v97, v8, v2
	v_fmac_f16_e32 v98, v8, v3
	v_lshrrev_b32_e32 v8, 16, v9
	v_fmac_f16_e32 v99, v9, v2
	v_fmac_f16_e32 v100, v9, v3
	s_waitcnt lgkmcnt(0)
	v_lshrrev_b32_e32 v9, 16, v10
	v_fmac_f16_e32 v101, v10, v2
	v_fmac_f16_e32 v102, v10, v3
	v_lshrrev_b32_e32 v10, 16, v11
	v_fmac_f16_e32 v103, v11, v2
	v_fmac_f16_e32 v104, v11, v3
	v_fmac_f16_e32 v89, v14, v12
	v_fmac_f16_e32 v90, v14, v13
	v_fmac_f16_e32 v91, v4, v12
	v_fmac_f16_e32 v92, v4, v13
	v_fmac_f16_e32 v93, v5, v12
	v_fmac_f16_e32 v94, v5, v13
	v_fmac_f16_e32 v95, v6, v12
	v_fmac_f16_e32 v96, v6, v13
	v_fmac_f16_e32 v97, v7, v12
	v_fmac_f16_e32 v98, v7, v13
	v_fmac_f16_e32 v99, v8, v12
	v_fmac_f16_e32 v100, v8, v13
	v_fmac_f16_e32 v101, v9, v12
	v_fmac_f16_e32 v102, v9, v13
	v_fmac_f16_e32 v103, v10, v12
	v_fmac_f16_e32 v104, v10, v13
	s_cbranch_scc1 BB70_6
	s_and_b32 vcc_lo, exec_lo, s12
	s_movk_i32 s13, 0x80
	s_mov_b32 s12, 0
	s_cbranch_vccz BB70_1
	s_clause 0x1
	buffer_load_dword v0, off, s[16:19], 0 offset:288
	buffer_load_dword v1, off, s[16:19], 0 offset:292
	s_mul_i32 s6, s6, 46
	s_mulk_i32 s4, 0x2b20
	s_waitcnt vmcnt(1)
	v_mul_lo_u32 v0, 0x2e0, v0
	s_waitcnt vmcnt(0)
	v_add_nc_u32_e32 v0, v0, v1
	v_add3_u32 v0, s6, s4, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v89, off
	global_store_short v[0:1], v90, off offset:46
	global_store_short v[0:1], v91, off offset:184
	global_store_short v[0:1], v92, off offset:230
	global_store_short v[0:1], v93, off offset:368
	global_store_short v[0:1], v94, off offset:414
	global_store_short v[0:1], v95, off offset:552
	global_store_short v[0:1], v96, off offset:598
	global_store_short v[0:1], v97, off offset:736
	global_store_short v[0:1], v98, off offset:782
	global_store_short v[0:1], v99, off offset:920
	global_store_short v[0:1], v100, off offset:966
	global_store_short v[0:1], v101, off offset:1104
	global_store_short v[0:1], v102, off offset:1150
	global_store_short v[0:1], v103, off offset:1288
	global_store_short v[0:1], v104, off offset:1334
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_6_kernel0
		.amdhsa_group_segment_fixed_size 42496
		.amdhsa_private_segment_fixed_size 296
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 128
		.amdhsa_next_free_sgpr 20
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end70:
	.size	tvmgen_default_fused_nn_dense_6_kernel0, .Lfunc_end70-tvmgen_default_fused_nn_dense_6_kernel0

	.globl	tvmgen_default_fused_nn_dense_7_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_7_kernel0,@function
tvmgen_default_fused_nn_dense_7_kernel0:
	v_lshlrev_b32_e32 v2, 4, v0
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_mul_i32 s4, s6, 0xc00
	s_movk_i32 s10, 0x7f00
	v_or_b32_e32 v18, s4, v0
	v_add_nc_u32_e32 v3, 0x180, v2
	v_add_nc_u32_e32 v5, 0x280, v2
	v_add_nc_u32_e32 v6, 0x380, v2
	s_ashr_i32 s4, s4, 31
	v_add_nc_u32_e32 v7, 0x780, v2
	v_and_b32_e32 v8, s10, v3
	v_add_nc_u32_e32 v3, 0x480, v2
	v_mov_b32_e32 v19, s4
	v_and_b32_e32 v9, s10, v5
	v_and_b32_e32 v10, s10, v6
	v_add_nc_u32_e32 v5, 0x580, v2
	v_and_b32_e32 v11, s10, v3
	v_add_nc_u32_e32 v6, 0x680, v2
	v_mov_b32_e32 v4, 0x7f00
	v_add_nc_u32_e32 v3, 0x880, v2
	v_lshlrev_b64 v[19:20], 1, v[18:19]
	v_and_b32_e32 v12, s10, v5
	v_and_b32_e32 v13, s10, v6
	v_and_b32_e32 v14, s10, v7
	v_and_b32_e32 v15, v4, v3
	v_add_nc_u32_e32 v5, 0x980, v2
	v_add_nc_u32_e32 v6, 0xa80, v2
	v_add_nc_u32_e32 v7, 0xb80, v2
	v_lshrrev_b32_e32 v3, 2, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v19, vcc_lo, v19, s2
	v_and_b32_e32 v16, v4, v5
	v_and_b32_e32 v17, v4, v6
	v_add_co_ci_u32_e32 v20, vcc_lo, s3, v20, vcc_lo
	v_and_b32_e32 v2, 3, v0
	v_and_b32_e32 v21, v4, v7
	v_mul_u32_u24_e32 v7, 48, v3
	s_movk_i32 s7, 0x80
	v_add_co_u32 v19, vcc_lo, 0x1600, v19
	v_lshl_add_u32 v1, v0, 1, s7
	v_lshlrev_b32_e32 v4, 2, v2
	v_lshlrev_b32_e32 v5, 8, v3
	v_lshlrev_b32_e32 v0, 3, v0
	v_lshlrev_b32_e32 v6, 5, v2
	v_lshl_add_u32 v7, v7, 1, s7
	v_add3_u32 v8, v18, v8, 8
	v_add3_u32 v9, v18, v9, 8
	v_add3_u32 v10, v18, v10, 8
	v_add3_u32 v11, v18, v11, 8
	v_add3_u32 v12, v18, v12, 8
	v_add3_u32 v13, v18, v13, 8
	v_add3_u32 v14, v18, v14, 8
	v_add3_u32 v15, v18, v15, 8
	v_add3_u32 v16, v18, v16, 8
	v_add3_u32 v17, v18, v17, 8
	v_add3_u32 v18, v18, v21, 8
	v_add_co_ci_u32_e32 v20, vcc_lo, 0, v20, vcc_lo
	v_mov_b32_e32 v22, 0
	v_mov_b32_e32 v21, 0xffff
	v_mov_b32_e32 v23, 0
	v_mov_b32_e32 v24, 0
	s_mov_b32 s4, 0
BB71_1:
	v_add_nc_u32_e32 v27, s4, v8
	v_add_nc_u32_e32 v29, s4, v9
	v_add_nc_u32_e32 v31, s4, v10
	v_add_co_u32 v25, vcc_lo, 0xfffff000, v19
	v_add_nc_u32_e32 v35, s4, v11
	v_ashrrev_i32_e32 v28, 31, v27
	v_ashrrev_i32_e32 v30, 31, v29
	v_ashrrev_i32_e32 v32, 31, v31
	v_add_co_ci_u32_e32 v26, vcc_lo, -1, v20, vcc_lo
	v_add_co_u32 v33, vcc_lo, 0xfffff800, v19
	v_lshlrev_b64 v[27:28], 1, v[27:28]
	v_add_nc_u32_e32 v37, s4, v12
	v_lshlrev_b64 v[29:30], 1, v[29:30]
	v_add_co_ci_u32_e32 v34, vcc_lo, -1, v20, vcc_lo
	v_ashrrev_i32_e32 v36, 31, v35
	v_add_nc_u32_e32 v39, s4, v13
	v_add_co_u32 v27, vcc_lo, s2, v27
	v_lshlrev_b64 v[31:32], 1, v[31:32]
	v_ashrrev_i32_e32 v38, 31, v37
	v_add_co_ci_u32_e32 v28, vcc_lo, s3, v28, vcc_lo
	v_add_nc_u32_e32 v41, s4, v14
	v_add_co_u32 v29, vcc_lo, s2, v29
	s_barrier 
	s_clause 0xc
	global_load_ushort v51, v[19:20], off offset:-2048
	global_load_ushort v52, v[19:20], off offset:-1536
	global_load_ushort v53, v[19:20], off offset:-1024
	global_load_ushort v54, v[19:20], off offset:-512
	global_load_ushort v55, v[19:20], off
	global_load_ushort v57, v[25:26], off offset:-1536
	global_load_ushort v58, v[25:26], off offset:-1520
	global_load_ushort v59, v[25:26], off offset:-1024
	global_load_ushort v60, v[25:26], off offset:-512
	global_load_ushort v61, v[25:26], off
	global_load_ushort v62, v[33:34], off offset:-1536
	global_load_ushort v63, v[33:34], off offset:-1024
	global_load_ushort v64, v[33:34], off offset:-512
	v_lshlrev_b64 v[33:34], 1, v[35:36]
	v_ashrrev_i32_e32 v40, 31, v39
	v_add_co_ci_u32_e32 v30, vcc_lo, s3, v30, vcc_lo
	v_add_nc_u32_e32 v43, s4, v15
	v_add_co_u32 v31, vcc_lo, s2, v31
	v_lshlrev_b64 v[35:36], 1, v[37:38]
	v_ashrrev_i32_e32 v42, 31, v41
	v_add_co_ci_u32_e32 v32, vcc_lo, s3, v32, vcc_lo
	v_add_nc_u32_e32 v45, s4, v16
	v_add_co_u32 v33, vcc_lo, s2, v33
	v_lshlrev_b64 v[37:38], 1, v[39:40]
	v_ashrrev_i32_e32 v44, 31, v43
	v_add_co_ci_u32_e32 v34, vcc_lo, s3, v34, vcc_lo
	v_add_nc_u32_e32 v47, s4, v17
	v_add_co_u32 v35, vcc_lo, s2, v35
	v_add_nc_u32_e32 v56, s4, v5
	v_lshlrev_b64 v[39:40], 1, v[41:42]
	v_ashrrev_i32_e32 v46, 31, v45
	v_add_nc_u32_e32 v49, s4, v18
	v_add_co_ci_u32_e32 v36, vcc_lo, s3, v36, vcc_lo
	v_add_co_u32 v37, vcc_lo, s2, v37
	v_lshlrev_b64 v[41:42], 1, v[43:44]
	v_ashrrev_i32_e32 v48, 31, v47
	v_add_co_ci_u32_e32 v38, vcc_lo, s3, v38, vcc_lo
	v_or_b32_e32 v25, v56, v4
	v_add_co_u32 v39, vcc_lo, s2, v39
	v_lshlrev_b64 v[43:44], 1, v[45:46]
	v_ashrrev_i32_e32 v50, 31, v49
	v_add_co_ci_u32_e32 v40, vcc_lo, s3, v40, vcc_lo
	v_add_co_u32 v41, vcc_lo, s2, v41
	v_lshlrev_b64 v[45:46], 1, v[47:48]
	v_ashrrev_i32_e32 v26, 31, v25
	v_add_co_ci_u32_e32 v42, vcc_lo, s3, v42, vcc_lo
	v_lshlrev_b64 v[47:48], 1, v[49:50]
	v_add_co_u32 v43, vcc_lo, s2, v43
	s_clause 0x2
	global_load_ushort v49, v[27:28], off
	global_load_ushort v29, v[29:30], off
	global_load_ushort v30, v[31:32], off
	v_add_co_ci_u32_e32 v44, vcc_lo, s3, v44, vcc_lo
	v_add_co_u32 v45, vcc_lo, s2, v45
	v_lshlrev_b64 v[25:26], 1, v[25:26]
	v_add_co_ci_u32_e32 v46, vcc_lo, s3, v46, vcc_lo
	v_add_co_u32 v47, vcc_lo, s2, v47
	s_add_i32 s4, s4, 16
	v_add_co_ci_u32_e32 v48, vcc_lo, s3, v48, vcc_lo
	s_cmpk_eq_i32 s4, 0x100
	v_add_co_u32 v25, vcc_lo, s8, v25
	v_add_co_ci_u32_e32 v26, vcc_lo, s9, v26, vcc_lo
	s_clause 0x7
	global_load_ushort v31, v[33:34], off
	global_load_ushort v32, v[35:36], off
	global_load_ushort v33, v[37:38], off
	global_load_ushort v34, v[39:40], off
	global_load_ushort v35, v[41:42], off
	global_load_ushort v36, v[43:44], off
	global_load_ushort v37, v[45:46], off
	global_load_ushort v38, v[47:48], off
	s_clause 0x1
	global_load_dwordx2 v[27:28], v[25:26], off
	global_load_dwordx2 v[25:26], v[25:26], off offset:1024
	v_add_co_u32 v19, vcc_lo, v19, 32
	v_add_co_ci_u32_e32 v20, vcc_lo, 0, v20, vcc_lo
	s_waitcnt vmcnt(25)
	ds_write_b16 v1, v51 offset:224
	s_waitcnt vmcnt(24)
	ds_write_b16 v1, v52 offset:256
	s_waitcnt vmcnt(23)
	ds_write_b16 v1, v53 offset:288
	s_waitcnt vmcnt(22)
	ds_write_b16 v1, v54 offset:320
	s_waitcnt vmcnt(21)
	ds_write_b16 v1, v55 offset:352
	s_waitcnt vmcnt(20)
	ds_write_b16 v1, v57
	s_waitcnt vmcnt(19)
	ds_write_b16 v1, v58 offset:16
	s_waitcnt vmcnt(18)
	ds_write_b16 v1, v59 offset:32
	s_waitcnt vmcnt(17)
	ds_write_b16 v1, v60 offset:64
	s_waitcnt vmcnt(16)
	ds_write_b16 v1, v61 offset:96
	s_waitcnt vmcnt(15)
	ds_write_b16 v1, v62 offset:128
	s_waitcnt vmcnt(14)
	ds_write_b16 v1, v63 offset:160
	s_waitcnt vmcnt(13)
	ds_write_b16 v1, v64 offset:192
	s_waitcnt vmcnt(12)
	ds_write_b16 v1, v49 offset:48
	s_waitcnt vmcnt(11)
	ds_write_b16 v1, v29 offset:80
	s_waitcnt vmcnt(10)
	ds_write_b16 v1, v30 offset:112
	s_waitcnt vmcnt(9)
	ds_write_b16 v1, v31 offset:144
	s_waitcnt vmcnt(8)
	ds_write_b16 v1, v32 offset:176
	s_waitcnt vmcnt(7)
	ds_write_b16 v1, v33 offset:208
	s_waitcnt vmcnt(6)
	ds_write_b16 v1, v34 offset:240
	s_waitcnt vmcnt(5)
	ds_write_b16 v1, v35 offset:272
	s_waitcnt vmcnt(4)
	ds_write_b16 v1, v36 offset:304
	s_waitcnt vmcnt(3)
	ds_write_b16 v1, v37 offset:336
	s_waitcnt vmcnt(2)
	ds_write_b16 v1, v38 offset:368
	s_waitcnt vmcnt(0)
	ds_write2_b64 v0, v[27:28], v[25:26] offset1:8
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b128 v[25:28], v7
	ds_read_b128 v[29:32], v7 offset:32
	ds_read_b128 v[33:36], v7 offset:256
	ds_read_b128 v[37:40], v7 offset:16
	ds_read_b128 v[41:44], v7 offset:224
	ds_read_b128 v[45:48], v7 offset:48
	ds_read_b128 v[49:52], v7 offset:240
	ds_read_b128 v[53:56], v7 offset:272
	ds_read_b128 v[57:60], v7 offset:192
	ds_read_b128 v[61:64], v7 offset:208
	ds_read_b128 v[65:68], v7 offset:64
	ds_read_b128 v[69:72], v7 offset:80
	s_waitcnt lgkmcnt(11)
	v_lshrrev_b32_e32 v73, 16, v25
	s_waitcnt lgkmcnt(10)
	v_and_b32_e32 v76, v21, v29
	v_and_b32_e32 v77, v21, v30
	v_and_b32_e32 v78, v21, v31
	v_and_b32_e32 v79, v21, v32
	v_lshrrev_b32_e32 v74, 16, v26
	v_lshl_or_b32 v76, v25, 16, v76
	v_lshl_or_b32 v77, v26, 16, v77
	v_lshrrev_b32_e32 v75, 16, v27
	v_lshl_or_b32 v78, v27, 16, v78
	v_lshrrev_b32_e32 v80, 16, v28
	v_lshl_or_b32 v79, v28, 16, v79
	s_waitcnt lgkmcnt(7)
	v_lshrrev_b32_e32 v85, 16, v41
	v_and_b32_sdwa v28, v21, v33 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(1)
	v_lshrrev_b32_e32 v93, 16, v65
	v_and_b32_sdwa v26, v21, v57 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v25, 16, v66
	v_and_b32_sdwa v27, v21, v58 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v85, v85, 16, v28
	v_and_b32_e32 v81, v21, v33
	v_lshl_or_b32 v93, v93, 16, v26
	v_and_b32_e32 v89, v21, v57
	v_lshl_or_b32 v97, v25, 16, v27
	ds_read_b128 v[25:28], v6
	v_lshl_or_b32 v41, v41, 16, v81
	v_and_b32_sdwa v29, v21, v29 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v65, v65, 16, v89
	v_and_b32_e32 v90, v21, v58
	v_and_b32_e32 v82, v21, v34
	v_lshrrev_b32_e32 v86, 16, v42
	v_lshl_or_b32 v73, v73, 16, v29
	v_and_b32_sdwa v33, v21, v34 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v30, v21, v30 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshl_or_b32 v42, v42, 16, v82
	v_lshl_or_b32 v66, v66, 16, v90
	v_and_b32_e32 v83, v21, v35
	v_and_b32_e32 v91, v21, v59
	v_lshl_or_b32 v74, v74, 16, v30
	v_lshl_or_b32 v33, v86, 16, v33
	v_lshrrev_b32_e32 v87, 16, v43
	v_and_b32_sdwa v34, v21, v35 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v31, v21, v31 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v32, v21, v32 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v24, v76, v25, v24 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v23, v65, v25, v23 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v22, v41, v25, v22 op_sel_hi:[1,0,1]
	v_and_b32_sdwa v57, v21, v59 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v82, 16, v67
	v_pk_fma_f16 v24, v73, v25, v24 op_sel:[0,1,0]
	v_pk_fma_f16 v23, v93, v25, v23 op_sel:[0,1,0]
	v_pk_fma_f16 v22, v85, v25, v22 op_sel:[0,1,0]
	v_lshl_or_b32 v43, v43, 16, v83
	v_lshl_or_b32 v67, v67, 16, v91
	v_pk_fma_f16 v24, v77, v26, v24 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v23, v66, v26, v23 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v22, v42, v26, v22 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v57, v82, 16, v57
	v_and_b32_e32 v84, v21, v36
	v_pk_fma_f16 v24, v74, v26, v24 op_sel:[0,1,0]
	v_pk_fma_f16 v23, v97, v26, v23 op_sel:[0,1,0]
	v_pk_fma_f16 v22, v33, v26, v22 op_sel:[0,1,0]
	v_and_b32_e32 v92, v21, v60
	v_lshl_or_b32 v75, v75, 16, v31
	v_pk_fma_f16 v24, v78, v27, v24 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v23, v67, v27, v23 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v80, v80, 16, v32
	v_lshl_or_b32 v34, v87, 16, v34
	v_pk_fma_f16 v22, v43, v27, v22 op_sel_hi:[1,0,1]
	ds_read_b128 v[29:32], v6 offset:16
	v_pk_fma_f16 v24, v75, v27, v24 op_sel:[0,1,0]
	v_lshrrev_b32_e32 v88, 16, v44
	v_and_b32_sdwa v35, v21, v36 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v58, v21, v60 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v83, 16, v68
	v_lshl_or_b32 v44, v44, 16, v84
	v_pk_fma_f16 v22, v34, v27, v22 op_sel:[0,1,0]
	v_lshl_or_b32 v68, v68, 16, v92
	v_pk_fma_f16 v23, v57, v27, v23 op_sel:[0,1,0]
	v_and_b32_e32 v36, v21, v45
	v_and_b32_e32 v81, v21, v48
	v_pk_fma_f16 v24, v79, v28, v24 op_sel_hi:[1,0,1]
	v_and_b32_e32 v84, v21, v61
	v_and_b32_e32 v92, v21, v53
	v_lshl_or_b32 v58, v83, 16, v58
	v_pk_fma_f16 v23, v68, v28, v23 op_sel_hi:[1,0,1]
	v_and_b32_sdwa v48, v21, v48 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v41, 16, v40
	v_lshl_or_b32 v35, v88, 16, v35
	v_pk_fma_f16 v22, v44, v28, v22 op_sel_hi:[1,0,1]
	v_and_b32_e32 v59, v21, v46
	v_lshl_or_b32 v33, v40, 16, v81
	v_lshl_or_b32 v34, v41, 16, v48
	v_and_b32_sdwa v45, v21, v45 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v61, v21, v61 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v53, v21, v53 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v82, 16, v37
	v_lshl_or_b32 v36, v37, 16, v36
	v_pk_fma_f16 v24, v80, v28, v24 op_sel:[0,1,0]
	v_lshrrev_b32_e32 v73, 16, v69
	v_lshrrev_b32_e32 v83, 16, v49
	v_pk_fma_f16 v22, v35, v28, v22 op_sel:[0,1,0]
	v_lshl_or_b32 v41, v49, 16, v92
	v_pk_fma_f16 v23, v58, v28, v23 op_sel:[0,1,0]
	v_lshl_or_b32 v40, v69, 16, v84
	v_and_b32_e32 v89, v21, v62
	v_and_b32_e32 v94, v21, v54
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v24, v36, v29, v24 op_sel_hi:[1,0,1]
	v_lshrrev_b32_e32 v76, 16, v38
	v_lshl_or_b32 v37, v38, 16, v59
	v_lshl_or_b32 v38, v82, 16, v45
	v_pk_fma_f16 v23, v40, v29, v23 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v28, v73, 16, v61
	v_lshl_or_b32 v35, v83, 16, v53
	v_pk_fma_f16 v22, v41, v29, v22 op_sel_hi:[1,0,1]
	v_and_b32_e32 v60, v21, v47
	v_pk_fma_f16 v24, v38, v29, v24 op_sel:[0,1,0]
	v_and_b32_sdwa v46, v21, v46 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v62, v21, v62 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v54, v21, v54 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v25, 16, v50
	v_lshrrev_b32_e32 v42, 16, v70
	v_pk_fma_f16 v23, v28, v29, v23 op_sel:[0,1,0]
	v_lshl_or_b32 v36, v70, 16, v89
	v_lshl_or_b32 v40, v50, 16, v94
	v_pk_fma_f16 v22, v35, v29, v22 op_sel:[0,1,0]
	v_and_b32_e32 v90, v21, v63
	v_and_b32_e32 v95, v21, v55
	v_lshrrev_b32_e32 v65, 16, v39
	v_lshl_or_b32 v26, v39, 16, v60
	v_lshl_or_b32 v39, v76, 16, v46
	v_pk_fma_f16 v24, v37, v30, v24 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v28, v42, 16, v62
	v_pk_fma_f16 v23, v36, v30, v23 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v25, v25, 16, v54
	v_pk_fma_f16 v22, v40, v30, v22 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v24, v39, v30, v24 op_sel:[0,1,0]
	v_and_b32_sdwa v47, v21, v47 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v63, v21, v63 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v55, v21, v55 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v77, 16, v51
	v_pk_fma_f16 v23, v28, v30, v23 op_sel:[0,1,0]
	v_lshl_or_b32 v29, v71, 16, v90
	v_lshrrev_b32_e32 v74, 16, v71
	v_pk_fma_f16 v22, v25, v30, v22 op_sel:[0,1,0]
	v_lshl_or_b32 v35, v51, 16, v95
	v_and_b32_e32 v91, v21, v64
	v_and_b32_e32 v96, v21, v56
	v_pk_fma_f16 v24, v26, v31, v24 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v27, v65, 16, v47
	v_pk_fma_f16 v23, v29, v31, v23 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v25, v74, 16, v63
	v_lshl_or_b32 v28, v77, 16, v55
	v_pk_fma_f16 v22, v35, v31, v22 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v24, v27, v31, v24 op_sel:[0,1,0]
	v_and_b32_sdwa v64, v21, v64 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v56, v21, v56 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v66, 16, v52
	v_lshrrev_b32_e32 v85, 16, v72
	v_pk_fma_f16 v23, v25, v31, v23 op_sel:[0,1,0]
	v_lshl_or_b32 v26, v72, 16, v91
	v_lshl_or_b32 v29, v52, 16, v96
	v_pk_fma_f16 v22, v28, v31, v22 op_sel:[0,1,0]
	v_pk_fma_f16 v24, v33, v32, v24 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v25, v85, 16, v64
	v_pk_fma_f16 v23, v26, v32, v23 op_sel_hi:[1,0,1]
	v_lshl_or_b32 v27, v66, 16, v56
	v_pk_fma_f16 v22, v29, v32, v22 op_sel_hi:[1,0,1]
	v_pk_fma_f16 v24, v34, v32, v24 op_sel:[0,1,0]
	v_pk_fma_f16 v23, v25, v32, v23 op_sel:[0,1,0]
	v_pk_fma_f16 v22, v27, v32, v22 op_sel:[0,1,0]
	s_cbranch_scc0 BB71_1
	s_mul_i32 s6, s6, 48
	v_or_b32_e32 v0, s6, v2
	v_mad_u32_u24 v0, v3, 12, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_short_d16_hi v[0:1], v24, off
	global_store_short v[0:1], v23, off offset:48
	global_store_short v[0:1], v24, off offset:8
	global_store_short_d16_hi v[0:1], v22, off offset:56
	global_store_short_d16_hi v[0:1], v23, off offset:16
	global_store_short v[0:1], v22, off offset:64
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_7_kernel0
		.amdhsa_group_segment_fixed_size 512
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 98
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end71:
	.size	tvmgen_default_fused_nn_dense_7_kernel0, .Lfunc_end71-tvmgen_default_fused_nn_dense_7_kernel0

	.globl	tvmgen_default_fused_nn_dense_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_dense_kernel0,@function
tvmgen_default_fused_nn_dense_kernel0:
	v_lshlrev_b32_e32 v4, 4, v0
	v_lshlrev_b32_e32 v1, 5, v0
	s_mov_b64 s[22:23], s[2:3]
	s_mov_b64 s[20:21], s[0:1]
	s_clause 0x2
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_add_u32 s20, s20, s7
	s_addc_u32 s21, s21, 0
	v_and_b32_e32 v5, 0x70, v4
	v_and_b32_e32 v3, 0x7f00, v1
	s_ashr_i32 s0, s6, 2
	s_movk_i32 s7, 0x4000
	s_mul_i32 s4, s0, 0x3200
	buffer_store_dword v5, off, s[20:23], 0 offset:4
	v_or_b32_e32 v5, 1, v4
	v_add_nc_u32_e32 v3, s4, v3
	v_or_b32_e32 v6, 2, v4
	v_or_b32_e32 v7, 3, v4
	v_lshlrev_b32_e32 v18, 1, v0
	v_and_b32_e32 v5, 0x71, v5
	buffer_store_dword v3, off, s[20:23], 0 offset:8
	v_add_nc_u32_e32 v3, s7, v1
	v_or_b32_e32 v1, 4, v4
	s_movk_i32 s12, 0x7f
	buffer_store_dword v5, off, s[20:23], 0 offset:12
	v_and_b32_e32 v5, 0x72, v6
	v_or_b32_e32 v6, 7, v4
	v_and_b32_e32 v1, 0x74, v1
	s_lshl_b32 s1, s6, 14
	v_add_nc_u32_e32 v8, 0x60, v0
	buffer_store_dword v5, off, s[20:23], 0 offset:16
	v_and_b32_e32 v5, 0x73, v7
	buffer_store_dword v1, off, s[20:23], 0 offset:24
	v_or_b32_e32 v1, 6, v4
	v_or_b32_e32 v7, 8, v4
	s_and_b32 s5, s1, 0xc000
	buffer_store_dword v5, off, s[20:23], 0 offset:20
	v_or_b32_e32 v5, 5, v4
	v_and_b32_e32 v1, 0x76, v1
	s_movk_i32 s1, 0xf00
	buffer_store_dword v8, off, s[20:23], 0 offset:48
	v_add_nc_u32_e32 v9, 0x2bc0, v18
	v_and_b32_e32 v5, 0x75, v5
	buffer_store_dword v1, off, s[20:23], 0 offset:32
	v_and_b32_e32 v1, 0x77, v6
	v_or_b32_e32 v6, 12, v4
	v_add_nc_u32_e32 v10, 0x2e40, v18
	buffer_store_dword v5, off, s[20:23], 0 offset:28
	v_or_b32_e32 v5, 9, v4
	buffer_store_dword v1, off, s[20:23], 0 offset:36
	v_and_b32_e32 v1, 0x78, v7
	v_or_b32_e32 v7, 13, v4
	v_and_b32_e32 v65, 0x7c, v6
	v_and_b32_e32 v5, 0x79, v5
	v_add_nc_u32_e32 v6, 64, v0
	buffer_store_dword v1, off, s[20:23], 0 offset:40
	v_or_b32_e32 v1, 10, v4
	v_and_b32_e32 v16, 0x7d, v7
	buffer_store_dword v5, off, s[20:23], 0 offset:44
	v_or_b32_e32 v5, 11, v4
	v_add_nc_u32_e32 v7, 0x780, v18
	v_and_b32_e32 v59, 0x7a, v1
	v_or_b32_e32 v1, 14, v4
	v_or_b32_e32 v4, 15, v4
	v_and_b32_e32 v127, 0x7b, v5
	v_add_nc_u32_e32 v5, 0x140, v18
	v_and_b32_e32 v28, s1, v7
	v_and_b32_e32 v17, 0x7e, v1
	v_and_b32_e32 v19, s12, v4
	v_add_nc_u32_e32 v4, 32, v0
	v_mov_b32_e32 v1, 0x7f
	v_and_b32_e32 v21, s1, v5
	v_add_nc_u32_e32 v5, 0x3c0, v18
	v_add_nc_u32_e32 v7, 0xdc0, v18
	v_and_b32_e32 v20, s12, v4
	v_add_nc_u32_e32 v4, 0x280, v18
	v_and_b32_e32 v22, v1, v6
	v_add_nc_u32_e32 v6, 0x640, v18
	v_and_b32_e32 v26, s1, v5
	v_and_b32_e32 v25, v1, v8
	v_and_b32_e32 v24, s1, v4
	v_add_nc_u32_e32 v4, 0xb40, v18
	v_and_b32_e32 v27, s1, v6
	s_movk_i32 s1, 0x1f00
	v_add_nc_u32_e32 v1, 0x8c0, v18
	v_and_b32_e32 v32, s1, v7
	v_and_b32_e32 v30, s1, v4
	v_add_nc_u32_e32 v4, 0x1180, v18
	v_mov_b32_e32 v5, 0x1f00
	v_add_nc_u32_e32 v7, 0x1680, v18
	v_and_b32_e32 v29, s1, v1
	v_add_nc_u32_e32 v1, 0x1040, v18
	v_and_b32_e32 v34, s1, v4
	v_add_nc_u32_e32 v4, 0x17c0, v18
	v_and_b32_e32 v37, v5, v7
	v_add_nc_u32_e32 v7, 0x2940, v18
	v_add_nc_u32_e32 v8, 0x2a80, v18
	v_add_nc_u32_e32 v6, 0xc80, v18
	v_and_b32_e32 v38, v5, v4
	v_mov_b32_e32 v4, 0x3f00
	v_and_b32_e32 v33, s1, v1
	v_add_nc_u32_e32 v1, 0x1540, v18
	v_add_nc_u32_e32 v11, 0x2f80, v18
	v_and_b32_e32 v31, s1, v6
	v_and_b32_e32 v41, v4, v7
	v_and_b32_e32 v42, v4, v8
	v_and_b32_e32 v43, v4, v9
	v_and_b32_e32 v44, v4, v10
	v_add_nc_u32_e32 v7, 0x30c0, v18
	v_add_nc_u32_e32 v8, 0x3340, v18
	v_add_nc_u32_e32 v9, 0x3480, v18
	v_add_nc_u32_e32 v10, 0x35c0, v18
	v_add_nc_u32_e32 v6, 0x12c0, v18
	v_and_b32_e32 v36, v5, v1
	v_and_b32_e32 v45, v4, v11
	v_and_b32_e32 v50, v4, v7
	v_and_b32_e32 v51, v4, v8
	v_and_b32_e32 v52, v4, v9
	v_and_b32_e32 v53, v4, v10
	v_mov_b32_e32 v2, 0x7f00
	v_add_nc_u32_e32 v11, 0x3840, v18
	v_add_nc_u32_e32 v4, 0x3980, v18
	v_add_nc_u32_e32 v7, 0x3ac0, v18
	v_add_nc_u32_e32 v8, 0x3d40, v18
	v_add_nc_u32_e32 v9, 0x3e80, v18
	v_add_nc_u32_e32 v1, 0x1a40, v18
	v_add_nc_u32_e32 v10, 0x3fc0, v18
	v_and_b32_e32 v35, s1, v6
	s_movk_i32 s1, 0x3f00
	v_add_nc_u32_e32 v5, 0x1f40, v18
	v_and_b32_e32 v39, s1, v1
	v_add_nc_u32_e32 v1, 0x1cc0, v18
	v_and_b32_e32 v55, v2, v4
	v_and_b32_e32 v54, v2, v11
	v_and_b32_e32 v56, v2, v7
	v_and_b32_e32 v57, v2, v8
	v_and_b32_e32 v58, v2, v9
	v_and_b32_e32 v2, v2, v10
	v_add_nc_u32_e32 v6, 0x1b80, v18
	v_and_b32_e32 v60, s1, v1
	v_and_b32_e32 v61, s1, v5
	v_lshrrev_b32_e32 v5, 5, v0
	buffer_store_dword v2, off, s[20:23], 0 offset:52
	v_add_nc_u32_e32 v2, 0x21c0, v18
	v_add_nc_u32_e32 v1, 0x2440, v18
	v_add_nc_u32_e32 v4, 0x2580, v18
	s_movk_i32 s13, 0x2f00
	v_and_b32_e32 v40, s1, v6
	v_add_nc_u32_e32 v6, 0x2080, v18
	v_and_b32_e32 v67, s13, v2
	v_and_b32_e32 v69, s13, v1
	v_and_b32_e32 v71, s13, v4
	v_add_nc_u32_e32 v1, 0x26c0, v18
	v_lshlrev_b32_e32 v2, 9, v0
	v_mul_u32_u24_e32 v4, 0x500, v5
	v_and_b32_e32 v72, s12, v0
	v_cmp_gt_i32_e64 s0, 0x50, v0
	v_cmp_gt_i32_e64 s1, 32, v0
	v_and_b32_e32 v64, s13, v6
	v_and_b32_e32 v73, s13, v1
	v_and_b32_e32 v74, 0x3e00, v2
	v_lshl_add_u32 v75, v4, 1, s7
	v_and_b32_e32 v76, 0x700, v18
	v_mov_b32_e32 v0, 0
	v_mov_b32_e32 v46, 0
	v_mov_b32_e32 v47, 0
	v_mov_b32_e32 v48, 0
	v_mov_b32_e32 v49, 0
	v_mov_b32_e32 v62, 0
	v_mov_b32_e32 v63, 0
	v_mov_b32_e32 v66, 0
	v_mov_b32_e32 v70, 0
	v_mov_b32_e32 v68, 0
	s_mov_b32 s15, 0
	s_mov_b32 s14, -1
	s_movk_i32 s12, 0x2800
	s_movk_i32 s13, 0x5000
	buffer_store_dword v5, off, s[20:23], 0 offset:56
BB72_1:
	s_clause 0x1
	buffer_load_dword v1, off, s[20:23], 0 offset:8
	buffer_load_dword v2, off, s[20:23], 0 offset:4
	s_waitcnt vmcnt(1)
	v_or_b32_e32 v1, s15, v1
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v77, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:16
	v_or_b32_e32 v93, v1, v65
	v_or_b32_e32 v95, v1, v17
	v_ashrrev_i32_e32 v78, 31, v77
	v_ashrrev_i32_e32 v94, 31, v93
	v_ashrrev_i32_e32 v96, 31, v95
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_lshlrev_b64 v[93:94], 1, v[93:94]
	v_lshlrev_b64 v[95:96], 1, v[95:96]
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v79, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:24
	v_ashrrev_i32_e32 v80, 31, v79
	v_lshlrev_b64 v[86:87], 1, v[79:80]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v79, vcc_lo, s8, v77
	v_add_co_ci_u32_e32 v80, vcc_lo, s9, v78, vcc_lo
	v_add_co_u32 v77, vcc_lo, s8, v86
	v_add_co_ci_u32_e32 v78, vcc_lo, s9, v87, vcc_lo
	v_or_b32_e32 v87, v1, v59
	v_ashrrev_i32_e32 v88, 31, v87
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v81, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:32
	v_ashrrev_i32_e32 v82, 31, v81
	v_lshlrev_b64 v[81:82], 1, v[81:82]
	v_add_co_u32 v91, vcc_lo, s8, v81
	v_add_co_ci_u32_e32 v92, vcc_lo, s9, v82, vcc_lo
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v83, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:40
	v_ashrrev_i32_e32 v84, 31, v83
	v_lshlrev_b64 v[83:84], 1, v[83:84]
	v_add_co_u32 v89, vcc_lo, s8, v83
	v_add_co_ci_u32_e32 v90, vcc_lo, s9, v84, vcc_lo
	v_lshlrev_b64 v[83:84], 1, v[87:88]
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v85, v1, v2
	v_ashrrev_i32_e32 v86, 31, v85
	v_lshlrev_b64 v[81:82], 1, v[85:86]
	v_add_co_u32 v87, vcc_lo, s8, v81
	v_add_co_ci_u32_e32 v88, vcc_lo, s9, v82, vcc_lo
	v_add_co_u32 v85, vcc_lo, s8, v83
	v_add_co_ci_u32_e32 v86, vcc_lo, s9, v84, vcc_lo
	v_add_co_u32 v83, vcc_lo, s8, v93
	v_add_co_ci_u32_e32 v84, vcc_lo, s9, v94, vcc_lo
	v_add_co_u32 v81, vcc_lo, s8, v95
	v_add_co_ci_u32_e32 v82, vcc_lo, s9, v96, vcc_lo
	v_add_co_u32 v93, vcc_lo, s12, v79
	s_clause 0x7
	global_load_ushort v109, v[79:80], off
	global_load_ushort v110, v[77:78], off
	global_load_ushort v111, v[91:92], off
	global_load_ushort v112, v[89:90], off
	global_load_ushort v113, v[87:88], off
	global_load_ushort v114, v[85:86], off
	global_load_ushort v115, v[83:84], off
	global_load_ushort v116, v[81:82], off
	v_add_co_ci_u32_e32 v94, vcc_lo, 0, v80, vcc_lo
	v_add_co_u32 v95, vcc_lo, s12, v77
	v_add_co_ci_u32_e32 v96, vcc_lo, 0, v78, vcc_lo
	v_add_co_u32 v97, vcc_lo, s12, v91
	v_add_co_ci_u32_e32 v98, vcc_lo, 0, v92, vcc_lo
	v_add_co_u32 v99, vcc_lo, s12, v89
	v_add_co_ci_u32_e32 v100, vcc_lo, 0, v90, vcc_lo
	v_add_co_u32 v101, vcc_lo, s12, v87
	v_add_co_ci_u32_e32 v102, vcc_lo, 0, v88, vcc_lo
	v_add_co_u32 v103, vcc_lo, s12, v85
	v_add_co_ci_u32_e32 v104, vcc_lo, 0, v86, vcc_lo
	v_add_co_u32 v105, vcc_lo, s12, v83
	v_add_co_ci_u32_e32 v106, vcc_lo, 0, v84, vcc_lo
	v_add_co_u32 v107, vcc_lo, s12, v81
	v_add_co_ci_u32_e32 v108, vcc_lo, 0, v82, vcc_lo
	s_clause 0x7
	global_load_ushort v117, v[93:94], off
	global_load_ushort v118, v[95:96], off
	global_load_ushort v119, v[97:98], off
	global_load_ushort v120, v[99:100], off
	global_load_ushort v121, v[101:102], off
	global_load_ushort v122, v[103:104], off
	global_load_ushort v123, v[105:106], off
	global_load_ushort v124, v[107:108], off
	buffer_load_dword v2, off, s[20:23], 0 offset:12
	v_or_b32_e32 v103, v1, v127
	v_or_b32_e32 v105, v1, v16
	v_or_b32_e32 v107, v1, v19
	v_ashrrev_i32_e32 v104, 31, v103
	v_ashrrev_i32_e32 v106, 31, v105
	v_ashrrev_i32_e32 v108, 31, v107
	v_lshlrev_b64 v[103:104], 1, v[103:104]
	v_lshlrev_b64 v[105:106], 1, v[105:106]
	v_lshlrev_b64 v[107:108], 1, v[107:108]
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v93, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:20
	v_ashrrev_i32_e32 v94, 31, v93
	v_lshlrev_b64 v[93:94], 1, v[93:94]
	v_add_co_u32 v93, vcc_lo, s8, v93
	v_add_co_ci_u32_e32 v94, vcc_lo, s9, v94, vcc_lo
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v95, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:28
	v_ashrrev_i32_e32 v96, 31, v95
	v_lshlrev_b64 v[95:96], 1, v[95:96]
	v_add_co_u32 v95, vcc_lo, s8, v95
	v_add_co_ci_u32_e32 v96, vcc_lo, s9, v96, vcc_lo
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v97, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:36
	v_ashrrev_i32_e32 v98, 31, v97
	v_lshlrev_b64 v[97:98], 1, v[97:98]
	v_add_co_u32 v97, vcc_lo, s8, v97
	v_add_co_ci_u32_e32 v98, vcc_lo, s9, v98, vcc_lo
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v99, v1, v2
	buffer_load_dword v2, off, s[20:23], 0 offset:44
	v_ashrrev_i32_e32 v100, 31, v99
	v_lshlrev_b64 v[99:100], 1, v[99:100]
	v_add_co_u32 v99, vcc_lo, s8, v99
	v_add_co_ci_u32_e32 v100, vcc_lo, s9, v100, vcc_lo
	s_waitcnt vmcnt(0)
	v_or_b32_e32 v101, v1, v2
	v_ashrrev_i32_e32 v102, 31, v101
	v_lshlrev_b64 v[101:102], 1, v[101:102]
	v_add_co_u32 v101, vcc_lo, s8, v101
	v_add_co_ci_u32_e32 v102, vcc_lo, s9, v102, vcc_lo
	v_add_co_u32 v103, vcc_lo, s8, v103
	v_add_co_ci_u32_e32 v104, vcc_lo, s9, v104, vcc_lo
	v_add_co_u32 v105, vcc_lo, s8, v105
	v_add_co_ci_u32_e32 v106, vcc_lo, s9, v106, vcc_lo
	v_add_co_u32 v107, vcc_lo, s8, v107
	v_add_co_ci_u32_e32 v108, vcc_lo, s9, v108, vcc_lo
	v_add_co_u32 v125, vcc_lo, s12, v93
	v_add_co_ci_u32_e32 v126, vcc_lo, 0, v94, vcc_lo
	v_add_co_u32 v1, vcc_lo, s12, v95
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v96, vcc_lo
	v_add_co_u32 v4, vcc_lo, s12, v97
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v98, vcc_lo
	v_add_co_u32 v6, vcc_lo, s12, v99
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v100, vcc_lo
	v_add_co_u32 v8, vcc_lo, s12, v101
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v102, vcc_lo
	v_add_co_u32 v10, vcc_lo, s12, v103
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v104, vcc_lo
	v_add_co_u32 v12, vcc_lo, s12, v105
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v106, vcc_lo
	v_add_co_u32 v14, vcc_lo, s12, v107
	v_add_co_ci_u32_e32 v15, vcc_lo, 0, v108, vcc_lo
	s_clause 0xf
	global_load_short_d16_hi v109, v[93:94], off
	global_load_short_d16_hi v110, v[95:96], off
	global_load_short_d16_hi v111, v[97:98], off
	global_load_short_d16_hi v112, v[99:100], off
	global_load_short_d16_hi v113, v[101:102], off
	global_load_short_d16_hi v114, v[103:104], off
	global_load_short_d16_hi v115, v[105:106], off
	global_load_short_d16_hi v116, v[107:108], off
	global_load_short_d16_hi v117, v[125:126], off
	global_load_short_d16_hi v118, v[1:2], off
	global_load_short_d16_hi v119, v[4:5], off
	global_load_short_d16_hi v120, v[6:7], off
	global_load_short_d16_hi v121, v[8:9], off
	global_load_short_d16_hi v122, v[10:11], off
	global_load_short_d16_hi v123, v[12:13], off
	global_load_short_d16_hi v124, v[14:15], off
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	s_barrier 
	ds_write_b128 v3, v[109:112]
	ds_write_b128 v3, v[113:116] offset:16
	ds_write_b128 v3, v[117:120] offset:5120
	ds_write_b128 v3, v[121:124] offset:5136
	s_and_saveexec_b32 s16, s0
	s_cbranch_execz BB72_3
	v_add_co_u32 v1, vcc_lo, s13, v79
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v80, vcc_lo
	v_add_co_u32 v4, vcc_lo, s13, v77
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v78, vcc_lo
	v_add_co_u32 v6, vcc_lo, s13, v91
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v92, vcc_lo
	v_add_co_u32 v8, vcc_lo, s13, v89
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v90, vcc_lo
	v_add_co_u32 v10, vcc_lo, s13, v87
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v88, vcc_lo
	v_add_co_u32 v12, vcc_lo, s13, v85
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v86, vcc_lo
	v_add_co_u32 v14, vcc_lo, s13, v83
	v_add_co_ci_u32_e32 v15, vcc_lo, 0, v84, vcc_lo
	v_add_co_u32 v84, vcc_lo, s13, v81
	v_add_co_ci_u32_e32 v85, vcc_lo, 0, v82, vcc_lo
	s_clause 0x7
	global_load_ushort v77, v[1:2], off
	global_load_ushort v78, v[4:5], off
	global_load_ushort v79, v[6:7], off
	global_load_ushort v80, v[8:9], off
	global_load_ushort v81, v[10:11], off
	global_load_ushort v82, v[12:13], off
	global_load_ushort v83, v[14:15], off
	global_load_ushort v84, v[84:85], off
	v_add_co_u32 v1, vcc_lo, s13, v93
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v94, vcc_lo
	v_add_co_u32 v4, vcc_lo, s13, v95
	v_add_co_ci_u32_e32 v5, vcc_lo, 0, v96, vcc_lo
	v_add_co_u32 v6, vcc_lo, s13, v97
	v_add_co_ci_u32_e32 v7, vcc_lo, 0, v98, vcc_lo
	v_add_co_u32 v8, vcc_lo, s13, v99
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v100, vcc_lo
	v_add_co_u32 v10, vcc_lo, s13, v101
	v_add_co_ci_u32_e32 v11, vcc_lo, 0, v102, vcc_lo
	v_add_co_u32 v12, vcc_lo, s13, v103
	v_add_co_ci_u32_e32 v13, vcc_lo, 0, v104, vcc_lo
	v_add_co_u32 v14, vcc_lo, s13, v105
	v_add_co_ci_u32_e32 v15, vcc_lo, 0, v106, vcc_lo
	v_add_co_u32 v85, vcc_lo, s13, v107
	v_add_co_ci_u32_e32 v86, vcc_lo, 0, v108, vcc_lo
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v77, v[1:2], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v78, v[4:5], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v79, v[6:7], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v80, v[8:9], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v81, v[10:11], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v82, v[12:13], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v83, v[14:15], off
	s_waitcnt vmcnt(7)
	global_load_short_d16_hi v84, v[85:86], off
	s_waitcnt vmcnt(4)
	ds_write_b128 v3, v[77:80] offset:10240
	s_waitcnt vmcnt(0)
	ds_write_b128 v3, v[81:84] offset:10256
BB72_3:
	s_or_b32 exec_lo, exec_lo, s16
	s_or_b32 s15, s15, s5
	v_or_b32_e32 v1, s15, v72
	v_or_b32_e32 v85, s15, v20
	v_or_b32_e32 v86, s15, v22
	v_or_b32_e32 v87, s15, v25
	v_add_nc_u32_e32 v1, v1, v76
	v_add_nc_u32_e32 v4, v85, v21
	v_add_nc_u32_e32 v6, v86, v24
	v_add_nc_u32_e32 v8, v87, v26
	v_add_nc_u32_e32 v10, v85, v27
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_nc_u32_e32 v12, v86, v28
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_ashrrev_i32_e32 v11, 31, v10
	v_add_nc_u32_e32 v14, v87, v29
	v_add_co_u32 v1, vcc_lo, s10, v1
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v2, vcc_lo, s11, v2, vcc_lo
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s10, v8
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_add_co_ci_u32_e32 v9, vcc_lo, s11, v9, vcc_lo
	v_add_co_u32 v77, vcc_lo, 0x800, v1
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v78, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_add_nc_u32_e32 v79, v85, v30
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_add_nc_u32_e32 v81, v86, v31
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_ashrrev_i32_e32 v80, 31, v79
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	s_clause 0x7
	global_load_ushort v88, v[1:2], off
	global_load_ushort v89, v[4:5], off
	global_load_ushort v90, v[6:7], off
	global_load_ushort v91, v[8:9], off
	global_load_ushort v92, v[77:78], off offset:512
	global_load_ushort v93, v[10:11], off
	global_load_ushort v94, v[12:13], off
	global_load_ushort v95, v[14:15], off
	v_add_nc_u32_e32 v6, v87, v32
	v_ashrrev_i32_e32 v82, 31, v81
	v_lshlrev_b64 v[4:5], 1, v[79:80]
	v_add_nc_u32_e32 v12, v85, v33
	v_add_co_u32 v8, vcc_lo, 0x1000, v1
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[10:11], 1, v[81:82]
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v2, vcc_lo
	v_add_nc_u32_e32 v14, v86, v34
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_nc_u32_e32 v77, v87, v35
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_ashrrev_i32_e32 v78, 31, v77
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v79, vcc_lo, 0x1800, v1
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v80, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_nc_u32_e32 v81, v85, v36
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_add_nc_u32_e32 v83, v86, v37
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v77, vcc_lo, s10, v77
	v_ashrrev_i32_e32 v82, 31, v81
	v_add_co_ci_u32_e32 v78, vcc_lo, s11, v78, vcc_lo
	s_clause 0x7
	global_load_ushort v96, v[8:9], off offset:1024
	global_load_ushort v97, v[4:5], off
	global_load_ushort v98, v[10:11], off
	global_load_ushort v99, v[6:7], off
	global_load_ushort v100, v[79:80], off offset:1536
	global_load_ushort v101, v[12:13], off
	global_load_ushort v102, v[14:15], off
	global_load_ushort v103, v[77:78], off
	v_add_nc_u32_e32 v6, v87, v38
	v_ashrrev_i32_e32 v84, 31, v83
	v_lshlrev_b64 v[4:5], 1, v[81:82]
	v_add_nc_u32_e32 v12, v85, v39
	v_add_co_u32 v8, vcc_lo, s12, v1
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[10:11], 1, v[83:84]
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v2, vcc_lo
	v_add_nc_u32_e32 v14, v86, v40
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_nc_u32_e32 v77, v87, v60
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_ashrrev_i32_e32 v78, 31, v77
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v79, vcc_lo, 0x3000, v1
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v80, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_nc_u32_e32 v81, v85, v61
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_add_nc_u32_e32 v83, v86, v64
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v77, vcc_lo, s10, v77
	v_ashrrev_i32_e32 v82, 31, v81
	v_add_co_ci_u32_e32 v78, vcc_lo, s11, v78, vcc_lo
	s_clause 0x7
	global_load_ushort v104, v[8:9], off
	global_load_ushort v105, v[4:5], off
	global_load_ushort v106, v[10:11], off
	global_load_ushort v107, v[6:7], off
	global_load_ushort v108, v[79:80], off offset:512
	global_load_ushort v109, v[12:13], off
	global_load_ushort v110, v[14:15], off
	global_load_ushort v111, v[77:78], off
	v_add_nc_u32_e32 v6, v87, v67
	v_ashrrev_i32_e32 v84, 31, v83
	v_lshlrev_b64 v[4:5], 1, v[81:82]
	v_add_nc_u32_e32 v12, v85, v69
	v_add_co_u32 v8, vcc_lo, 0x3800, v1
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[10:11], 1, v[83:84]
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v2, vcc_lo
	v_add_nc_u32_e32 v14, v86, v71
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_nc_u32_e32 v77, v87, v73
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_ashrrev_i32_e32 v78, 31, v77
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v79, vcc_lo, s7, v1
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v80, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_nc_u32_e32 v81, v85, v41
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_add_nc_u32_e32 v83, v86, v42
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v77, vcc_lo, s10, v77
	v_ashrrev_i32_e32 v82, 31, v81
	v_add_co_ci_u32_e32 v78, vcc_lo, s11, v78, vcc_lo
	s_clause 0x7
	global_load_ushort v112, v[8:9], off offset:1024
	global_load_ushort v113, v[4:5], off
	global_load_ushort v114, v[10:11], off
	global_load_ushort v115, v[6:7], off
	global_load_ushort v116, v[79:80], off offset:1536
	global_load_ushort v117, v[12:13], off
	global_load_ushort v118, v[14:15], off
	global_load_ushort v119, v[77:78], off
	v_add_nc_u32_e32 v6, v87, v43
	v_ashrrev_i32_e32 v84, 31, v83
	v_lshlrev_b64 v[4:5], 1, v[81:82]
	v_add_nc_u32_e32 v12, v85, v44
	v_add_co_u32 v8, vcc_lo, s13, v1
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[10:11], 1, v[83:84]
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v2, vcc_lo
	v_add_nc_u32_e32 v14, v86, v45
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_nc_u32_e32 v77, v87, v50
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_ashrrev_i32_e32 v78, 31, v77
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v79, vcc_lo, 0x5800, v1
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v80, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_nc_u32_e32 v81, v85, v51
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_add_nc_u32_e32 v83, v86, v52
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v77, vcc_lo, s10, v77
	v_ashrrev_i32_e32 v82, 31, v81
	v_add_co_ci_u32_e32 v78, vcc_lo, s11, v78, vcc_lo
	s_clause 0x7
	global_load_ushort v120, v[8:9], off
	global_load_ushort v121, v[4:5], off
	global_load_ushort v122, v[10:11], off
	global_load_ushort v123, v[6:7], off
	global_load_ushort v124, v[79:80], off offset:512
	global_load_ushort v125, v[12:13], off
	global_load_ushort v126, v[14:15], off
	global_load_ushort v23, v[77:78], off
	v_add_nc_u32_e32 v6, v87, v53
	v_ashrrev_i32_e32 v84, 31, v83
	v_lshlrev_b64 v[4:5], 1, v[81:82]
	v_add_nc_u32_e32 v12, v85, v54
	v_add_co_u32 v8, vcc_lo, 0x6000, v1
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[10:11], 1, v[83:84]
	v_add_co_ci_u32_e32 v9, vcc_lo, 0, v2, vcc_lo
	v_add_nc_u32_e32 v14, v86, v55
	v_add_co_u32 v4, vcc_lo, s10, v4
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v13, 31, v12
	v_add_co_ci_u32_e32 v5, vcc_lo, s11, v5, vcc_lo
	v_add_nc_u32_e32 v77, v87, v56
	v_add_co_u32 v10, vcc_lo, s10, v10
	v_ashrrev_i32_e32 v15, 31, v14
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v11, vcc_lo
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_lshlrev_b64 v[12:13], 1, v[12:13]
	v_ashrrev_i32_e32 v78, 31, v77
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_nc_u32_e32 v81, v85, v57
	v_add_co_u32 v79, vcc_lo, 0x6800, v1
	v_lshlrev_b64 v[14:15], 1, v[14:15]
	v_add_co_ci_u32_e32 v80, vcc_lo, 0, v2, vcc_lo
	v_add_nc_u32_e32 v83, v86, v58
	v_add_co_u32 v12, vcc_lo, s10, v12
	v_lshlrev_b64 v[77:78], 1, v[77:78]
	v_ashrrev_i32_e32 v82, 31, v81
	v_add_co_ci_u32_e32 v13, vcc_lo, s11, v13, vcc_lo
	v_add_co_u32 v14, vcc_lo, s10, v14
	v_ashrrev_i32_e32 v84, 31, v83
	v_add_co_ci_u32_e32 v15, vcc_lo, s11, v15, vcc_lo
	v_add_co_u32 v77, vcc_lo, s10, v77
	v_lshlrev_b64 v[81:82], 1, v[81:82]
	v_add_co_ci_u32_e32 v78, vcc_lo, s11, v78, vcc_lo
	v_add_co_u32 v1, vcc_lo, 0x7800, v1
	v_lshlrev_b64 v[83:84], 1, v[83:84]
	v_add_co_ci_u32_e32 v2, vcc_lo, 0, v2, vcc_lo
	v_add_co_u32 v81, vcc_lo, s10, v81
	v_add_co_ci_u32_e32 v82, vcc_lo, s11, v82, vcc_lo
	v_add_co_u32 v83, vcc_lo, s10, v83
	v_add_co_ci_u32_e32 v84, vcc_lo, s11, v84, vcc_lo
	s_clause 0xa
	global_load_ushort v8, v[8:9], off offset:1024
	global_load_ushort v4, v[4:5], off
	global_load_ushort v5, v[10:11], off
	global_load_ushort v6, v[6:7], off
	global_load_ushort v7, v[79:80], off offset:1536
	global_load_ushort v9, v[12:13], off
	global_load_ushort v10, v[14:15], off
	global_load_ushort v11, v[77:78], off
	global_load_ushort v1, v[1:2], off
	global_load_ushort v2, v[81:82], off
	global_load_ushort v12, v[83:84], off
	s_waitcnt vmcnt(50)
	ds_write_b16 v18, v88
	s_waitcnt vmcnt(49)
	ds_write_b16 v18, v89 offset:320
	s_waitcnt vmcnt(48)
	ds_write_b16 v18, v90 offset:640
	s_waitcnt vmcnt(47)
	ds_write_b16 v18, v91 offset:960
	s_waitcnt vmcnt(46)
	ds_write_b16 v18, v92 offset:1280
	s_waitcnt vmcnt(45)
	ds_write_b16 v18, v93 offset:1600
	s_waitcnt vmcnt(44)
	ds_write_b16 v18, v94 offset:1920
	s_waitcnt vmcnt(43)
	ds_write_b16 v18, v95 offset:2240
	s_waitcnt vmcnt(42)
	ds_write_b16 v18, v96 offset:2560
	s_waitcnt vmcnt(41)
	ds_write_b16 v18, v97 offset:2880
	s_waitcnt vmcnt(40)
	ds_write_b16 v18, v98 offset:3200
	s_waitcnt vmcnt(39)
	ds_write_b16 v18, v99 offset:3520
	s_waitcnt vmcnt(38)
	ds_write_b16 v18, v100 offset:3840
	s_waitcnt vmcnt(37)
	ds_write_b16 v18, v101 offset:4160
	s_waitcnt vmcnt(36)
	ds_write_b16 v18, v102 offset:4480
	s_waitcnt vmcnt(35)
	ds_write_b16 v18, v103 offset:4800
	s_waitcnt vmcnt(34)
	ds_write_b16 v18, v104 offset:5120
	s_waitcnt vmcnt(33)
	ds_write_b16 v18, v105 offset:5440
	s_waitcnt vmcnt(32)
	ds_write_b16 v18, v106 offset:5760
	s_waitcnt vmcnt(31)
	ds_write_b16 v18, v107 offset:6080
	s_waitcnt vmcnt(30)
	ds_write_b16 v18, v108 offset:6400
	s_waitcnt vmcnt(29)
	ds_write_b16 v18, v109 offset:6720
	s_waitcnt vmcnt(28)
	ds_write_b16 v18, v110 offset:7040
	s_waitcnt vmcnt(27)
	ds_write_b16 v18, v111 offset:7360
	s_waitcnt vmcnt(26)
	ds_write_b16 v18, v112 offset:7680
	s_waitcnt vmcnt(25)
	ds_write_b16 v18, v113 offset:8000
	s_waitcnt vmcnt(24)
	ds_write_b16 v18, v114 offset:8320
	s_waitcnt vmcnt(23)
	ds_write_b16 v18, v115 offset:8640
	s_waitcnt vmcnt(22)
	ds_write_b16 v18, v116 offset:8960
	s_waitcnt vmcnt(21)
	ds_write_b16 v18, v117 offset:9280
	s_waitcnt vmcnt(20)
	ds_write_b16 v18, v118 offset:9600
	s_waitcnt vmcnt(19)
	ds_write_b16 v18, v119 offset:9920
	s_waitcnt vmcnt(18)
	ds_write_b16 v18, v120 offset:10240
	s_waitcnt vmcnt(17)
	ds_write_b16 v18, v121 offset:10560
	s_waitcnt vmcnt(16)
	ds_write_b16 v18, v122 offset:10880
	s_waitcnt vmcnt(15)
	ds_write_b16 v18, v123 offset:11200
	s_waitcnt vmcnt(14)
	ds_write_b16 v18, v124 offset:11520
	s_waitcnt vmcnt(13)
	ds_write_b16 v18, v125 offset:11840
	s_waitcnt vmcnt(12)
	ds_write_b16 v18, v126 offset:12160
	s_waitcnt vmcnt(11)
	ds_write_b16 v18, v23 offset:12480
	s_waitcnt vmcnt(10)
	ds_write_b16 v18, v8 offset:12800
	s_waitcnt vmcnt(9)
	ds_write_b16 v18, v4 offset:13120
	s_waitcnt vmcnt(8)
	ds_write_b16 v18, v5 offset:13440
	s_waitcnt vmcnt(7)
	ds_write_b16 v18, v6 offset:13760
	s_waitcnt vmcnt(6)
	ds_write_b16 v18, v7 offset:14080
	s_waitcnt vmcnt(5)
	ds_write_b16 v18, v9 offset:14400
	s_waitcnt vmcnt(4)
	ds_write_b16 v18, v10 offset:14720
	s_waitcnt vmcnt(3)
	ds_write_b16 v18, v11 offset:15040
	s_waitcnt vmcnt(2)
	ds_write_b16 v18, v1 offset:15360
	s_waitcnt vmcnt(1)
	ds_write_b16 v18, v2 offset:15680
	s_waitcnt vmcnt(0)
	ds_write_b16 v18, v12 offset:16000
	s_and_saveexec_b32 s16, s1
	s_cbranch_execz BB72_5
	s_clause 0x1
	buffer_load_dword v1, off, s[20:23], 0 offset:48
	buffer_load_dword v2, off, s[20:23], 0 offset:52
	s_waitcnt vmcnt(0)
	v_add3_u32 v1, s15, v1, v2
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_add_co_u32 v1, vcc_lo, s10, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s11, v2, vcc_lo
	global_load_ushort v1, v[1:2], off
	s_waitcnt vmcnt(0)
	ds_write_b16 v18, v1 offset:16320
BB72_5:
	s_or_b32 exec_lo, exec_lo, s16
	s_xor_b32 s14, s14, -1
	s_mov_b32 s15, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
BB72_6:
	v_add_nc_u32_e32 v1, s15, v74
	v_add_nc_u32_e32 v2, s15, v75
	v_mov_b32_e32 v4, 0xffff
	s_add_i32 s15, s15, 16
	ds_read_b128 v[77:80], v1
	ds_read_b128 v[81:84], v1 offset:256
	ds_read_b128 v[85:88], v2
	ds_read_b128 v[89:92], v2 offset:256
	ds_read_b128 v[93:96], v2 offset:512
	ds_read_b128 v[97:100], v2 offset:768
	ds_read_b128 v[101:104], v2 offset:1024
	ds_read_b128 v[105:108], v2 offset:1280
	ds_read_b128 v[109:112], v2 offset:1536
	ds_read_b128 v[113:116], v2 offset:1792
	ds_read_b128 v[117:120], v2 offset:2048
	ds_read_b128 v[121:124], v2 offset:2304
	s_cmpk_lg_i32 s15, 0x100
	s_waitcnt lgkmcnt(11)
	v_and_b32_e32 v1, v4, v77
	v_and_b32_e32 v5, v4, v78
	v_and_b32_e32 v7, v4, v79
	v_and_b32_e32 v9, v4, v80
	v_and_b32_sdwa v2, v4, v77 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	s_waitcnt lgkmcnt(10)
	v_lshl_or_b32 v1, v81, 16, v1
	v_lshrrev_b32_e32 v10, 16, v81
	v_and_b32_sdwa v6, v4, v78 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_and_b32_sdwa v8, v4, v79 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v11, 16, v82
	v_lshrrev_b32_e32 v12, 16, v83
	v_and_b32_sdwa v4, v4, v80 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:DWORD src1_sel:WORD_1
	v_lshrrev_b32_e32 v13, 16, v84
	v_lshl_or_b32 v2, v10, 16, v2
	s_waitcnt lgkmcnt(1)
	v_pk_fma_f16 v46, v117, v1, v46 op_sel_hi:[0,1,1]
	s_waitcnt lgkmcnt(0)
	v_pk_fma_f16 v0, v121, v1, v0 op_sel_hi:[0,1,1]
	v_lshl_or_b32 v6, v11, 16, v6
	v_lshl_or_b32 v8, v12, 16, v8
	v_lshl_or_b32 v4, v13, 16, v4
	v_pk_fma_f16 v10, v85, v1, v70 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v89, v1, v68 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v93, v1, v66 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v97, v1, v63 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v101, v1, v62 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v105, v1, v49 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v109, v1, v48 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v47, v113, v1, v47 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v85, v2, v10 op_sel:[1,0,0]
	v_lshl_or_b32 v5, v82, 16, v5
	v_pk_fma_f16 v0, v121, v2, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v89, v2, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v93, v2, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v97, v2, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v101, v2, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v105, v2, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v109, v2, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v23, v113, v2, v47 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v117, v2, v46 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v90, v5, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v86, v5, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v122, v5, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v94, v5, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v98, v5, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v102, v5, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v106, v5, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v110, v5, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v15, v114, v5, v23 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v23, v118, v5, v46 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v94, v6, v10 op_sel:[1,0,0]
	v_lshl_or_b32 v7, v83, 16, v7
	v_pk_fma_f16 v1, v86, v6, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v90, v6, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v122, v6, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v98, v6, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v102, v6, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v106, v6, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v110, v6, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v14, v114, v6, v15 op_sel:[1,0,0]
	v_pk_fma_f16 v15, v118, v6, v23 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v99, v7, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v87, v7, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v91, v7, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v95, v7, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v0, v123, v7, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v103, v7, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v107, v7, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v111, v7, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v13, v115, v7, v14 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v14, v119, v7, v15 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v103, v8, v10 op_sel:[1,0,0]
	v_lshl_or_b32 v9, v84, 16, v9
	v_pk_fma_f16 v1, v87, v8, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v2, v91, v8, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v5, v95, v8, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v6, v99, v8, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v123, v8, v0 op_sel:[1,0,0]
	v_pk_fma_f16 v10, v107, v8, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v11, v111, v8, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v12, v115, v8, v13 op_sel:[1,0,0]
	v_pk_fma_f16 v13, v119, v8, v14 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v124, v9, v0 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v8, v108, v9, v10 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v10, v112, v9, v11 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v11, v116, v9, v12 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v1, v88, v9, v1 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v2, v92, v9, v2 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v5, v96, v9, v5 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v6, v100, v9, v6 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v7, v104, v9, v7 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v12, v120, v9, v13 op_sel_hi:[0,1,1]
	v_pk_fma_f16 v70, v88, v4, v1 op_sel:[1,0,0]
	v_pk_fma_f16 v68, v92, v4, v2 op_sel:[1,0,0]
	v_pk_fma_f16 v66, v96, v4, v5 op_sel:[1,0,0]
	v_pk_fma_f16 v63, v100, v4, v6 op_sel:[1,0,0]
	v_pk_fma_f16 v62, v104, v4, v7 op_sel:[1,0,0]
	v_pk_fma_f16 v49, v108, v4, v8 op_sel:[1,0,0]
	v_pk_fma_f16 v48, v112, v4, v10 op_sel:[1,0,0]
	v_pk_fma_f16 v47, v116, v4, v11 op_sel:[1,0,0]
	v_pk_fma_f16 v46, v120, v4, v12 op_sel:[1,0,0]
	v_pk_fma_f16 v0, v124, v4, v0 op_sel:[1,0,0]
	s_cbranch_scc1 BB72_6
	s_and_b32 vcc_lo, exec_lo, s14
	s_movk_i32 s15, 0x80
	s_mov_b32 s14, 0
	s_cbranch_vccz BB72_1
	buffer_load_dword v2, off, s[20:23], 0 offset:56
	v_and_b32_e32 v1, 62, v18
	s_lshl_b32 s0, s6, 6
	s_and_b32 s0, s0, 0xc0
	s_waitcnt vmcnt(0)
	v_mad_u32_u24 v2, 0xa00, v2, s4
	v_or3_b32 v1, v2, s0, v1
	v_add_nc_u32_e32 v3, 0x400, v1
	v_ashrrev_i32_e32 v2, 31, v1
	v_add_nc_u32_e32 v5, 0x500, v1
	v_add_nc_u32_e32 v7, 0x600, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[9:10], 1, v[1:2]
	v_ashrrev_i32_e32 v6, 31, v5
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_nc_u32_e32 v2, 0x700, v1
	v_lshlrev_b64 v[11:12], 1, v[3:4]
	v_add_co_u32 v9, vcc_lo, s2, v9
	v_lshlrev_b64 v[4:5], 1, v[5:6]
	v_add_co_ci_u32_e32 v10, vcc_lo, s3, v10, vcc_lo
	v_lshlrev_b64 v[6:7], 1, v[7:8]
	v_add_co_u32 v11, vcc_lo, s2, v11
	v_add_nc_u32_e32 v8, 0x800, v1
	v_ashrrev_i32_e32 v3, 31, v2
	v_add_co_ci_u32_e32 v12, vcc_lo, s3, v12, vcc_lo
	global_store_dword v[9:10], v70, off
	global_store_short v[9:10], v68, off offset:512
	global_store_short_d16_hi v[9:10], v68, off offset:514
	global_store_dword v[9:10], v66, off offset:1024
	global_store_dword v[9:10], v63, off offset:1536
	global_store_dword v[11:12], v62, off
	v_add_nc_u32_e32 v10, 0x900, v1
	v_ashrrev_i32_e32 v9, 31, v8
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	v_ashrrev_i32_e32 v11, 31, v10
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	v_add_co_u32 v1, vcc_lo, s2, v2
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v3, vcc_lo
	v_add_co_u32 v8, vcc_lo, s2, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s2, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s3, v11, vcc_lo
	global_store_dword v[4:5], v49, off
	global_store_dword v[6:7], v48, off
	global_store_dword v[1:2], v47, off
	global_store_dword v[8:9], v46, off
	global_store_dword v[10:11], v0, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_dense_kernel0
		.amdhsa_group_segment_fixed_size 29184
		.amdhsa_private_segment_fixed_size 60
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 1
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 128
		.amdhsa_next_free_sgpr 24
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end72:
	.size	tvmgen_default_fused_nn_dense_kernel0, .Lfunc_end72-tvmgen_default_fused_nn_dense_kernel0

	.globl	tvmgen_default_fused_nn_max_pool2d_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_max_pool2d_kernel0,@function
tvmgen_default_fused_nn_max_pool2d_kernel0:
	v_lshl_add_u32 v0, s6, 5, v0
	s_load_dwordx2 s[6:7], s[4:5], 0x8
	v_mul_hi_i32 v1, 0x51eb851f, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 12, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_i32_i24_e32 v2, 0x3200, v1
	v_lshlrev_b32_e32 v6, 1, v1
	v_sub_nc_u32_e32 v4, v0, v2
	v_mul_i32_i24_e32 v2, 0xc800, v1
	v_add_nc_u32_e32 v1, -1, v6
	v_ashrrev_i32_e32 v5, 6, v4
	v_and_or_b32 v2, v0, 63, v2
	v_cmp_gt_u32_e64 s2, 0x177, v1
	v_cmp_lt_i32_e64 s1, 63, v4
	v_mov_b32_e32 v1, 0xfbff
	v_lshlrev_b32_e32 v3, 7, v5
	s_and_b32 s3, s2, s1
	v_add3_u32 v2, v2, v3, 0xffff9bc0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[7:8], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, vcc_lo, s6, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s7, v8, vcc_lo
	s_and_saveexec_b32 s0, s3
	s_cbranch_execz BB73_2
	global_load_ushort v1, v[7:8], off
BB73_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_lshl_or_b32 v3, v5, 1, 1
	v_cmp_lt_i32_e64 s0, 0, v3
	v_mov_b32_e32 v3, 0xfbff
	s_and_b32 s8, s2, s0
	s_and_saveexec_b32 s3, s8
	s_cbranch_execz BB73_4
	global_load_ushort v3, v[7:8], off offset:128
BB73_4:
	s_or_b32 exec_lo, exec_lo, s3
	v_cmp_lt_i32_e32 vcc_lo, -1, v4
	v_mov_b32_e32 v4, 0xfbff
	s_and_b32 s3, s2, vcc_lo
	s_and_saveexec_b32 s2, s3
	s_cbranch_execz BB73_6
	global_load_ushort v4, v[7:8], off offset:256
BB73_6:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_u32_e64 s2, 0x177, v6
	v_mov_b32_e32 v5, 0xfbff
	s_and_b32 s3, s2, s1
	s_and_saveexec_b32 s8, s3
	s_cbranch_execz BB73_8
	v_add_nc_u32_e32 v7, 0x6400, v2
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v7, s3, s6, v7
	v_add_co_ci_u32_e64 v8, s3, s7, v8, s3
	global_load_ushort v5, v[7:8], off
BB73_8:
	s_or_b32 exec_lo, exec_lo, s8
	v_mov_b32_e32 v7, 0xfbff
	s_and_b32 s3, s2, s0
	s_and_saveexec_b32 s8, s3
	s_cbranch_execz BB73_10
	v_add_nc_u32_e32 v7, 0x6440, v2
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v7, s3, s6, v7
	v_add_co_ci_u32_e64 v8, s3, s7, v8, s3
	global_load_ushort v7, v[7:8], off
BB73_10:
	s_or_b32 exec_lo, exec_lo, s8
	v_mov_b32_e32 v8, 0xfbff
	s_and_b32 s2, s2, vcc_lo
	s_and_saveexec_b32 s3, s2
	s_cbranch_execz BB73_12
	v_add_nc_u32_e32 v8, 0x6480, v2
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v8, s2, s6, v8
	v_add_co_ci_u32_e64 v9, s2, s7, v9, s2
	global_load_ushort v8, v[8:9], off
BB73_12:
	s_or_b32 exec_lo, exec_lo, s3
	v_or_b32_e32 v6, 1, v6
	v_cmp_gt_u32_e64 s2, 0x177, v6
	v_mov_b32_e32 v6, 0xfbff
	s_and_b32 s1, s2, s1
	s_and_saveexec_b32 s3, s1
	s_cbranch_execz BB73_14
	v_add_nc_u32_e32 v9, 0xc800, v2
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	v_add_co_u32 v9, s1, s6, v9
	v_add_co_ci_u32_e64 v10, s1, s7, v10, s1
	global_load_ushort v6, v[9:10], off
BB73_14:
	s_or_b32 exec_lo, exec_lo, s3
	s_load_dwordx2 s[4:5], s[4:5], 0x0
	v_mov_b32_e32 v9, 0xfbff
	s_and_b32 s0, s2, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB73_16
	v_add_nc_u32_e32 v9, 0xc840, v2
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[9:10], 1, v[9:10]
	v_add_co_u32 v9, s0, s6, v9
	v_add_co_ci_u32_e64 v10, s0, s7, v10, s0
	global_load_ushort v9, v[9:10], off
BB73_16:
	s_or_b32 exec_lo, exec_lo, s1
	v_mov_b32_e32 v10, 0xfbff
	s_and_b32 s1, s2, vcc_lo
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB73_18
	v_add_nc_u32_e32 v10, 0xc880, v2
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[10:11], 1, v[10:11]
	v_add_co_u32 v10, vcc_lo, s6, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s7, v11, vcc_lo
	global_load_ushort v10, v[10:11], off
BB73_18:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s0, 0xfbff
	s_waitcnt vmcnt(0)
	v_cmp_ngt_f16_e32 vcc_lo, s0, v1
	v_cndmask_b32_e32 v1, s0, v1, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v1, v3
	v_cndmask_b32_e32 v1, v3, v1, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v1, v4
	v_cndmask_b32_e32 v1, v4, v1, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v1, v5
	v_cndmask_b32_e32 v1, v5, v1, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v1, v7
	v_cndmask_b32_e32 v1, v7, v1, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v1, v8
	v_cndmask_b32_e32 v2, v8, v1, vcc_lo
	v_ashrrev_i32_e32 v1, 31, v0
	v_cmp_gt_f16_e32 vcc_lo, v2, v6
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_cndmask_b32_e32 v2, v6, v2, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v2, v9
	v_cndmask_b32_e32 v2, v9, v2, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s4, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v1, vcc_lo
	v_cmp_gt_f16_e32 vcc_lo, v2, v10
	v_cndmask_b32_e32 v2, v10, v2, vcc_lo
	global_store_short v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_max_pool2d_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 12
		.amdhsa_next_free_sgpr 9
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end73:
	.size	tvmgen_default_fused_nn_max_pool2d_kernel0, .Lfunc_end73-tvmgen_default_fused_nn_max_pool2d_kernel0

	.globl	tvmgen_default_fused_nn_softmax_cast_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_softmax_cast_1_kernel0,@function
tvmgen_default_fused_nn_softmax_cast_1_kernel0:
	s_movk_i32 s1, 0x258
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_mul_i32 s6, s6, s1
	s_mov_b32 s0, 0xff7fffff
	v_add_nc_u32_e32 v1, s6, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_add_nc_u32_e32 v5, 0x200, v1
	v_lshlrev_b64 v[3:4], 2, v[1:2]
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	s_clause 0x7
	global_load_dword v14, v[3:4], off
	global_load_dword v13, v[3:4], off offset:256
	global_load_dword v12, v[3:4], off offset:512
	global_load_dword v11, v[3:4], off offset:768
	global_load_dword v10, v[3:4], off offset:1024
	global_load_dword v9, v[3:4], off offset:1280
	global_load_dword v8, v[3:4], off offset:1536
	global_load_dword v7, v[3:4], off offset:1792
	v_add_co_u32 v3, vcc_lo, s2, v5
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v6, vcc_lo
	global_load_dword v5, v[3:4], off
	s_waitcnt vmcnt(8)
	v_cmp_ngt_f32_e32 vcc_lo, s0, v14
	v_cndmask_b32_e32 v3, s0, v14, vcc_lo
	v_cmp_gt_i32_e64 s0, 24, v0
	s_waitcnt vmcnt(7)
	v_cmp_gt_f32_e32 vcc_lo, v3, v13
	v_cndmask_b32_e32 v3, v13, v3, vcc_lo
	s_waitcnt vmcnt(6)
	v_cmp_gt_f32_e32 vcc_lo, v3, v12
	v_cndmask_b32_e32 v3, v12, v3, vcc_lo
	s_waitcnt vmcnt(5)
	v_cmp_gt_f32_e32 vcc_lo, v3, v11
	v_cndmask_b32_e32 v3, v11, v3, vcc_lo
	s_waitcnt vmcnt(4)
	v_cmp_gt_f32_e32 vcc_lo, v3, v10
	v_cndmask_b32_e32 v3, v10, v3, vcc_lo
	s_waitcnt vmcnt(3)
	v_cmp_gt_f32_e32 vcc_lo, v3, v9
	v_cndmask_b32_e32 v4, v9, v3, vcc_lo
	v_add_nc_u32_e32 v3, 0x240, v1
	s_waitcnt vmcnt(2)
	v_cmp_gt_f32_e32 vcc_lo, v4, v8
	v_cndmask_b32_e32 v6, v8, v4, vcc_lo
	v_ashrrev_i32_e32 v4, 31, v3
	s_waitcnt vmcnt(1)
	v_cmp_gt_f32_e32 vcc_lo, v6, v7
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_cndmask_b32_e32 v6, v7, v6, vcc_lo
	s_waitcnt vmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v5
	v_cndmask_b32_e32 v6, v5, v6, vcc_lo
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	s_and_saveexec_b32 s2, s0
	s_cbranch_execz BB74_2
	global_load_dword v15, v[3:4], off
	s_waitcnt vmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v15
	v_cndmask_b32_e32 v6, v15, v6, vcc_lo
BB74_2:
	s_or_b32 exec_lo, exec_lo, s2
	v_mbcnt_lo_u32_b32 v15, -1, 0
	v_mbcnt_hi_u32_b32 v20, -1, v15
	v_lshlrev_b32_e32 v19, 2, v20
	v_cmp_lt_u32_e32 vcc_lo, 31, v20
	v_or_b32_e32 v15, 0x80, v19
	v_add_nc_u32_e32 v16, 64, v19
	v_add_nc_u32_e32 v22, 8, v19
	v_cndmask_b32_e32 v15, v15, v19, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 47, v20
	ds_bpermute_b32 v17, v15, v6
	v_cndmask_b32_e32 v16, v16, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v17
	v_cndmask_b32_e32 v6, v17, v6, vcc_lo
	v_add_nc_u32_e32 v17, 32, v19
	v_cmp_lt_u32_e32 vcc_lo, 55, v20
	ds_bpermute_b32 v18, v16, v6
	v_cndmask_b32_e32 v17, v17, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v18
	v_cndmask_b32_e32 v6, v18, v6, vcc_lo
	v_add_nc_u32_e32 v18, 16, v19
	v_cmp_lt_u32_e32 vcc_lo, 59, v20
	ds_bpermute_b32 v21, v17, v6
	v_cndmask_b32_e32 v18, v18, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v21
	v_cndmask_b32_e32 v6, v21, v6, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 61, v20
	ds_bpermute_b32 v21, v18, v6
	v_cndmask_b32_e32 v19, v22, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v21
	v_cndmask_b32_e32 v6, v21, v6, vcc_lo
	v_cmp_ne_u32_e32 vcc_lo, 63, v20
	ds_bpermute_b32 v21, v19, v6
	v_add_co_ci_u32_e32 v20, vcc_lo, 0, v20, vcc_lo
	v_lshlrev_b32_e32 v20, 2, v20
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v21
	v_cndmask_b32_e32 v6, v21, v6, vcc_lo
	v_mov_b32_e32 v21, 0
	ds_bpermute_b32 v22, v20, v6
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v22
	v_cndmask_b32_e32 v6, v22, v6, vcc_lo
	v_cmp_gt_i32_e32 vcc_lo, s1, v0
	ds_bpermute_b32 v6, v21, v6
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v21, v6
	s_and_saveexec_b32 s2, vcc_lo
	s_cbranch_execnz BB74_24
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s10, 0x218, v0
	s_and_saveexec_b32 s2, s10
	s_cbranch_execnz BB74_25
BB74_4:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s9, 0x1d8, v0
	s_and_saveexec_b32 s2, s9
	s_cbranch_execnz BB74_26
BB74_5:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s8, 0x198, v0
	s_and_saveexec_b32 s2, s8
	s_cbranch_execnz BB74_27
BB74_6:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s7, 0x158, v0
	s_and_saveexec_b32 s2, s7
	s_cbranch_execnz BB74_28
BB74_7:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s6, 0x118, v0
	s_and_saveexec_b32 s2, s6
	s_cbranch_execnz BB74_29
BB74_8:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s3, 0xd8, v0
	s_and_saveexec_b32 s2, s3
	s_cbranch_execnz BB74_30
BB74_9:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s2, 0x98, v0
	s_and_saveexec_b32 s11, s2
	s_cbranch_execnz BB74_31
BB74_10:
	s_or_b32 exec_lo, exec_lo, s11
	v_cmp_gt_i32_e64 s1, 0x58, v0
	s_and_saveexec_b32 s12, s1
	s_cbranch_execnz BB74_32
BB74_11:
	s_or_b32 exec_lo, exec_lo, s12
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_and_saveexec_b32 s5, s0
	s_cbranch_execz BB74_13
BB74_12:
	global_load_dword v0, v[3:4], off
	s_mov_b32 s4, 0x39a3b295
	s_mov_b32 s11, 0x3fb8a000
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v0, v0, v6
	v_and_b32_e32 v22, 0xfffff000, v0
	v_sub_f32_e32 v23, v0, v22
	v_mul_f32_e32 v25, s11, v22
	v_mul_f32_e32 v24, s4, v23
	v_fmac_f32_e32 v24, s11, v23
	v_rndne_f32_e32 v23, v25
	v_fmac_f32_e32 v24, s4, v22
	v_fma_f32 v22, v22, s11, -v23
	v_cvt_i32_f32_e32 v23, v23
	v_cmp_ngt_f32_e64 s4, 0xc2ce8ed0, v0
	v_add_f32_e32 v22, v22, v24
	v_exp_f32_e32 v22, v22
	v_ldexp_f32 v22, v22, v23
	v_cndmask_b32_e64 v22, 0, v22, s4
	v_cmp_nlt_f32_e64 s4, 0x42b17218, v0
	v_cndmask_b32_e64 v0, 0x7f800000, v22, s4
	v_add_f32_e32 v21, v21, v0
BB74_13:
	s_or_b32 exec_lo, exec_lo, s5
	ds_bpermute_b32 v0, v15, v21
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v21, v0
	ds_bpermute_b32 v15, v16, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v17, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v18, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v19, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v20, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	v_mov_b32_e32 v15, 0
	ds_bpermute_b32 v0, v15, v0
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v15, v0 offset:4
	s_and_saveexec_b32 s4, vcc_lo
	s_xor_b32 s4, exec_lo, s4
	s_cbranch_execnz BB74_33
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s10
	s_cbranch_execnz BB74_34
BB74_15:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s9
	s_cbranch_execnz BB74_35
BB74_16:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s8
	s_cbranch_execnz BB74_36
BB74_17:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s7
	s_cbranch_execnz BB74_37
BB74_18:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s6
	s_cbranch_execnz BB74_38
BB74_19:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s3
	s_cbranch_execnz BB74_39
BB74_20:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s3, s2
	s_cbranch_execnz BB74_40
BB74_21:
	s_or_b32 exec_lo, exec_lo, s3
	s_and_saveexec_b32 s2, s1
	s_cbranch_execnz BB74_41
BB74_22:
	s_or_b32 exec_lo, exec_lo, s2
	s_and_saveexec_b32 s1, s0
	s_cbranch_execnz BB74_42
BB74_23:
	s_endpgm
BB74_24:
	v_sub_f32_e32 v21, v14, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v22, 0xfffff000, v21
	v_sub_f32_e32 v23, v21, v22
	v_mul_f32_e32 v25, s3, v22
	v_mul_f32_e32 v24, s1, v23
	v_fmac_f32_e32 v24, s3, v23
	v_rndne_f32_e32 v23, v25
	v_fmac_f32_e32 v24, s1, v22
	v_fma_f32 v22, v22, s3, -v23
	v_cvt_i32_f32_e32 v23, v23
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v21
	v_add_f32_e32 v22, v22, v24
	v_exp_f32_e32 v22, v22
	v_ldexp_f32 v22, v22, v23
	v_add_f32_e32 v22, 0, v22
	v_cndmask_b32_e64 v22, 0, v22, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v21
	v_cndmask_b32_e64 v21, 0x7f800000, v22, s1
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s10, 0x218, v0
	s_and_saveexec_b32 s2, s10
	s_cbranch_execz BB74_4
BB74_25:
	v_sub_f32_e32 v22, v13, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s9, 0x1d8, v0
	s_and_saveexec_b32 s2, s9
	s_cbranch_execz BB74_5
BB74_26:
	v_sub_f32_e32 v22, v12, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s8, 0x198, v0
	s_and_saveexec_b32 s2, s8
	s_cbranch_execz BB74_6
BB74_27:
	v_sub_f32_e32 v22, v11, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s7, 0x158, v0
	s_and_saveexec_b32 s2, s7
	s_cbranch_execz BB74_7
BB74_28:
	v_sub_f32_e32 v22, v10, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s6, 0x118, v0
	s_and_saveexec_b32 s2, s6
	s_cbranch_execz BB74_8
BB74_29:
	v_sub_f32_e32 v22, v9, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s3, 0xd8, v0
	s_and_saveexec_b32 s2, s3
	s_cbranch_execz BB74_9
BB74_30:
	v_sub_f32_e32 v22, v8, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s11, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s11, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s11, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s11, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s2, 0x98, v0
	s_and_saveexec_b32 s11, s2
	s_cbranch_execz BB74_10
BB74_31:
	v_sub_f32_e32 v22, v7, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s12, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s12, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s12, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s12, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s11
	v_cmp_gt_i32_e64 s1, 0x58, v0
	s_and_saveexec_b32 s12, s1
	s_cbranch_execz BB74_11
BB74_32:
	v_sub_f32_e32 v0, v5, v6
	s_mov_b32 s11, 0x39a3b295
	s_mov_b32 s13, 0x3fb8a000
	v_and_b32_e32 v22, 0xfffff000, v0
	v_sub_f32_e32 v23, v0, v22
	v_mul_f32_e32 v25, s13, v22
	v_mul_f32_e32 v24, s11, v23
	v_fmac_f32_e32 v24, s13, v23
	v_rndne_f32_e32 v23, v25
	v_fmac_f32_e32 v24, s11, v22
	v_fma_f32 v22, v22, s13, -v23
	v_cvt_i32_f32_e32 v23, v23
	v_cmp_ngt_f32_e64 s11, 0xc2ce8ed0, v0
	v_add_f32_e32 v22, v22, v24
	v_exp_f32_e32 v22, v22
	v_ldexp_f32 v22, v22, v23
	v_cndmask_b32_e64 v22, 0, v22, s11
	v_cmp_nlt_f32_e64 s11, 0x42b17218, v0
	v_cndmask_b32_e64 v0, 0x7f800000, v22, s11
	v_add_f32_e32 v21, v21, v0
	s_or_b32 exec_lo, exec_lo, s12
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_and_saveexec_b32 s5, s0
	s_cbranch_execnz BB74_12
	s_branch BB74_13
BB74_33:
	v_sub_f32_e32 v14, v14, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s11, 0x39a3b295
	v_and_b32_e32 v15, 0xfffff000, v14
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v14
	v_sub_f32_e32 v16, v14, v15
	v_mul_f32_e32 v17, s5, v15
	v_mul_f32_e32 v18, s11, v16
	v_rndne_f32_e32 v17, v17
	v_fmac_f32_e32 v18, s5, v16
	v_fma_f32 v16, v15, s5, -v17
	v_fmac_f32_e32 v18, s11, v15
	v_add_f32_e32 v15, v16, v18
	v_cvt_i32_f32_e32 v16, v17
	v_exp_f32_e32 v15, v15
	v_ldexp_f32 v15, v15, v16
	v_cndmask_b32_e32 v15, 0, v15, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v14
	v_cndmask_b32_e32 v14, 0x7f800000, v15, vcc_lo
	v_div_scale_f32 v15, s5, v0, v0, v14
	v_div_scale_f32 v18, vcc_lo, v14, v0, v14
	v_rcp_f32_e32 v16, v15
	v_fma_f32 v17, -v15, v16, 1.0
	v_fmac_f32_e32 v16, v17, v16
	v_mul_f32_e32 v17, v18, v16
	v_fma_f32 v19, v17, -v15, v18
	v_fmac_f32_e32 v17, v19, v16
	v_fmac_f32_e64 v18, -v15, v17
	v_div_fmas_f32 v15, v18, v16, v17
	v_div_fixup_f32 v16, v15, v0, v14
	v_lshlrev_b64 v[14:15], 1, v[1:2]
	v_cvt_f16_f32_e32 v16, v16
	v_add_co_u32 v14, vcc_lo, s12, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s13, v15, vcc_lo
	global_store_short v[14:15], v16, off
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s10
	s_cbranch_execz BB74_15
BB74_34:
	v_sub_f32_e32 v13, v13, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s10, 0x39a3b295
	v_and_b32_e32 v14, 0xfffff000, v13
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v13
	v_sub_f32_e32 v15, v13, v14
	v_mul_f32_e32 v16, s5, v14
	v_mul_f32_e32 v17, s10, v15
	v_rndne_f32_e32 v16, v16
	v_fmac_f32_e32 v17, s5, v15
	v_fma_f32 v15, v14, s5, -v16
	v_fmac_f32_e32 v17, s10, v14
	v_add_f32_e32 v14, v15, v17
	v_cvt_i32_f32_e32 v15, v16
	v_exp_f32_e32 v14, v14
	v_ldexp_f32 v14, v14, v15
	v_cndmask_b32_e32 v14, 0, v14, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v13
	v_cndmask_b32_e32 v13, 0x7f800000, v14, vcc_lo
	v_div_scale_f32 v14, s5, v0, v0, v13
	v_div_scale_f32 v17, vcc_lo, v13, v0, v13
	v_rcp_f32_e32 v15, v14
	v_fma_f32 v16, -v14, v15, 1.0
	v_fmac_f32_e32 v15, v16, v15
	v_mul_f32_e32 v16, v17, v15
	v_fma_f32 v18, v16, -v14, v17
	v_fmac_f32_e32 v16, v18, v15
	v_fmac_f32_e64 v17, -v14, v16
	v_div_fmas_f32 v14, v17, v15, v16
	v_div_fixup_f32 v15, v14, v0, v13
	v_lshlrev_b64 v[13:14], 1, v[1:2]
	v_cvt_f16_f32_e32 v15, v15
	v_add_co_u32 v13, vcc_lo, s12, v13
	v_add_co_ci_u32_e32 v14, vcc_lo, s13, v14, vcc_lo
	global_store_short v[13:14], v15, off offset:128
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s9
	s_cbranch_execz BB74_16
BB74_35:
	v_sub_f32_e32 v12, v12, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s9, 0x39a3b295
	v_and_b32_e32 v13, 0xfffff000, v12
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v12
	v_sub_f32_e32 v14, v12, v13
	v_mul_f32_e32 v15, s5, v13
	v_mul_f32_e32 v16, s9, v14
	v_rndne_f32_e32 v15, v15
	v_fmac_f32_e32 v16, s5, v14
	v_fma_f32 v14, v13, s5, -v15
	v_fmac_f32_e32 v16, s9, v13
	v_add_f32_e32 v13, v14, v16
	v_cvt_i32_f32_e32 v14, v15
	v_exp_f32_e32 v13, v13
	v_ldexp_f32 v13, v13, v14
	v_cndmask_b32_e32 v13, 0, v13, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v12
	v_cndmask_b32_e32 v12, 0x7f800000, v13, vcc_lo
	v_div_scale_f32 v13, s5, v0, v0, v12
	v_div_scale_f32 v16, vcc_lo, v12, v0, v12
	v_rcp_f32_e32 v14, v13
	v_fma_f32 v15, -v13, v14, 1.0
	v_fmac_f32_e32 v14, v15, v14
	v_mul_f32_e32 v15, v16, v14
	v_fma_f32 v17, v15, -v13, v16
	v_fmac_f32_e32 v15, v17, v14
	v_fmac_f32_e64 v16, -v13, v15
	v_div_fmas_f32 v13, v16, v14, v15
	v_div_fixup_f32 v14, v13, v0, v12
	v_lshlrev_b64 v[12:13], 1, v[1:2]
	v_cvt_f16_f32_e32 v14, v14
	v_add_co_u32 v12, vcc_lo, s12, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s13, v13, vcc_lo
	global_store_short v[12:13], v14, off offset:256
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s8
	s_cbranch_execz BB74_17
BB74_36:
	v_sub_f32_e32 v11, v11, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s8, 0x39a3b295
	v_and_b32_e32 v12, 0xfffff000, v11
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v11
	v_sub_f32_e32 v13, v11, v12
	v_mul_f32_e32 v14, s5, v12
	v_mul_f32_e32 v15, s8, v13
	v_rndne_f32_e32 v14, v14
	v_fmac_f32_e32 v15, s5, v13
	v_fma_f32 v13, v12, s5, -v14
	v_fmac_f32_e32 v15, s8, v12
	v_add_f32_e32 v12, v13, v15
	v_cvt_i32_f32_e32 v13, v14
	v_exp_f32_e32 v12, v12
	v_ldexp_f32 v12, v12, v13
	v_cndmask_b32_e32 v12, 0, v12, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v11
	v_cndmask_b32_e32 v11, 0x7f800000, v12, vcc_lo
	v_div_scale_f32 v12, s5, v0, v0, v11
	v_div_scale_f32 v15, vcc_lo, v11, v0, v11
	v_rcp_f32_e32 v13, v12
	v_fma_f32 v14, -v12, v13, 1.0
	v_fmac_f32_e32 v13, v14, v13
	v_mul_f32_e32 v14, v15, v13
	v_fma_f32 v16, v14, -v12, v15
	v_fmac_f32_e32 v14, v16, v13
	v_fmac_f32_e64 v15, -v12, v14
	v_div_fmas_f32 v12, v15, v13, v14
	v_div_fixup_f32 v13, v12, v0, v11
	v_lshlrev_b64 v[11:12], 1, v[1:2]
	v_cvt_f16_f32_e32 v13, v13
	v_add_co_u32 v11, vcc_lo, s12, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s13, v12, vcc_lo
	global_store_short v[11:12], v13, off offset:384
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s7
	s_cbranch_execz BB74_18
BB74_37:
	v_sub_f32_e32 v10, v10, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s7, 0x39a3b295
	v_and_b32_e32 v11, 0xfffff000, v10
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v10
	v_sub_f32_e32 v12, v10, v11
	v_mul_f32_e32 v13, s5, v11
	v_mul_f32_e32 v14, s7, v12
	v_rndne_f32_e32 v13, v13
	v_fmac_f32_e32 v14, s5, v12
	v_fma_f32 v12, v11, s5, -v13
	v_fmac_f32_e32 v14, s7, v11
	v_add_f32_e32 v11, v12, v14
	v_cvt_i32_f32_e32 v12, v13
	v_exp_f32_e32 v11, v11
	v_ldexp_f32 v11, v11, v12
	v_cndmask_b32_e32 v11, 0, v11, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v10
	v_cndmask_b32_e32 v10, 0x7f800000, v11, vcc_lo
	v_div_scale_f32 v11, s5, v0, v0, v10
	v_div_scale_f32 v14, vcc_lo, v10, v0, v10
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_div_fixup_f32 v12, v11, v0, v10
	v_lshlrev_b64 v[10:11], 1, v[1:2]
	v_cvt_f16_f32_e32 v12, v12
	v_add_co_u32 v10, vcc_lo, s12, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s13, v11, vcc_lo
	global_store_short v[10:11], v12, off offset:512
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s6
	s_cbranch_execz BB74_19
BB74_38:
	v_sub_f32_e32 v9, v9, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s6, 0x39a3b295
	v_and_b32_e32 v10, 0xfffff000, v9
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v9
	v_sub_f32_e32 v11, v9, v10
	v_mul_f32_e32 v12, s5, v10
	v_mul_f32_e32 v13, s6, v11
	v_rndne_f32_e32 v12, v12
	v_fmac_f32_e32 v13, s5, v11
	v_fma_f32 v11, v10, s5, -v12
	v_fmac_f32_e32 v13, s6, v10
	v_add_f32_e32 v10, v11, v13
	v_cvt_i32_f32_e32 v11, v12
	v_exp_f32_e32 v10, v10
	v_ldexp_f32 v10, v10, v11
	v_cndmask_b32_e32 v10, 0, v10, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v9
	v_cndmask_b32_e32 v9, 0x7f800000, v10, vcc_lo
	v_div_scale_f32 v10, s5, v0, v0, v9
	v_div_scale_f32 v13, vcc_lo, v9, v0, v9
	v_rcp_f32_e32 v11, v10
	v_fma_f32 v12, -v10, v11, 1.0
	v_fmac_f32_e32 v11, v12, v11
	v_mul_f32_e32 v12, v13, v11
	v_fma_f32 v14, v12, -v10, v13
	v_fmac_f32_e32 v12, v14, v11
	v_fmac_f32_e64 v13, -v10, v12
	v_div_fmas_f32 v10, v13, v11, v12
	v_div_fixup_f32 v11, v10, v0, v9
	v_lshlrev_b64 v[9:10], 1, v[1:2]
	v_cvt_f16_f32_e32 v11, v11
	v_add_co_u32 v9, vcc_lo, s12, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v10, vcc_lo
	global_store_short v[9:10], v11, off offset:640
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s3
	s_cbranch_execz BB74_20
BB74_39:
	v_sub_f32_e32 v8, v8, v6
	s_mov_b32 s3, 0x3fb8a000
	s_mov_b32 s5, 0x39a3b295
	v_and_b32_e32 v9, 0xfffff000, v8
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v8
	v_sub_f32_e32 v10, v8, v9
	v_mul_f32_e32 v11, s3, v9
	v_mul_f32_e32 v12, s5, v10
	v_rndne_f32_e32 v11, v11
	v_fmac_f32_e32 v12, s3, v10
	v_fma_f32 v10, v9, s3, -v11
	v_fmac_f32_e32 v12, s5, v9
	v_add_f32_e32 v9, v10, v12
	v_cvt_i32_f32_e32 v10, v11
	v_exp_f32_e32 v9, v9
	v_ldexp_f32 v9, v9, v10
	v_cndmask_b32_e32 v9, 0, v9, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v8
	v_cndmask_b32_e32 v8, 0x7f800000, v9, vcc_lo
	v_div_scale_f32 v9, s3, v0, v0, v8
	v_div_scale_f32 v12, vcc_lo, v8, v0, v8
	v_rcp_f32_e32 v10, v9
	v_fma_f32 v11, -v9, v10, 1.0
	v_fmac_f32_e32 v10, v11, v10
	v_mul_f32_e32 v11, v12, v10
	v_fma_f32 v13, v11, -v9, v12
	v_fmac_f32_e32 v11, v13, v10
	v_fmac_f32_e64 v12, -v9, v11
	v_div_fmas_f32 v9, v12, v10, v11
	v_div_fixup_f32 v10, v9, v0, v8
	v_lshlrev_b64 v[8:9], 1, v[1:2]
	v_cvt_f16_f32_e32 v10, v10
	v_add_co_u32 v8, vcc_lo, s12, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s13, v9, vcc_lo
	global_store_short v[8:9], v10, off offset:768
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s3, s2
	s_cbranch_execz BB74_21
BB74_40:
	v_sub_f32_e32 v7, v7, v6
	s_mov_b32 s2, 0x3fb8a000
	s_mov_b32 s4, 0x39a3b295
	v_and_b32_e32 v8, 0xfffff000, v7
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v7
	v_sub_f32_e32 v9, v7, v8
	v_mul_f32_e32 v10, s2, v8
	v_mul_f32_e32 v11, s4, v9
	v_rndne_f32_e32 v10, v10
	v_fmac_f32_e32 v11, s2, v9
	v_fma_f32 v9, v8, s2, -v10
	v_fmac_f32_e32 v11, s4, v8
	v_add_f32_e32 v8, v9, v11
	v_cvt_i32_f32_e32 v9, v10
	v_exp_f32_e32 v8, v8
	v_ldexp_f32 v8, v8, v9
	v_cndmask_b32_e32 v8, 0, v8, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v7
	v_cndmask_b32_e32 v7, 0x7f800000, v8, vcc_lo
	v_div_scale_f32 v8, s2, v0, v0, v7
	v_div_scale_f32 v11, vcc_lo, v7, v0, v7
	v_rcp_f32_e32 v9, v8
	v_fma_f32 v10, -v8, v9, 1.0
	v_fmac_f32_e32 v9, v10, v9
	v_mul_f32_e32 v10, v11, v9
	v_fma_f32 v12, v10, -v8, v11
	v_fmac_f32_e32 v10, v12, v9
	v_fmac_f32_e64 v11, -v8, v10
	v_div_fmas_f32 v8, v11, v9, v10
	v_div_fixup_f32 v9, v8, v0, v7
	v_lshlrev_b64 v[7:8], 1, v[1:2]
	v_cvt_f16_f32_e32 v9, v9
	v_add_co_u32 v7, vcc_lo, s12, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v8, vcc_lo
	global_store_short v[7:8], v9, off offset:896
	s_or_b32 exec_lo, exec_lo, s3
	s_and_saveexec_b32 s2, s1
	s_cbranch_execz BB74_22
BB74_41:
	v_sub_f32_e32 v5, v5, v6
	s_mov_b32 s1, 0x3fb8a000
	s_mov_b32 s3, 0x39a3b295
	v_and_b32_e32 v7, 0xfffff000, v5
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v5
	v_sub_f32_e32 v8, v5, v7
	v_mul_f32_e32 v9, s1, v7
	v_mul_f32_e32 v10, s3, v8
	v_rndne_f32_e32 v9, v9
	v_fmac_f32_e32 v10, s1, v8
	v_fma_f32 v8, v7, s1, -v9
	v_fmac_f32_e32 v10, s3, v7
	v_add_f32_e32 v7, v8, v10
	v_cvt_i32_f32_e32 v8, v9
	v_exp_f32_e32 v7, v7
	v_ldexp_f32 v7, v7, v8
	v_cndmask_b32_e32 v7, 0, v7, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v5
	v_cndmask_b32_e32 v5, 0x7f800000, v7, vcc_lo
	v_div_scale_f32 v7, s1, v0, v0, v5
	v_div_scale_f32 v10, vcc_lo, v5, v0, v5
	v_rcp_f32_e32 v8, v7
	v_fma_f32 v9, -v7, v8, 1.0
	v_fmac_f32_e32 v8, v9, v8
	v_mul_f32_e32 v9, v10, v8
	v_fma_f32 v11, v9, -v7, v10
	v_fmac_f32_e32 v9, v11, v8
	v_fmac_f32_e64 v10, -v7, v9
	v_div_fmas_f32 v7, v10, v8, v9
	v_div_fixup_f32 v5, v7, v0, v5
	v_lshlrev_b64 v[7:8], 1, v[1:2]
	v_cvt_f16_f32_e32 v5, v5
	v_add_co_u32 v7, vcc_lo, s12, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v8, vcc_lo
	global_store_short v[7:8], v5, off offset:1024
	s_or_b32 exec_lo, exec_lo, s2
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB74_23
BB74_42:
	global_load_dword v3, v[3:4], off
	s_mov_b32 s0, 0x3fb8a000
	s_mov_b32 s1, 0x39a3b295
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v3, v3, v6
	v_and_b32_e32 v4, 0xfffff000, v3
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v3
	v_sub_f32_e32 v5, v3, v4
	v_mul_f32_e32 v6, s0, v4
	v_mul_f32_e32 v7, s1, v5
	v_rndne_f32_e32 v6, v6
	v_fmac_f32_e32 v7, s0, v5
	v_fma_f32 v5, v4, s0, -v6
	v_fmac_f32_e32 v7, s1, v4
	v_add_f32_e32 v4, v5, v7
	v_cvt_i32_f32_e32 v5, v6
	v_exp_f32_e32 v4, v4
	v_ldexp_f32 v4, v4, v5
	v_cndmask_b32_e32 v4, 0, v4, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v3
	v_cndmask_b32_e32 v3, 0x7f800000, v4, vcc_lo
	v_div_scale_f32 v4, s0, v0, v0, v3
	v_div_scale_f32 v7, vcc_lo, v3, v0, v3
	v_rcp_f32_e32 v5, v4
	v_fma_f32 v6, -v4, v5, 1.0
	v_fmac_f32_e32 v5, v6, v5
	v_mul_f32_e32 v6, v7, v5
	v_fma_f32 v8, v6, -v4, v7
	v_fmac_f32_e32 v6, v8, v5
	v_fmac_f32_e64 v7, -v4, v6
	v_div_fmas_f32 v4, v7, v5, v6
	v_div_fixup_f32 v3, v4, v0, v3
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_cvt_f16_f32_e32 v2, v3
	v_add_co_u32 v0, vcc_lo, s12, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo
	global_store_short v[0:1], v2, off offset:1152
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_softmax_cast_1_kernel0
		.amdhsa_group_segment_fixed_size 8
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 27
		.amdhsa_next_free_sgpr 14
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end74:
	.size	tvmgen_default_fused_nn_softmax_cast_1_kernel0, .Lfunc_end74-tvmgen_default_fused_nn_softmax_cast_1_kernel0

	.globl	tvmgen_default_fused_nn_softmax_cast_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_softmax_cast_2_kernel0,@function
tvmgen_default_fused_nn_softmax_cast_2_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_mulk_i32 s6, 0x64
	v_add_nc_u32_e32 v1, s6, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[3:4], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s0, v3
	s_mov_b32 s0, 0xff7fffff
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v4, vcc_lo
	s_clause 0x1
	global_load_dword v4, v[5:6], off
	global_load_dword v3, v[5:6], off offset:200
	v_lshlrev_b32_e32 v5, 2, v0
	s_waitcnt vmcnt(0)
	s_barrier 
	v_cmp_ngt_f32_e32 vcc_lo, s0, v4
	v_cndmask_b32_e32 v6, s0, v4, vcc_lo
	v_cmp_gt_f32_e32 vcc_lo, v6, v3
	v_cndmask_b32_e32 v6, v3, v6, vcc_lo
	v_cmp_gt_i32_e32 vcc_lo, 18, v0
	ds_write_b32 v5, v6
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s1, vcc_lo
	s_cbranch_execz BB75_2
	ds_read_b32 v6, v5
	ds_read_b32 v7, v5 offset:128
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e64 s0, v6, v7
	v_cndmask_b32_e64 v6, v7, v6, s0
	ds_write_b32 v5, v6
BB75_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_cmp_gt_i32_e64 s0, 16, v0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s2, s0
	s_cbranch_execz BB75_4
	ds_read_b32 v6, v5
	ds_read_b32 v7, v5 offset:64
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e64 s1, v6, v7
	v_cndmask_b32_e64 v6, v7, v6, s1
	ds_write_b32 v5, v6
	ds_read_b32 v6, v5
	ds_read_b32 v7, v5 offset:32
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e64 s1, v6, v7
	v_cndmask_b32_e64 v6, v7, v6, s1
	ds_write_b32 v5, v6
	ds_read_b32 v6, v5
	ds_read_b32 v7, v5 offset:16
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e64 s1, v6, v7
	v_cndmask_b32_e64 v6, v7, v6, s1
	ds_write_b32 v5, v6
	ds_read_b32 v6, v5
	ds_read_b32 v7, v5 offset:8
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e64 s1, v6, v7
	v_cndmask_b32_e64 v6, v7, v6, s1
	ds_write_b32 v5, v6
	ds_read_b32 v6, v5
	ds_read_b32 v7, v5 offset:4
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e64 s1, v6, v7
	v_cndmask_b32_e64 v6, v7, v6, s1
	ds_write_b32 v5, v6
BB75_4:
	s_or_b32 exec_lo, exec_lo, s2
	v_mov_b32_e32 v5, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_mov_b32 s1, 0x3fb8a000
	s_mov_b32 s2, 0x39a3b295
	ds_read_b32 v6, v5
	s_waitcnt lgkmcnt(0)
	v_sub_f32_e32 v7, v4, v6
	v_sub_f32_e32 v8, v3, v6
	ds_write_b32 v5, v6 offset:400
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_and_b32_e32 v9, 0xfffff000, v7
	v_and_b32_e32 v10, 0xfffff000, v8
	v_sub_f32_e32 v11, v7, v9
	v_sub_f32_e32 v12, v8, v10
	v_mul_f32_e32 v13, s1, v9
	v_mul_f32_e32 v15, s1, v10
	v_mul_f32_e32 v14, s2, v11
	v_mul_f32_e32 v16, s2, v12
	v_rndne_f32_e32 v13, v13
	v_fmac_f32_e32 v14, s1, v11
	v_fmac_f32_e32 v16, s1, v12
	v_rndne_f32_e32 v11, v15
	v_fma_f32 v12, v9, s1, -v13
	v_fmac_f32_e32 v14, s2, v9
	v_fmac_f32_e32 v16, s2, v10
	v_fma_f32 v9, v10, s1, -v11
	v_cvt_i32_f32_e32 v11, v11
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	v_add_f32_e32 v10, v12, v14
	v_cvt_i32_f32_e32 v12, v13
	v_add_f32_e32 v9, v9, v16
	s_mov_b32 s4, 0xc2ce8ed0
	s_mov_b32 s5, 0x42b17218
	v_exp_f32_e32 v10, v10
	v_cmp_ngt_f32_e64 s1, s4, v8
	v_exp_f32_e32 v9, v9
	v_ldexp_f32 v10, v10, v12
	v_ldexp_f32 v9, v9, v11
	v_add_f32_e32 v10, 0, v10
	v_cndmask_b32_e64 v9, 0, v9, s1
	v_cmp_ngt_f32_e64 s1, s4, v7
	s_mov_b32 s4, 0x7f800000
	v_cndmask_b32_e64 v10, 0, v10, s1
	v_cmp_nlt_f32_e64 s1, s5, v8
	v_cndmask_b32_e64 v8, s4, v9, s1
	v_cmp_nlt_f32_e64 s1, s5, v7
	v_lshlrev_b32_e32 v9, 2, v0
	v_cndmask_b32_e64 v7, s4, v10, s1
	v_add_nc_u32_e32 v0, 0xc8, v9
	v_add_f32_e32 v7, v7, v8
	ds_write_b32 v9, v7 offset:200
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s1, vcc_lo
	s_cbranch_execz BB75_6
	ds_read_b32 v5, v0 offset:128
	ds_read_b32 v6, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v5, v5, v6
	ds_write_b32 v0, v5
BB75_6:
	s_or_b32 exec_lo, exec_lo, s1
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB75_8
	ds_read_b32 v5, v0 offset:64
	ds_read_b32 v6, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v5, v5, v6
	ds_write_b32 v0, v5
	ds_read_b32 v5, v0 offset:32
	ds_read_b32 v6, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v5, v5, v6
	ds_write_b32 v0, v5
	ds_read_b32 v5, v0 offset:16
	ds_read_b32 v6, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v5, v5, v6
	ds_write_b32 v0, v5
	ds_read_b32 v5, v0 offset:8
	ds_read_b32 v6, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v5, v5, v6
	ds_write_b32 v0, v5
	ds_read_b32 v5, v0 offset:4
	ds_read_b32 v6, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v5, v5, v6
	ds_write_b32 v0, v5
BB75_8:
	s_or_b32 exec_lo, exec_lo, s1
	v_mov_b32_e32 v5, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_mov_b32 s0, 0x3fb8a000
	s_mov_b32 s1, 0x39a3b295
	ds_read_b32 v6, v5 offset:200
	ds_read_b32 v0, v5 offset:400
	s_waitcnt lgkmcnt(1)
	ds_write_b32 v5, v6 offset:404
	s_waitcnt lgkmcnt(1)
	v_sub_f32_e32 v4, v4, v0
	v_sub_f32_e32 v0, v3, v0
	v_and_b32_e32 v3, 0xfffff000, v4
	v_and_b32_e32 v7, 0xfffff000, v0
	v_sub_f32_e32 v8, v4, v3
	v_mul_f32_e32 v10, s0, v3
	v_sub_f32_e32 v9, v0, v7
	v_mul_f32_e32 v12, s0, v7
	v_mul_f32_e32 v11, s1, v8
	v_rndne_f32_e32 v10, v10
	v_mul_f32_e32 v13, s1, v9
	v_fmac_f32_e32 v11, s0, v8
	v_rndne_f32_e32 v8, v12
	v_fmac_f32_e32 v13, s0, v9
	v_fma_f32 v9, v3, s0, -v10
	v_fmac_f32_e32 v11, s1, v3
	v_fma_f32 v3, v7, s0, -v8
	v_fmac_f32_e32 v13, s1, v7
	s_mov_b32 s0, 0xc2ce8ed0
	v_cvt_i32_f32_e32 v8, v8
	v_add_f32_e32 v7, v9, v11
	v_cvt_i32_f32_e32 v9, v10
	v_add_f32_e32 v3, v3, v13
	v_cmp_ngt_f32_e32 vcc_lo, s0, v4
	s_mov_b32 s1, 0x42b17218
	v_exp_f32_e32 v7, v7
	v_exp_f32_e32 v3, v3
	v_ldexp_f32 v7, v7, v9
	v_ldexp_f32 v3, v3, v8
	v_cndmask_b32_e32 v7, 0, v7, vcc_lo
	v_cmp_ngt_f32_e32 vcc_lo, s0, v0
	s_mov_b32 s0, 0x7f800000
	v_cndmask_b32_e32 v3, 0, v3, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, s1, v4
	v_cndmask_b32_e32 v4, s0, v7, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, s1, v0
	v_cndmask_b32_e32 v3, s0, v3, vcc_lo
	v_div_scale_f32 v0, s0, v6, v6, v4
	v_div_scale_f32 v12, vcc_lo, v4, v6, v4
	v_div_scale_f32 v7, s0, v6, v6, v3
	v_rcp_f32_e32 v8, v0
	v_rcp_f32_e32 v9, v7
	v_fma_f32 v10, -v0, v8, 1.0
	v_fma_f32 v11, -v7, v9, 1.0
	v_fmac_f32_e32 v8, v10, v8
	v_div_scale_f32 v10, s0, v3, v6, v3
	v_fmac_f32_e32 v9, v11, v9
	v_mul_f32_e32 v11, v12, v8
	v_mul_f32_e32 v13, v10, v9
	v_fma_f32 v14, v11, -v0, v12
	v_fma_f32 v15, v13, -v7, v10
	v_fmac_f32_e32 v11, v14, v8
	v_fmac_f32_e32 v13, v15, v9
	v_fmac_f32_e64 v12, -v0, v11
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_fmac_f32_e64 v10, -v7, v13
	v_div_fmas_f32 v7, v12, v8, v11
	s_mov_b32 vcc_lo, s0
	v_div_fmas_f32 v8, v10, v9, v13
	v_div_fixup_f32 v2, v7, v6, v4
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	v_div_fixup_f32 v3, v8, v6, v3
	v_cvt_f16_f32_e32 v2, v2
	v_cvt_f16_f32_e32 v3, v3
	global_store_short v[0:1], v2, off
	global_store_short v[0:1], v3, off offset:100
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_softmax_cast_2_kernel0
		.amdhsa_group_segment_fixed_size 408
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 17
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end75:
	.size	tvmgen_default_fused_nn_softmax_cast_2_kernel0, .Lfunc_end75-tvmgen_default_fused_nn_softmax_cast_2_kernel0

	.globl	tvmgen_default_fused_nn_softmax_cast_kernel0
	.p2align	8
	.type	tvmgen_default_fused_nn_softmax_cast_kernel0,@function
tvmgen_default_fused_nn_softmax_cast_kernel0:
	s_movk_i32 s1, 0x258
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_mul_i32 s6, s6, s1
	s_mov_b32 s0, 0xff7fffff
	v_add_nc_u32_e32 v1, s6, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_add_nc_u32_e32 v5, 0x200, v1
	v_lshlrev_b64 v[3:4], 2, v[1:2]
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	s_clause 0x7
	global_load_dword v14, v[3:4], off
	global_load_dword v13, v[3:4], off offset:256
	global_load_dword v12, v[3:4], off offset:512
	global_load_dword v11, v[3:4], off offset:768
	global_load_dword v10, v[3:4], off offset:1024
	global_load_dword v9, v[3:4], off offset:1280
	global_load_dword v8, v[3:4], off offset:1536
	global_load_dword v7, v[3:4], off offset:1792
	v_add_co_u32 v3, vcc_lo, s2, v5
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v6, vcc_lo
	global_load_dword v5, v[3:4], off
	s_waitcnt vmcnt(8)
	v_cmp_ngt_f32_e32 vcc_lo, s0, v14
	v_cndmask_b32_e32 v3, s0, v14, vcc_lo
	v_cmp_gt_i32_e64 s0, 24, v0
	s_waitcnt vmcnt(7)
	v_cmp_gt_f32_e32 vcc_lo, v3, v13
	v_cndmask_b32_e32 v3, v13, v3, vcc_lo
	s_waitcnt vmcnt(6)
	v_cmp_gt_f32_e32 vcc_lo, v3, v12
	v_cndmask_b32_e32 v3, v12, v3, vcc_lo
	s_waitcnt vmcnt(5)
	v_cmp_gt_f32_e32 vcc_lo, v3, v11
	v_cndmask_b32_e32 v3, v11, v3, vcc_lo
	s_waitcnt vmcnt(4)
	v_cmp_gt_f32_e32 vcc_lo, v3, v10
	v_cndmask_b32_e32 v3, v10, v3, vcc_lo
	s_waitcnt vmcnt(3)
	v_cmp_gt_f32_e32 vcc_lo, v3, v9
	v_cndmask_b32_e32 v4, v9, v3, vcc_lo
	v_add_nc_u32_e32 v3, 0x240, v1
	s_waitcnt vmcnt(2)
	v_cmp_gt_f32_e32 vcc_lo, v4, v8
	v_cndmask_b32_e32 v6, v8, v4, vcc_lo
	v_ashrrev_i32_e32 v4, 31, v3
	s_waitcnt vmcnt(1)
	v_cmp_gt_f32_e32 vcc_lo, v6, v7
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_cndmask_b32_e32 v6, v7, v6, vcc_lo
	s_waitcnt vmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v5
	v_cndmask_b32_e32 v6, v5, v6, vcc_lo
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	s_and_saveexec_b32 s2, s0
	s_cbranch_execz BB76_2
	global_load_dword v15, v[3:4], off
	s_waitcnt vmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v15
	v_cndmask_b32_e32 v6, v15, v6, vcc_lo
BB76_2:
	s_or_b32 exec_lo, exec_lo, s2
	v_mbcnt_lo_u32_b32 v15, -1, 0
	v_mbcnt_hi_u32_b32 v20, -1, v15
	v_lshlrev_b32_e32 v19, 2, v20
	v_cmp_lt_u32_e32 vcc_lo, 31, v20
	v_or_b32_e32 v15, 0x80, v19
	v_add_nc_u32_e32 v16, 64, v19
	v_add_nc_u32_e32 v22, 8, v19
	v_cndmask_b32_e32 v15, v15, v19, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 47, v20
	ds_bpermute_b32 v17, v15, v6
	v_cndmask_b32_e32 v16, v16, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v17
	v_cndmask_b32_e32 v6, v17, v6, vcc_lo
	v_add_nc_u32_e32 v17, 32, v19
	v_cmp_lt_u32_e32 vcc_lo, 55, v20
	ds_bpermute_b32 v18, v16, v6
	v_cndmask_b32_e32 v17, v17, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v18
	v_cndmask_b32_e32 v6, v18, v6, vcc_lo
	v_add_nc_u32_e32 v18, 16, v19
	v_cmp_lt_u32_e32 vcc_lo, 59, v20
	ds_bpermute_b32 v21, v17, v6
	v_cndmask_b32_e32 v18, v18, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v21
	v_cndmask_b32_e32 v6, v21, v6, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 61, v20
	ds_bpermute_b32 v21, v18, v6
	v_cndmask_b32_e32 v19, v22, v19, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v21
	v_cndmask_b32_e32 v6, v21, v6, vcc_lo
	v_cmp_ne_u32_e32 vcc_lo, 63, v20
	ds_bpermute_b32 v21, v19, v6
	v_add_co_ci_u32_e32 v20, vcc_lo, 0, v20, vcc_lo
	v_lshlrev_b32_e32 v20, 2, v20
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v21
	v_cndmask_b32_e32 v6, v21, v6, vcc_lo
	v_mov_b32_e32 v21, 0
	ds_bpermute_b32 v22, v20, v6
	s_waitcnt lgkmcnt(0)
	v_cmp_gt_f32_e32 vcc_lo, v6, v22
	v_cndmask_b32_e32 v6, v22, v6, vcc_lo
	v_cmp_gt_i32_e32 vcc_lo, s1, v0
	ds_bpermute_b32 v6, v21, v6
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v21, v6
	s_and_saveexec_b32 s2, vcc_lo
	s_cbranch_execnz BB76_24
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s10, 0x218, v0
	s_and_saveexec_b32 s2, s10
	s_cbranch_execnz BB76_25
BB76_4:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s9, 0x1d8, v0
	s_and_saveexec_b32 s2, s9
	s_cbranch_execnz BB76_26
BB76_5:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s8, 0x198, v0
	s_and_saveexec_b32 s2, s8
	s_cbranch_execnz BB76_27
BB76_6:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s7, 0x158, v0
	s_and_saveexec_b32 s2, s7
	s_cbranch_execnz BB76_28
BB76_7:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s6, 0x118, v0
	s_and_saveexec_b32 s2, s6
	s_cbranch_execnz BB76_29
BB76_8:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s3, 0xd8, v0
	s_and_saveexec_b32 s2, s3
	s_cbranch_execnz BB76_30
BB76_9:
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s2, 0x98, v0
	s_and_saveexec_b32 s11, s2
	s_cbranch_execnz BB76_31
BB76_10:
	s_or_b32 exec_lo, exec_lo, s11
	v_cmp_gt_i32_e64 s1, 0x58, v0
	s_and_saveexec_b32 s12, s1
	s_cbranch_execnz BB76_32
BB76_11:
	s_or_b32 exec_lo, exec_lo, s12
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_and_saveexec_b32 s5, s0
	s_cbranch_execz BB76_13
BB76_12:
	global_load_dword v0, v[3:4], off
	s_mov_b32 s4, 0x39a3b295
	s_mov_b32 s11, 0x3fb8a000
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v0, v0, v6
	v_and_b32_e32 v22, 0xfffff000, v0
	v_sub_f32_e32 v23, v0, v22
	v_mul_f32_e32 v25, s11, v22
	v_mul_f32_e32 v24, s4, v23
	v_fmac_f32_e32 v24, s11, v23
	v_rndne_f32_e32 v23, v25
	v_fmac_f32_e32 v24, s4, v22
	v_fma_f32 v22, v22, s11, -v23
	v_cvt_i32_f32_e32 v23, v23
	v_cmp_ngt_f32_e64 s4, 0xc2ce8ed0, v0
	v_add_f32_e32 v22, v22, v24
	v_exp_f32_e32 v22, v22
	v_ldexp_f32 v22, v22, v23
	v_cndmask_b32_e64 v22, 0, v22, s4
	v_cmp_nlt_f32_e64 s4, 0x42b17218, v0
	v_cndmask_b32_e64 v0, 0x7f800000, v22, s4
	v_add_f32_e32 v21, v21, v0
BB76_13:
	s_or_b32 exec_lo, exec_lo, s5
	ds_bpermute_b32 v0, v15, v21
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v21, v0
	ds_bpermute_b32 v15, v16, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v17, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v18, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v19, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	ds_bpermute_b32 v15, v20, v0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v0, v0, v15
	v_mov_b32_e32 v15, 0
	ds_bpermute_b32 v0, v15, v0
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v15, v0 offset:4
	s_and_saveexec_b32 s4, vcc_lo
	s_xor_b32 s4, exec_lo, s4
	s_cbranch_execnz BB76_33
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s10
	s_cbranch_execnz BB76_34
BB76_15:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s9
	s_cbranch_execnz BB76_35
BB76_16:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s8
	s_cbranch_execnz BB76_36
BB76_17:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s7
	s_cbranch_execnz BB76_37
BB76_18:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s6
	s_cbranch_execnz BB76_38
BB76_19:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s3
	s_cbranch_execnz BB76_39
BB76_20:
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s3, s2
	s_cbranch_execnz BB76_40
BB76_21:
	s_or_b32 exec_lo, exec_lo, s3
	s_and_saveexec_b32 s2, s1
	s_cbranch_execnz BB76_41
BB76_22:
	s_or_b32 exec_lo, exec_lo, s2
	s_and_saveexec_b32 s1, s0
	s_cbranch_execnz BB76_42
BB76_23:
	s_endpgm
BB76_24:
	v_sub_f32_e32 v21, v14, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v22, 0xfffff000, v21
	v_sub_f32_e32 v23, v21, v22
	v_mul_f32_e32 v25, s3, v22
	v_mul_f32_e32 v24, s1, v23
	v_fmac_f32_e32 v24, s3, v23
	v_rndne_f32_e32 v23, v25
	v_fmac_f32_e32 v24, s1, v22
	v_fma_f32 v22, v22, s3, -v23
	v_cvt_i32_f32_e32 v23, v23
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v21
	v_add_f32_e32 v22, v22, v24
	v_exp_f32_e32 v22, v22
	v_ldexp_f32 v22, v22, v23
	v_add_f32_e32 v22, 0, v22
	v_cndmask_b32_e64 v22, 0, v22, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v21
	v_cndmask_b32_e64 v21, 0x7f800000, v22, s1
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s10, 0x218, v0
	s_and_saveexec_b32 s2, s10
	s_cbranch_execz BB76_4
BB76_25:
	v_sub_f32_e32 v22, v13, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s9, 0x1d8, v0
	s_and_saveexec_b32 s2, s9
	s_cbranch_execz BB76_5
BB76_26:
	v_sub_f32_e32 v22, v12, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s8, 0x198, v0
	s_and_saveexec_b32 s2, s8
	s_cbranch_execz BB76_6
BB76_27:
	v_sub_f32_e32 v22, v11, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s7, 0x158, v0
	s_and_saveexec_b32 s2, s7
	s_cbranch_execz BB76_7
BB76_28:
	v_sub_f32_e32 v22, v10, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s6, 0x118, v0
	s_and_saveexec_b32 s2, s6
	s_cbranch_execz BB76_8
BB76_29:
	v_sub_f32_e32 v22, v9, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s3, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s3, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s3, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s3, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s3, 0xd8, v0
	s_and_saveexec_b32 s2, s3
	s_cbranch_execz BB76_9
BB76_30:
	v_sub_f32_e32 v22, v8, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s11, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s11, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s11, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s11, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s2
	v_cmp_gt_i32_e64 s2, 0x98, v0
	s_and_saveexec_b32 s11, s2
	s_cbranch_execz BB76_10
BB76_31:
	v_sub_f32_e32 v22, v7, v6
	s_mov_b32 s1, 0x39a3b295
	s_mov_b32 s12, 0x3fb8a000
	v_and_b32_e32 v23, 0xfffff000, v22
	v_sub_f32_e32 v24, v22, v23
	v_mul_f32_e32 v26, s12, v23
	v_mul_f32_e32 v25, s1, v24
	v_fmac_f32_e32 v25, s12, v24
	v_rndne_f32_e32 v24, v26
	v_fmac_f32_e32 v25, s1, v23
	v_fma_f32 v23, v23, s12, -v24
	v_cvt_i32_f32_e32 v24, v24
	v_cmp_ngt_f32_e64 s1, 0xc2ce8ed0, v22
	v_add_f32_e32 v23, v23, v25
	v_exp_f32_e32 v23, v23
	v_ldexp_f32 v23, v23, v24
	v_cndmask_b32_e64 v23, 0, v23, s1
	v_cmp_nlt_f32_e64 s1, 0x42b17218, v22
	v_cndmask_b32_e64 v22, 0x7f800000, v23, s1
	v_add_f32_e32 v21, v21, v22
	s_or_b32 exec_lo, exec_lo, s11
	v_cmp_gt_i32_e64 s1, 0x58, v0
	s_and_saveexec_b32 s12, s1
	s_cbranch_execz BB76_11
BB76_32:
	v_sub_f32_e32 v0, v5, v6
	s_mov_b32 s11, 0x39a3b295
	s_mov_b32 s13, 0x3fb8a000
	v_and_b32_e32 v22, 0xfffff000, v0
	v_sub_f32_e32 v23, v0, v22
	v_mul_f32_e32 v25, s13, v22
	v_mul_f32_e32 v24, s11, v23
	v_fmac_f32_e32 v24, s13, v23
	v_rndne_f32_e32 v23, v25
	v_fmac_f32_e32 v24, s11, v22
	v_fma_f32 v22, v22, s13, -v23
	v_cvt_i32_f32_e32 v23, v23
	v_cmp_ngt_f32_e64 s11, 0xc2ce8ed0, v0
	v_add_f32_e32 v22, v22, v24
	v_exp_f32_e32 v22, v22
	v_ldexp_f32 v22, v22, v23
	v_cndmask_b32_e64 v22, 0, v22, s11
	v_cmp_nlt_f32_e64 s11, 0x42b17218, v0
	v_cndmask_b32_e64 v0, 0x7f800000, v22, s11
	v_add_f32_e32 v21, v21, v0
	s_or_b32 exec_lo, exec_lo, s12
	s_load_dwordx2 s[12:13], s[4:5], 0x8
	s_and_saveexec_b32 s5, s0
	s_cbranch_execnz BB76_12
	s_branch BB76_13
BB76_33:
	v_sub_f32_e32 v14, v14, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s11, 0x39a3b295
	v_and_b32_e32 v15, 0xfffff000, v14
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v14
	v_sub_f32_e32 v16, v14, v15
	v_mul_f32_e32 v17, s5, v15
	v_mul_f32_e32 v18, s11, v16
	v_rndne_f32_e32 v17, v17
	v_fmac_f32_e32 v18, s5, v16
	v_fma_f32 v16, v15, s5, -v17
	v_fmac_f32_e32 v18, s11, v15
	v_add_f32_e32 v15, v16, v18
	v_cvt_i32_f32_e32 v16, v17
	v_exp_f32_e32 v15, v15
	v_ldexp_f32 v15, v15, v16
	v_cndmask_b32_e32 v15, 0, v15, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v14
	v_cndmask_b32_e32 v14, 0x7f800000, v15, vcc_lo
	v_div_scale_f32 v15, s5, v0, v0, v14
	v_div_scale_f32 v18, vcc_lo, v14, v0, v14
	v_rcp_f32_e32 v16, v15
	v_fma_f32 v17, -v15, v16, 1.0
	v_fmac_f32_e32 v16, v17, v16
	v_mul_f32_e32 v17, v18, v16
	v_fma_f32 v19, v17, -v15, v18
	v_fmac_f32_e32 v17, v19, v16
	v_fmac_f32_e64 v18, -v15, v17
	v_div_fmas_f32 v15, v18, v16, v17
	v_div_fixup_f32 v16, v15, v0, v14
	v_lshlrev_b64 v[14:15], 1, v[1:2]
	v_cvt_f16_f32_e32 v16, v16
	v_add_co_u32 v14, vcc_lo, s12, v14
	v_add_co_ci_u32_e32 v15, vcc_lo, s13, v15, vcc_lo
	global_store_short v[14:15], v16, off
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s10
	s_cbranch_execz BB76_15
BB76_34:
	v_sub_f32_e32 v13, v13, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s10, 0x39a3b295
	v_and_b32_e32 v14, 0xfffff000, v13
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v13
	v_sub_f32_e32 v15, v13, v14
	v_mul_f32_e32 v16, s5, v14
	v_mul_f32_e32 v17, s10, v15
	v_rndne_f32_e32 v16, v16
	v_fmac_f32_e32 v17, s5, v15
	v_fma_f32 v15, v14, s5, -v16
	v_fmac_f32_e32 v17, s10, v14
	v_add_f32_e32 v14, v15, v17
	v_cvt_i32_f32_e32 v15, v16
	v_exp_f32_e32 v14, v14
	v_ldexp_f32 v14, v14, v15
	v_cndmask_b32_e32 v14, 0, v14, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v13
	v_cndmask_b32_e32 v13, 0x7f800000, v14, vcc_lo
	v_div_scale_f32 v14, s5, v0, v0, v13
	v_div_scale_f32 v17, vcc_lo, v13, v0, v13
	v_rcp_f32_e32 v15, v14
	v_fma_f32 v16, -v14, v15, 1.0
	v_fmac_f32_e32 v15, v16, v15
	v_mul_f32_e32 v16, v17, v15
	v_fma_f32 v18, v16, -v14, v17
	v_fmac_f32_e32 v16, v18, v15
	v_fmac_f32_e64 v17, -v14, v16
	v_div_fmas_f32 v14, v17, v15, v16
	v_div_fixup_f32 v15, v14, v0, v13
	v_lshlrev_b64 v[13:14], 1, v[1:2]
	v_cvt_f16_f32_e32 v15, v15
	v_add_co_u32 v13, vcc_lo, s12, v13
	v_add_co_ci_u32_e32 v14, vcc_lo, s13, v14, vcc_lo
	global_store_short v[13:14], v15, off offset:128
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s9
	s_cbranch_execz BB76_16
BB76_35:
	v_sub_f32_e32 v12, v12, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s9, 0x39a3b295
	v_and_b32_e32 v13, 0xfffff000, v12
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v12
	v_sub_f32_e32 v14, v12, v13
	v_mul_f32_e32 v15, s5, v13
	v_mul_f32_e32 v16, s9, v14
	v_rndne_f32_e32 v15, v15
	v_fmac_f32_e32 v16, s5, v14
	v_fma_f32 v14, v13, s5, -v15
	v_fmac_f32_e32 v16, s9, v13
	v_add_f32_e32 v13, v14, v16
	v_cvt_i32_f32_e32 v14, v15
	v_exp_f32_e32 v13, v13
	v_ldexp_f32 v13, v13, v14
	v_cndmask_b32_e32 v13, 0, v13, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v12
	v_cndmask_b32_e32 v12, 0x7f800000, v13, vcc_lo
	v_div_scale_f32 v13, s5, v0, v0, v12
	v_div_scale_f32 v16, vcc_lo, v12, v0, v12
	v_rcp_f32_e32 v14, v13
	v_fma_f32 v15, -v13, v14, 1.0
	v_fmac_f32_e32 v14, v15, v14
	v_mul_f32_e32 v15, v16, v14
	v_fma_f32 v17, v15, -v13, v16
	v_fmac_f32_e32 v15, v17, v14
	v_fmac_f32_e64 v16, -v13, v15
	v_div_fmas_f32 v13, v16, v14, v15
	v_div_fixup_f32 v14, v13, v0, v12
	v_lshlrev_b64 v[12:13], 1, v[1:2]
	v_cvt_f16_f32_e32 v14, v14
	v_add_co_u32 v12, vcc_lo, s12, v12
	v_add_co_ci_u32_e32 v13, vcc_lo, s13, v13, vcc_lo
	global_store_short v[12:13], v14, off offset:256
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s8
	s_cbranch_execz BB76_17
BB76_36:
	v_sub_f32_e32 v11, v11, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s8, 0x39a3b295
	v_and_b32_e32 v12, 0xfffff000, v11
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v11
	v_sub_f32_e32 v13, v11, v12
	v_mul_f32_e32 v14, s5, v12
	v_mul_f32_e32 v15, s8, v13
	v_rndne_f32_e32 v14, v14
	v_fmac_f32_e32 v15, s5, v13
	v_fma_f32 v13, v12, s5, -v14
	v_fmac_f32_e32 v15, s8, v12
	v_add_f32_e32 v12, v13, v15
	v_cvt_i32_f32_e32 v13, v14
	v_exp_f32_e32 v12, v12
	v_ldexp_f32 v12, v12, v13
	v_cndmask_b32_e32 v12, 0, v12, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v11
	v_cndmask_b32_e32 v11, 0x7f800000, v12, vcc_lo
	v_div_scale_f32 v12, s5, v0, v0, v11
	v_div_scale_f32 v15, vcc_lo, v11, v0, v11
	v_rcp_f32_e32 v13, v12
	v_fma_f32 v14, -v12, v13, 1.0
	v_fmac_f32_e32 v13, v14, v13
	v_mul_f32_e32 v14, v15, v13
	v_fma_f32 v16, v14, -v12, v15
	v_fmac_f32_e32 v14, v16, v13
	v_fmac_f32_e64 v15, -v12, v14
	v_div_fmas_f32 v12, v15, v13, v14
	v_div_fixup_f32 v13, v12, v0, v11
	v_lshlrev_b64 v[11:12], 1, v[1:2]
	v_cvt_f16_f32_e32 v13, v13
	v_add_co_u32 v11, vcc_lo, s12, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s13, v12, vcc_lo
	global_store_short v[11:12], v13, off offset:384
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s7
	s_cbranch_execz BB76_18
BB76_37:
	v_sub_f32_e32 v10, v10, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s7, 0x39a3b295
	v_and_b32_e32 v11, 0xfffff000, v10
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v10
	v_sub_f32_e32 v12, v10, v11
	v_mul_f32_e32 v13, s5, v11
	v_mul_f32_e32 v14, s7, v12
	v_rndne_f32_e32 v13, v13
	v_fmac_f32_e32 v14, s5, v12
	v_fma_f32 v12, v11, s5, -v13
	v_fmac_f32_e32 v14, s7, v11
	v_add_f32_e32 v11, v12, v14
	v_cvt_i32_f32_e32 v12, v13
	v_exp_f32_e32 v11, v11
	v_ldexp_f32 v11, v11, v12
	v_cndmask_b32_e32 v11, 0, v11, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v10
	v_cndmask_b32_e32 v10, 0x7f800000, v11, vcc_lo
	v_div_scale_f32 v11, s5, v0, v0, v10
	v_div_scale_f32 v14, vcc_lo, v10, v0, v10
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_div_fixup_f32 v12, v11, v0, v10
	v_lshlrev_b64 v[10:11], 1, v[1:2]
	v_cvt_f16_f32_e32 v12, v12
	v_add_co_u32 v10, vcc_lo, s12, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s13, v11, vcc_lo
	global_store_short v[10:11], v12, off offset:512
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s6
	s_cbranch_execz BB76_19
BB76_38:
	v_sub_f32_e32 v9, v9, v6
	s_mov_b32 s5, 0x3fb8a000
	s_mov_b32 s6, 0x39a3b295
	v_and_b32_e32 v10, 0xfffff000, v9
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v9
	v_sub_f32_e32 v11, v9, v10
	v_mul_f32_e32 v12, s5, v10
	v_mul_f32_e32 v13, s6, v11
	v_rndne_f32_e32 v12, v12
	v_fmac_f32_e32 v13, s5, v11
	v_fma_f32 v11, v10, s5, -v12
	v_fmac_f32_e32 v13, s6, v10
	v_add_f32_e32 v10, v11, v13
	v_cvt_i32_f32_e32 v11, v12
	v_exp_f32_e32 v10, v10
	v_ldexp_f32 v10, v10, v11
	v_cndmask_b32_e32 v10, 0, v10, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v9
	v_cndmask_b32_e32 v9, 0x7f800000, v10, vcc_lo
	v_div_scale_f32 v10, s5, v0, v0, v9
	v_div_scale_f32 v13, vcc_lo, v9, v0, v9
	v_rcp_f32_e32 v11, v10
	v_fma_f32 v12, -v10, v11, 1.0
	v_fmac_f32_e32 v11, v12, v11
	v_mul_f32_e32 v12, v13, v11
	v_fma_f32 v14, v12, -v10, v13
	v_fmac_f32_e32 v12, v14, v11
	v_fmac_f32_e64 v13, -v10, v12
	v_div_fmas_f32 v10, v13, v11, v12
	v_div_fixup_f32 v11, v10, v0, v9
	v_lshlrev_b64 v[9:10], 1, v[1:2]
	v_cvt_f16_f32_e32 v11, v11
	v_add_co_u32 v9, vcc_lo, s12, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v10, vcc_lo
	global_store_short v[9:10], v11, off offset:640
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s4, s3
	s_cbranch_execz BB76_20
BB76_39:
	v_sub_f32_e32 v8, v8, v6
	s_mov_b32 s3, 0x3fb8a000
	s_mov_b32 s5, 0x39a3b295
	v_and_b32_e32 v9, 0xfffff000, v8
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v8
	v_sub_f32_e32 v10, v8, v9
	v_mul_f32_e32 v11, s3, v9
	v_mul_f32_e32 v12, s5, v10
	v_rndne_f32_e32 v11, v11
	v_fmac_f32_e32 v12, s3, v10
	v_fma_f32 v10, v9, s3, -v11
	v_fmac_f32_e32 v12, s5, v9
	v_add_f32_e32 v9, v10, v12
	v_cvt_i32_f32_e32 v10, v11
	v_exp_f32_e32 v9, v9
	v_ldexp_f32 v9, v9, v10
	v_cndmask_b32_e32 v9, 0, v9, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v8
	v_cndmask_b32_e32 v8, 0x7f800000, v9, vcc_lo
	v_div_scale_f32 v9, s3, v0, v0, v8
	v_div_scale_f32 v12, vcc_lo, v8, v0, v8
	v_rcp_f32_e32 v10, v9
	v_fma_f32 v11, -v9, v10, 1.0
	v_fmac_f32_e32 v10, v11, v10
	v_mul_f32_e32 v11, v12, v10
	v_fma_f32 v13, v11, -v9, v12
	v_fmac_f32_e32 v11, v13, v10
	v_fmac_f32_e64 v12, -v9, v11
	v_div_fmas_f32 v9, v12, v10, v11
	v_div_fixup_f32 v10, v9, v0, v8
	v_lshlrev_b64 v[8:9], 1, v[1:2]
	v_cvt_f16_f32_e32 v10, v10
	v_add_co_u32 v8, vcc_lo, s12, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s13, v9, vcc_lo
	global_store_short v[8:9], v10, off offset:768
	s_or_b32 exec_lo, exec_lo, s4
	s_and_saveexec_b32 s3, s2
	s_cbranch_execz BB76_21
BB76_40:
	v_sub_f32_e32 v7, v7, v6
	s_mov_b32 s2, 0x3fb8a000
	s_mov_b32 s4, 0x39a3b295
	v_and_b32_e32 v8, 0xfffff000, v7
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v7
	v_sub_f32_e32 v9, v7, v8
	v_mul_f32_e32 v10, s2, v8
	v_mul_f32_e32 v11, s4, v9
	v_rndne_f32_e32 v10, v10
	v_fmac_f32_e32 v11, s2, v9
	v_fma_f32 v9, v8, s2, -v10
	v_fmac_f32_e32 v11, s4, v8
	v_add_f32_e32 v8, v9, v11
	v_cvt_i32_f32_e32 v9, v10
	v_exp_f32_e32 v8, v8
	v_ldexp_f32 v8, v8, v9
	v_cndmask_b32_e32 v8, 0, v8, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v7
	v_cndmask_b32_e32 v7, 0x7f800000, v8, vcc_lo
	v_div_scale_f32 v8, s2, v0, v0, v7
	v_div_scale_f32 v11, vcc_lo, v7, v0, v7
	v_rcp_f32_e32 v9, v8
	v_fma_f32 v10, -v8, v9, 1.0
	v_fmac_f32_e32 v9, v10, v9
	v_mul_f32_e32 v10, v11, v9
	v_fma_f32 v12, v10, -v8, v11
	v_fmac_f32_e32 v10, v12, v9
	v_fmac_f32_e64 v11, -v8, v10
	v_div_fmas_f32 v8, v11, v9, v10
	v_div_fixup_f32 v9, v8, v0, v7
	v_lshlrev_b64 v[7:8], 1, v[1:2]
	v_cvt_f16_f32_e32 v9, v9
	v_add_co_u32 v7, vcc_lo, s12, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v8, vcc_lo
	global_store_short v[7:8], v9, off offset:896
	s_or_b32 exec_lo, exec_lo, s3
	s_and_saveexec_b32 s2, s1
	s_cbranch_execz BB76_22
BB76_41:
	v_sub_f32_e32 v5, v5, v6
	s_mov_b32 s1, 0x3fb8a000
	s_mov_b32 s3, 0x39a3b295
	v_and_b32_e32 v7, 0xfffff000, v5
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v5
	v_sub_f32_e32 v8, v5, v7
	v_mul_f32_e32 v9, s1, v7
	v_mul_f32_e32 v10, s3, v8
	v_rndne_f32_e32 v9, v9
	v_fmac_f32_e32 v10, s1, v8
	v_fma_f32 v8, v7, s1, -v9
	v_fmac_f32_e32 v10, s3, v7
	v_add_f32_e32 v7, v8, v10
	v_cvt_i32_f32_e32 v8, v9
	v_exp_f32_e32 v7, v7
	v_ldexp_f32 v7, v7, v8
	v_cndmask_b32_e32 v7, 0, v7, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v5
	v_cndmask_b32_e32 v5, 0x7f800000, v7, vcc_lo
	v_div_scale_f32 v7, s1, v0, v0, v5
	v_div_scale_f32 v10, vcc_lo, v5, v0, v5
	v_rcp_f32_e32 v8, v7
	v_fma_f32 v9, -v7, v8, 1.0
	v_fmac_f32_e32 v8, v9, v8
	v_mul_f32_e32 v9, v10, v8
	v_fma_f32 v11, v9, -v7, v10
	v_fmac_f32_e32 v9, v11, v8
	v_fmac_f32_e64 v10, -v7, v9
	v_div_fmas_f32 v7, v10, v8, v9
	v_div_fixup_f32 v5, v7, v0, v5
	v_lshlrev_b64 v[7:8], 1, v[1:2]
	v_cvt_f16_f32_e32 v5, v5
	v_add_co_u32 v7, vcc_lo, s12, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v8, vcc_lo
	global_store_short v[7:8], v5, off offset:1024
	s_or_b32 exec_lo, exec_lo, s2
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB76_23
BB76_42:
	global_load_dword v3, v[3:4], off
	s_mov_b32 s0, 0x3fb8a000
	s_mov_b32 s1, 0x39a3b295
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v3, v3, v6
	v_and_b32_e32 v4, 0xfffff000, v3
	v_cmp_ngt_f32_e32 vcc_lo, 0xc2ce8ed0, v3
	v_sub_f32_e32 v5, v3, v4
	v_mul_f32_e32 v6, s0, v4
	v_mul_f32_e32 v7, s1, v5
	v_rndne_f32_e32 v6, v6
	v_fmac_f32_e32 v7, s0, v5
	v_fma_f32 v5, v4, s0, -v6
	v_fmac_f32_e32 v7, s1, v4
	v_add_f32_e32 v4, v5, v7
	v_cvt_i32_f32_e32 v5, v6
	v_exp_f32_e32 v4, v4
	v_ldexp_f32 v4, v4, v5
	v_cndmask_b32_e32 v4, 0, v4, vcc_lo
	v_cmp_nlt_f32_e32 vcc_lo, 0x42b17218, v3
	v_cndmask_b32_e32 v3, 0x7f800000, v4, vcc_lo
	v_div_scale_f32 v4, s0, v0, v0, v3
	v_div_scale_f32 v7, vcc_lo, v3, v0, v3
	v_rcp_f32_e32 v5, v4
	v_fma_f32 v6, -v4, v5, 1.0
	v_fmac_f32_e32 v5, v6, v5
	v_mul_f32_e32 v6, v7, v5
	v_fma_f32 v8, v6, -v4, v7
	v_fmac_f32_e32 v6, v8, v5
	v_fmac_f32_e64 v7, -v4, v6
	v_div_fmas_f32 v4, v7, v5, v6
	v_div_fixup_f32 v3, v4, v0, v3
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_cvt_f16_f32_e32 v2, v3
	v_add_co_u32 v0, vcc_lo, s12, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s13, v1, vcc_lo
	global_store_short v[0:1], v2, off offset:1152
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_nn_softmax_cast_kernel0
		.amdhsa_group_segment_fixed_size 8
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 27
		.amdhsa_next_free_sgpr 14
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end76:
	.size	tvmgen_default_fused_nn_softmax_cast_kernel0, .Lfunc_end76-tvmgen_default_fused_nn_softmax_cast_kernel0

	.globl	tvmgen_default_fused_reshape_add_add_cast_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_add_cast_kernel0,@function
tvmgen_default_fused_reshape_add_add_cast_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x18
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshl_add_u32 v2, s6, 8, v0
	v_lshlrev_b32_e32 v0, 1, v0
	s_mov_b32 s7, 0x25800
	v_cmp_gt_i32_e64 s10, 0x258, s6
	v_cmp_gt_i32_e32 vcc_lo, s7, v2
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, s8, s8, v0
	v_add_co_ci_u32_e64 v1, s8, s9, 0, s8
	s_and_b32 s9, s10, vcc_lo
	s_and_saveexec_b32 s8, s9
	s_cbranch_execz BB77_2
	v_ashrrev_i32_e32 v3, 31, v2
	global_load_ushort v8, v[0:1], off
	v_lshlrev_b64 v[4:5], 1, v[2:3]
	v_add_co_u32 v6, vcc_lo, s4, v4
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v5, vcc_lo
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	global_load_ushort v6, v[6:7], off
	global_load_ushort v4, v[4:5], off
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v5, v8, v6
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v5, v4, v5
	v_lshlrev_b64 v[3:4], 2, v[2:3]
	v_cvt_f32_f16_e32 v5, v5
	v_add_co_u32 v3, vcc_lo, s0, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo
	global_store_dword v[3:4], v5, off
BB77_2:
	s_or_b32 exec_lo, exec_lo, s8
	v_add_nc_u32_e32 v3, 0x10000, v2
	v_cmp_gt_i32_e64 s8, 0x158, s6
	v_cmp_gt_i32_e32 vcc_lo, s7, v3
	s_and_b32 s8, s8, vcc_lo
	s_and_saveexec_b32 s7, s8
	s_cbranch_execz BB77_4
	v_ashrrev_i32_e32 v4, 31, v3
	global_load_ushort v9, v[0:1], off
	v_lshlrev_b64 v[5:6], 1, v[3:4]
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_add_co_u32 v7, vcc_lo, s4, v5
	v_add_co_ci_u32_e32 v8, vcc_lo, s5, v6, vcc_lo
	v_add_co_u32 v5, vcc_lo, s2, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo
	v_add_co_u32 v3, vcc_lo, s0, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo
	global_load_ushort v7, v[7:8], off
	global_load_ushort v5, v[5:6], off
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v6, v9, v7
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v5, v5, v6
	v_cvt_f32_f16_e32 v5, v5
	global_store_dword v[3:4], v5, off
BB77_4:
	s_or_b32 exec_lo, exec_lo, s7
	v_add_nc_u32_e32 v2, 0x20000, v2
	v_cmp_gt_i32_e64 s6, 0x58, s6
	v_cmp_gt_i32_e32 vcc_lo, 0x25800, v2
	s_and_b32 s6, s6, vcc_lo
	s_and_saveexec_b32 s7, s6
	s_cbranch_execz BB77_6
	v_ashrrev_i32_e32 v3, 31, v2
	global_load_ushort v6, v[0:1], off
	v_lshlrev_b64 v[4:5], 1, v[2:3]
	v_add_co_u32 v0, vcc_lo, s4, v4
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v5, vcc_lo
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	global_load_ushort v0, v[0:1], off
	global_load_ushort v1, v[4:5], off
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v0, v6, v0
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v4, v1, v0
	v_lshlrev_b64 v[0:1], 2, v[2:3]
	v_cvt_f32_f16_e32 v2, v4
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v2, off
BB77_6:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_add_cast_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end77:
	.size	tvmgen_default_fused_reshape_add_add_cast_kernel0, .Lfunc_end77-tvmgen_default_fused_reshape_add_add_cast_kernel0

	.globl	tvmgen_default_fused_reshape_add_cast_add_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_cast_add_1_kernel0,@function
tvmgen_default_fused_reshape_add_cast_add_1_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	v_lshl_add_u32 v1, s6, 8, v0
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	s_load_dwordx2 s[6:7], s[4:5], 0x8
	v_lshlrev_b32_e32 v5, 1, v0
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[3:4], 1, v[1:2]
	v_lshlrev_b64 v[0:1], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s0, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo
	v_add_co_u32 v2, vcc_lo, s6, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_ushort v5, v5, s[2:3]
	global_load_ushort v4, v[3:4], off
	v_add_co_ci_u32_e32 v3, vcc_lo, s7, v1, vcc_lo
	global_load_dword v2, v[2:3], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v3, v5, v4
	v_cvt_f32_f16_e32 v3, v3
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v2, v2, v3
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_cast_add_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end78:
	.size	tvmgen_default_fused_reshape_add_cast_add_1_kernel0, .Lfunc_end78-tvmgen_default_fused_reshape_add_cast_add_1_kernel0

	.globl	tvmgen_default_fused_reshape_add_cast_add_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_cast_add_kernel0,@function
tvmgen_default_fused_reshape_add_cast_add_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[8:9], s[4:5], 0x18
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshl_add_u32 v2, s6, 8, v0
	v_lshlrev_b32_e32 v0, 1, v0
	s_mov_b32 s7, 0x25800
	v_cmp_gt_i32_e64 s10, 0x258, s6
	v_cmp_gt_i32_e32 vcc_lo, s7, v2
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, s8, s8, v0
	v_add_co_ci_u32_e64 v1, s8, s9, 0, s8
	s_and_b32 s9, s10, vcc_lo
	s_and_saveexec_b32 s8, s9
	s_cbranch_execz BB79_2
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[4:5], 1, v[2:3]
	v_lshlrev_b64 v[6:7], 2, v[2:3]
	v_add_co_u32 v4, vcc_lo, s4, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s5, v5, vcc_lo
	v_add_co_u32 v3, vcc_lo, s2, v6
	global_load_ushort v8, v[0:1], off
	global_load_ushort v5, v[4:5], off
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v7, vcc_lo
	global_load_dword v3, v[3:4], off
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v4, v8, v5
	v_cvt_f32_f16_e32 v4, v4
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v5, v3, v4
	v_add_co_u32 v3, vcc_lo, s0, v6
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v7, vcc_lo
	global_store_dword v[3:4], v5, off
BB79_2:
	s_or_b32 exec_lo, exec_lo, s8
	v_add_nc_u32_e32 v3, 0x10000, v2
	v_cmp_gt_i32_e64 s8, 0x158, s6
	v_cmp_gt_i32_e32 vcc_lo, s7, v3
	s_and_b32 s8, s8, vcc_lo
	s_and_saveexec_b32 s7, s8
	s_cbranch_execz BB79_4
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[5:6], 1, v[3:4]
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	v_add_co_u32 v5, vcc_lo, s4, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s5, v6, vcc_lo
	global_load_ushort v7, v[0:1], off
	global_load_ushort v8, v[5:6], off
	v_add_co_u32 v5, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v4, vcc_lo
	v_add_co_u32 v3, vcc_lo, s0, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v4, vcc_lo
	global_load_dword v5, v[5:6], off
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v6, v7, v8
	v_cvt_f32_f16_e32 v6, v6
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v5, v5, v6
	global_store_dword v[3:4], v5, off
BB79_4:
	s_or_b32 exec_lo, exec_lo, s7
	v_add_nc_u32_e32 v2, 0x20000, v2
	v_cmp_gt_i32_e64 s6, 0x58, s6
	v_cmp_gt_i32_e32 vcc_lo, 0x25800, v2
	s_and_b32 s6, s6, vcc_lo
	s_and_saveexec_b32 s7, s6
	s_cbranch_execz BB79_6
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[4:5], 1, v[2:3]
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	v_add_co_u32 v4, vcc_lo, s4, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s5, v5, vcc_lo
	global_load_ushort v6, v[0:1], off
	global_load_ushort v4, v[4:5], off
	v_add_co_u32 v0, vcc_lo, s2, v2
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v3, vcc_lo
	global_load_dword v0, v[0:1], off
	s_waitcnt vmcnt(1)
	v_add_f16_e32 v1, v6, v4
	v_cvt_f32_f16_e32 v1, v1
	s_waitcnt vmcnt(0)
	v_add_f32_e32 v4, v0, v1
	v_add_co_u32 v0, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v3, vcc_lo
	global_store_dword v[0:1], v4, off
BB79_6:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_cast_add_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 9
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end79:
	.size	tvmgen_default_fused_reshape_add_cast_add_kernel0, .Lfunc_end79-tvmgen_default_fused_reshape_add_cast_add_kernel0

	.globl	tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0,@function
tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0:
	s_lshl_b32 s2, s6, 9
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshl_add_u32 v0, v0, 1, s2
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_add_nc_u32_e32 v2, 0x19000, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_and_b32_e32 v4, 0x7fe, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_lshlrev_b32_e32 v8, 1, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v1, vcc_lo
	v_add_co_u32 v6, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v3, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_dword v8, v8, s[2:3]
	s_clause 0x1
	global_load_dword v4, v[4:5], off
	global_load_dword v5, v[6:7], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v4, v8, v4
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v5, v8, v5
	v_pk_max_f16 v4, v4, 0
	v_pk_max_f16 v5, v5, 0
	global_store_dword v[0:1], v4, off
	global_store_dword v[2:3], v5, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 9
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end80:
	.size	tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0, .Lfunc_end80-tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0

	.globl	tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0,@function
tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s10, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s10, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB81_2
	v_lshrrev_b32_e32 v2, 7, v0
	s_mov_b32 s0, 0x51eb851f
	v_mul_hi_i32 v6, v4, s0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, v2, s0
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 13, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_lshrrev_b32_e32 v7, 31, v5
	v_lshrrev_b32_e32 v5, 5, v5
	v_mul_i32_i24_e32 v6, 0x6400, v6
	v_add_nc_u32_e32 v5, v5, v7
	v_and_b32_e32 v7, 0xfe, v1
	v_mul_lo_u32 v5, 0x64, v5
	v_or_b32_e32 v6, v6, v7
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_add_u32 v5, v2, 8, v6
	v_lshlrev_b32_e32 v2, 1, v7
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s8, v5
	v_add_co_ci_u32_e64 v6, s0, s9, v6, s0
	global_load_ushort v2, v2, s[4:5]
	global_load_ushort v6, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v2, v6
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_max_f16_e32 v2, 0, v2
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	global_store_short v[5:6], v2, off
BB81_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s10, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB81_4
	v_lshrrev_b32_e32 v6, 7, v0
	s_mov_b32 s1, 0x51eb851f
	v_mul_hi_i32 v8, v5, s1
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, v6, s1
	v_lshrrev_b32_e32 v10, 31, v8
	v_ashrrev_i32_e32 v8, 13, v8
	v_add_nc_u32_e32 v8, v8, v10
	v_lshrrev_b32_e32 v9, 31, v7
	v_lshrrev_b32_e32 v7, 5, v7
	v_mul_i32_i24_e32 v8, 0x6400, v8
	v_add_nc_u32_e32 v7, v7, v9
	v_and_b32_e32 v9, 0xff, v2
	v_mul_lo_u32 v7, 0x64, v7
	v_or_b32_e32 v8, v8, v9
	v_sub_nc_u32_e32 v6, v6, v7
	v_lshl_add_u32 v6, v6, 8, v8
	v_lshlrev_b32_e32 v8, 1, v9
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s8, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s9, v7, vcc_lo
	global_load_ushort v8, v8, s[4:5]
	global_load_ushort v7, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v8, v8, v7
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_max_f16_e32 v8, 0, v8
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	global_store_short v[6:7], v8, off
BB81_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s10, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s10, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB81_6
	v_lshrrev_b32_e32 v4, 7, v0
	s_mov_b32 s0, 0x51eb851f
	v_and_b32_e32 v1, 0xfe, v1
	v_mul_hi_i32 v7, v3, s0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, v4, s0
	v_lshrrev_b32_e32 v9, 31, v7
	v_ashrrev_i32_e32 v7, 13, v7
	v_add_nc_u32_e32 v7, v7, v9
	v_lshrrev_b32_e32 v8, 31, v6
	v_lshrrev_b32_e32 v6, 5, v6
	v_mul_i32_i24_e32 v7, 0x6400, v7
	v_add_nc_u32_e32 v6, v6, v8
	v_or_b32_e32 v7, v7, v1
	v_lshlrev_b32_e32 v1, 1, v1
	v_mul_lo_u32 v6, 0x64, v6
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_add_u32 v6, v4, 8, v7
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s8, v6
	v_add_co_ci_u32_e64 v7, s0, s9, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_ushort v1, v1, s[4:5]
	global_load_ushort v6, v[6:7], off
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v1, v1, v6
	v_max_f16_e32 v1, 0, v1
	global_store_short v[3:4], v1, off
BB81_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s10, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB81_8
	v_lshrrev_b32_e32 v0, 7, v0
	s_mov_b32 s0, 0x51eb851f
	v_mul_hi_i32 v4, v1, s0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, v0, s0
	v_lshrrev_b32_e32 v6, 31, v4
	v_ashrrev_i32_e32 v4, 13, v4
	v_add_nc_u32_e32 v4, v4, v6
	v_lshrrev_b32_e32 v5, 31, v3
	v_lshrrev_b32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v5
	v_and_b32_e32 v5, 0xff, v2
	v_mul_i32_i24_e32 v2, 0x6400, v4
	v_mul_lo_u32 v3, 0x64, v3
	v_or_b32_e32 v2, v2, v5
	v_sub_nc_u32_e32 v0, v0, v3
	v_lshl_add_u32 v2, v0, 8, v2
	v_lshlrev_b32_e32 v0, 1, v5
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s8, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s9, v3, vcc_lo
	global_load_ushort v0, v0, s[4:5]
	global_load_ushort v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v3, v0, v3
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_max_f16_e32 v2, 0, v3
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v2, off
BB81_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 11
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end81:
	.size	tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0, .Lfunc_end81-tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0

	.globl	tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0,@function
tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0:
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_lshl_b32 s6, s6, 9
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshl_add_u32 v0, v0, 1, s6
	v_add_nc_u32_e32 v2, 0x1e000, v0
	v_and_b32_e32 v7, 0x7fe, v0
	v_add_nc_u32_e32 v4, 0x3c000, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_add_nc_u32_e32 v6, 0x5a000, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b32_e32 v9, 1, v7
	v_add_nc_u32_e32 v8, 0x78000, v0
	v_lshlrev_b64 v[10:11], 1, v[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[1:2], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	global_load_dword v42, v9, s[2:3]
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[3:4], 1, v[4:5]
	v_lshlrev_b64 v[5:6], 1, v[6:7]
	v_add_nc_u32_e32 v7, 0x96000, v0
	v_add_co_u32 v12, vcc_lo, s0, v10
	v_add_nc_u32_e32 v20, 0xb4000, v0
	v_add_co_ci_u32_e32 v13, vcc_lo, s1, v11, vcc_lo
	v_add_co_u32 v14, vcc_lo, s0, v1
	v_lshlrev_b64 v[18:19], 1, v[8:9]
	v_ashrrev_i32_e32 v8, 31, v7
	v_add_co_ci_u32_e32 v15, vcc_lo, s1, v2, vcc_lo
	v_add_nc_u32_e32 v24, 0xd2000, v0
	v_add_co_u32 v16, vcc_lo, s0, v3
	v_ashrrev_i32_e32 v21, 31, v20
	v_add_co_ci_u32_e32 v17, vcc_lo, s1, v4, vcc_lo
	v_add_nc_u32_e32 v28, 0xf0000, v0
	v_add_co_u32 v22, vcc_lo, s0, v5
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_ashrrev_i32_e32 v25, 31, v24
	v_add_co_ci_u32_e32 v23, vcc_lo, s1, v6, vcc_lo
	v_add_nc_u32_e32 v32, 0x10e000, v0
	v_add_co_u32 v26, vcc_lo, s0, v18
	v_lshlrev_b64 v[20:21], 1, v[20:21]
	v_ashrrev_i32_e32 v29, 31, v28
	v_add_co_ci_u32_e32 v27, vcc_lo, s1, v19, vcc_lo
	v_add_co_u32 v30, vcc_lo, s0, v7
	v_lshlrev_b64 v[24:25], 1, v[24:25]
	v_ashrrev_i32_e32 v33, 31, v32
	v_add_co_ci_u32_e32 v31, vcc_lo, s1, v8, vcc_lo
	v_add_co_u32 v34, vcc_lo, s0, v20
	v_lshlrev_b64 v[28:29], 1, v[28:29]
	v_add_co_ci_u32_e32 v35, vcc_lo, s1, v21, vcc_lo
	v_add_co_u32 v36, vcc_lo, s0, v24
	v_lshlrev_b64 v[32:33], 1, v[32:33]
	v_add_co_ci_u32_e32 v37, vcc_lo, s1, v25, vcc_lo
	v_add_co_u32 v38, vcc_lo, s0, v28
	v_add_co_ci_u32_e32 v39, vcc_lo, s1, v29, vcc_lo
	v_add_co_u32 v40, vcc_lo, s0, v32
	v_add_co_ci_u32_e32 v41, vcc_lo, s1, v33, vcc_lo
	s_clause 0x9
	global_load_dword v43, v[12:13], off
	global_load_dword v44, v[14:15], off
	global_load_dword v45, v[16:17], off
	global_load_dword v22, v[22:23], off
	global_load_dword v23, v[26:27], off
	global_load_dword v26, v[30:31], off
	global_load_dword v27, v[34:35], off
	global_load_dword v30, v[36:37], off
	global_load_dword v31, v[38:39], off
	global_load_dword v34, v[40:41], off
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s0, v10
	v_add_co_ci_u32_e32 v10, vcc_lo, s1, v11, vcc_lo
	v_add_co_u32 v0, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo
	v_add_co_u32 v2, vcc_lo, s0, v3
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v4, vcc_lo
	v_add_co_u32 v4, vcc_lo, s0, v5
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v6, vcc_lo
	v_add_co_u32 v11, vcc_lo, s0, v18
	v_add_co_ci_u32_e32 v12, vcc_lo, s1, v19, vcc_lo
	v_add_co_u32 v6, vcc_lo, s0, v7
	v_add_co_ci_u32_e32 v7, vcc_lo, s1, v8, vcc_lo
	v_add_co_u32 v13, vcc_lo, s0, v20
	v_add_co_ci_u32_e32 v14, vcc_lo, s1, v21, vcc_lo
	v_add_co_u32 v15, vcc_lo, s0, v24
	v_add_co_ci_u32_e32 v16, vcc_lo, s1, v25, vcc_lo
	v_add_co_u32 v17, vcc_lo, s0, v28
	v_add_co_ci_u32_e32 v18, vcc_lo, s1, v29, vcc_lo
	v_add_co_u32 v19, vcc_lo, s0, v32
	v_add_co_ci_u32_e32 v20, vcc_lo, s1, v33, vcc_lo
	s_waitcnt vmcnt(9)
	v_pk_add_f16 v8, v42, v43
	s_waitcnt vmcnt(8)
	v_pk_add_f16 v21, v42, v44
	s_waitcnt vmcnt(7)
	v_pk_add_f16 v24, v42, v45
	s_waitcnt vmcnt(6)
	v_pk_add_f16 v22, v42, v22
	s_waitcnt vmcnt(5)
	v_pk_add_f16 v23, v42, v23
	s_waitcnt vmcnt(4)
	v_pk_add_f16 v25, v42, v26
	s_waitcnt vmcnt(3)
	v_pk_add_f16 v26, v42, v27
	s_waitcnt vmcnt(2)
	v_pk_add_f16 v27, v42, v30
	s_waitcnt vmcnt(1)
	v_pk_add_f16 v28, v42, v31
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v29, v42, v34
	v_pk_max_f16 v8, v8, 0
	v_pk_max_f16 v21, v21, 0
	v_pk_max_f16 v24, v24, 0
	v_pk_max_f16 v22, v22, 0
	v_pk_max_f16 v23, v23, 0
	v_pk_max_f16 v25, v25, 0
	v_pk_max_f16 v26, v26, 0
	v_pk_max_f16 v27, v27, 0
	v_pk_max_f16 v28, v28, 0
	v_pk_max_f16 v29, v29, 0
	global_store_dword v[9:10], v8, off
	global_store_dword v[0:1], v21, off
	global_store_dword v[2:3], v24, off
	global_store_dword v[4:5], v22, off
	global_store_dword v[11:12], v23, off
	global_store_dword v[6:7], v25, off
	global_store_dword v[13:14], v26, off
	global_store_dword v[15:16], v27, off
	global_store_dword v[17:18], v28, off
	global_store_dword v[19:20], v29, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 46
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end82:
	.size	tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0, .Lfunc_end82-tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0

	.globl	tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0,@function
tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	s_lshl_b32 s0, s6, 9
	v_lshl_add_u32 v2, s6, 8, v0
	v_lshl_add_u32 v0, v0, 1, s0
	s_mov_b32 s6, 0x25800
	v_cmp_gt_i32_e64 s0, 0x12c00, v2
	v_cmp_gt_i32_e64 s1, s6, v0
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v2
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB83_2
	v_mul_hi_i32 v1, 0x1b4e81b5, v0
	v_lshrrev_b32_e32 v3, 31, v1
	v_ashrrev_i32_e32 v1, 6, v1
	v_add_nc_u32_e32 v3, v1, v3
	v_mul_i32_i24_e32 v1, 0x258, v3
	v_ashrrev_i32_e32 v4, 31, v3
	v_sub_nc_u32_e32 v1, v0, v1
	v_lshl_add_u32 v5, v1, 8, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_ashrrev_i32_e32 v1, 31, v0
	v_ashrrev_i32_e32 v6, 31, v5
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, s0, s4, v3
	v_add_co_ci_u32_e64 v4, s0, s5, v4, s0
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_add_co_u32 v5, s0, s8, v5
	v_add_co_ci_u32_e64 v6, s0, s9, v6, s0
	global_load_ushort v7, v[3:4], off
	global_load_ushort v5, v[5:6], off
	v_lshlrev_b64 v[3:4], 1, v[0:1]
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v1, v7, v5
	global_store_short v[3:4], v1, off
BB83_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v1, 1, v0
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s6, v1
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB83_4
	v_mul_hi_i32 v3, 0x1b4e81b5, v1
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_i32_i24_e32 v4, 0x258, v3
	v_sub_nc_u32_e32 v1, v1, v4
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshl_add_u32 v5, v1, 8, v3
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_ashrrev_i32_e32 v1, 31, v0
	v_ashrrev_i32_e32 v6, 31, v5
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s4, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s5, v4, vcc_lo
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_ushort v7, v[3:4], off
	global_load_ushort v5, v[5:6], off
	v_lshlrev_b64 v[3:4], 1, v[0:1]
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v1, v7, v5
	global_store_short v[3:4], v1, off offset:2
BB83_4:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v2, 0x10000, v2
	v_add_nc_u32_e32 v1, 0x20000, v0
	s_mov_b32 s6, 0x25800
	v_cmp_gt_i32_e64 s0, 0x12c00, v2
	v_cmp_gt_i32_e64 s1, s6, v1
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v2
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB83_6
	v_mul_hi_i32 v2, 0x1b4e81b5, v1
	v_lshrrev_b32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v2, 6, v2
	v_add_nc_u32_e32 v2, v2, v3
	v_mul_i32_i24_e32 v3, 0x258, v2
	v_sub_nc_u32_e32 v3, v1, v3
	v_lshl_add_u32 v4, v3, 8, v2
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, s0, s4, v2
	v_add_co_ci_u32_e64 v3, s0, s5, v3, s0
	v_add_co_u32 v4, s0, s8, v4
	v_add_co_ci_u32_e64 v5, s0, s9, v5, s0
	global_load_ushort v3, v[2:3], off
	global_load_ushort v4, v[4:5], off
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_add_co_u32 v1, s0, s2, v1
	v_add_co_ci_u32_e64 v2, s0, s3, v2, s0
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v3, v3, v4
	global_store_short v[1:2], v3, off
BB83_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v0, 0x20001, v0
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s6, v0
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB83_8
	v_mul_hi_i32 v1, 0x1b4e81b5, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 6, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_i32_i24_e32 v2, 0x258, v1
	v_sub_nc_u32_e32 v2, v0, v2
	v_lshl_add_u32 v3, v2, 8, v1
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s4, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s5, v2, vcc_lo
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_ushort v2, v[1:2], off
	global_load_ushort v3, v[3:4], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v2, v3
	global_store_short v[0:1], v2, off
BB83_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 8
		.amdhsa_next_free_sgpr 10
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end83:
	.size	tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0, .Lfunc_end83-tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0

	.globl	tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0,@function
tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0:
	v_lshrrev_b32_e32 v1, 4, v0
	s_mov_b32 s0, 0x51eb851f
	v_lshlrev_b32_e32 v3, 1, v0
	v_lshl_add_u32 v1, s6, 4, v1
	v_lshl_add_u32 v0, s6, 9, v3
	v_mul_hi_i32 v2, v1, s0
	v_mul_hi_i32 v5, v0, s0
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	v_lshrrev_b32_e32 v4, 31, v2
	v_lshrrev_b32_e32 v2, 5, v2
	v_add_nc_u32_e32 v2, v2, v4
	v_lshrrev_b32_e32 v4, 31, v5
	v_ashrrev_i32_e32 v5, 10, v5
	v_mul_lo_u32 v2, 0x64, v2
	v_add_lshl_u32 v4, v5, v4, 5
	v_sub_nc_u32_e32 v1, v1, v2
	v_and_b32_e32 v2, 30, v3
	v_lshl_add_u32 v3, v1, 8, v4
	v_or_b32_e32 v1, v4, v2
	v_or_b32_e32 v3, v3, v2
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	global_load_dword v2, v[1:2], off
	global_load_dword v3, v[3:4], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v2, v2, v3
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end84:
	.size	tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0, .Lfunc_end84-tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0

	.globl	tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0,@function
tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0:
	v_lshlrev_b32_e32 v0, 1, v0
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	v_lshl_add_u32 v0, s6, 9, v0
	v_mul_hi_i32 v1, 0x51eb851f, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 5, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_lo_u32 v2, 0x64, v1
	v_sub_nc_u32_e32 v2, v0, v2
	v_lshl_add_u32 v2, v2, 8, v1
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v4, vcc_lo, s0, v2
	v_ashrrev_i32_e32 v2, 31, v1
	v_add_co_ci_u32_e32 v5, vcc_lo, s1, v3, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	global_load_ushort v3, v[4:5], off
	v_add_co_u32 v1, vcc_lo, s2, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v2, vcc_lo
	global_load_ushort v2, v[1:2], off
	s_waitcnt vmcnt(1)
	global_load_short_d16_hi v3, v[4:5], off offset:512
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v2, v2, v3 op_sel_hi:[0,1]
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end85:
	.size	tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0, .Lfunc_end85-tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0

	.globl	tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0,@function
tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0:
	v_lshrrev_b32_e32 v1, 4, v0
	s_mov_b32 s0, 0x51eb851f
	v_lshlrev_b32_e32 v3, 1, v0
	v_lshl_add_u32 v1, s6, 4, v1
	v_lshl_add_u32 v0, s6, 9, v3
	s_load_dwordx2 s[6:7], s[4:5], 0x18
	v_mul_hi_i32 v2, v1, s0
	v_mul_hi_i32 v5, v0, s0
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	v_lshrrev_b32_e32 v4, 31, v2
	v_lshrrev_b32_e32 v2, 5, v2
	v_add_nc_u32_e32 v2, v2, v4
	v_lshrrev_b32_e32 v4, 31, v5
	v_ashrrev_i32_e32 v5, 10, v5
	v_mul_lo_u32 v2, 0x64, v2
	v_add_lshl_u32 v4, v5, v4, 5
	v_mov_b32_e32 v5, 0
	v_sub_nc_u32_e32 v1, v1, v2
	v_and_b32_e32 v2, 30, v3
	v_lshl_add_u32 v3, v1, 8, v4
	v_or_b32_e32 v1, v4, v2
	v_or_b32_e32 v3, v3, v2
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	global_load_ushort v5, v5, s[6:7]
	global_load_dword v1, v[1:2], off
	global_load_dword v2, v[3:4], off
	s_waitcnt vmcnt(2)
	v_cvt_f32_f16_e32 v3, v5
	s_waitcnt vmcnt(0)
	v_pk_add_f16 v2, v1, v2
	v_rcp_f32_e32 v1, v3
	v_lshrrev_b32_e32 v3, 16, v2
	v_cvt_f32_f16_e32 v4, v2
	v_cvt_f32_f16_e32 v6, v3
	v_mul_f32_e32 v4, v4, v1
	v_mul_f32_e32 v1, v6, v1
	v_cvt_f16_f32_e32 v4, v4
	v_cvt_f16_f32_e32 v6, v1
	v_ashrrev_i32_e32 v1, 31, v0
	v_div_fixup_f16 v2, v4, v5, v2
	v_div_fixup_f16 v3, v6, v5, v3
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_pack_b32_f16 v2, v2, v3
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 7
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end86:
	.size	tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0, .Lfunc_end86-tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0

	.globl	tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0,@function
tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0:
	s_clause 0x3
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[10:11], s[4:5], 0x10
	s_load_dwordx2 s[4:5], s[4:5], 0x18
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s12, 0x25800
	s_lshl_b32 s6, s6, 4
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s12, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB87_2
	v_lshrrev_b32_e32 v2, 4, v0
	s_mov_b32 s0, 0x1b4e81b5
	v_mul_hi_i32 v7, v4, s0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, v2, s0
	v_lshrrev_b32_e32 v6, 31, v5
	v_lshrrev_b32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_lshrrev_b32_e32 v6, 31, v7
	v_ashrrev_i32_e32 v7, 11, v7
	v_mul_lo_u32 v5, 0x258, v5
	v_add_lshl_u32 v6, v7, v6, 5
	v_and_b32_e32 v7, 30, v1
	v_sub_nc_u32_e32 v2, v2, v5
	v_or_b32_e32 v5, v7, v6
	v_lshl_add_u32 v2, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_or_b32_e32 v7, v2, v7
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_mov_b32_e32 v2, 0
	v_ashrrev_i32_e32 v8, 31, v7
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s10, v5
	global_load_ushort v2, v2, s[4:5]
	v_add_co_ci_u32_e64 v6, s0, s11, v6, s0
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v7, s0, s8, v7
	v_add_co_ci_u32_e64 v8, s0, s9, v8, s0
	global_load_ushort v5, v[5:6], off
	global_load_ushort v6, v[7:8], off
	s_waitcnt vmcnt(2)
	v_cvt_f32_f16_e32 v7, v2
	v_rcp_f32_e32 v7, v7
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v8, v5, v6
	v_cvt_f32_f16_e32 v5, v8
	v_mul_f32_e32 v6, v5, v7
	v_ashrrev_i32_e32 v5, 31, v4
	v_cvt_f16_f32_e32 v7, v6
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_div_fixup_f16 v2, v7, v2, v8
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	global_store_short v[5:6], v2, off
BB87_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s12, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB87_4
	v_lshrrev_b32_e32 v6, 4, v0
	s_mov_b32 s1, 0x1b4e81b5
	v_mov_b32_e32 v10, 0
	v_mul_hi_i32 v9, v5, s1
	v_add_nc_u32_e32 v6, s6, v6
	s_waitcnt lgkmcnt(0)
	global_load_ushort v10, v10, s[4:5]
	v_mul_hi_i32 v7, v6, s1
	v_lshrrev_b32_e32 v8, 31, v7
	v_lshrrev_b32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_lshrrev_b32_e32 v8, 31, v9
	v_ashrrev_i32_e32 v9, 11, v9
	v_mul_lo_u32 v7, 0x258, v7
	v_add_lshl_u32 v8, v9, v8, 5
	v_sub_nc_u32_e32 v6, v6, v7
	v_and_b32_e32 v7, 31, v2
	v_lshl_add_u32 v9, v6, 8, v8
	v_or_b32_e32 v6, v7, v8
	v_or_b32_e32 v8, v9, v7
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v6, vcc_lo, s10, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_load_ushort v6, v[6:7], off
	global_load_ushort v7, v[8:9], off
	s_waitcnt vmcnt(2)
	v_cvt_f32_f16_e32 v8, v10
	v_rcp_f32_e32 v8, v8
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v9, v6, v7
	v_cvt_f32_f16_e32 v6, v9
	v_mul_f32_e32 v7, v6, v8
	v_ashrrev_i32_e32 v6, 31, v5
	v_cvt_f16_f32_e32 v8, v7
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_div_fixup_f16 v8, v8, v10, v9
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	global_store_short v[6:7], v8, off
BB87_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s12, 0x25800
	s_addk_i32 s6, 0x1000
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s12, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB87_6
	v_lshrrev_b32_e32 v4, 4, v0
	s_mov_b32 s0, 0x1b4e81b5
	v_and_b32_e32 v1, 30, v1
	v_mul_hi_i32 v8, v3, s0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, v4, s0
	v_lshrrev_b32_e32 v7, 31, v6
	v_lshrrev_b32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_lshrrev_b32_e32 v7, 31, v8
	v_ashrrev_i32_e32 v8, 11, v8
	v_mul_lo_u32 v6, 0x258, v6
	v_add_lshl_u32 v7, v8, v7, 5
	v_sub_nc_u32_e32 v4, v4, v6
	v_or_b32_e32 v6, v1, v7
	v_lshl_add_u32 v4, v4, 8, v7
	v_ashrrev_i32_e32 v7, 31, v6
	v_or_b32_e32 v8, v4, v1
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_mov_b32_e32 v1, 0
	v_ashrrev_i32_e32 v9, 31, v8
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s10, v6
	global_load_ushort v1, v1, s[4:5]
	v_add_co_ci_u32_e64 v7, s0, s11, v7, s0
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v8, s0, s8, v8
	v_add_co_ci_u32_e64 v9, s0, s9, v9, s0
	global_load_ushort v4, v[6:7], off
	global_load_ushort v6, v[8:9], off
	s_waitcnt vmcnt(2)
	v_cvt_f32_f16_e32 v7, v1
	v_rcp_f32_e32 v7, v7
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v6, v4, v6
	v_cvt_f32_f16_e32 v4, v6
	v_mul_f32_e32 v7, v4, v7
	v_ashrrev_i32_e32 v4, 31, v3
	v_cvt_f16_f32_e32 v7, v7
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_div_fixup_f16 v1, v7, v1, v6
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_store_short v[3:4], v1, off
BB87_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s12, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB87_8
	v_lshrrev_b32_e32 v0, 4, v0
	s_mov_b32 s0, 0x1b4e81b5
	v_mul_hi_i32 v5, v1, s0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, v0, s0
	v_lshrrev_b32_e32 v4, 31, v3
	v_lshrrev_b32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_lshrrev_b32_e32 v4, 31, v5
	v_ashrrev_i32_e32 v5, 11, v5
	v_mul_lo_u32 v3, 0x258, v3
	v_add_lshl_u32 v4, v5, v4, 5
	v_sub_nc_u32_e32 v0, v0, v3
	v_and_b32_e32 v3, 31, v2
	v_lshl_add_u32 v0, v0, 8, v4
	v_or_b32_e32 v2, v3, v4
	v_or_b32_e32 v4, v0, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_mov_b32_e32 v0, 0
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	global_load_ushort v6, v0, s[4:5]
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_add_co_u32 v2, vcc_lo, s10, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s11, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s8, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo
	global_load_ushort v0, v[2:3], off
	global_load_ushort v2, v[4:5], off
	s_waitcnt vmcnt(2)
	v_cvt_f32_f16_e32 v3, v6
	v_rcp_f32_e32 v3, v3
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v4, v0, v2
	v_ashrrev_i32_e32 v2, 31, v1
	v_cvt_f32_f16_e32 v0, v4
	v_mul_f32_e32 v0, v0, v3
	v_cvt_f16_f32_e32 v3, v0
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_div_fixup_f16 v2, v3, v6, v4
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v2, off
BB87_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 11
		.amdhsa_next_free_sgpr 13
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end87:
	.size	tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0, .Lfunc_end87-tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0

	.globl	tvmgen_default_fused_reshape_add_reshape_transpose_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_reshape_transpose_kernel0,@function
tvmgen_default_fused_reshape_add_reshape_transpose_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s10, 0x25800
	s_lshl_b32 s6, s6, 4
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s10, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB88_2
	v_lshrrev_b32_e32 v2, 4, v0
	s_mov_b32 s0, 0x1b4e81b5
	v_mul_hi_i32 v7, v4, s0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, v2, s0
	v_lshrrev_b32_e32 v6, 31, v5
	v_lshrrev_b32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_lshrrev_b32_e32 v6, 31, v7
	v_ashrrev_i32_e32 v7, 11, v7
	v_mul_lo_u32 v5, 0x258, v5
	v_add_lshl_u32 v6, v7, v6, 5
	v_and_b32_e32 v7, 30, v1
	v_sub_nc_u32_e32 v2, v2, v5
	v_or_b32_e32 v5, v7, v6
	v_lshl_add_u32 v2, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_or_b32_e32 v7, v2, v7
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	v_ashrrev_i32_e32 v8, 31, v7
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s4, v5
	v_add_co_ci_u32_e64 v6, s0, s5, v6, s0
	v_lshlrev_b64 v[7:8], 1, v[7:8]
	v_add_co_u32 v7, s0, s8, v7
	v_add_co_ci_u32_e64 v8, s0, s9, v8, s0
	global_load_ushort v2, v[5:6], off
	global_load_ushort v7, v[7:8], off
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v2, v7
	global_store_short v[5:6], v2, off
BB88_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s10, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB88_4
	v_lshrrev_b32_e32 v6, 4, v0
	s_mov_b32 s1, 0x1b4e81b5
	v_mul_hi_i32 v9, v5, s1
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, v6, s1
	v_lshrrev_b32_e32 v8, 31, v7
	v_lshrrev_b32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_lshrrev_b32_e32 v8, 31, v9
	v_ashrrev_i32_e32 v9, 11, v9
	v_mul_lo_u32 v7, 0x258, v7
	v_add_lshl_u32 v8, v9, v8, 5
	v_sub_nc_u32_e32 v6, v6, v7
	v_and_b32_e32 v7, 31, v2
	v_lshl_add_u32 v9, v6, 8, v8
	v_or_b32_e32 v6, v7, v8
	v_or_b32_e32 v8, v9, v7
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_load_ushort v10, v[6:7], off
	global_load_ushort v8, v[8:9], off
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v8, v10, v8
	global_store_short v[6:7], v8, off
BB88_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s10, 0x25800
	s_addk_i32 s6, 0x1000
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s10, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB88_6
	v_lshrrev_b32_e32 v4, 4, v0
	s_mov_b32 s0, 0x1b4e81b5
	v_and_b32_e32 v1, 30, v1
	v_mul_hi_i32 v8, v3, s0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, v4, s0
	v_lshrrev_b32_e32 v7, 31, v6
	v_lshrrev_b32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_lshrrev_b32_e32 v7, 31, v8
	v_ashrrev_i32_e32 v8, 11, v8
	v_mul_lo_u32 v6, 0x258, v6
	v_add_lshl_u32 v7, v8, v7, 5
	v_sub_nc_u32_e32 v4, v4, v6
	v_or_b32_e32 v6, v1, v7
	v_lshl_add_u32 v4, v4, 8, v7
	v_ashrrev_i32_e32 v7, 31, v6
	v_or_b32_e32 v8, v4, v1
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v9, 31, v8
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s4, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_add_co_ci_u32_e64 v7, s0, s5, v7, s0
	v_lshlrev_b64 v[8:9], 1, v[8:9]
	v_add_co_u32 v8, s0, s8, v8
	v_add_co_ci_u32_e64 v9, s0, s9, v9, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_ushort v1, v[6:7], off
	global_load_ushort v6, v[8:9], off
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v1, v1, v6
	global_store_short v[3:4], v1, off
BB88_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s10, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB88_8
	v_lshrrev_b32_e32 v0, 4, v0
	s_mov_b32 s0, 0x1b4e81b5
	v_mul_hi_i32 v5, v1, s0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, v0, s0
	v_lshrrev_b32_e32 v4, 31, v3
	v_lshrrev_b32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_lshrrev_b32_e32 v4, 31, v5
	v_ashrrev_i32_e32 v5, 11, v5
	v_mul_lo_u32 v3, 0x258, v3
	v_add_lshl_u32 v4, v5, v4, 5
	v_sub_nc_u32_e32 v0, v0, v3
	v_and_b32_e32 v3, 31, v2
	v_lshl_add_u32 v0, v0, 8, v4
	v_or_b32_e32 v2, v3, v4
	v_or_b32_e32 v4, v0, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo
	v_add_co_u32 v4, vcc_lo, s8, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s9, v5, vcc_lo
	global_load_ushort v3, v[2:3], off
	global_load_ushort v4, v[4:5], off
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v3, v4
	global_store_short v[0:1], v2, off
BB88_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_reshape_transpose_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 11
		.amdhsa_next_free_sgpr 11
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end88:
	.size	tvmgen_default_fused_reshape_add_reshape_transpose_kernel0, .Lfunc_end88-tvmgen_default_fused_reshape_add_reshape_transpose_kernel0

	.globl	tvmgen_default_fused_reshape_add_sigmoid_take_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_sigmoid_take_kernel0,@function
tvmgen_default_fused_reshape_add_sigmoid_take_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[6:7], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshlrev_b32_e32 v1, 1, v0
	v_cmp_gt_i32_e32 vcc_lo, 0xc8, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB89_2
	v_and_b32_e32 v0, 2, v1
	v_lshlrev_b32_e32 v2, 1, v1
	v_lshlrev_b32_e32 v0, 1, v0
	v_add_nc_u32_e32 v3, 0xfa0, v2
	s_waitcnt lgkmcnt(0)
	global_load_ushort v0, v0, s[4:5]
	global_load_ushort v3, v3, s[6:7]
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v0, v0, v3
	v_sub_f16_e32 v0, 0, v0
	v_cvt_f32_f16_e32 v0, v0
	v_mul_f32_e32 v0, 0x3fb8aa3b, v0
	v_exp_f32_e32 v0, v0
	v_cvt_f16_f32_e32 v0, v0
	v_add_f16_e32 v0, 1.0, v0
	v_cvt_f32_f16_e32 v3, v0
	v_rcp_f32_e32 v3, v3
	v_cvt_f16_f32_e32 v3, v3
	v_div_fixup_f16 v0, v3, v0, 1.0
	global_store_short v2, v0, s[2:3]
BB89_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_or_b32_e32 v0, 1, v1
	v_cmp_gt_i32_e64 s0, 0x190, v0
	s_and_b32 s0, s0, vcc_lo
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB89_4
	v_and_b32_e32 v0, 3, v0
	v_lshlrev_b32_e32 v1, 1, v1
	v_lshlrev_b32_e32 v0, 1, v0
	v_add_nc_u32_e32 v2, 0xfa2, v1
	s_waitcnt lgkmcnt(0)
	global_load_ushort v0, v0, s[4:5]
	global_load_ushort v2, v2, s[6:7]
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v0, v0, v2
	v_sub_f16_e32 v0, 0, v0
	v_cvt_f32_f16_e32 v0, v0
	v_mul_f32_e32 v0, 0x3fb8aa3b, v0
	v_exp_f32_e32 v0, v0
	v_cvt_f16_f32_e32 v0, v0
	v_add_f16_e32 v0, 1.0, v0
	v_cvt_f32_f16_e32 v2, v0
	v_rcp_f32_e32 v2, v2
	v_cvt_f16_f32_e32 v2, v2
	v_div_fixup_f16 v0, v2, v0, 1.0
	global_store_short v1, v0, s[2:3] offset:2
BB89_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_sigmoid_take_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end89:
	.size	tvmgen_default_fused_reshape_add_sigmoid_take_kernel0, .Lfunc_end89-tvmgen_default_fused_reshape_add_sigmoid_take_kernel0

	.globl	tvmgen_default_fused_reshape_add_take_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_add_take_kernel0,@function
tvmgen_default_fused_reshape_add_take_kernel0:
	s_clause 0x2
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[8:9], s[4:5], 0x8
	s_load_dwordx2 s[4:5], s[4:5], 0x10
	v_lshlrev_b32_e32 v1, 1, v0
	v_lshl_add_u32 v2, s6, 8, v0
	v_lshl_add_u32 v0, s6, 9, v1
	s_movk_i32 s6, 0x23f0
	v_cmp_gt_i32_e64 s0, 0x11f8, v2
	v_cmp_lt_i32_e32 vcc_lo, 0x11f7, v2
	v_cmp_gt_i32_e64 s1, s6, v0
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB90_2
	v_mul_hi_i32 v1, 0xb21642c9, v0
	v_add_nc_u32_e32 v1, v1, v0
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 6, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_lo_u32 v2, 0x5c, v1
	v_add_nc_u32_e32 v1, 0xb3b0, v0
	v_sub_nc_u32_e32 v3, v0, v2
	v_ashrrev_i32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_lshlrev_b64 v[1:2], 1, v[1:2]
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, s0, s8, v1
	v_add_co_ci_u32_e64 v2, s0, s9, v2, s0
	v_add_co_u32 v3, s0, s4, v3
	v_add_co_ci_u32_e64 v4, s0, s5, v4, s0
	global_load_ushort v5, v[1:2], off
	global_load_ushort v3, v[3:4], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[1:2], 1, v[0:1]
	v_add_co_u32 v1, s0, s2, v1
	v_add_co_ci_u32_e64 v2, s0, s3, v2, s0
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v3, v3, v5
	global_store_short v[1:2], v3, off
BB90_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v1, 1, v0
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s6, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB90_4
	v_mul_hi_i32 v2, 0xb21642c9, v1
	v_add_nc_u32_e32 v2, v2, v1
	v_lshrrev_b32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v2, 6, v2
	v_add_nc_u32_e32 v2, v2, v3
	v_mul_lo_u32 v3, 0x5c, v2
	v_add_nc_u32_e32 v2, 0xb3b1, v0
	v_sub_nc_u32_e32 v4, v1, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[1:2], 1, v[2:3]
	v_lshlrev_b64 v[3:4], 1, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s8, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s9, v2, vcc_lo
	v_add_co_u32 v3, vcc_lo, s4, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s5, v4, vcc_lo
	global_load_ushort v2, v[1:2], off
	global_load_ushort v3, v[3:4], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_add_f16_e32 v2, v3, v2
	global_store_short v[0:1], v2, off offset:2
BB90_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_add_take_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 6
		.amdhsa_next_free_sgpr 10
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end90:
	.size	tvmgen_default_fused_reshape_add_take_kernel0, .Lfunc_end90-tvmgen_default_fused_reshape_add_take_kernel0

	.globl	tvmgen_default_fused_reshape_cast_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_cast_1_kernel0,@function
tvmgen_default_fused_reshape_cast_1_kernel0:
	v_lshlrev_b32_e32 v0, 1, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshl_add_u32 v0, s6, 9, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[2:3], 2, v[0:1]
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s0, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s1, v3, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_dwordx2 v[2:3], v[2:3], off
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_cvt_f16_f32_e32 v3, v3
	v_cvt_f16_f32_e32 v2, v2
	v_pack_b32_f16 v2, v2, v3
	global_store_dword v[0:1], v2, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_cast_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end91:
	.size	tvmgen_default_fused_reshape_cast_1_kernel0, .Lfunc_end91-tvmgen_default_fused_reshape_cast_1_kernel0

	.globl	tvmgen_default_fused_reshape_cast_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_cast_kernel0,@function
tvmgen_default_fused_reshape_cast_kernel0:
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s8, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s8, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB92_2
	v_lshrrev_b32_e32 v2, 7, v0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, 0x1b4e81b5, v2
	v_lshrrev_b32_e32 v6, 31, v5
	v_lshrrev_b32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_and_b32_e32 v6, 0xfe, v1
	v_mul_lo_u32 v5, 0x258, v5
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_or_b32 v5, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s4, v5
	v_add_co_ci_u32_e64 v6, s0, s5, v6, s0
	global_load_dword v2, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	s_waitcnt vmcnt(0)
	v_cvt_f16_f32_e32 v2, v2
	global_store_short v[5:6], v2, off
BB92_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s8, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB92_4
	v_lshrrev_b32_e32 v6, 7, v0
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, 0x1b4e81b5, v6
	v_lshrrev_b32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_mul_lo_u32 v7, 0x258, v7
	v_sub_nc_u32_e32 v6, v6, v7
	v_perm_b32 v6, v6, v2, 0x6050400
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo
	global_load_dword v8, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	s_waitcnt vmcnt(0)
	v_cvt_f16_f32_e32 v8, v8
	global_store_short v[6:7], v8, off
BB92_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s8, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s8, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB92_6
	v_lshrrev_b32_e32 v4, 7, v0
	v_and_b32_e32 v1, 0xfe, v1
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x1b4e81b5, v4
	v_lshrrev_b32_e32 v7, 31, v6
	v_lshrrev_b32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v6, 0x258, v6
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_or_b32 v6, v4, 8, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[6:7], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s4, v6
	v_add_co_ci_u32_e64 v7, s0, s5, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_dword v1, v[6:7], off
	s_waitcnt vmcnt(0)
	v_cvt_f16_f32_e32 v1, v1
	global_store_short v[3:4], v1, off
BB92_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s8, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB92_8
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x1b4e81b5, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v3, 0x258, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_perm_b32 v2, v0, v2, 0x6050400
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 2, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo
	global_load_dword v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_cvt_f16_f32_e32 v2, v3
	global_store_short v[0:1], v2, off
BB92_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_cast_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 9
		.amdhsa_next_free_sgpr 9
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end92:
	.size	tvmgen_default_fused_reshape_cast_kernel0, .Lfunc_end92-tvmgen_default_fused_reshape_cast_kernel0

	.globl	tvmgen_default_fused_reshape_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_kernel0,@function
tvmgen_default_fused_reshape_kernel0:
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s8, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s8, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB93_2
	v_lshrrev_b32_e32 v2, 7, v0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, 0x1b4e81b5, v2
	v_lshrrev_b32_e32 v6, 31, v5
	v_lshrrev_b32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_and_b32_e32 v6, 0xfe, v1
	v_mul_lo_u32 v5, 0x258, v5
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_or_b32 v5, v2, 8, v6
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s4, v5
	v_add_co_ci_u32_e64 v6, s0, s5, v6, s0
	global_load_ushort v2, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	s_waitcnt vmcnt(0)
	global_store_short v[5:6], v2, off
BB93_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s8, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB93_4
	v_lshrrev_b32_e32 v6, 7, v0
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, 0x1b4e81b5, v6
	v_lshrrev_b32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_mul_lo_u32 v7, 0x258, v7
	v_sub_nc_u32_e32 v6, v6, v7
	v_perm_b32 v6, v6, v2, 0x6050400
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo
	global_load_ushort v8, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_short v[6:7], v8, off
BB93_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s8, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s8, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB93_6
	v_lshrrev_b32_e32 v4, 7, v0
	v_and_b32_e32 v1, 0xfe, v1
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x1b4e81b5, v4
	v_lshrrev_b32_e32 v7, 31, v6
	v_lshrrev_b32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v6, 0x258, v6
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_or_b32 v6, v4, 8, v1
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s4, v6
	v_add_co_ci_u32_e64 v7, s0, s5, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_ushort v1, v[6:7], off
	s_waitcnt vmcnt(0)
	global_store_short v[3:4], v1, off
BB93_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s8, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB93_8
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x1b4e81b5, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 6, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v3, 0x258, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_perm_b32 v2, v0, v2, 0x6050400
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo
	global_load_ushort v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_short v[0:1], v3, off
BB93_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 9
		.amdhsa_next_free_sgpr 9
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end93:
	.size	tvmgen_default_fused_reshape_kernel0, .Lfunc_end93-tvmgen_default_fused_reshape_kernel0

	.globl	tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0
	.p2align	8
	.type	tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0,@function
tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x12c0, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB94_2
	v_mul_hi_i32 v1, 0x1b4e81b5, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshrrev_b32_e32 v2, 31, v1
	v_ashrrev_i32_e32 v1, 6, v1
	v_add_nc_u32_e32 v1, v1, v2
	v_mul_lo_u32 v1, 0x258, v1
	v_sub_nc_u32_e32 v1, v0, v1
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_dword v2, v[1:2], off
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt vmcnt(0)
	v_cmp_lg_f32_e32 vcc_lo, 0, v2
	v_cndmask_b32_e64 v2, 0, 0xff800000, vcc_lo
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v2, off
BB94_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 3
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end94:
	.size	tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0, .Lfunc_end94-tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0

	.globl	tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0
	.p2align	8
	.type	tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0,@function
tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0:
	s_clause 0x3
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[8:9], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[14:15], s[4:5], 0x18
	v_and_b32_e32 v2, 0x3fe, v0
	v_and_b32_e32 v1, 1, v0
	v_lshl_or_b32 v4, v0, 2, 4
	v_and_b32_e32 v3, 0x7e, v0
	v_mov_b32_e32 v6, 0
	v_lshlrev_b32_e32 v5, 2, v2
	v_cmp_eq_u32_e64 s1, 1, v1
	v_lshrrev_b32_e32 v8, 7, v0
	v_lshlrev_b32_e32 v7, 2, v3
	v_cmp_gt_i32_e64 s0, 0x80, v0
	v_lshl_add_u32 v0, s6, 8, v0
	s_mov_b32 s13, 0
	s_mov_b32 s5, 0x51eb851f
	s_mov_b32 s16, 0x358637bd
	s_mov_b32 s17, 0x40c90fdb
	s_brev_b32 s18, -2
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s2, v4
	s_brev_b32 s19, 18
	v_add_co_ci_u32_e32 v2, vcc_lo, s3, v6, vcc_lo
	v_add_co_u32 v3, vcc_lo, s2, v5
	s_mov_b32 s20, 0x800000
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v6, vcc_lo
	v_add_co_u32 v5, vcc_lo, s2, v7
	v_or_b32_e32 v7, 24, v8
	v_add_co_ci_u32_e32 v6, vcc_lo, s3, v6, vcc_lo
	s_mov_b32 s21, 0x7fffff
	s_mov_b32 s22, 0xfe5163ab
	s_mov_b32 s23, 0x3c439041
	s_mov_b32 s24, 0xdb629599
	s_mov_b32 s25, 0xf534ddc0
	s_mov_b32 s26, 0xfc2757d1
	s_mov_b32 s27, 0x4e441529
	s_mov_b32 s28, 0xa2f9836e
	s_movk_i32 s29, 0xff88
	s_movk_i32 s30, 0xffe0
	s_mov_b32 s31, 0xff800000
	s_movk_i32 s33, 0xf000
	s_mov_b32 s34, 0x3fc90fda
	s_mov_b32 s35, 0x3fc90000
	s_mov_b32 s36, 0x39fda000
	s_mov_b32 s37, 0x33000000
	s_mov_b32 s38, 0x33a22168
	s_mov_b32 s39, 0x3f22f983
	s_mov_b32 s40, 0xbfc90fda
	s_mov_b32 s41, 0xb3a22168
	s_mov_b32 s42, 0x33a22000
	s_mov_b32 s43, 0x2c340000
	s_mov_b32 s44, 0xa7c234c4
	s_mov_b32 s45, 0xb94c1982
	s_mov_b32 s46, 0x37d75334
	s_brev_b32 s47, 1
	s_mov_b32 s48, 0
	s_branch BB95_6
BB95_1:
	s_or_b32 exec_lo, exec_lo, s2
	v_mul_f32_e32 v13, v11, v11
	v_and_b32_e32 v16, 1, v12
	v_lshlrev_b32_e32 v12, 30, v12
	v_xor_b32_e32 v9, v10, v9
	v_fma_f32 v14, v13, s45, 0x3c0881c4
	v_fma_f32 v15, v13, s46, 0xbab64f3b
	v_cmp_eq_u32_e32 vcc_lo, 0, v16
	v_and_b32_e32 v12, s47, v12
	v_fmaak_f32 v14, v13, v14, 0xbe2aaa9d
	v_fmaak_f32 v15, v13, v15, 0x3d2aabf7
	v_mul_f32_e32 v14, v13, v14
	v_fmaak_f32 v15, v13, v15, 0xbf000004
	v_fmac_f32_e32 v11, v11, v14
	v_fma_f32 v13, v13, v15, 1.0
	v_cndmask_b32_e32 v11, v13, v11, vcc_lo
	v_xor3_b32 v11, v9, v12, v11
BB95_2:
	s_or_b32 exec_lo, exec_lo, s12
BB95_3:
	s_or_b32 exec_lo, exec_lo, s7
	v_ashrrev_i32_e32 v9, 31, v8
	v_cmp_class_f32_e64 vcc_lo, v10, 0x1f8
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_cndmask_b32_e32 v10, 0x7fc00000, v11, vcc_lo
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_store_dword v[8:9], v10, off
BB95_4:
	s_or_b32 exec_lo, exec_lo, s49
BB95_5:
	s_add_i32 s48, s48, 0x10000
	s_addk_i32 s6, 0x100
	s_cmp_eq_u32 s48, 0x30000
	s_cbranch_scc1 BB95_34
BB95_6:
	s_cmpk_lt_i32 s6, 0x258
	s_cbranch_scc0 BB95_5
	v_add_nc_u32_e32 v8, s48, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x25800, v8
	s_and_saveexec_b32 s49, vcc_lo
	s_cbranch_execz BB95_4
	s_mul_hi_i32 s50, s6, s5
	s_and_saveexec_b32 s2, s0
	s_xor_b32 s51, exec_lo, s2
	s_cbranch_execz BB95_22
	s_ashr_i32 s7, s6, 31
	s_lshl_b64 s[2:3], s[6:7], 2
	s_add_u32 s2, s14, s2
	s_addc_u32 s3, s15, s3
	s_lshr_b32 s4, s50, 31
	s_ashr_i32 s7, s50, 3
	s_add_i32 s4, s7, s4
	s_mul_i32 s4, s4, 25
	s_sub_i32 s4, s6, s4
	s_add_i32 s12, s4, 0x23f
	s_lshl_b64 s[52:53], s[12:13], 2
	s_add_u32 s52, s14, s52
	s_addc_u32 s53, s15, s53
	s_clause 0x1
	s_load_dword s4, s[52:53], 0x0
	s_load_dword s2, s[2:3], 0x0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e64 v9, s4, s16
	v_div_scale_f32 v10, s3, v9, v9, s2
	v_rcp_f32_e32 v11, v10
	v_fma_f32 v12, -v10, v11, 1.0
	v_fmac_f32_e32 v11, v12, v11
	v_div_scale_f32 v12, vcc_lo, s2, v9, s2
	v_mul_f32_e32 v13, v12, v11
	v_fma_f32 v14, v13, -v10, v12
	v_fmac_f32_e32 v13, v14, v11
	v_fmac_f32_e64 v12, -v10, v13
	v_div_fmas_f32 v10, v12, v11, v13
	v_div_fixup_f32 v9, v10, v9, s2
	v_mul_f32_e32 v9, s17, v9
	s_and_saveexec_b32 s2, s1
	s_xor_b32 s7, exec_lo, s2
	s_cbranch_execz BB95_15
	global_load_dword v10, v[1:2], off
	s_waitcnt vmcnt(0)
	v_div_scale_f32 v11, s2, v10, v10, v9
	v_div_scale_f32 v14, vcc_lo, v9, v10, v9
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_div_fixup_f32 v9, v11, v10, v9
	v_and_b32_e32 v10, s18, v9
	v_cmp_nlt_f32_e64 s2, |v9|, s19
	s_and_saveexec_b32 s3, s2
	s_xor_b32 s12, exec_lo, s3
	s_cbranch_execz BB95_12
	v_and_or_b32 v9, v10, s21, s20
	v_lshrrev_b32_e32 v11, 23, v10
	v_mul_hi_u32 v12, v9, s22
	v_mul_lo_u32 v13, v9, s23
	v_mul_hi_u32 v14, v9, s23
	v_mul_lo_u32 v15, v9, s24
	v_mul_hi_u32 v16, v9, s24
	v_mul_lo_u32 v17, v9, s25
	v_mul_hi_u32 v18, v9, s25
	v_mul_lo_u32 v19, v9, s26
	v_mul_hi_u32 v20, v9, s27
	v_add_co_u32 v12, vcc_lo, v13, v12
	v_mul_lo_u32 v21, v9, s28
	v_add_co_ci_u32_e32 v13, vcc_lo, v15, v14, vcc_lo
	v_mul_hi_u32 v14, v9, s26
	v_mul_lo_u32 v15, v9, s27
	v_add_co_ci_u32_e32 v16, vcc_lo, v17, v16, vcc_lo
	v_mul_hi_u32 v22, v9, s28
	v_add_co_ci_u32_e32 v17, vcc_lo, v19, v18, vcc_lo
	v_add_nc_u32_e32 v11, s29, v11
	v_mul_lo_u32 v9, v9, s22
	v_add_co_ci_u32_e32 v14, vcc_lo, v15, v14, vcc_lo
	v_add_co_ci_u32_e32 v15, vcc_lo, v21, v20, vcc_lo
	v_add_co_ci_u32_e32 v18, vcc_lo, 0, v22, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, vcc_lo
	v_cndmask_b32_e32 v18, v18, v15, vcc_lo
	v_cndmask_b32_e32 v15, v15, v14, vcc_lo
	v_cndmask_b32_e32 v14, v14, v17, vcc_lo
	v_cndmask_b32_e32 v17, v17, v16, vcc_lo
	v_add_nc_u32_e32 v11, v19, v11
	v_cndmask_b32_e32 v16, v16, v13, vcc_lo
	v_cndmask_b32_e32 v13, v13, v12, vcc_lo
	v_cndmask_b32_e32 v9, v12, v9, vcc_lo
	v_cmp_lt_u32_e64 s2, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, s2
	v_cndmask_b32_e64 v18, v18, v15, s2
	v_cndmask_b32_e64 v15, v15, v14, s2
	v_cndmask_b32_e64 v14, v14, v17, s2
	v_cndmask_b32_e64 v17, v17, v16, s2
	v_add_nc_u32_e32 v11, v19, v11
	v_cndmask_b32_e64 v16, v16, v13, s2
	v_cndmask_b32_e64 v9, v13, v9, s2
	v_cmp_lt_u32_e64 s3, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, s3
	v_cndmask_b32_e64 v18, v18, v15, s3
	v_cndmask_b32_e64 v15, v15, v14, s3
	v_cndmask_b32_e64 v14, v14, v17, s3
	v_cndmask_b32_e64 v17, v17, v16, s3
	v_add_nc_u32_e32 v11, v19, v11
	v_cndmask_b32_e64 v9, v16, v9, s3
	v_cmp_lt_u32_e64 s4, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, s4
	v_cndmask_b32_e64 v12, v15, v14, s4
	v_cndmask_b32_e64 v18, v18, v15, s4
	v_cndmask_b32_e64 v14, v14, v17, s4
	v_cndmask_b32_e64 v9, v17, v9, s4
	v_add_nc_u32_e32 v11, v19, v11
	v_sub_nc_u32_e32 v15, 32, v11
	v_cmp_eq_u32_e32 vcc_lo, 0, v11
	v_alignbit_b32 v13, v18, v12, v15
	v_alignbit_b32 v19, v12, v14, v15
	v_alignbit_b32 v15, v14, v9, v15
	v_cndmask_b32_e32 v11, v13, v18, vcc_lo
	v_cndmask_b32_e32 v12, v19, v12, vcc_lo
	v_cndmask_b32_e32 v14, v15, v14, vcc_lo
	v_bfe_i32 v16, v11, 29, 1
	v_alignbit_b32 v13, v11, v12, 30
	v_alignbit_b32 v12, v12, v14, 30
	v_alignbit_b32 v9, v14, v9, 30
	v_xor_b32_e32 v13, v16, v13
	v_xor_b32_e32 v12, v16, v12
	v_xor_b32_e32 v9, v16, v9
	v_lshrrev_b32_e32 v16, 29, v11
	v_ffbh_u32_e32 v15, v13
	v_cmp_ne_u32_e32 vcc_lo, 0, v13
	v_cndmask_b32_e32 v15, 32, v15, vcc_lo
	v_sub_nc_u32_e32 v14, 31, v15
	v_alignbit_b32 v13, v13, v12, v14
	v_alignbit_b32 v9, v12, v9, v14
	v_lshlrev_b32_e32 v12, 31, v16
	v_mad_i32_i24 v16, v15, s31, 0.5
	v_alignbit_b32 v14, v13, v9, 9
	v_lshrrev_b32_e32 v13, 9, v13
	v_ffbh_u32_e32 v17, v14
	v_cmp_ne_u32_e32 vcc_lo, 0, v14
	v_or3_b32 v13, v16, v12, v13
	v_cndmask_b32_e32 v16, 32, v17, vcc_lo
	v_and_b32_e32 v17, s33, v13
	v_mul_f32_e32 v18, s34, v13
	v_sub_nc_u32_e32 v19, 31, v16
	v_add_nc_u32_e32 v15, v16, v15
	v_fma_f32 v18, v17, s35, -v18
	v_mul_f32_e32 v16, s38, v13
	v_alignbit_b32 v9, v14, v9, v19
	v_sub_f32_e32 v14, v13, v17
	v_fmac_f32_e32 v18, s36, v17
	v_mad_i32_i24 v15, v15, s31, s37
	v_lshrrev_b32_e32 v9, 9, v9
	v_fmac_f32_e32 v18, s35, v14
	v_or3_b32 v9, v15, v12, v9
	v_bfe_u32 v12, v11, 29, 1
	v_fmac_f32_e32 v18, s36, v14
	v_lshrrev_b32_e32 v11, 30, v11
	v_fmac_f32_e32 v16, s34, v9
	v_add_nc_u32_e32 v11, v12, v11
	v_add_f32_e32 v9, v18, v16
	v_fmac_f32_e32 v9, s34, v13
BB95_12:
	s_or_saveexec_b32 s2, s12
	s_xor_b32 exec_lo, exec_lo, s2
	s_cbranch_execz BB95_14
	v_mul_f32_e32 v9, s39, v10
	v_rndne_f32_e32 v11, v9
	v_and_b32_e32 v9, s33, v11
	v_mul_f32_e32 v12, s40, v11
	v_fma_f32 v13, s40, v11, v10
	v_mul_f32_e32 v16, s41, v11
	v_sub_f32_e32 v14, v11, v9
	v_fmac_f32_e32 v12, s35, v9
	v_sub_f32_e32 v15, v10, v13
	v_fmac_f32_e32 v16, s42, v9
	v_fmac_f32_e32 v12, s36, v9
	v_fmac_f32_e32 v15, s40, v11
	v_fmac_f32_e32 v16, s43, v9
	v_fmac_f32_e32 v12, s35, v14
	v_fmac_f32_e32 v16, s42, v14
	v_fmac_f32_e32 v12, s36, v14
	v_fmac_f32_e32 v16, s43, v14
	v_sub_f32_e32 v12, v15, v12
	v_add_f32_e32 v12, v13, v12
	v_fma_f32 v9, s41, v11, v12
	v_sub_f32_e32 v12, v12, v9
	v_fmac_f32_e32 v12, s41, v11
	v_sub_f32_e32 v12, v12, v16
	v_add_f32_e32 v9, v9, v12
	v_fmac_f32_e32 v9, s44, v11
	v_cvt_i32_f32_e32 v11, v11
BB95_14:
	s_or_b32 exec_lo, exec_lo, s2
	v_mul_f32_e32 v12, v9, v9
	v_and_b32_e32 v15, 1, v11
	v_lshlrev_b32_e32 v11, 30, v11
	v_fma_f32 v13, v12, s45, 0x3c0881c4
	v_fma_f32 v14, v12, s46, 0xbab64f3b
	v_cmp_eq_u32_e32 vcc_lo, 0, v15
	v_and_b32_e32 v11, s47, v11
	v_fmaak_f32 v13, v12, v13, 0xbe2aaa9d
	v_fmaak_f32 v14, v12, v14, 0x3d2aabf7
	v_mul_f32_e32 v13, v12, v13
	v_fmaak_f32 v14, v12, v14, 0xbf000004
	v_fmac_f32_e32 v9, v9, v13
	v_fma_f32 v12, v12, v14, 1.0
	v_cndmask_b32_e64 v9, -v9, v12, vcc_lo
	v_xor_b32_e32 v11, v11, v9
BB95_15:
	s_or_saveexec_b32 s7, s7
	s_xor_b32 exec_lo, exec_lo, s7
	s_cbranch_execz BB95_21
	global_load_dword v10, v[3:4], off
	s_waitcnt vmcnt(0)
	v_div_scale_f32 v11, s2, v10, v10, v9
	v_div_scale_f32 v14, vcc_lo, v9, v10, v9
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_div_fixup_f32 v9, v11, v10, v9
	v_and_b32_e32 v10, s18, v9
	v_cmp_nlt_f32_e64 s2, |v9|, s19
	s_and_saveexec_b32 s3, s2
	s_xor_b32 s12, exec_lo, s3
	s_cbranch_execz BB95_18
	v_and_or_b32 v11, v10, s21, s20
	v_lshrrev_b32_e32 v12, 23, v10
	v_mul_hi_u32 v13, v11, s22
	v_mul_lo_u32 v14, v11, s23
	v_mul_hi_u32 v15, v11, s23
	v_mul_lo_u32 v16, v11, s24
	v_mul_hi_u32 v17, v11, s24
	v_mul_lo_u32 v18, v11, s25
	v_mul_hi_u32 v19, v11, s25
	v_mul_lo_u32 v20, v11, s26
	v_mul_hi_u32 v21, v11, s27
	v_add_co_u32 v13, vcc_lo, v14, v13
	v_mul_lo_u32 v22, v11, s28
	v_add_co_ci_u32_e32 v14, vcc_lo, v16, v15, vcc_lo
	v_mul_hi_u32 v15, v11, s26
	v_mul_lo_u32 v16, v11, s27
	v_add_co_ci_u32_e32 v17, vcc_lo, v18, v17, vcc_lo
	v_mul_hi_u32 v23, v11, s28
	v_add_co_ci_u32_e32 v18, vcc_lo, v20, v19, vcc_lo
	v_add_nc_u32_e32 v12, s29, v12
	v_mul_lo_u32 v11, v11, s22
	v_add_co_ci_u32_e32 v15, vcc_lo, v16, v15, vcc_lo
	v_add_co_ci_u32_e32 v16, vcc_lo, v22, v21, vcc_lo
	v_add_co_ci_u32_e32 v19, vcc_lo, 0, v23, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, vcc_lo
	v_cndmask_b32_e32 v19, v19, v16, vcc_lo
	v_cndmask_b32_e32 v16, v16, v15, vcc_lo
	v_cndmask_b32_e32 v15, v15, v18, vcc_lo
	v_cndmask_b32_e32 v18, v18, v17, vcc_lo
	v_add_nc_u32_e32 v12, v20, v12
	v_cndmask_b32_e32 v17, v17, v14, vcc_lo
	v_cndmask_b32_e32 v14, v14, v13, vcc_lo
	v_cndmask_b32_e32 v11, v13, v11, vcc_lo
	v_cmp_lt_u32_e64 s2, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, s2
	v_cndmask_b32_e64 v19, v19, v16, s2
	v_cndmask_b32_e64 v16, v16, v15, s2
	v_cndmask_b32_e64 v15, v15, v18, s2
	v_cndmask_b32_e64 v18, v18, v17, s2
	v_add_nc_u32_e32 v12, v20, v12
	v_cndmask_b32_e64 v17, v17, v14, s2
	v_cndmask_b32_e64 v11, v14, v11, s2
	v_cmp_lt_u32_e64 s3, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, s3
	v_cndmask_b32_e64 v19, v19, v16, s3
	v_cndmask_b32_e64 v16, v16, v15, s3
	v_cndmask_b32_e64 v15, v15, v18, s3
	v_cndmask_b32_e64 v18, v18, v17, s3
	v_add_nc_u32_e32 v12, v20, v12
	v_cndmask_b32_e64 v11, v17, v11, s3
	v_cmp_lt_u32_e64 s4, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, s4
	v_cndmask_b32_e64 v13, v16, v15, s4
	v_cndmask_b32_e64 v19, v19, v16, s4
	v_cndmask_b32_e64 v15, v15, v18, s4
	v_cndmask_b32_e64 v11, v18, v11, s4
	v_add_nc_u32_e32 v12, v20, v12
	v_sub_nc_u32_e32 v16, 32, v12
	v_cmp_eq_u32_e32 vcc_lo, 0, v12
	v_alignbit_b32 v14, v19, v13, v16
	v_alignbit_b32 v20, v13, v15, v16
	v_alignbit_b32 v16, v15, v11, v16
	v_cndmask_b32_e32 v12, v14, v19, vcc_lo
	v_cndmask_b32_e32 v13, v20, v13, vcc_lo
	v_cndmask_b32_e32 v15, v16, v15, vcc_lo
	v_bfe_i32 v17, v12, 29, 1
	v_alignbit_b32 v14, v12, v13, 30
	v_alignbit_b32 v13, v13, v15, 30
	v_alignbit_b32 v11, v15, v11, 30
	v_xor_b32_e32 v14, v17, v14
	v_xor_b32_e32 v13, v17, v13
	v_xor_b32_e32 v11, v17, v11
	v_lshrrev_b32_e32 v17, 29, v12
	v_ffbh_u32_e32 v16, v14
	v_cmp_ne_u32_e32 vcc_lo, 0, v14
	v_cndmask_b32_e32 v16, 32, v16, vcc_lo
	v_sub_nc_u32_e32 v15, 31, v16
	v_alignbit_b32 v14, v14, v13, v15
	v_alignbit_b32 v11, v13, v11, v15
	v_lshlrev_b32_e32 v13, 31, v17
	v_mad_i32_i24 v17, v16, s31, 0.5
	v_alignbit_b32 v15, v14, v11, 9
	v_lshrrev_b32_e32 v14, 9, v14
	v_ffbh_u32_e32 v18, v15
	v_cmp_ne_u32_e32 vcc_lo, 0, v15
	v_or3_b32 v14, v17, v13, v14
	v_cndmask_b32_e32 v17, 32, v18, vcc_lo
	v_and_b32_e32 v18, s33, v14
	v_mul_f32_e32 v19, s34, v14
	v_sub_nc_u32_e32 v20, 31, v17
	v_add_nc_u32_e32 v16, v17, v16
	v_fma_f32 v19, v18, s35, -v19
	v_mul_f32_e32 v17, s38, v14
	v_alignbit_b32 v11, v15, v11, v20
	v_sub_f32_e32 v15, v14, v18
	v_fmac_f32_e32 v19, s36, v18
	v_mad_i32_i24 v16, v16, s31, s37
	v_lshrrev_b32_e32 v11, 9, v11
	v_fmac_f32_e32 v19, s35, v15
	v_or3_b32 v11, v16, v13, v11
	v_bfe_u32 v13, v12, 29, 1
	v_fmac_f32_e32 v19, s36, v15
	v_lshrrev_b32_e32 v12, 30, v12
	v_fmac_f32_e32 v17, s34, v11
	v_add_nc_u32_e32 v12, v13, v12
	v_add_f32_e32 v11, v19, v17
	v_fmac_f32_e32 v11, s34, v14
BB95_18:
	s_or_saveexec_b32 s2, s12
	s_xor_b32 exec_lo, exec_lo, s2
	s_cbranch_execz BB95_20
	v_mul_f32_e32 v11, s39, v10
	v_rndne_f32_e32 v12, v11
	v_and_b32_e32 v11, s33, v12
	v_mul_f32_e32 v13, s40, v12
	v_fma_f32 v14, s40, v12, v10
	v_mul_f32_e32 v17, s41, v12
	v_sub_f32_e32 v15, v12, v11
	v_fmac_f32_e32 v13, s35, v11
	v_sub_f32_e32 v16, v10, v14
	v_fmac_f32_e32 v17, s42, v11
	v_fmac_f32_e32 v13, s36, v11
	v_fmac_f32_e32 v16, s40, v12
	v_fmac_f32_e32 v17, s43, v11
	v_fmac_f32_e32 v13, s35, v15
	v_fmac_f32_e32 v17, s42, v15
	v_fmac_f32_e32 v13, s36, v15
	v_fmac_f32_e32 v17, s43, v15
	v_sub_f32_e32 v13, v16, v13
	v_add_f32_e32 v13, v14, v13
	v_fma_f32 v11, s41, v12, v13
	v_sub_f32_e32 v13, v13, v11
	v_fmac_f32_e32 v13, s41, v12
	v_sub_f32_e32 v13, v13, v17
	v_add_f32_e32 v11, v11, v13
	v_fmac_f32_e32 v11, s44, v12
	v_cvt_i32_f32_e32 v12, v12
BB95_20:
	s_or_b32 exec_lo, exec_lo, s2
	v_mul_f32_e32 v13, v11, v11
	v_and_b32_e32 v16, 1, v12
	v_lshlrev_b32_e32 v12, 30, v12
	v_xor_b32_e32 v9, v10, v9
	v_fma_f32 v14, v13, s45, 0x3c0881c4
	v_fma_f32 v15, v13, s46, 0xbab64f3b
	v_cmp_eq_u32_e32 vcc_lo, 0, v16
	v_and_b32_e32 v12, s47, v12
	v_fmaak_f32 v14, v13, v14, 0xbe2aaa9d
	v_fmaak_f32 v15, v13, v15, 0x3d2aabf7
	v_mul_f32_e32 v14, v13, v14
	v_fmaak_f32 v15, v13, v15, 0xbf000004
	v_fmac_f32_e32 v11, v11, v14
	v_fma_f32 v13, v13, v15, 1.0
	v_cndmask_b32_e32 v11, v13, v11, vcc_lo
	v_xor3_b32 v11, v9, v12, v11
BB95_21:
	s_or_b32 exec_lo, exec_lo, s7
BB95_22:
	s_or_saveexec_b32 s7, s51
	s_xor_b32 exec_lo, exec_lo, s7
	s_cbranch_execz BB95_3
	s_lshr_b32 s2, s50, 31
	s_ashr_i32 s3, s50, 3
	s_add_i32 s2, s3, s2
	s_mul_i32 s2, s2, 25
	s_sub_i32 s3, s6, s2
	v_add_nc_u32_e32 v9, s3, v7
	s_ashr_i32 s3, s2, 31
	s_lshl_b64 s[2:3], s[2:3], 2
	v_mul_hi_u32 v9, v9, s5
	s_add_u32 s2, s10, s2
	s_addc_u32 s3, s11, s3
	s_load_dword s2, s[2:3], 0x60
	v_lshrrev_b32_e32 v9, 3, v9
	v_mul_lo_u32 v9, 0xffffffe7, v9
	v_add3_u32 v9, v7, s6, v9
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_add_co_u32 v9, vcc_lo, s10, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s11, v10, vcc_lo
	global_load_dword v9, v[9:10], off
	s_waitcnt lgkmcnt(0)
	v_add_f32_e64 v10, s2, s16
	s_waitcnt vmcnt(0)
	v_div_scale_f32 v11, s2, v10, v10, v9
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_div_scale_f32 v13, vcc_lo, v9, v10, v9
	v_mul_f32_e32 v14, v13, v12
	v_fma_f32 v15, v14, -v11, v13
	v_fmac_f32_e32 v14, v15, v12
	v_fmac_f32_e64 v13, -v11, v14
	v_div_fmas_f32 v11, v13, v12, v14
	v_div_fixup_f32 v9, v11, v10, v9
	v_mul_f32_e32 v9, s17, v9
	s_and_saveexec_b32 s2, s1
	s_xor_b32 s12, exec_lo, s2
	s_cbranch_execz BB95_29
	global_load_dword v10, v[5:6], off offset:4
	s_waitcnt vmcnt(0)
	v_div_scale_f32 v11, s2, v10, v10, v9
	v_div_scale_f32 v14, vcc_lo, v9, v10, v9
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_div_fixup_f32 v9, v11, v10, v9
	v_and_b32_e32 v10, s18, v9
	v_cmp_nlt_f32_e64 s2, |v9|, s19
	s_and_saveexec_b32 s3, s2
	s_xor_b32 s50, exec_lo, s3
	s_cbranch_execz BB95_26
	v_and_or_b32 v9, v10, s21, s20
	v_lshrrev_b32_e32 v11, 23, v10
	v_mul_hi_u32 v12, v9, s22
	v_mul_lo_u32 v13, v9, s23
	v_mul_hi_u32 v14, v9, s23
	v_mul_lo_u32 v15, v9, s24
	v_mul_hi_u32 v16, v9, s24
	v_mul_lo_u32 v17, v9, s25
	v_mul_hi_u32 v18, v9, s25
	v_mul_lo_u32 v19, v9, s26
	v_mul_hi_u32 v20, v9, s27
	v_add_co_u32 v12, vcc_lo, v13, v12
	v_mul_lo_u32 v21, v9, s28
	v_add_co_ci_u32_e32 v13, vcc_lo, v15, v14, vcc_lo
	v_mul_hi_u32 v14, v9, s26
	v_mul_lo_u32 v15, v9, s27
	v_add_co_ci_u32_e32 v16, vcc_lo, v17, v16, vcc_lo
	v_mul_hi_u32 v22, v9, s28
	v_add_co_ci_u32_e32 v17, vcc_lo, v19, v18, vcc_lo
	v_add_nc_u32_e32 v11, s29, v11
	v_mul_lo_u32 v9, v9, s22
	v_add_co_ci_u32_e32 v14, vcc_lo, v15, v14, vcc_lo
	v_add_co_ci_u32_e32 v15, vcc_lo, v21, v20, vcc_lo
	v_add_co_ci_u32_e32 v18, vcc_lo, 0, v22, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, vcc_lo
	v_cndmask_b32_e32 v18, v18, v15, vcc_lo
	v_cndmask_b32_e32 v15, v15, v14, vcc_lo
	v_cndmask_b32_e32 v14, v14, v17, vcc_lo
	v_cndmask_b32_e32 v17, v17, v16, vcc_lo
	v_add_nc_u32_e32 v11, v19, v11
	v_cndmask_b32_e32 v16, v16, v13, vcc_lo
	v_cndmask_b32_e32 v13, v13, v12, vcc_lo
	v_cndmask_b32_e32 v9, v12, v9, vcc_lo
	v_cmp_lt_u32_e64 s2, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, s2
	v_cndmask_b32_e64 v18, v18, v15, s2
	v_cndmask_b32_e64 v15, v15, v14, s2
	v_cndmask_b32_e64 v14, v14, v17, s2
	v_cndmask_b32_e64 v17, v17, v16, s2
	v_add_nc_u32_e32 v11, v19, v11
	v_cndmask_b32_e64 v16, v16, v13, s2
	v_cndmask_b32_e64 v9, v13, v9, s2
	v_cmp_lt_u32_e64 s3, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, s3
	v_cndmask_b32_e64 v18, v18, v15, s3
	v_cndmask_b32_e64 v15, v15, v14, s3
	v_cndmask_b32_e64 v14, v14, v17, s3
	v_cndmask_b32_e64 v17, v17, v16, s3
	v_add_nc_u32_e32 v11, v19, v11
	v_cndmask_b32_e64 v9, v16, v9, s3
	v_cmp_lt_u32_e64 s4, 31, v11
	v_cndmask_b32_e64 v19, 0, s30, s4
	v_cndmask_b32_e64 v12, v15, v14, s4
	v_cndmask_b32_e64 v18, v18, v15, s4
	v_cndmask_b32_e64 v14, v14, v17, s4
	v_cndmask_b32_e64 v9, v17, v9, s4
	v_add_nc_u32_e32 v11, v19, v11
	v_sub_nc_u32_e32 v15, 32, v11
	v_cmp_eq_u32_e32 vcc_lo, 0, v11
	v_alignbit_b32 v13, v18, v12, v15
	v_alignbit_b32 v19, v12, v14, v15
	v_alignbit_b32 v15, v14, v9, v15
	v_cndmask_b32_e32 v11, v13, v18, vcc_lo
	v_cndmask_b32_e32 v12, v19, v12, vcc_lo
	v_cndmask_b32_e32 v14, v15, v14, vcc_lo
	v_bfe_i32 v16, v11, 29, 1
	v_alignbit_b32 v13, v11, v12, 30
	v_alignbit_b32 v12, v12, v14, 30
	v_alignbit_b32 v9, v14, v9, 30
	v_xor_b32_e32 v13, v16, v13
	v_xor_b32_e32 v12, v16, v12
	v_xor_b32_e32 v9, v16, v9
	v_lshrrev_b32_e32 v16, 29, v11
	v_ffbh_u32_e32 v15, v13
	v_cmp_ne_u32_e32 vcc_lo, 0, v13
	v_cndmask_b32_e32 v15, 32, v15, vcc_lo
	v_sub_nc_u32_e32 v14, 31, v15
	v_alignbit_b32 v13, v13, v12, v14
	v_alignbit_b32 v9, v12, v9, v14
	v_lshlrev_b32_e32 v12, 31, v16
	v_mad_i32_i24 v16, v15, s31, 0.5
	v_alignbit_b32 v14, v13, v9, 9
	v_lshrrev_b32_e32 v13, 9, v13
	v_ffbh_u32_e32 v17, v14
	v_cmp_ne_u32_e32 vcc_lo, 0, v14
	v_or3_b32 v13, v16, v12, v13
	v_cndmask_b32_e32 v16, 32, v17, vcc_lo
	v_and_b32_e32 v17, s33, v13
	v_mul_f32_e32 v18, s34, v13
	v_sub_nc_u32_e32 v19, 31, v16
	v_add_nc_u32_e32 v15, v16, v15
	v_fma_f32 v18, v17, s35, -v18
	v_mul_f32_e32 v16, s38, v13
	v_alignbit_b32 v9, v14, v9, v19
	v_sub_f32_e32 v14, v13, v17
	v_fmac_f32_e32 v18, s36, v17
	v_mad_i32_i24 v15, v15, s31, s37
	v_lshrrev_b32_e32 v9, 9, v9
	v_fmac_f32_e32 v18, s35, v14
	v_or3_b32 v9, v15, v12, v9
	v_bfe_u32 v12, v11, 29, 1
	v_fmac_f32_e32 v18, s36, v14
	v_lshrrev_b32_e32 v11, 30, v11
	v_fmac_f32_e32 v16, s34, v9
	v_add_nc_u32_e32 v11, v12, v11
	v_add_f32_e32 v9, v18, v16
	v_fmac_f32_e32 v9, s34, v13
BB95_26:
	s_or_saveexec_b32 s2, s50
	s_xor_b32 exec_lo, exec_lo, s2
	s_cbranch_execz BB95_28
	v_mul_f32_e32 v9, s39, v10
	v_rndne_f32_e32 v11, v9
	v_and_b32_e32 v9, s33, v11
	v_mul_f32_e32 v12, s40, v11
	v_fma_f32 v13, s40, v11, v10
	v_mul_f32_e32 v16, s41, v11
	v_sub_f32_e32 v14, v11, v9
	v_fmac_f32_e32 v12, s35, v9
	v_sub_f32_e32 v15, v10, v13
	v_fmac_f32_e32 v16, s42, v9
	v_fmac_f32_e32 v12, s36, v9
	v_fmac_f32_e32 v15, s40, v11
	v_fmac_f32_e32 v16, s43, v9
	v_fmac_f32_e32 v12, s35, v14
	v_fmac_f32_e32 v16, s42, v14
	v_fmac_f32_e32 v12, s36, v14
	v_fmac_f32_e32 v16, s43, v14
	v_sub_f32_e32 v12, v15, v12
	v_add_f32_e32 v12, v13, v12
	v_fma_f32 v9, s41, v11, v12
	v_sub_f32_e32 v12, v12, v9
	v_fmac_f32_e32 v12, s41, v11
	v_sub_f32_e32 v12, v12, v16
	v_add_f32_e32 v9, v9, v12
	v_fmac_f32_e32 v9, s44, v11
	v_cvt_i32_f32_e32 v11, v11
BB95_28:
	s_or_b32 exec_lo, exec_lo, s2
	v_mul_f32_e32 v12, v9, v9
	v_and_b32_e32 v15, 1, v11
	v_lshlrev_b32_e32 v11, 30, v11
	v_fma_f32 v13, v12, s45, 0x3c0881c4
	v_fma_f32 v14, v12, s46, 0xbab64f3b
	v_cmp_eq_u32_e32 vcc_lo, 0, v15
	v_and_b32_e32 v11, s47, v11
	v_fmaak_f32 v13, v12, v13, 0xbe2aaa9d
	v_fmaak_f32 v14, v12, v14, 0x3d2aabf7
	v_mul_f32_e32 v13, v12, v13
	v_fmaak_f32 v14, v12, v14, 0xbf000004
	v_fmac_f32_e32 v9, v9, v13
	v_fma_f32 v12, v12, v14, 1.0
	v_cndmask_b32_e64 v9, -v9, v12, vcc_lo
	v_xor_b32_e32 v11, v11, v9
BB95_29:
	s_or_saveexec_b32 s12, s12
	s_xor_b32 exec_lo, exec_lo, s12
	s_cbranch_execz BB95_2
	global_load_dword v10, v[5:6], off
	s_waitcnt vmcnt(0)
	v_div_scale_f32 v11, s2, v10, v10, v9
	v_div_scale_f32 v14, vcc_lo, v9, v10, v9
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_div_fixup_f32 v9, v11, v10, v9
	v_and_b32_e32 v10, s18, v9
	v_cmp_nlt_f32_e64 s2, |v9|, s19
	s_and_saveexec_b32 s3, s2
	s_xor_b32 s50, exec_lo, s3
	s_cbranch_execz BB95_32
	v_and_or_b32 v11, v10, s21, s20
	v_lshrrev_b32_e32 v12, 23, v10
	v_mul_hi_u32 v13, v11, s22
	v_mul_lo_u32 v14, v11, s23
	v_mul_hi_u32 v15, v11, s23
	v_mul_lo_u32 v16, v11, s24
	v_mul_hi_u32 v17, v11, s24
	v_mul_lo_u32 v18, v11, s25
	v_mul_hi_u32 v19, v11, s25
	v_mul_lo_u32 v20, v11, s26
	v_mul_hi_u32 v21, v11, s27
	v_add_co_u32 v13, vcc_lo, v14, v13
	v_mul_lo_u32 v22, v11, s28
	v_add_co_ci_u32_e32 v14, vcc_lo, v16, v15, vcc_lo
	v_mul_hi_u32 v15, v11, s26
	v_mul_lo_u32 v16, v11, s27
	v_add_co_ci_u32_e32 v17, vcc_lo, v18, v17, vcc_lo
	v_mul_hi_u32 v23, v11, s28
	v_add_co_ci_u32_e32 v18, vcc_lo, v20, v19, vcc_lo
	v_add_nc_u32_e32 v12, s29, v12
	v_mul_lo_u32 v11, v11, s22
	v_add_co_ci_u32_e32 v15, vcc_lo, v16, v15, vcc_lo
	v_add_co_ci_u32_e32 v16, vcc_lo, v22, v21, vcc_lo
	v_add_co_ci_u32_e32 v19, vcc_lo, 0, v23, vcc_lo
	v_cmp_lt_u32_e32 vcc_lo, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, vcc_lo
	v_cndmask_b32_e32 v19, v19, v16, vcc_lo
	v_cndmask_b32_e32 v16, v16, v15, vcc_lo
	v_cndmask_b32_e32 v15, v15, v18, vcc_lo
	v_cndmask_b32_e32 v18, v18, v17, vcc_lo
	v_add_nc_u32_e32 v12, v20, v12
	v_cndmask_b32_e32 v17, v17, v14, vcc_lo
	v_cndmask_b32_e32 v14, v14, v13, vcc_lo
	v_cndmask_b32_e32 v11, v13, v11, vcc_lo
	v_cmp_lt_u32_e64 s2, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, s2
	v_cndmask_b32_e64 v19, v19, v16, s2
	v_cndmask_b32_e64 v16, v16, v15, s2
	v_cndmask_b32_e64 v15, v15, v18, s2
	v_cndmask_b32_e64 v18, v18, v17, s2
	v_add_nc_u32_e32 v12, v20, v12
	v_cndmask_b32_e64 v17, v17, v14, s2
	v_cndmask_b32_e64 v11, v14, v11, s2
	v_cmp_lt_u32_e64 s3, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, s3
	v_cndmask_b32_e64 v19, v19, v16, s3
	v_cndmask_b32_e64 v16, v16, v15, s3
	v_cndmask_b32_e64 v15, v15, v18, s3
	v_cndmask_b32_e64 v18, v18, v17, s3
	v_add_nc_u32_e32 v12, v20, v12
	v_cndmask_b32_e64 v11, v17, v11, s3
	v_cmp_lt_u32_e64 s4, 31, v12
	v_cndmask_b32_e64 v20, 0, s30, s4
	v_cndmask_b32_e64 v13, v16, v15, s4
	v_cndmask_b32_e64 v19, v19, v16, s4
	v_cndmask_b32_e64 v15, v15, v18, s4
	v_cndmask_b32_e64 v11, v18, v11, s4
	v_add_nc_u32_e32 v12, v20, v12
	v_sub_nc_u32_e32 v16, 32, v12
	v_cmp_eq_u32_e32 vcc_lo, 0, v12
	v_alignbit_b32 v14, v19, v13, v16
	v_alignbit_b32 v20, v13, v15, v16
	v_alignbit_b32 v16, v15, v11, v16
	v_cndmask_b32_e32 v12, v14, v19, vcc_lo
	v_cndmask_b32_e32 v13, v20, v13, vcc_lo
	v_cndmask_b32_e32 v15, v16, v15, vcc_lo
	v_bfe_i32 v17, v12, 29, 1
	v_alignbit_b32 v14, v12, v13, 30
	v_alignbit_b32 v13, v13, v15, 30
	v_alignbit_b32 v11, v15, v11, 30
	v_xor_b32_e32 v14, v17, v14
	v_xor_b32_e32 v13, v17, v13
	v_xor_b32_e32 v11, v17, v11
	v_lshrrev_b32_e32 v17, 29, v12
	v_ffbh_u32_e32 v16, v14
	v_cmp_ne_u32_e32 vcc_lo, 0, v14
	v_cndmask_b32_e32 v16, 32, v16, vcc_lo
	v_sub_nc_u32_e32 v15, 31, v16
	v_alignbit_b32 v14, v14, v13, v15
	v_alignbit_b32 v11, v13, v11, v15
	v_lshlrev_b32_e32 v13, 31, v17
	v_mad_i32_i24 v17, v16, s31, 0.5
	v_alignbit_b32 v15, v14, v11, 9
	v_lshrrev_b32_e32 v14, 9, v14
	v_ffbh_u32_e32 v18, v15
	v_cmp_ne_u32_e32 vcc_lo, 0, v15
	v_or3_b32 v14, v17, v13, v14
	v_cndmask_b32_e32 v17, 32, v18, vcc_lo
	v_and_b32_e32 v18, s33, v14
	v_mul_f32_e32 v19, s34, v14
	v_sub_nc_u32_e32 v20, 31, v17
	v_add_nc_u32_e32 v16, v17, v16
	v_fma_f32 v19, v18, s35, -v19
	v_mul_f32_e32 v17, s38, v14
	v_alignbit_b32 v11, v15, v11, v20
	v_sub_f32_e32 v15, v14, v18
	v_fmac_f32_e32 v19, s36, v18
	v_mad_i32_i24 v16, v16, s31, s37
	v_lshrrev_b32_e32 v11, 9, v11
	v_fmac_f32_e32 v19, s35, v15
	v_or3_b32 v11, v16, v13, v11
	v_bfe_u32 v13, v12, 29, 1
	v_fmac_f32_e32 v19, s36, v15
	v_lshrrev_b32_e32 v12, 30, v12
	v_fmac_f32_e32 v17, s34, v11
	v_add_nc_u32_e32 v12, v13, v12
	v_add_f32_e32 v11, v19, v17
	v_fmac_f32_e32 v11, s34, v14
BB95_32:
	s_or_saveexec_b32 s2, s50
	s_xor_b32 exec_lo, exec_lo, s2
	s_cbranch_execz BB95_1
	v_mul_f32_e32 v11, s39, v10
	v_rndne_f32_e32 v12, v11
	v_and_b32_e32 v11, s33, v12
	v_mul_f32_e32 v13, s40, v12
	v_fma_f32 v14, s40, v12, v10
	v_mul_f32_e32 v17, s41, v12
	v_sub_f32_e32 v15, v12, v11
	v_fmac_f32_e32 v13, s35, v11
	v_sub_f32_e32 v16, v10, v14
	v_fmac_f32_e32 v17, s42, v11
	v_fmac_f32_e32 v13, s36, v11
	v_fmac_f32_e32 v16, s40, v12
	v_fmac_f32_e32 v17, s43, v11
	v_fmac_f32_e32 v13, s35, v15
	v_fmac_f32_e32 v17, s42, v15
	v_fmac_f32_e32 v13, s36, v15
	v_fmac_f32_e32 v17, s43, v15
	v_sub_f32_e32 v13, v16, v13
	v_add_f32_e32 v13, v14, v13
	v_fma_f32 v11, s41, v12, v13
	v_sub_f32_e32 v13, v13, v11
	v_fmac_f32_e32 v13, s41, v12
	v_sub_f32_e32 v13, v13, v17
	v_add_f32_e32 v11, v11, v13
	v_fmac_f32_e32 v11, s44, v12
	v_cvt_i32_f32_e32 v12, v12
	s_branch BB95_1
BB95_34:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 32
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 24
		.amdhsa_next_free_sgpr 54
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end95:
	.size	tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0, .Lfunc_end95-tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0

	.globl	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0,@function
tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_lshl_add_u32 v1, s6, 8, v0
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x10
	s_load_dwordx2 s[8:9], s[4:5], 0x18
	v_lshlrev_b32_e32 v0, 2, v0
	s_ashr_i32 s7, s6, 31
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v4, vcc_lo, s1, v2, vcc_lo
	s_clause 0x1
	s_load_dwordx2 s[0:1], s[4:5], 0x20
	s_load_dwordx2 s[10:11], s[4:5], 0x28
	global_load_dword v3, v[3:4], off
	s_waitcnt lgkmcnt(0)
	s_clause 0x1
	global_load_dword v4, v0, s[0:1]
	global_load_dword v5, v0, s[10:11]
	s_lshl_b64 s[0:1], s[6:7], 2
	s_add_u32 s2, s2, s0
	s_addc_u32 s3, s3, s1
	s_add_u32 s0, s8, s0
	s_addc_u32 s1, s9, s1
	s_load_dword s0, s[0:1], 0x0
	s_load_dword s1, s[2:3], 0x0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e64 v0, 0x3727c5ac, s0
	v_sqrt_f32_e32 v0, v0
	s_waitcnt vmcnt(2)
	v_subrev_f32_e32 v3, s1, v3
	v_div_scale_f32 v6, s0, v0, v0, v3
	v_div_scale_f32 v9, vcc_lo, v3, v0, v3
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_rcp_f32_e32 v7, v6
	v_fma_f32 v8, -v6, v7, 1.0
	v_fmac_f32_e32 v7, v8, v7
	v_mul_f32_e32 v8, v9, v7
	v_fma_f32 v10, v8, -v6, v9
	v_fmac_f32_e32 v8, v10, v7
	v_fmac_f32_e64 v9, -v6, v8
	v_div_fmas_f32 v6, v9, v7, v8
	v_div_fixup_f32 v0, v6, v0, v3
	s_waitcnt vmcnt(0)
	v_fmac_f32_e32 v5, v0, v4
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v2, vcc_lo
	global_store_dword v[0:1], v5, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 48
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 11
		.amdhsa_next_free_sgpr 12
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end96:
	.size	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0, .Lfunc_end96-tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0

	.globl	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0
	.p2align	8
	.type	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0,@function
tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0:
	s_clause 0x5
	s_load_dwordx2 s[12:13], s[4:5], 0x20
	s_load_dwordx2 s[14:15], s[4:5], 0x28
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	s_load_dwordx2 s[10:11], s[4:5], 0x8
	s_load_dwordx2 s[8:9], s[4:5], 0x10
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	v_lshl_add_u32 v4, s6, 8, v0
	v_lshlrev_b32_e32 v0, 2, v0
	s_mov_b32 s4, 0x25800
	v_cmp_gt_i32_e64 s5, 0x258, s6
	v_cmp_gt_i32_e32 vcc_lo, s4, v4
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, s7, s12, v0
	v_add_co_ci_u32_e64 v3, s7, s13, 0, s7
	v_add_co_u32 v0, s7, s14, v0
	v_add_co_ci_u32_e64 v1, s7, s15, 0, s7
	s_and_b32 s7, s5, vcc_lo
	s_and_saveexec_b32 s5, s7
	s_cbranch_execz BB97_2
	v_ashrrev_i32_e32 v5, 31, v4
	s_ashr_i32 s7, s6, 31
	s_lshl_b64 s[12:13], s[6:7], 2
	v_lshlrev_b64 v[5:6], 2, v[4:5]
	s_add_u32 s14, s8, s12
	s_addc_u32 s15, s9, s13
	s_add_u32 s12, s2, s12
	s_addc_u32 s13, s3, s13
	v_add_co_u32 v7, vcc_lo, s10, v5
	v_add_co_ci_u32_e32 v8, vcc_lo, s11, v6, vcc_lo
	global_load_dword v7, v[7:8], off
	global_load_dword v8, v[2:3], off
	global_load_dword v9, v[0:1], off
	s_load_dword s7, s[12:13], 0x0
	s_load_dword s12, s[14:15], 0x0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e64 v10, 0x3727c5ac, s7
	v_sqrt_f32_e32 v10, v10
	s_waitcnt vmcnt(2)
	v_subrev_f32_e32 v7, s12, v7
	v_div_scale_f32 v11, s7, v10, v10, v7
	v_div_scale_f32 v14, vcc_lo, v7, v10, v7
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_add_co_u32 v5, vcc_lo, s0, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo
	v_div_fixup_f32 v7, v11, v10, v7
	s_waitcnt vmcnt(0)
	v_fmac_f32_e32 v9, v7, v8
	global_store_dword v[5:6], v9, off
BB97_2:
	s_or_b32 exec_lo, exec_lo, s5
	v_add_nc_u32_e32 v5, 0x10000, v4
	v_cmp_gt_i32_e64 s5, 0x158, s6
	v_cmp_gt_i32_e32 vcc_lo, s4, v5
	s_and_b32 s5, s5, vcc_lo
	s_and_saveexec_b32 s4, s5
	s_cbranch_execz BB97_4
	v_ashrrev_i32_e32 v6, 31, v5
	s_ashr_i32 s7, s6, 31
	s_lshl_b64 s[12:13], s[6:7], 2
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_add_u32 s14, s8, s12
	s_addc_u32 s15, s9, s13
	s_add_u32 s12, s2, s12
	s_addc_u32 s13, s3, s13
	v_add_co_u32 v7, vcc_lo, s10, v5
	v_add_co_ci_u32_e32 v8, vcc_lo, s11, v6, vcc_lo
	global_load_dword v7, v[7:8], off
	global_load_dword v8, v[2:3], off
	global_load_dword v9, v[0:1], off
	s_load_dword s5, s[12:13], 0x400
	s_load_dword s7, s[14:15], 0x400
	s_waitcnt lgkmcnt(0)
	v_add_f32_e64 v10, 0x3727c5ac, s5
	v_sqrt_f32_e32 v10, v10
	s_waitcnt vmcnt(2)
	v_subrev_f32_e32 v7, s7, v7
	v_div_scale_f32 v11, s5, v10, v10, v7
	v_div_scale_f32 v14, vcc_lo, v7, v10, v7
	v_rcp_f32_e32 v12, v11
	v_fma_f32 v13, -v11, v12, 1.0
	v_fmac_f32_e32 v12, v13, v12
	v_mul_f32_e32 v13, v14, v12
	v_fma_f32 v15, v13, -v11, v14
	v_fmac_f32_e32 v13, v15, v12
	v_fmac_f32_e64 v14, -v11, v13
	v_div_fmas_f32 v11, v14, v12, v13
	v_add_co_u32 v5, vcc_lo, s0, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s1, v6, vcc_lo
	v_div_fixup_f32 v7, v11, v10, v7
	s_waitcnt vmcnt(0)
	v_fmac_f32_e32 v9, v7, v8
	global_store_dword v[5:6], v9, off
BB97_4:
	s_or_b32 exec_lo, exec_lo, s4
	v_add_nc_u32_e32 v4, 0x20000, v4
	v_cmp_gt_i32_e64 s4, 0x58, s6
	v_cmp_gt_i32_e32 vcc_lo, 0x25800, v4
	s_and_b32 s4, s4, vcc_lo
	s_and_saveexec_b32 s5, s4
	s_cbranch_execz BB97_6
	v_ashrrev_i32_e32 v5, 31, v4
	s_add_i32 s4, s6, 0x200
	s_ashr_i32 s5, s4, 31
	v_lshlrev_b64 v[4:5], 2, v[4:5]
	s_lshl_b64 s[4:5], s[4:5], 2
	s_add_u32 s6, s8, s4
	s_addc_u32 s7, s9, s5
	s_add_u32 s2, s2, s4
	v_add_co_u32 v6, vcc_lo, s10, v4
	s_addc_u32 s3, s3, s5
	v_add_co_ci_u32_e32 v7, vcc_lo, s11, v5, vcc_lo
	global_load_dword v6, v[6:7], off
	global_load_dword v2, v[2:3], off
	global_load_dword v3, v[0:1], off
	s_load_dword s2, s[2:3], 0x0
	s_load_dword s3, s[6:7], 0x0
	s_waitcnt lgkmcnt(0)
	v_add_f32_e64 v0, 0x3727c5ac, s2
	v_sqrt_f32_e32 v0, v0
	s_waitcnt vmcnt(2)
	v_subrev_f32_e32 v1, s3, v6
	v_div_scale_f32 v6, s2, v0, v0, v1
	v_div_scale_f32 v9, vcc_lo, v1, v0, v1
	v_rcp_f32_e32 v7, v6
	v_fma_f32 v8, -v6, v7, 1.0
	v_fmac_f32_e32 v7, v8, v7
	v_mul_f32_e32 v8, v9, v7
	v_fma_f32 v10, v8, -v6, v9
	v_fmac_f32_e32 v8, v10, v7
	v_fmac_f32_e64 v9, -v6, v8
	v_div_fmas_f32 v6, v9, v7, v8
	v_div_fixup_f32 v0, v6, v0, v1
	s_waitcnt vmcnt(0)
	v_fmac_f32_e32 v3, v0, v2
	v_add_co_u32 v0, vcc_lo, s0, v4
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v5, vcc_lo
	global_store_dword v[0:1], v3, off
BB97_6:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 48
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 16
		.amdhsa_next_free_sgpr 16
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end97:
	.size	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0, .Lfunc_end97-tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0

	.globl	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0
	.p2align	8
	.type	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0,@function
tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0:
	s_clause 0x14
	s_load_dwordx2 s[42:43], s[4:5], 0xa0
	s_load_dwordx2 s[46:47], s[4:5], 0x98
	s_load_dwordx2 s[44:45], s[4:5], 0x90
	s_load_dwordx2 s[36:37], s[4:5], 0x88
	s_load_dwordx2 s[40:41], s[4:5], 0x80
	s_load_dwordx2 s[38:39], s[4:5], 0x78
	s_load_dwordx2 s[28:29], s[4:5], 0x70
	s_load_dwordx2 s[34:35], s[4:5], 0x68
	s_load_dwordx2 s[30:31], s[4:5], 0x60
	s_load_dwordx2 s[22:23], s[4:5], 0x58
	s_load_dwordx2 s[26:27], s[4:5], 0x50
	s_load_dwordx2 s[24:25], s[4:5], 0x48
	s_load_dwordx2 s[18:19], s[4:5], 0x40
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[14:15], s[4:5], 0x8
	s_load_dwordx2 s[16:17], s[4:5], 0x10
	s_load_dwordx2 s[12:13], s[4:5], 0x18
	s_load_dwordx2 s[10:11], s[4:5], 0x20
	s_load_dwordx2 s[8:9], s[4:5], 0x28
	s_load_dwordx2 s[20:21], s[4:5], 0x30
	s_load_dwordx2 s[4:5], s[4:5], 0x38
	v_lshlrev_b32_e32 v2, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v7, s6, 8, v0
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e32 vcc_lo, 0x12c00, v7
	v_cmp_lt_i32_e64 s0, 0x12bff, v7
	v_cmp_gt_i32_e64 s1, 0x25800, v5
	s_and_b32 s33, s1, vcc_lo
	s_and_saveexec_b32 s1, s33
	s_cbranch_execz BB98_22
	v_add_nc_u32_e32 v1, 0xfffe0c00, v5
	s_movk_i32 s48, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s48, v1
	s_and_saveexec_b32 s33, vcc_lo
	s_xor_b32 s33, exec_lo, s33
	s_cbranch_execz BB98_19
	v_add_nc_u32_e32 v1, 0xfffe7000, v5
	v_cmp_lt_u32_e32 vcc_lo, s48, v1
	s_and_saveexec_b32 s48, vcc_lo
	s_xor_b32 s48, exec_lo, s48
	s_cbranch_execz BB98_16
	v_add_nc_u32_e32 v1, 0xfffed400, v5
	s_movk_i32 s50, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s50, v1
	s_and_saveexec_b32 s49, vcc_lo
	s_xor_b32 s49, exec_lo, s49
	s_cbranch_execz BB98_13
	v_add_nc_u32_e32 v1, 0xffff3800, v5
	v_cmp_lt_u32_e32 vcc_lo, s50, v1
	s_and_saveexec_b32 s50, vcc_lo
	s_xor_b32 s50, exec_lo, s50
	s_cbranch_execz BB98_10
	v_lshrrev_b32_e32 v1, 7, v0
	v_add_nc_u32_e32 v1, s6, v1
	v_mul_hi_i32 v3, 0x51eb851f, v1
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_add_nc_u32_e32 v4, 0xffff9c00, v5
	v_mul_lo_u32 v3, 0x64, v3
	v_cmp_lt_u32_e32 vcc_lo, 0x63ff, v4
	v_sub_nc_u32_e32 v10, v1, v3
	v_ashrrev_i32_e32 v11, 31, v10
	s_and_saveexec_b32 s51, vcc_lo
	s_xor_b32 s51, exec_lo, s51
	s_cbranch_execz BB98_7
	v_and_b32_e32 v3, 0xfe, v2
	v_lshl_or_b32 v8, v10, 8, v3
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	v_ashrrev_i32_e32 v9, 31, v8
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s46, v10
	v_add_co_ci_u32_e32 v13, vcc_lo, s47, v11, vcc_lo
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_add_co_u32 v8, vcc_lo, s44, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s45, v9, vcc_lo
	global_load_dword v1, v[12:13], off
	global_load_dword v4, v[8:9], off
	v_add_co_u32 v8, vcc_lo, s42, v10
	v_add_co_ci_u32_e32 v9, vcc_lo, s43, v11, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v1, v4, v1
BB98_7:
	s_or_saveexec_b32 s51, s51
	s_xor_b32 exec_lo, exec_lo, s51
	s_cbranch_execz BB98_9
	v_and_b32_e32 v3, 0xfe, v2
	v_lshl_or_b32 v8, v10, 8, v3
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	v_ashrrev_i32_e32 v9, 31, v8
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s40, v10
	v_add_co_ci_u32_e32 v13, vcc_lo, s41, v11, vcc_lo
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_add_co_u32 v8, vcc_lo, s38, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s39, v9, vcc_lo
	global_load_dword v1, v[12:13], off
	global_load_dword v4, v[8:9], off
	v_add_co_u32 v8, vcc_lo, s36, v10
	v_add_co_ci_u32_e32 v9, vcc_lo, s37, v11, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v1, v4, v1
BB98_9:
	s_or_b32 exec_lo, exec_lo, s51
BB98_10:
	s_or_saveexec_b32 s50, s50
	s_xor_b32 exec_lo, exec_lo, s50
	s_cbranch_execz BB98_12
	v_lshrrev_b32_e32 v1, 7, v0
	v_add_nc_u32_e32 v1, s6, v1
	v_mul_hi_i32 v3, 0x51eb851f, v1
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v4, 0x64, v3
	v_and_b32_e32 v3, 0xfe, v2
	v_sub_nc_u32_e32 v8, v1, v4
	v_lshl_or_b32 v10, v8, 8, v3
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s34, v8
	v_add_co_ci_u32_e32 v13, vcc_lo, s35, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s30, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s31, v11, vcc_lo
	v_add_co_u32 v8, vcc_lo, s28, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s29, v9, vcc_lo
	global_load_dword v1, v[12:13], off
	global_load_dword v4, v[10:11], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v1, v4, v1
BB98_12:
	s_or_b32 exec_lo, exec_lo, s50
BB98_13:
	s_or_saveexec_b32 s49, s49
	s_xor_b32 exec_lo, exec_lo, s49
	s_cbranch_execz BB98_15
	v_lshrrev_b32_e32 v1, 7, v0
	v_add_nc_u32_e32 v1, s6, v1
	v_mul_hi_i32 v3, 0x51eb851f, v1
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v4, 0x64, v3
	v_and_b32_e32 v3, 0xfe, v2
	v_sub_nc_u32_e32 v8, v1, v4
	v_lshl_or_b32 v10, v8, 8, v3
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s26, v8
	v_add_co_ci_u32_e32 v13, vcc_lo, s27, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s24, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s25, v11, vcc_lo
	v_add_co_u32 v8, vcc_lo, s22, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s23, v9, vcc_lo
	global_load_dword v1, v[12:13], off
	global_load_dword v4, v[10:11], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v1, v4, v1
BB98_15:
	s_or_b32 exec_lo, exec_lo, s49
BB98_16:
	s_or_saveexec_b32 s48, s48
	s_xor_b32 exec_lo, exec_lo, s48
	s_cbranch_execz BB98_18
	v_lshrrev_b32_e32 v1, 7, v0
	v_add_nc_u32_e32 v1, s6, v1
	v_mul_hi_i32 v3, 0x51eb851f, v1
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v4, 0x64, v3
	v_and_b32_e32 v3, 0xfe, v2
	v_sub_nc_u32_e32 v8, v1, v4
	v_lshl_or_b32 v10, v8, 8, v3
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s4, v8
	v_add_co_ci_u32_e32 v13, vcc_lo, s5, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s20, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s21, v11, vcc_lo
	v_add_co_u32 v8, vcc_lo, s18, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s19, v9, vcc_lo
	global_load_dword v1, v[12:13], off
	global_load_dword v4, v[10:11], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v1, v4, v1
BB98_18:
	s_or_b32 exec_lo, exec_lo, s48
BB98_19:
	s_or_saveexec_b32 s33, s33
	s_xor_b32 exec_lo, exec_lo, s33
	s_cbranch_execz BB98_21
	v_lshrrev_b32_e32 v1, 7, v0
	v_add_nc_u32_e32 v1, s6, v1
	v_mul_hi_i32 v3, 0x51eb851f, v1
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_mul_lo_u32 v4, 0x64, v3
	v_and_b32_e32 v3, 0xfe, v2
	v_sub_nc_u32_e32 v8, v1, v4
	v_lshl_or_b32 v10, v8, 8, v3
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	v_lshlrev_b64 v[10:11], 2, v[10:11]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v12, vcc_lo, s16, v8
	v_add_co_ci_u32_e32 v13, vcc_lo, s17, v9, vcc_lo
	v_add_co_u32 v10, vcc_lo, s14, v10
	v_add_co_ci_u32_e32 v11, vcc_lo, s15, v11, vcc_lo
	v_add_co_u32 v8, vcc_lo, s12, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s13, v9, vcc_lo
	global_load_dword v1, v[12:13], off
	global_load_dword v4, v[10:11], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v1, v4, v1
BB98_21:
	s_or_b32 exec_lo, exec_lo, s33
	global_load_dword v6, v[8:9], off
	v_mov_b32_e32 v4, 0
	v_lshlrev_b64 v[3:4], 2, v[3:4]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v8, vcc_lo, s10, v3
	v_add_co_ci_u32_e32 v9, vcc_lo, s11, v4, vcc_lo
	v_add_co_u32 v3, vcc_lo, s8, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s9, v4, vcc_lo
	global_load_dword v8, v[8:9], off
	global_load_dword v9, v[3:4], off
	s_waitcnt vmcnt(2)
	v_add_f32_e32 v3, 0x3727c5ac, v6
	v_sqrt_f32_e32 v3, v3
	v_div_scale_f32 v4, s33, v3, v3, v1
	v_div_scale_f32 v11, vcc_lo, v1, v3, v1
	v_rcp_f32_e32 v6, v4
	v_fma_f32 v10, -v4, v6, 1.0
	v_fmac_f32_e32 v6, v10, v6
	v_mul_f32_e32 v10, v11, v6
	v_fma_f32 v12, v10, -v4, v11
	v_fmac_f32_e32 v10, v12, v6
	v_fmac_f32_e64 v11, -v4, v10
	v_div_fmas_f32 v4, v11, v6, v10
	v_ashrrev_i32_e32 v6, 31, v5
	v_div_fixup_f32 v1, v4, v3, v1
	v_lshlrev_b64 v[3:4], 1, v[5:6]
	s_waitcnt vmcnt(0)
	v_fma_mixlo_f16 v1, v1, v8, v9
	v_add_co_u32 v3, vcc_lo, s2, v3
	v_add_co_ci_u32_e32 v4, vcc_lo, s3, v4, vcc_lo
	global_store_short v[3:4], v1, off
BB98_22:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v1, 1, v2
	s_xor_b32 s0, s0, -1
	v_add_nc_u32_e32 v3, s7, v1
	v_cmp_gt_i32_e32 vcc_lo, 0x25800, v3
	s_and_b32 s1, vcc_lo, s0
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB98_44
	v_add_nc_u32_e32 v4, 0xfffe0c00, v3
	s_movk_i32 s7, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s7, v4
	s_and_saveexec_b32 s1, vcc_lo
	s_xor_b32 s1, exec_lo, s1
	s_cbranch_execz BB98_41
	v_add_nc_u32_e32 v4, 0xfffe7000, v3
	v_cmp_lt_u32_e32 vcc_lo, s7, v4
	s_and_saveexec_b32 s7, vcc_lo
	s_xor_b32 s7, exec_lo, s7
	s_cbranch_execz BB98_38
	v_add_nc_u32_e32 v4, 0xfffed400, v3
	s_movk_i32 s48, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s48, v4
	s_and_saveexec_b32 s33, vcc_lo
	s_xor_b32 s33, exec_lo, s33
	s_cbranch_execz BB98_35
	v_add_nc_u32_e32 v4, 0xffff3800, v3
	v_cmp_lt_u32_e32 vcc_lo, s48, v4
	s_and_saveexec_b32 s48, vcc_lo
	s_xor_b32 s48, exec_lo, s48
	s_cbranch_execz BB98_32
	v_lshrrev_b32_e32 v4, 7, v0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x51eb851f, v4
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_add_nc_u32_e32 v8, 0xffff9c00, v3
	v_mul_lo_u32 v6, 0x64, v6
	v_cmp_lt_u32_e32 vcc_lo, 0x63ff, v8
	v_sub_nc_u32_e32 v11, v4, v6
	v_ashrrev_i32_e32 v12, 31, v11
	s_and_saveexec_b32 s49, vcc_lo
	s_xor_b32 s49, exec_lo, s49
	s_cbranch_execz BB98_29
	v_and_b32_e32 v8, 0xff, v1
	v_lshl_or_b32 v9, v11, 8, v8
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	v_ashrrev_i32_e32 v10, 31, v9
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s46, v11
	v_add_co_ci_u32_e32 v14, vcc_lo, s47, v12, vcc_lo
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_add_co_u32 v9, vcc_lo, s44, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s45, v10, vcc_lo
	global_load_dword v4, v[13:14], off
	global_load_dword v6, v[9:10], off
	v_add_co_u32 v9, vcc_lo, s42, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s43, v12, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v6, v4
BB98_29:
	s_or_saveexec_b32 s49, s49
	s_xor_b32 exec_lo, exec_lo, s49
	s_cbranch_execz BB98_31
	v_and_b32_e32 v8, 0xff, v1
	v_lshl_or_b32 v9, v11, 8, v8
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	v_ashrrev_i32_e32 v10, 31, v9
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s40, v11
	v_add_co_ci_u32_e32 v14, vcc_lo, s41, v12, vcc_lo
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_add_co_u32 v9, vcc_lo, s38, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s39, v10, vcc_lo
	global_load_dword v4, v[13:14], off
	global_load_dword v6, v[9:10], off
	v_add_co_u32 v9, vcc_lo, s36, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s37, v12, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v6, v4
BB98_31:
	s_or_b32 exec_lo, exec_lo, s49
BB98_32:
	s_or_saveexec_b32 s48, s48
	s_xor_b32 exec_lo, exec_lo, s48
	s_cbranch_execz BB98_34
	v_lshrrev_b32_e32 v4, 7, v0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x51eb851f, v4
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_and_b32_e32 v8, 0xff, v1
	v_mul_lo_u32 v6, 0x64, v6
	v_sub_nc_u32_e32 v9, v4, v6
	v_lshl_or_b32 v11, v9, 8, v8
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s34, v9
	v_add_co_ci_u32_e32 v14, vcc_lo, s35, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s30, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s31, v12, vcc_lo
	v_add_co_u32 v9, vcc_lo, s28, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s29, v10, vcc_lo
	global_load_dword v4, v[13:14], off
	global_load_dword v6, v[11:12], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v6, v4
BB98_34:
	s_or_b32 exec_lo, exec_lo, s48
BB98_35:
	s_or_saveexec_b32 s33, s33
	s_xor_b32 exec_lo, exec_lo, s33
	s_cbranch_execz BB98_37
	v_lshrrev_b32_e32 v4, 7, v0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x51eb851f, v4
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_and_b32_e32 v8, 0xff, v1
	v_mul_lo_u32 v6, 0x64, v6
	v_sub_nc_u32_e32 v9, v4, v6
	v_lshl_or_b32 v11, v9, 8, v8
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s26, v9
	v_add_co_ci_u32_e32 v14, vcc_lo, s27, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s24, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s25, v12, vcc_lo
	v_add_co_u32 v9, vcc_lo, s22, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s23, v10, vcc_lo
	global_load_dword v4, v[13:14], off
	global_load_dword v6, v[11:12], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v6, v4
BB98_37:
	s_or_b32 exec_lo, exec_lo, s33
BB98_38:
	s_or_saveexec_b32 s7, s7
	s_xor_b32 exec_lo, exec_lo, s7
	s_cbranch_execz BB98_40
	v_lshrrev_b32_e32 v4, 7, v0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x51eb851f, v4
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_and_b32_e32 v8, 0xff, v1
	v_mul_lo_u32 v6, 0x64, v6
	v_sub_nc_u32_e32 v9, v4, v6
	v_lshl_or_b32 v11, v9, 8, v8
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s4, v9
	v_add_co_ci_u32_e32 v14, vcc_lo, s5, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s20, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s21, v12, vcc_lo
	v_add_co_u32 v9, vcc_lo, s18, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s19, v10, vcc_lo
	global_load_dword v4, v[13:14], off
	global_load_dword v6, v[11:12], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v6, v4
BB98_40:
	s_or_b32 exec_lo, exec_lo, s7
BB98_41:
	s_or_saveexec_b32 s1, s1
	s_xor_b32 exec_lo, exec_lo, s1
	s_cbranch_execz BB98_43
	v_lshrrev_b32_e32 v4, 7, v0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x51eb851f, v4
	v_lshrrev_b32_e32 v8, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v8
	v_and_b32_e32 v8, 0xff, v1
	v_mul_lo_u32 v6, 0x64, v6
	v_sub_nc_u32_e32 v9, v4, v6
	v_lshl_or_b32 v11, v9, 8, v8
	v_ashrrev_i32_e32 v10, 31, v9
	v_ashrrev_i32_e32 v12, 31, v11
	v_lshlrev_b64 v[9:10], 2, v[9:10]
	v_lshlrev_b64 v[11:12], 2, v[11:12]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v13, vcc_lo, s16, v9
	v_add_co_ci_u32_e32 v14, vcc_lo, s17, v10, vcc_lo
	v_add_co_u32 v11, vcc_lo, s14, v11
	v_add_co_ci_u32_e32 v12, vcc_lo, s15, v12, vcc_lo
	v_add_co_u32 v9, vcc_lo, s12, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v10, vcc_lo
	global_load_dword v4, v[13:14], off
	global_load_dword v6, v[11:12], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v6, v4
BB98_43:
	s_or_b32 exec_lo, exec_lo, s1
	global_load_dword v4, v[9:10], off
	v_mov_b32_e32 v9, 0
	v_lshlrev_b64 v[8:9], 2, v[8:9]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v10, vcc_lo, s10, v8
	v_add_co_ci_u32_e32 v11, vcc_lo, s11, v9, vcc_lo
	v_add_co_u32 v8, vcc_lo, s8, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s9, v9, vcc_lo
	global_load_dword v10, v[10:11], off
	global_load_dword v11, v[8:9], off
	s_waitcnt vmcnt(2)
	v_add_f32_e32 v4, 0x3727c5ac, v4
	v_sqrt_f32_e32 v8, v4
	v_div_scale_f32 v4, s1, v8, v8, v6
	v_div_scale_f32 v13, vcc_lo, v6, v8, v6
	v_rcp_f32_e32 v9, v4
	v_fma_f32 v12, -v4, v9, 1.0
	v_fmac_f32_e32 v9, v12, v9
	v_mul_f32_e32 v12, v13, v9
	v_fma_f32 v14, v12, -v4, v13
	v_fmac_f32_e32 v12, v14, v9
	v_fmac_f32_e64 v13, -v4, v12
	v_ashrrev_i32_e32 v4, 31, v3
	v_div_fmas_f32 v9, v13, v9, v12
	v_div_fixup_f32 v6, v9, v8, v6
	v_lshlrev_b64 v[8:9], 1, v[3:4]
	s_waitcnt vmcnt(0)
	v_fma_mixlo_f16 v4, v6, v10, v11
	v_add_co_u32 v8, vcc_lo, s2, v8
	v_add_co_ci_u32_e32 v9, vcc_lo, s3, v9, vcc_lo
	global_store_short v[8:9], v4, off
BB98_44:
	s_or_b32 exec_lo, exec_lo, s0
	v_add_nc_u32_e32 v6, 0x10000, v7
	v_add_nc_u32_e32 v4, 0x20000, v5
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e32 vcc_lo, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, 0x25800, v4
	v_cmp_lt_i32_e64 s0, 0x12bff, v6
	s_and_b32 s7, s1, vcc_lo
	s_and_saveexec_b32 s1, s7
	s_cbranch_execz BB98_66
	v_add_nc_u32_e32 v6, 0xc00, v5
	s_movk_i32 s33, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s33, v6
	s_and_saveexec_b32 s7, vcc_lo
	s_xor_b32 s7, exec_lo, s7
	s_cbranch_execz BB98_63
	v_add_nc_u32_e32 v6, 0x7000, v5
	v_cmp_lt_u32_e32 vcc_lo, s33, v6
	s_and_saveexec_b32 s33, vcc_lo
	s_xor_b32 s33, exec_lo, s33
	s_cbranch_execz BB98_60
	v_add_nc_u32_e32 v6, 0xd400, v5
	s_movk_i32 s49, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s49, v6
	s_and_saveexec_b32 s48, vcc_lo
	s_xor_b32 s48, exec_lo, s48
	s_cbranch_execz BB98_57
	v_add_nc_u32_e32 v6, 0x13800, v5
	v_cmp_lt_u32_e32 vcc_lo, s49, v6
	s_and_saveexec_b32 s49, vcc_lo
	s_xor_b32 s49, exec_lo, s49
	s_cbranch_execz BB98_54
	v_lshrrev_b32_e32 v6, 7, v0
	v_add_nc_u32_e32 v5, 0x19c00, v5
	v_add_nc_u32_e32 v6, s6, v6
	v_cmp_lt_u32_e32 vcc_lo, 0x63ff, v5
	v_mul_hi_i32 v7, 0x51eb851f, v6
	v_lshrrev_b32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v7, 5, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_mul_lo_u32 v7, 0x64, v7
	v_sub_nc_u32_e32 v11, v6, v7
	v_ashrrev_i32_e32 v12, 31, v11
	s_and_saveexec_b32 s50, vcc_lo
	s_xor_b32 s50, exec_lo, s50
	s_cbranch_execz BB98_51
	v_and_b32_e32 v6, 0xfe, v2
	v_lshlrev_b64 v[9:10], 2, v[11:12]
	v_lshl_or_b32 v7, v11, 8, v6
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v11, vcc_lo, s46, v9
	v_add_co_ci_u32_e32 v12, vcc_lo, s47, v10, vcc_lo
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[7:8], 2, v[7:8]
	v_add_co_u32 v7, vcc_lo, s44, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s45, v8, vcc_lo
	v_add_co_u32 v9, vcc_lo, s42, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s43, v10, vcc_lo
	global_load_dword v2, v[11:12], off
	global_load_dword v5, v[7:8], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v8, v5, v2
BB98_51:
	s_or_saveexec_b32 s50, s50
	s_xor_b32 exec_lo, exec_lo, s50
	s_cbranch_execz BB98_53
	v_and_b32_e32 v6, 0xfe, v2
	v_lshlrev_b64 v[9:10], 2, v[11:12]
	v_lshl_or_b32 v7, v11, 8, v6
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v11, vcc_lo, s40, v9
	v_add_co_ci_u32_e32 v12, vcc_lo, s41, v10, vcc_lo
	v_ashrrev_i32_e32 v8, 31, v7
	v_lshlrev_b64 v[7:8], 2, v[7:8]
	v_add_co_u32 v7, vcc_lo, s38, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s39, v8, vcc_lo
	v_add_co_u32 v9, vcc_lo, s36, v9
	v_add_co_ci_u32_e32 v10, vcc_lo, s37, v10, vcc_lo
	global_load_dword v2, v[11:12], off
	global_load_dword v5, v[7:8], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v8, v5, v2
BB98_53:
	s_or_b32 exec_lo, exec_lo, s50
BB98_54:
	s_or_saveexec_b32 s49, s49
	s_xor_b32 exec_lo, exec_lo, s49
	s_cbranch_execz BB98_56
	v_lshrrev_b32_e32 v5, 7, v0
	v_add_nc_u32_e32 v5, s6, v5
	v_mul_hi_i32 v6, 0x51eb851f, v5
	v_lshrrev_b32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v7, 0x64, v6
	v_and_b32_e32 v6, 0xfe, v2
	v_sub_nc_u32_e32 v7, v5, v7
	v_lshl_or_b32 v9, v7, 8, v6
	v_ashrrev_i32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[11:12], 2, v[7:8]
	v_lshlrev_b64 v[7:8], 2, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s34, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s35, v12, vcc_lo
	v_add_co_u32 v7, vcc_lo, s30, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s31, v8, vcc_lo
	global_load_dword v2, v[9:10], off
	global_load_dword v5, v[7:8], off
	v_add_co_u32 v9, vcc_lo, s28, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s29, v12, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v8, v5, v2
BB98_56:
	s_or_b32 exec_lo, exec_lo, s49
BB98_57:
	s_or_saveexec_b32 s48, s48
	s_xor_b32 exec_lo, exec_lo, s48
	s_cbranch_execz BB98_59
	v_lshrrev_b32_e32 v5, 7, v0
	v_add_nc_u32_e32 v5, s6, v5
	v_mul_hi_i32 v6, 0x51eb851f, v5
	v_lshrrev_b32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v7, 0x64, v6
	v_and_b32_e32 v6, 0xfe, v2
	v_sub_nc_u32_e32 v7, v5, v7
	v_lshl_or_b32 v9, v7, 8, v6
	v_ashrrev_i32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[11:12], 2, v[7:8]
	v_lshlrev_b64 v[7:8], 2, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s26, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s27, v12, vcc_lo
	v_add_co_u32 v7, vcc_lo, s24, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s25, v8, vcc_lo
	global_load_dword v2, v[9:10], off
	global_load_dword v5, v[7:8], off
	v_add_co_u32 v9, vcc_lo, s22, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s23, v12, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v8, v5, v2
BB98_59:
	s_or_b32 exec_lo, exec_lo, s48
BB98_60:
	s_or_saveexec_b32 s33, s33
	s_xor_b32 exec_lo, exec_lo, s33
	s_cbranch_execz BB98_62
	v_lshrrev_b32_e32 v5, 7, v0
	v_add_nc_u32_e32 v5, s6, v5
	v_mul_hi_i32 v6, 0x51eb851f, v5
	v_lshrrev_b32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v7, 0x64, v6
	v_and_b32_e32 v6, 0xfe, v2
	v_sub_nc_u32_e32 v7, v5, v7
	v_lshl_or_b32 v9, v7, 8, v6
	v_ashrrev_i32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[11:12], 2, v[7:8]
	v_lshlrev_b64 v[7:8], 2, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s4, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s5, v12, vcc_lo
	v_add_co_u32 v7, vcc_lo, s20, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s21, v8, vcc_lo
	global_load_dword v2, v[9:10], off
	global_load_dword v5, v[7:8], off
	v_add_co_u32 v9, vcc_lo, s18, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s19, v12, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v8, v5, v2
BB98_62:
	s_or_b32 exec_lo, exec_lo, s33
BB98_63:
	s_or_saveexec_b32 s7, s7
	s_xor_b32 exec_lo, exec_lo, s7
	s_cbranch_execz BB98_65
	v_lshrrev_b32_e32 v5, 7, v0
	v_add_nc_u32_e32 v5, s6, v5
	v_mul_hi_i32 v6, 0x51eb851f, v5
	v_lshrrev_b32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v6, 5, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_mul_lo_u32 v7, 0x64, v6
	v_and_b32_e32 v6, 0xfe, v2
	v_sub_nc_u32_e32 v7, v5, v7
	v_lshl_or_b32 v9, v7, 8, v6
	v_ashrrev_i32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v10, 31, v9
	v_lshlrev_b64 v[11:12], 2, v[7:8]
	v_lshlrev_b64 v[7:8], 2, v[9:10]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s16, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s17, v12, vcc_lo
	v_add_co_u32 v7, vcc_lo, s14, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s15, v8, vcc_lo
	global_load_dword v2, v[9:10], off
	global_load_dword v5, v[7:8], off
	v_add_co_u32 v9, vcc_lo, s12, v11
	v_add_co_ci_u32_e32 v10, vcc_lo, s13, v12, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v8, v5, v2
BB98_65:
	s_or_b32 exec_lo, exec_lo, s7
	global_load_dword v2, v[9:10], off
	v_mov_b32_e32 v7, 0
	v_lshlrev_b64 v[5:6], 2, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v9, vcc_lo, s10, v5
	v_add_co_ci_u32_e32 v10, vcc_lo, s11, v6, vcc_lo
	v_add_co_u32 v5, vcc_lo, s8, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s9, v6, vcc_lo
	global_load_dword v7, v[9:10], off
	global_load_dword v6, v[5:6], off
	s_waitcnt vmcnt(2)
	v_add_f32_e32 v2, 0x3727c5ac, v2
	v_sqrt_f32_e32 v2, v2
	v_div_scale_f32 v5, s7, v2, v2, v8
	v_div_scale_f32 v11, vcc_lo, v8, v2, v8
	v_rcp_f32_e32 v9, v5
	v_fma_f32 v10, -v5, v9, 1.0
	v_fmac_f32_e32 v9, v10, v9
	v_mul_f32_e32 v10, v11, v9
	v_fma_f32 v12, v10, -v5, v11
	v_fmac_f32_e32 v10, v12, v9
	v_fmac_f32_e64 v11, -v5, v10
	v_ashrrev_i32_e32 v5, 31, v4
	v_div_fmas_f32 v9, v11, v9, v10
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_div_fixup_f32 v2, v9, v2, v8
	v_add_co_u32 v4, vcc_lo, s2, v4
	v_add_co_ci_u32_e32 v5, vcc_lo, s3, v5, vcc_lo
	s_waitcnt vmcnt(0)
	v_fma_mixlo_f16 v2, v2, v7, v6
	global_store_short v[4:5], v2, off
BB98_66:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v2, 0x20000, v3
	s_xor_b32 s0, s0, -1
	v_cmp_gt_i32_e32 vcc_lo, 0x25800, v2
	s_and_b32 s0, vcc_lo, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB98_88
	v_add_nc_u32_e32 v4, 0xc00, v3
	s_movk_i32 s1, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s1, v4
	s_and_saveexec_b32 s0, vcc_lo
	s_xor_b32 s0, exec_lo, s0
	s_cbranch_execz BB98_85
	v_add_nc_u32_e32 v4, 0x7000, v3
	v_cmp_lt_u32_e32 vcc_lo, s1, v4
	s_and_saveexec_b32 s1, vcc_lo
	s_xor_b32 s1, exec_lo, s1
	s_cbranch_execz BB98_82
	v_add_nc_u32_e32 v4, 0xd400, v3
	s_movk_i32 s33, 0x63ff
	v_cmp_lt_u32_e32 vcc_lo, s33, v4
	s_and_saveexec_b32 s7, vcc_lo
	s_xor_b32 s7, exec_lo, s7
	s_cbranch_execz BB98_79
	v_add_nc_u32_e32 v4, 0x13800, v3
	v_cmp_lt_u32_e32 vcc_lo, s33, v4
	s_and_saveexec_b32 s33, vcc_lo
	s_xor_b32 s33, exec_lo, s33
	s_cbranch_execz BB98_76
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v3, 0x19c00, v3
	v_add_nc_u32_e32 v0, s6, v0
	v_cmp_lt_u32_e32 vcc_lo, 0x63ff, v3
	v_mul_hi_i32 v4, 0x51eb851f, v0
	v_lshrrev_b32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v4, 5, v4
	v_add_nc_u32_e32 v4, v4, v5
	v_mul_lo_u32 v4, 0x64, v4
	v_sub_nc_u32_e32 v9, v0, v4
	v_ashrrev_i32_e32 v10, 31, v9
	s_and_saveexec_b32 s48, vcc_lo
	s_xor_b32 s48, exec_lo, s48
	s_cbranch_execz BB98_73
	v_and_b32_e32 v4, 0xff, v1
	v_lshlrev_b64 v[7:8], 2, v[9:10]
	v_lshl_or_b32 v0, v9, 8, v4
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, vcc_lo, s46, v7
	v_add_co_ci_u32_e32 v6, vcc_lo, s47, v8, vcc_lo
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_add_co_u32 v0, vcc_lo, s44, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s45, v1, vcc_lo
	v_add_co_u32 v7, vcc_lo, s42, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s43, v8, vcc_lo
	global_load_dword v3, v[5:6], off
	global_load_dword v0, v[0:1], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v0, v3
BB98_73:
	s_waitcnt lgkmcnt(0)
	s_or_saveexec_b32 s42, s48
	s_xor_b32 exec_lo, exec_lo, s42
	s_cbranch_execz BB98_75
	v_and_b32_e32 v4, 0xff, v1
	v_lshlrev_b64 v[7:8], 2, v[9:10]
	v_lshl_or_b32 v0, v9, 8, v4
	v_add_co_u32 v5, vcc_lo, s40, v7
	v_add_co_ci_u32_e32 v6, vcc_lo, s41, v8, vcc_lo
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_add_co_u32 v0, vcc_lo, s38, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s39, v1, vcc_lo
	v_add_co_u32 v7, vcc_lo, s36, v7
	v_add_co_ci_u32_e32 v8, vcc_lo, s37, v8, vcc_lo
	global_load_dword v3, v[5:6], off
	global_load_dword v0, v[0:1], off
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v0, v3
BB98_75:
	s_or_b32 exec_lo, exec_lo, s42
BB98_76:
	s_or_saveexec_b32 s33, s33
	s_xor_b32 exec_lo, exec_lo, s33
	s_cbranch_execz BB98_78
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x51eb851f, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_and_b32_e32 v4, 0xff, v1
	v_mul_lo_u32 v3, 0x64, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_lshl_or_b32 v5, v0, 8, v4
	v_ashrrev_i32_e32 v1, 31, v0
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, vcc_lo, s34, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s35, v1, vcc_lo
	v_add_co_u32 v5, vcc_lo, s30, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s31, v6, vcc_lo
	global_load_dword v3, v[7:8], off
	global_load_dword v5, v[5:6], off
	v_add_co_u32 v7, vcc_lo, s28, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s29, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v5, v3
BB98_78:
	s_or_b32 exec_lo, exec_lo, s33
BB98_79:
	s_or_saveexec_b32 s7, s7
	s_xor_b32 exec_lo, exec_lo, s7
	s_cbranch_execz BB98_81
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x51eb851f, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_and_b32_e32 v4, 0xff, v1
	v_mul_lo_u32 v3, 0x64, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_lshl_or_b32 v5, v0, 8, v4
	v_ashrrev_i32_e32 v1, 31, v0
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, vcc_lo, s26, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s27, v1, vcc_lo
	v_add_co_u32 v5, vcc_lo, s24, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s25, v6, vcc_lo
	global_load_dword v3, v[7:8], off
	global_load_dword v5, v[5:6], off
	v_add_co_u32 v7, vcc_lo, s22, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s23, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v5, v3
BB98_81:
	s_or_b32 exec_lo, exec_lo, s7
BB98_82:
	s_or_saveexec_b32 s1, s1
	s_xor_b32 exec_lo, exec_lo, s1
	s_cbranch_execz BB98_84
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x51eb851f, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_and_b32_e32 v4, 0xff, v1
	v_mul_lo_u32 v3, 0x64, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_lshl_or_b32 v5, v0, 8, v4
	v_ashrrev_i32_e32 v1, 31, v0
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, vcc_lo, s4, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s5, v1, vcc_lo
	v_add_co_u32 v5, vcc_lo, s20, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s21, v6, vcc_lo
	global_load_dword v3, v[7:8], off
	global_load_dword v5, v[5:6], off
	v_add_co_u32 v7, vcc_lo, s18, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s19, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v5, v3
BB98_84:
	s_or_b32 exec_lo, exec_lo, s1
BB98_85:
	s_or_saveexec_b32 s0, s0
	s_xor_b32 exec_lo, exec_lo, s0
	s_cbranch_execz BB98_87
	v_lshrrev_b32_e32 v0, 7, v0
	v_add_nc_u32_e32 v0, s6, v0
	v_mul_hi_i32 v3, 0x51eb851f, v0
	v_lshrrev_b32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v3, 5, v3
	v_add_nc_u32_e32 v3, v3, v4
	v_and_b32_e32 v4, 0xff, v1
	v_mul_lo_u32 v3, 0x64, v3
	v_sub_nc_u32_e32 v0, v0, v3
	v_lshl_or_b32 v5, v0, 8, v4
	v_ashrrev_i32_e32 v1, 31, v0
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_lshlrev_b64 v[5:6], 2, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v7, vcc_lo, s16, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s17, v1, vcc_lo
	v_add_co_u32 v5, vcc_lo, s14, v5
	v_add_co_ci_u32_e32 v6, vcc_lo, s15, v6, vcc_lo
	global_load_dword v3, v[7:8], off
	global_load_dword v5, v[5:6], off
	v_add_co_u32 v7, vcc_lo, s12, v0
	v_add_co_ci_u32_e32 v8, vcc_lo, s13, v1, vcc_lo
	s_waitcnt vmcnt(0)
	v_sub_f32_e32 v6, v5, v3
BB98_87:
	s_or_b32 exec_lo, exec_lo, s0
	global_load_dword v7, v[7:8], off
	v_mov_b32_e32 v5, 0
	v_lshlrev_b64 v[0:1], 2, v[4:5]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v3, vcc_lo, s10, v0
	v_add_co_ci_u32_e32 v4, vcc_lo, s11, v1, vcc_lo
	v_add_co_u32 v0, vcc_lo, s8, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s9, v1, vcc_lo
	global_load_dword v4, v[3:4], off
	global_load_dword v5, v[0:1], off
	s_waitcnt vmcnt(2)
	v_add_f32_e32 v0, 0x3727c5ac, v7
	v_sqrt_f32_e32 v0, v0
	v_div_scale_f32 v1, s0, v0, v0, v6
	v_div_scale_f32 v8, vcc_lo, v6, v0, v6
	v_rcp_f32_e32 v3, v1
	v_fma_f32 v7, -v1, v3, 1.0
	v_fmac_f32_e32 v3, v7, v3
	v_mul_f32_e32 v7, v8, v3
	v_fma_f32 v9, v7, -v1, v8
	v_fmac_f32_e32 v7, v9, v3
	v_fmac_f32_e64 v8, -v1, v7
	v_div_fmas_f32 v1, v8, v3, v7
	v_ashrrev_i32_e32 v3, 31, v2
	v_div_fixup_f32 v6, v1, v0, v6
	v_lshlrev_b64 v[0:1], 1, v[2:3]
	s_waitcnt vmcnt(0)
	v_fma_mixlo_f16 v2, v6, v4, v5
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	global_store_short v[0:1], v2, off
BB98_88:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 168
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 15
		.amdhsa_next_free_sgpr 52
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end98:
	.size	tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0, .Lfunc_end98-tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0

	.globl	tvmgen_default_fused_transpose_reshape_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_transpose_reshape_1_kernel0,@function
tvmgen_default_fused_transpose_reshape_1_kernel0:
	v_lshrrev_b32_e32 v1, 2, v0
	v_lshlrev_b32_e32 v2, 1, v0
	v_bfe_u32 v0, v0, 4, 3
	s_load_dwordx2 s[0:1], s[4:5], 0x8
	v_and_b32_e32 v1, 0xe0, v1
	v_lshl_add_u32 v1, s6, 6, v1
	v_and_or_b32 v1, v2, 30, v1
	v_mad_u32_u24 v0, 0xc80, v0, v1
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	global_load_dword v3, v[0:1], off
	v_lshl_add_u32 v0, s6, 9, v2
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_dword v[0:1], v3, off
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_transpose_reshape_1_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 4
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end99:
	.size	tvmgen_default_fused_transpose_reshape_1_kernel0, .Lfunc_end99-tvmgen_default_fused_transpose_reshape_1_kernel0

	.globl	tvmgen_default_fused_transpose_reshape_kernel0
	.p2align	8
	.type	tvmgen_default_fused_transpose_reshape_kernel0,@function
tvmgen_default_fused_transpose_reshape_kernel0:
	s_clause 0x1
	s_load_dwordx2 s[2:3], s[4:5], 0x0
	s_load_dwordx2 s[4:5], s[4:5], 0x8
	v_lshlrev_b32_e32 v1, 1, v0
	s_lshl_b32 s7, s6, 9
	v_lshl_add_u32 v3, s6, 8, v0
	s_mov_b32 s8, 0x25800
	s_lshl_b32 s6, s6, 1
	v_add_nc_u32_e32 v4, s7, v1
	v_cmp_gt_i32_e64 s0, 0x12c00, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v3
	v_cmp_gt_i32_e64 s1, s8, v4
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB100_2
	v_lshrrev_b32_e32 v2, 7, v0
	v_add_nc_u32_e32 v2, s6, v2
	v_mul_hi_i32 v5, 0x1b4e81b5, v2
	v_lshrrev_b32_e32 v6, 31, v5
	v_ashrrev_i32_e32 v5, 6, v5
	v_add_nc_u32_e32 v5, v5, v6
	v_bfe_u32 v6, v0, 4, 3
	v_mul_lo_u32 v5, 0x258, v5
	v_mul_u32_u24_e32 v6, 0x4b00, v6
	v_sub_nc_u32_e32 v2, v2, v5
	v_lshl_add_u32 v2, v2, 5, v6
	v_and_or_b32 v5, v1, 30, v2
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[5:6], 1, v[5:6]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v5, s0, s4, v5
	v_add_co_ci_u32_e64 v6, s0, s5, v6, s0
	global_load_ushort v2, v[5:6], off
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[5:6], 1, v[4:5]
	v_add_co_u32 v5, s0, s2, v5
	v_add_co_ci_u32_e64 v6, s0, s3, v6, s0
	s_waitcnt vmcnt(0)
	global_store_short v[5:6], v2, off
BB100_2:
	s_or_b32 exec_lo, exec_lo, s1
	v_or_b32_e32 v2, 1, v1
	s_xor_b32 s1, vcc_lo, -1
	v_add_nc_u32_e32 v5, s7, v2
	v_cmp_gt_i32_e64 s0, s8, v5
	s_and_b32 s1, s0, s1
	s_and_saveexec_b32 s0, s1
	s_cbranch_execz BB100_4
	v_lshrrev_b32_e32 v6, 7, v0
	v_add_nc_u32_e32 v6, s6, v6
	v_mul_hi_i32 v7, 0x1b4e81b5, v6
	v_lshrrev_b32_e32 v8, 31, v7
	v_ashrrev_i32_e32 v7, 6, v7
	v_add_nc_u32_e32 v7, v7, v8
	v_bfe_u32 v8, v0, 4, 3
	v_mul_lo_u32 v7, 0x258, v7
	v_mul_u32_u24_e32 v8, 0x4b00, v8
	v_sub_nc_u32_e32 v6, v6, v7
	v_lshl_add_u32 v6, v6, 5, v8
	v_and_or_b32 v6, v2, 31, v6
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, vcc_lo, s4, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s5, v7, vcc_lo
	global_load_ushort v8, v[6:7], off
	v_ashrrev_i32_e32 v6, 31, v5
	v_lshlrev_b64 v[6:7], 1, v[5:6]
	v_add_co_u32 v6, vcc_lo, s2, v6
	v_add_co_ci_u32_e32 v7, vcc_lo, s3, v7, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_short v[6:7], v8, off
BB100_4:
	s_or_b32 exec_lo, exec_lo, s0
	s_mov_b32 s7, 0x20000
	v_add_nc_u32_e32 v6, 0x10000, v3
	v_add_nc_u32_e32 v3, s7, v4
	s_mov_b32 s8, 0x25800
	s_addk_i32 s6, 0x200
	v_cmp_gt_i32_e64 s0, 0x12c00, v6
	v_cmp_gt_i32_e64 s1, s8, v3
	v_cmp_lt_i32_e32 vcc_lo, 0x12bff, v6
	s_and_b32 s0, s1, s0
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB100_6
	v_lshrrev_b32_e32 v4, 7, v0
	v_add_nc_u32_e32 v4, s6, v4
	v_mul_hi_i32 v6, 0x1b4e81b5, v4
	v_lshrrev_b32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v6, 6, v6
	v_add_nc_u32_e32 v6, v6, v7
	v_bfe_u32 v7, v0, 4, 3
	v_mul_lo_u32 v6, 0x258, v6
	v_mul_u32_u24_e32 v7, 0x4b00, v7
	v_sub_nc_u32_e32 v4, v4, v6
	v_lshl_add_u32 v4, v4, 5, v7
	v_and_or_b32 v6, v1, 30, v4
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[3:4], 1, v[3:4]
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v6, s0, s4, v6
	v_add_co_ci_u32_e64 v7, s0, s5, v7, s0
	v_add_co_u32 v3, s0, s2, v3
	v_add_co_ci_u32_e64 v4, s0, s3, v4, s0
	global_load_ushort v1, v[6:7], off
	s_waitcnt vmcnt(0)
	global_store_short v[3:4], v1, off
BB100_6:
	s_or_b32 exec_lo, exec_lo, s1
	v_add_nc_u32_e32 v1, s7, v5
	s_xor_b32 s1, vcc_lo, -1
	v_cmp_gt_i32_e64 s0, s8, v1
	s_and_b32 s0, s0, s1
	s_and_saveexec_b32 s1, s0
	s_cbranch_execz BB100_8
	v_lshrrev_b32_e32 v3, 7, v0
	v_bfe_u32 v0, v0, 4, 3
	v_add_nc_u32_e32 v3, s6, v3
	v_mul_u32_u24_e32 v0, 0x4b00, v0
	v_mul_hi_i32 v4, 0x1b4e81b5, v3
	v_lshrrev_b32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v4, 6, v4
	v_add_nc_u32_e32 v4, v4, v5
	v_mul_lo_u32 v4, 0x258, v4
	v_sub_nc_u32_e32 v3, v3, v4
	v_lshl_add_u32 v0, v3, 5, v0
	v_and_or_b32 v2, v2, 31, v0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v2, vcc_lo, s4, v2
	v_add_co_ci_u32_e32 v3, vcc_lo, s5, v3, vcc_lo
	global_load_ushort v3, v[2:3], off
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[0:1], 1, v[1:2]
	v_add_co_u32 v0, vcc_lo, s2, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s3, v1, vcc_lo
	s_waitcnt vmcnt(0)
	global_store_short v[0:1], v3, off
BB100_8:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_transpose_reshape_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 16
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 9
		.amdhsa_next_free_sgpr 9
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end100:
	.size	tvmgen_default_fused_transpose_reshape_kernel0, .Lfunc_end100-tvmgen_default_fused_transpose_reshape_kernel0

	.globl	tvmgen_default_fused_variance_1_kernel0
	.p2align	8
	.type	tvmgen_default_fused_variance_1_kernel0,@function
tvmgen_default_fused_variance_1_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshl_add_u32 v1, s6, 8, v0
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	s_ashr_i32 s7, s6, 31
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_lshl_b64 s[0:1], s[6:7], 2
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	s_add_u32 s0, s2, s0
	s_addc_u32 s1, s3, s1
	s_clause 0x7
	global_load_dword v3, v[1:2], off
	global_load_dword v4, v[1:2], off offset:128
	global_load_dword v5, v[1:2], off offset:256
	global_load_dword v6, v[1:2], off offset:384
	global_load_dword v7, v[1:2], off offset:512
	global_load_dword v8, v[1:2], off offset:640
	global_load_dword v9, v[1:2], off offset:768
	global_load_dword v1, v[1:2], off offset:896
	s_load_dword s0, s[0:1], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	s_barrier 
	v_subrev_f32_e32 v2, s0, v3
	v_subrev_f32_e32 v3, s0, v4
	v_subrev_f32_e32 v4, s0, v5
	v_fma_f32 v2, v2, v2, 0
	v_fmac_f32_e32 v2, v3, v3
	v_subrev_f32_e32 v3, s0, v6
	v_fmac_f32_e32 v2, v4, v4
	v_subrev_f32_e32 v4, s0, v7
	v_fmac_f32_e32 v2, v3, v3
	v_subrev_f32_e32 v3, s0, v8
	v_fmac_f32_e32 v2, v4, v4
	v_subrev_f32_e32 v4, s0, v9
	v_fmac_f32_e32 v2, v3, v3
	v_subrev_f32_e32 v3, s0, v1
	v_lshlrev_b32_e32 v1, 2, v0
	v_fmac_f32_e32 v2, v4, v4
	v_fmac_f32_e32 v2, v3, v3
	ds_write_b32 v1, v2
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB101_2
	ds_read_b32 v2, v1 offset:64
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:32
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:16
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:8
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:4
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
BB101_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_mov_b32_e32 v1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_cmp_gt_i32_e32 vcc_lo, 1, v0
	ds_read_b32 v2, v1
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v1, v2 offset:128
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB101_4
	v_lshlrev_b32_e32 v1, 2, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	v_add_nc_u32_e32 v0, s6, v0
	ds_read_b32 v2, v1 offset:128
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_mul_f32_e32 v2, 0x3b800000, v2
	global_store_dword v[0:1], v2, off
BB101_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_variance_1_kernel0
		.amdhsa_group_segment_fixed_size 132
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end101:
	.size	tvmgen_default_fused_variance_1_kernel0, .Lfunc_end101-tvmgen_default_fused_variance_1_kernel0

	.globl	tvmgen_default_fused_variance_kernel0
	.p2align	8
	.type	tvmgen_default_fused_variance_kernel0,@function
tvmgen_default_fused_variance_kernel0:
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_lshl_add_u32 v1, s6, 8, v0
	s_load_dwordx2 s[2:3], s[4:5], 0x8
	s_ashr_i32 s7, s6, 31
	v_ashrrev_i32_e32 v2, 31, v1
	v_lshlrev_b64 v[1:2], 2, v[1:2]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v1, vcc_lo, s0, v1
	v_add_co_ci_u32_e32 v2, vcc_lo, s1, v2, vcc_lo
	s_lshl_b64 s[0:1], s[6:7], 2
	v_cmp_gt_i32_e32 vcc_lo, 16, v0
	s_add_u32 s0, s2, s0
	s_addc_u32 s1, s3, s1
	s_clause 0x7
	global_load_dword v3, v[1:2], off
	global_load_dword v4, v[1:2], off offset:128
	global_load_dword v5, v[1:2], off offset:256
	global_load_dword v6, v[1:2], off offset:384
	global_load_dword v7, v[1:2], off offset:512
	global_load_dword v8, v[1:2], off offset:640
	global_load_dword v9, v[1:2], off offset:768
	global_load_dword v1, v[1:2], off offset:896
	s_load_dword s0, s[0:1], 0x0
	s_waitcnt vmcnt(0) lgkmcnt(0)
	s_barrier 
	v_subrev_f32_e32 v2, s0, v3
	v_subrev_f32_e32 v3, s0, v4
	v_subrev_f32_e32 v4, s0, v5
	v_fma_f32 v2, v2, v2, 0
	v_fmac_f32_e32 v2, v3, v3
	v_subrev_f32_e32 v3, s0, v6
	v_fmac_f32_e32 v2, v4, v4
	v_subrev_f32_e32 v4, s0, v7
	v_fmac_f32_e32 v2, v3, v3
	v_subrev_f32_e32 v3, s0, v8
	v_fmac_f32_e32 v2, v4, v4
	v_subrev_f32_e32 v4, s0, v9
	v_fmac_f32_e32 v2, v3, v3
	v_subrev_f32_e32 v3, s0, v1
	v_lshlrev_b32_e32 v1, 2, v0
	v_fmac_f32_e32 v2, v4, v4
	v_fmac_f32_e32 v2, v3, v3
	ds_write_b32 v1, v2
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB102_2
	ds_read_b32 v2, v1 offset:64
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:32
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:16
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:8
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
	ds_read_b32 v2, v1 offset:4
	ds_read_b32 v3, v1
	s_waitcnt lgkmcnt(0)
	v_add_f32_e32 v2, v2, v3
	ds_write_b32 v1, v2
BB102_2:
	s_or_b32 exec_lo, exec_lo, s0
	v_mov_b32_e32 v1, 0
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_cmp_gt_i32_e32 vcc_lo, 1, v0
	ds_read_b32 v2, v1
	s_waitcnt lgkmcnt(0)
	ds_write_b32 v1, v2 offset:128
	s_waitcnt lgkmcnt(0)
	s_barrier 
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB102_4
	v_lshlrev_b32_e32 v1, 2, v0
	s_load_dwordx2 s[0:1], s[4:5], 0x10
	v_add_nc_u32_e32 v0, s6, v0
	ds_read_b32 v2, v1 offset:128
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	v_mul_f32_e32 v2, 0x3b800000, v2
	global_store_dword v[0:1], v2, off
BB102_4:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_variance_kernel0
		.amdhsa_group_segment_fixed_size 132
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 24
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 10
		.amdhsa_next_free_sgpr 8
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end102:
	.size	tvmgen_default_fused_variance_kernel0, .Lfunc_end102-tvmgen_default_fused_variance_kernel0

	.globl	tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0
	.p2align	8
	.type	tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0,@function
tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0:
	v_lshl_add_u32 v0, s6, 8, v0
	v_cmp_gt_i32_e32 vcc_lo, 0x258, v0
	s_and_saveexec_b32 s0, vcc_lo
	s_cbranch_execz BB103_2
	s_load_dwordx2 s[0:1], s[4:5], 0x0
	v_ashrrev_i32_e32 v1, 31, v0
	v_mov_b32_e32 v2, 0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_waitcnt lgkmcnt(0)
	v_add_co_u32 v0, vcc_lo, s0, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, s1, v1, vcc_lo
	global_store_dword v[0:1], v2, off
BB103_2:
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 8
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_wavefront_size32 1
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 3
		.amdhsa_next_free_sgpr 7
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_workgroup_processor_mode 1
		.amdhsa_memory_ordered 1
		.amdhsa_forward_progress 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end103:
	.size	tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0, .Lfunc_end103-tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0

	.protected	__ockl_sanitizer_report
	.weak	__ockl_sanitizer_report
	.p2align	2
	.type	__ockl_sanitizer_report,@function
__ockl_sanitizer_report:
	s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
	s_waitcnt_vscnt null, 0x0
	s_load_dwordx2 s[6:7], s[4:5], 0x18
	v_mbcnt_lo_u32_b32 v16, -1, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mbcnt_hi_u32_b32 v20, -1, v16
	;;#ASMSTART
	; ockl readfirstlane hoisting hack v20
	;;#ASMEND
	v_readfirstlane_b32 s4, v20
	v_cmp_eq_u32_e64 s4, s4, v20
	s_and_saveexec_b32 s5, s4
	s_cbranch_execz BB104_6
	v_mov_b32_e32 v23, 0
	s_waitcnt lgkmcnt(0)
	global_load_dwordx2 v[18:19], v23, s[6:7] offset:24 glc dlc
	s_waitcnt vmcnt(0)
	buffer_gl0_inv
	buffer_gl1_inv
	s_clause 0x1
	global_load_dwordx2 v[16:17], v23, s[6:7] offset:40
	global_load_dwordx2 v[21:22], v23, s[6:7]
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v17, v17, v19
	v_and_b32_e32 v16, v16, v18
	v_mul_lo_u32 v17, v17, 24
	v_mul_hi_u32 v24, v16, 24
	v_mul_lo_u32 v16, v16, 24
	v_add_nc_u32_e32 v17, v24, v17
	s_waitcnt vmcnt(0)
	v_add_co_u32 v16, vcc_lo, v21, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, v22, v17, vcc_lo
	global_load_dwordx2 v[16:17], v[16:17], off glc dlc
	s_waitcnt vmcnt(0)
	global_atomic_cmpswap_x2 v[23:24], v23, v[16:19], s[6:7] offset:24 glc
	s_waitcnt vmcnt(0)
	buffer_gl0_inv
	buffer_gl1_inv
	v_cmp_ne_u64_e32 vcc_lo, v[23:24], v[18:19]
	s_and_saveexec_b32 s8, vcc_lo
	s_cbranch_execz BB104_5
	s_mov_b32 s9, 0
	.p2align	6
BB104_3:
	v_mov_b32_e32 v25, 0
	s_sleep 1
	s_clause 0x1
	global_load_dwordx2 v[16:17], v25, s[6:7] offset:40
	global_load_dwordx2 v[18:19], v25, s[6:7]
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v17, v17, v24
	v_and_b32_e32 v16, v16, v23
	v_mul_lo_u32 v17, v17, 24
	v_mul_hi_u32 v21, v16, 24
	v_mul_lo_u32 v16, v16, 24
	v_add_nc_u32_e32 v17, v21, v17
	s_waitcnt vmcnt(0)
	v_add_co_u32 v16, vcc_lo, v18, v16
	v_add_co_ci_u32_e32 v17, vcc_lo, v19, v17, vcc_lo
	v_mov_b32_e32 v18, v23
	v_mov_b32_e32 v19, v24
	global_load_dwordx2 v[21:22], v[16:17], off glc dlc
	s_waitcnt vmcnt(0)
	global_atomic_cmpswap_x2 v[16:17], v25, v[21:24], s[6:7] offset:24 glc
	s_waitcnt vmcnt(0)
	buffer_gl0_inv
	buffer_gl1_inv
	v_cmp_eq_u64_e32 vcc_lo, v[16:17], v[23:24]
	v_mov_b32_e32 v24, v17
	v_mov_b32_e32 v23, v16
	s_or_b32 s9, vcc_lo, s9
	s_andn2_b32 exec_lo, exec_lo, s9
	s_cbranch_execnz BB104_3
	s_or_b32 exec_lo, exec_lo, s9
BB104_5:
	s_or_b32 exec_lo, exec_lo, s8
BB104_6:
	s_or_b32 exec_lo, exec_lo, s5
	v_mov_b32_e32 v21, 0
	v_readfirstlane_b32 s8, v18
	v_readfirstlane_b32 s5, v19
	s_mov_b64 s[10:11], exec
	s_waitcnt lgkmcnt(0)
	s_clause 0x2
	global_load_dwordx2 v[24:25], v21, s[6:7] offset:40
	global_load_dwordx2 v[16:17], v21, s[6:7]
	global_load_dwordx2 v[22:23], v21, s[6:7] offset:8
	s_waitcnt vmcnt(2)
	v_and_b32_e32 v18, s8, v24
	v_and_b32_e32 v19, s5, v25
	s_and_saveexec_b32 s9, s4
	s_cbranch_execz BB104_8
	v_mul_lo_u32 v21, v19, 24
	v_mul_hi_u32 v26, v18, 24
	v_mul_lo_u32 v27, v18, 24
	v_mov_b32_e32 v25, s11
	v_mov_b32_e32 v24, s10
	v_add_nc_u32_e32 v21, v26, v21
	s_waitcnt vmcnt(1)
	v_add_co_u32 v28, vcc_lo, v16, v27
	v_mov_b32_e32 v26, 4
	v_mov_b32_e32 v27, 1
	v_add_co_ci_u32_e32 v29, vcc_lo, v17, v21, vcc_lo
	global_store_dwordx2 v[28:29], v[24:25], off offset:8
	global_store_dwordx2 v[28:29], v[26:27], off offset:16
BB104_8:
	s_or_b32 exec_lo, exec_lo, s9
	v_mov_b32_e32 v21, 0
	v_lshlrev_b64 v[24:25], 12, v[18:19]
	v_lshlrev_b64 v[20:21], 6, v[20:21]
	s_waitcnt vmcnt(0)
	v_add_co_u32 v22, vcc_lo, v22, v24
	v_add_co_ci_u32_e32 v23, vcc_lo, v23, v25, vcc_lo
	v_add_co_u32 v20, vcc_lo, v22, v20
	v_add_co_ci_u32_e32 v21, vcc_lo, v23, v21, vcc_lo
	global_store_dwordx4 v[20:21], v[0:3], off
	global_store_dwordx4 v[20:21], v[4:7], off offset:16
	global_store_dwordx4 v[20:21], v[8:11], off offset:32
	global_store_dwordx4 v[20:21], v[12:15], off offset:48
	s_and_saveexec_b32 s9, s4
	s_cbranch_execz BB104_14
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v4, s8
	v_mov_b32_e32 v5, s5
	s_clause 0x1
	global_load_dwordx2 v[6:7], v2, s[6:7] offset:32 glc dlc
	global_load_dwordx2 v[0:1], v2, s[6:7] offset:40
	s_waitcnt vmcnt(0)
	v_and_b32_e32 v1, s5, v1
	v_and_b32_e32 v0, s8, v0
	v_mul_lo_u32 v1, v1, 24
	v_mul_hi_u32 v3, v0, 24
	v_mul_lo_u32 v0, v0, 24
	v_add_nc_u32_e32 v1, v3, v1
	v_add_co_u32 v0, vcc_lo, v16, v0
	v_add_co_ci_u32_e32 v1, vcc_lo, v17, v1, vcc_lo
	global_store_dwordx2 v[0:1], v[6:7], off
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	global_atomic_cmpswap_x2 v[4:5], v2, v[4:7], s[6:7] offset:32 glc
	s_waitcnt vmcnt(0)
	v_cmp_ne_u64_e32 vcc_lo, v[4:5], v[6:7]
	s_and_saveexec_b32 s10, vcc_lo
	s_cbranch_execz BB104_12
	s_mov_b32 s11, 0
BB104_11:
	v_mov_b32_e32 v6, 0
	v_mov_b32_e32 v2, s8
	v_mov_b32_e32 v3, s5
	s_sleep 1
	global_store_dwordx2 v[0:1], v[4:5], off
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	global_atomic_cmpswap_x2 v[2:3], v6, v[2:5], s[6:7] offset:32 glc
	s_waitcnt vmcnt(0)
	v_cmp_eq_u64_e32 vcc_lo, v[2:3], v[4:5]
	v_mov_b32_e32 v5, v3
	v_mov_b32_e32 v4, v2
	s_or_b32 s11, vcc_lo, s11
	s_andn2_b32 exec_lo, exec_lo, s11
	s_cbranch_execnz BB104_11
BB104_12:
	s_or_b32 exec_lo, exec_lo, s10
	v_mov_b32_e32 v1, 0
	v_mov_b32_e32 v2, 1
	v_mov_b32_e32 v3, 0
	global_load_dwordx2 v[4:5], v1, s[6:7] offset:16
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	s_clause 0x1
	global_atomic_add_x2 v[4:5], v[2:3], off offset:8
	global_load_dwordx2 v[2:3], v[4:5], off offset:16
	s_waitcnt vmcnt(0)
	v_cmp_eq_u64_e32 vcc_lo, 0, v[2:3]
	s_and_b32 vcc_lo, exec_lo, vcc_lo
	s_cbranch_vccnz BB104_14
	global_load_dword v0, v[4:5], off offset:24
	s_waitcnt vmcnt(0)
	v_readfirstlane_b32 s10, v0
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	global_store_dwordx2 v[2:3], v[0:1], off
	s_and_b32 m0, s10, 0xff
	s_sendmsg sendmsg(MSG_INTERRUPT)
BB104_14:
	s_or_b32 exec_lo, exec_lo, s9
	v_mul_lo_u32 v0, v19, 24
	v_mul_hi_u32 v1, v18, 24
	v_mul_lo_u32 v2, v18, 24
	v_add_nc_u32_e32 v0, v1, v0
	v_add_co_u32 v1, vcc_lo, v16, v2
	v_add_co_ci_u32_e32 v2, vcc_lo, v17, v0, vcc_lo
	v_add_co_u32 v0, vcc_lo, v1, 20
	v_add_co_ci_u32_e32 v1, vcc_lo, 0, v2, vcc_lo
	s_branch BB104_16
BB104_15:
	s_andn2_b32 vcc_lo, exec_lo, s9
	s_cbranch_vccz BB104_20
BB104_16:
	v_mov_b32_e32 v2, 1
	s_and_saveexec_b32 s9, s4
	s_cbranch_execz BB104_18
	global_load_dword v2, v[0:1], off glc dlc
	s_waitcnt vmcnt(0)
	buffer_gl0_inv
	buffer_gl1_inv
	v_and_b32_e32 v2, 1, v2
BB104_18:
	s_or_b32 exec_lo, exec_lo, s9
	v_readfirstlane_b32 s9, v2
	s_cmp_eq_u32 s9, 0
	s_mov_b32 s9, -1
	s_cbranch_scc1 BB104_15
	s_mov_b32 s9, 0
	s_sleep 1
	s_branch BB104_15
BB104_20:
	s_and_saveexec_b32 s9, s4
	s_cbranch_execz BB104_24
	v_mov_b32_e32 v8, 0
	s_clause 0x2
	global_load_dwordx2 v[2:3], v8, s[6:7] offset:40
	global_load_dwordx2 v[6:7], v8, s[6:7] offset:24 glc dlc
	global_load_dwordx2 v[4:5], v8, s[6:7]
	s_waitcnt vmcnt(2)
	v_add_co_u32 v9, vcc_lo, v2, 1
	v_add_co_ci_u32_e32 v10, vcc_lo, 0, v3, vcc_lo
	v_add_co_u32 v0, vcc_lo, v9, s8
	v_add_co_ci_u32_e32 v1, vcc_lo, s5, v10, vcc_lo
	v_cmp_eq_u64_e32 vcc_lo, 0, v[0:1]
	v_cndmask_b32_e32 v1, v1, v10, vcc_lo
	v_cndmask_b32_e32 v0, v0, v9, vcc_lo
	v_and_b32_e32 v3, v1, v3
	v_and_b32_e32 v2, v0, v2
	v_mul_lo_u32 v3, v3, 24
	v_mul_hi_u32 v9, v2, 24
	v_mul_lo_u32 v2, v2, 24
	v_add_nc_u32_e32 v3, v9, v3
	s_waitcnt vmcnt(0)
	v_add_co_u32 v4, vcc_lo, v4, v2
	v_mov_b32_e32 v2, v6
	v_add_co_ci_u32_e32 v5, vcc_lo, v5, v3, vcc_lo
	v_mov_b32_e32 v3, v7
	global_store_dwordx2 v[4:5], v[6:7], off
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	global_atomic_cmpswap_x2 v[2:3], v8, v[0:3], s[6:7] offset:24 glc
	s_waitcnt vmcnt(0)
	v_cmp_ne_u64_e32 vcc_lo, v[2:3], v[6:7]
	s_and_b32 exec_lo, exec_lo, vcc_lo
	s_cbranch_execz BB104_24
	s_mov_b32 s4, 0
BB104_23:
	v_mov_b32_e32 v6, 0
	s_sleep 1
	global_store_dwordx2 v[4:5], v[2:3], off
	s_waitcnt vmcnt(0)
	s_waitcnt_vscnt null, 0x0
	global_atomic_cmpswap_x2 v[6:7], v6, v[0:3], s[6:7] offset:24 glc
	s_waitcnt vmcnt(0)
	v_cmp_eq_u64_e32 vcc_lo, v[6:7], v[2:3]
	v_mov_b32_e32 v2, v6
	v_mov_b32_e32 v3, v7
	s_or_b32 s4, vcc_lo, s4
	s_andn2_b32 exec_lo, exec_lo, s4
	s_cbranch_execnz BB104_23
BB104_24:
	s_or_b32 exec_lo, exec_lo, s9
	s_waitcnt lgkmcnt(0)
	s_waitcnt_vscnt null, 0x0
	s_setpc_b64 s[30:31]
.Lfunc_end104:
	.size	__ockl_sanitizer_report, .Lfunc_end104-__ockl_sanitizer_report

	.p2alignl 6, 3214868480
	.fill 48, 4, 3214868480
	.ident	"AMD clang version 13.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-4.5.2 21432 9bbd96fd1936641cd47defd8022edafd063019d5)"
	.section	".note.GNU-stack"
	.amdgpu_metadata
---
amdhsa.kernels:
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_add_reshape_cast_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_add_reshape_cast_1_kernel0.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_add_reshape_cast_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_add_reshape_cast_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cast_add_reshape_cast_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cast_add_reshape_cast_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cast_logical_not_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cast_logical_not_kernel0.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     12
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cast_split_squeeze_stack_layout_transform_kernel0.kd
    .vgpr_count:     57
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_1_kernel0.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_1_kernel1
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_1_kernel1.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .offset:         8
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 12
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_1_kernel2
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_1_kernel2.kd
    .vgpr_count:     5
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 8
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_1_kernel3
    .private_segment_fixed_size: 0
    .sgpr_count:     7
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_1_kernel3.kd
    .vgpr_count:     1
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .offset:         8
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 12
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_1_kernel4
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_1_kernel4.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_1_kernel5
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_1_kernel5.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel0.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel1
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel1.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel2
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel2.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .offset:         8
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 12
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel3
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel3.kd
    .vgpr_count:     5
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 8
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel4
    .private_segment_fixed_size: 0
    .sgpr_count:     7
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel4.kd
    .vgpr_count:     1
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .offset:         8
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 12
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel5
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel5.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel6
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel6.kd
    .vgpr_count:     3
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_cumsum_kernel7
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_cumsum_kernel7.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     11
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_layout_transform_reshape_squeeze_transpose_kernel0.kd
    .vgpr_count:     11
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 132
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_mean_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_mean_1_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 132
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_mean_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_mean_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 9120
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_batch_matmul_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     19
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_batch_matmul_1_kernel0.kd
    .vgpr_count:     92
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 2240
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_batch_matmul_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     19
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_batch_matmul_2_kernel0.kd
    .vgpr_count:     124
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 5632
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     17
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_batch_matmul_cast_add_1_kernel0.kd
    .vgpr_count:     118
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 1920
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     16
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_batch_matmul_cast_add_kernel0.kd
    .vgpr_count:     56
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 480
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_batch_matmul_cast_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     17
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_batch_matmul_cast_kernel0.kd
    .vgpr_count:     78
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 1760
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_batch_matmul_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     15
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_batch_matmul_kernel0.kd
    .vgpr_count:     75
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel0.kd
    .vgpr_count:     29
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 1824
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel1.kd
    .vgpr_count:     67
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel2.kd
    .vgpr_count:     23
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_1_kernel3.kd
    .vgpr_count:     8
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     12
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel0.kd
    .vgpr_count:     29
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 9152
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel1.kd
    .vgpr_count:     88
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel2.kd
    .vgpr_count:     23
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2_kernel3.kd
    .vgpr_count:     8
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     12
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel0.kd
    .vgpr_count:     57
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 38144
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel1.kd
    .vgpr_count:     110
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2
    .private_segment_fixed_size: 0
    .sgpr_count:     25
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel2.kd
    .vgpr_count:     60
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3_kernel3.kd
    .vgpr_count:     7
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     15
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel0.kd
    .vgpr_count:     29
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 1664
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel1.kd
    .vgpr_count:     82
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel2.kd
    .vgpr_count:     23
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_kernel3.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 42176
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     22
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_1_kernel0.kd
    .vgpr_count:     111
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 34336
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_2_kernel0.kd
    .vgpr_count:     102
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 21088
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_3_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     19
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_3_kernel0.kd
    .vgpr_count:     61
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 35328
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_4_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_4_kernel0.kd
    .vgpr_count:     64
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 29184
    .kernarg_segment_align: 8
    .kernarg_segment_size: 40
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     30
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_add_nn_relu_1_kernel0.kd
    .vgpr_count:     112
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 8272
    .kernarg_segment_align: 8
    .kernarg_segment_size: 40
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     16
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_add_nn_relu_2_kernel0.kd
    .vgpr_count:     86
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 4864
    .kernarg_segment_align: 8
    .kernarg_segment_size: 40
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     16
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_add_nn_relu_3_kernel0.kd
    .vgpr_count:     114
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 9216
    .kernarg_segment_align: 8
    .kernarg_segment_size: 40
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     20
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_add_nn_relu_kernel0.kd
    .vgpr_count:     49
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 22784
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_kernel0.kd
    .vgpr_count:     100
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 19928
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     26
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_10_kernel0.kd
    .vgpr_count:     126
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 37888
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     23
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_11_kernel0.kd
    .vgpr_count:     112
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 6912
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     16
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_1_kernel0.kd
    .vgpr_count:     64
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 28672
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     20
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_2_kernel0.kd
    .vgpr_count:     118
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 26624
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_3_kernel0.kd
    .vgpr_count:     64
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 7152
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     21
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_4_kernel0.kd
    .vgpr_count:     113
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 3328
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_5_kernel0.kd
    .vgpr_count:     76
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 9472
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_6_kernel0.kd
    .vgpr_count:     93
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 18936
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_7_kernel0.kd
    .vgpr_count:     60
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 39168
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     17
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_8_kernel0.kd
    .vgpr_count:     63
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 39168
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     27
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_9_kernel0.kd
    .vgpr_count:     112
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 36672
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_conv2d_add_nn_relu_kernel0.kd
    .vgpr_count:     82
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 34688
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     15
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_1_kernel0.kd
    .vgpr_count:     122
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 2304
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_2_kernel0.kd
    .vgpr_count:     102
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 320
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_3_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_3_kernel0.kd
    .vgpr_count:     36
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 2624
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_4_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_4_kernel0.kd
    .vgpr_count:     79
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 1152
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_5_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_5_kernel0.kd
    .vgpr_count:     53
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 42496
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_6_kernel0
    .private_segment_fixed_size: 296
    .sgpr_count:     22
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_6_kernel0.kd
    .vgpr_count:     128
    .vgpr_spill_count: 73
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 512
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_7_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_7_kernel0.kd
    .vgpr_count:     98
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 29184
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_dense_kernel0
    .private_segment_fixed_size: 60
    .sgpr_count:     26
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_dense_kernel0.kd
    .vgpr_count:     128
    .vgpr_spill_count: 14
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_max_pool2d_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     11
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_max_pool2d_kernel0.kd
    .vgpr_count:     12
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 8
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_softmax_cast_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     16
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_softmax_cast_1_kernel0.kd
    .vgpr_count:     27
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 408
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_softmax_cast_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_softmax_cast_2_kernel0.kd
    .vgpr_count:     17
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 8
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_nn_softmax_cast_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     16
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_nn_softmax_cast_kernel0.kd
    .vgpr_count:     27
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_add_cast_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_add_cast_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_cast_add_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_cast_add_1_kernel0.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_cast_add_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_cast_add_kernel0.kd
    .vgpr_count:     9
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_nn_relu_reshape_1_kernel0.kd
    .vgpr_count:     9
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_nn_relu_reshape_2_kernel0.kd
    .vgpr_count:     11
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_nn_relu_reshape_kernel0.kd
    .vgpr_count:     46
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     12
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_reshape_transpose_1_kernel0.kd
    .vgpr_count:     8
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_reshape_transpose_2_kernel0.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_reshape_transpose_3_kernel0.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_reshape_transpose_divide_1_kernel0.kd
    .vgpr_count:     7
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     15
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_reshape_transpose_divide_kernel0.kd
    .vgpr_count:     11
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_reshape_transpose_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     13
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_reshape_transpose_kernel0.kd
    .vgpr_count:     11
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_sigmoid_take_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_sigmoid_take_kernel0.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_add_take_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     12
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_add_take_kernel0.kd
    .vgpr_count:     6
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_cast_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_cast_1_kernel0.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_cast_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     11
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_cast_kernel0.kd
    .vgpr_count:     9
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     11
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_kernel0.kd
    .vgpr_count:     9
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_reshape_squeeze_reshape_repeat_reshape_zeros_where_kernel0.kd
    .vgpr_count:     3
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 32
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     56
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_strided_slice_add_divide_multiply_expand_dims_divide_strided_slice_sin_str_dbf4827b0a4481cc__kernel0.kd
    .vgpr_count:     24
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         40
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 48
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     14
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_1_kernel0.kd
    .vgpr_count:     11
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         40
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 48
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     18
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_kernel0.kd
    .vgpr_count:     16
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         40
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         48
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         56
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         64
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         72
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         80
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         88
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         96
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         104
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         112
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         120
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         128
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         136
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         144
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         152
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         160
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 168
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     54
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_subtract_add_sqrt_divide_multiply_add_subtract_add_sqrt_divide_multiply_ad_680b67fb8a56ff9f__kernel0.kd
    .vgpr_count:     15
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_transpose_reshape_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_transpose_reshape_1_kernel0.kd
    .vgpr_count:     4
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 16
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_transpose_reshape_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     11
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_transpose_reshape_kernel0.kd
    .vgpr_count:     9
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 132
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_variance_1_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_variance_1_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .access:         read_only
        .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .access:         read_only
        .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 132
    .kernarg_segment_align: 8
    .kernarg_segment_size: 24
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_variance_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     10
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_variance_kernel0.kd
    .vgpr_count:     10
    .vgpr_spill_count: 0
    .wavefront_size: 32
  - .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 8
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 1024
    .name:           tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0
    .private_segment_fixed_size: 0
    .sgpr_count:     9
    .sgpr_spill_count: 0
    .symbol:         tvmgen_default_fused_zeros_cast_stack_expand_dims_cast_image_resize2d_take_kernel0.kd
    .vgpr_count:     3
    .vgpr_spill_count: 0
    .wavefront_size: 32
amdhsa.target:   amdgcn-amd-amdhsa-hcc-gfx1032
amdhsa.version:
  - 1
  - 1
...

	.end_amdgpu_metadata
